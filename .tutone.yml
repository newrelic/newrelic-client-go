---
# Log level for running tutone
# Default: info
log_level: debug

# Cache for storing a GraphQL schema
cache:
  # Default: schema.json
  schema_file: schema.json

# GraphQL endpoint to query for schema
# Required
endpoint: https://api.newrelic.com/graphql

# How to authenticate to the API
auth:
  # Header set with the API key for authentication
  # Default: Api-Key
  header: Api-Key

  # Environment variable to get the API key from
  # Default: TUTONE_API_KEY
  api_key_env_var: NEW_RELIC_API_KEY

packages:
  - name: synthetics
    path: pkg/synthetics
    import_path: github.com/newrelic/newrelic-client-go/pkg/synthetics
    generators:
      - typegen
      - nerdgraphclient
    imports:
      - github.com/newrelic/newrelic-client-go/pkg/nrtime
    mutations:
      - name: syntheticsCreateSecureCredential
        max_query_field_depth: 2
      - name: syntheticsDeleteSecureCredential
        max_query_field_depth: 2
      - name: syntheticsUpdateSecureCredential
        max_query_field_depth: 2
      - name: syntheticsCreateScriptApiMonitor
        max_query_field_depth: 2
      - name: syntheticsUpdateScriptApiMonitor
        max_query_field_depth: 2
      - name: syntheticsCreateScriptBrowserMonitor
        max_query_field_depth: 2
      - name: syntheticsUpdateScriptBrowserMonitor
        max_query_field_depth: 2
      - name: syntheticsCreateSimpleBrowserMonitor
        max_query_field_depth: 2
      - name: syntheticsUpdateSimpleBrowserMonitor
        max_query_field_depth: 2
      - name: syntheticsCreateSimpleMonitor
        max_query_field_depth: 2
      - name: syntheticsUpdateSimpleMonitor
        max_query_field_depth: 2
      - name: syntheticsCreateBrokenLinksMonitor
        max_query_field_depth: 2
      - name: syntheticsUpdateBrokenLinksMonitor
        max_query_field_depth: 2
      - name: syntheticsCreateCertCheckMonitor
        max_query_field_depth: 2
      - name: syntheticsUpdateCertCheckMonitor
        max_query_field_depth: 2
      - name: syntheticsCreateStepMonitor
        max_query_field_depth: 2
      - name: syntheticsUpdateStepMonitor
        max_query_field_depth: 2
      - name: syntheticsDeleteMonitor
        max_query_field_depth: 2
      - name: syntheticsCreatePrivateLocation
        max_query_field_depth: 2
      - name: syntheticsDeletePrivateLocation
        max_query_field_depth: 2
      - name: syntheticsUpdatePrivateLocation
        max_query_field_depth: 2
      - name: syntheticsPurgePrivateLocationQueue
        max_query_field_depth: 2

    types:
      - name: EpochMilliseconds
        field_type_override: nrtime.EpochMilliseconds
        skip_type_create: true

  - name: common
    path: pkg/common
    import_path: github.com/newrelic/newrelic-client-go/pkg/common
    generators:
      - typegen
    types:
      - name: EntityGUID
        field_type_override: string

  - name: accounts
    path: pkg/accounts
    import_path: github.com/newrelic/newrelic-client-go/pkg/accounts
    generators:
      - typegen
    imports:
      - github.com/newrelic/newrelic-client-go/pkg/nrtime
    types:
      - name: AccountOutline
      - name: AccountReference
      - name: RegionScope

      #
      # Types that we should auto-detect are in another package someday
      #
      - name: EpochMilliseconds
        field_type_override: nrtime.EpochMilliseconds
        skip_type_create: true
      - name: TimeWindowInput
        field_type_override: nrtime.TimeWindowInput
        skip_type_create: true


  - name: alerts
    path: pkg/alerts
    import_path: github.com/newrelic/newrelic-client-go/pkg/alerts
    generators:
      - typegen
    imports:
      - github.com/newrelic/newrelic-client-go/pkg/apiaccess
    types:
      - name: AlertsMutingRuleConditionInput
      - name: AlertsMutingRuleInput
      - name: AlertsMutingRuleScheduleInput
      - name: AlertsNrqlConditionTermsOperator
      - name: AlertsPoliciesSearchCriteriaInput
      - name: AlertsPoliciesSearchResultSet
      - name: AlertsPolicy
      - name: AlertsPolicyInput
      - name: AlertsPolicyUpdateInput
      - name: ID
        field_type_override: string
        skip_type_create: true

      #
      # Types that we should auto-detect are in another package someday
      #
      - name: NaiveDateTime
        field_type_override: nrtime.NaiveDateTime
        skip_type_create: true


  - name: apiaccess
    path: pkg/apiaccess
    import_path: github.com/newrelic/newrelic-client-go/pkg/apiaccess
    generators:
      - typegen
    imports:
      - github.com/newrelic/newrelic-client-go/pkg/accounts
    types:
      - name: ApiAccessActorStitchedFields
      - name: ApiAccessCreateIngestKeyInput
      - name: ApiAccessCreateInput
      - name: ApiAccessCreateKeyResponse
      - name: ApiAccessCreateUserKeyInput
      - name: ApiAccessDeleteInput
      - name: ApiAccessDeleteKeyResponse
      - name: ApiAccessIngestKeyErrorType
      - name: ApiAccessIngestKeyType
      - name: ApiAccessKey # gql interface
      - name: APIAccessKeyError
        interface_methods:
          - "GetError() error"
      - name: ApiAccessKeySearchQuery
      - name: ApiAccessKeySearchResult
      - name: ApiAccessKeySearchScope
      - name: ApiAccessKeyType
      - name: ApiAccessUpdateIngestKeyInput
      - name: ApiAccessUpdateInput
      - name: ApiAccessUpdateKeyResponse
      - name: ApiAccessUpdateUserKeyInput
      - name: ApiAccessUserKeyErrorType
      # This must be a string, as where ID is used the type is a string...
      - name: ID
        field_type_override: string
        skip_type_create: true

      #
      # Types that we should auto-detect are in another package someday
      #
      - name: AccountReference
        field_type_override: accounts.AccountReference
        skip_type_create: true
      - name: UserReference
        field_type_override: users.UserReference
        skip_type_create: true


  - name: cloud
    path: pkg/cloud
    imports:
      - github.com/newrelic/newrelic-client-go/pkg/nrtime
      - encoding/json
      - fmt
    generators:
      - typegen
      - nerdgraphclient
    queries:
      - path: ["actor", "cloud"]
        endpoints:
          - name: linkedAccounts
            max_query_field_depth: 2
            include_arguments:
              - "provider"
            argument_type_overrides:
              - accountId: "Int!"
      - path: ["actor", "account", "cloud"]
        endpoints:
          - name: "linkedAccount"
            max_query_field_depth: 2
            include_arguments:
              - "id"
            argument_type_overrides:
              - accountId: "Int!"
              - id: "Int!"
    mutations:
      - name: cloudConfigureIntegration
        max_query_field_depth: 1
      - name: cloudDisableIntegration
        max_query_field_depth: 1
      - name: cloudLinkAccount
        max_query_field_depth: 1
        argument_type_overrides:
          accountId: "Int!"
          accounts: "CloudLinkCloudAccountsInput!"
      - name: cloudRenameAccount
        max_query_field_depth: 1
        argument_type_overrides:
          accountId: "Int!"
          accounts: "[CloudRenameAccountsInput!]!"
      - name: cloudUnlinkAccount
        max_query_field_depth: 1
        argument_type_overrides:
          accountId: "Int!"
          accounts: "[CloudUnlinkAccountsInput!]!"
    types:
      #
      # Types that we should auto-detect are in another package someday
      #
      - name: EpochSeconds
        field_type_override: nrtime.EpochSeconds
        skip_type_create: true
      - name: EpochMilliseconds
        field_type_override: nrtime.EpochMilliseconds
        skip_type_create: true

  - name: dashboards
    path: pkg/dashboards
    import_path: github.com/newrelic/newrelic-client-go/pkg/dashboards
    generators:
      - typegen
      - nerdgraphclient
    imports:
      - github.com/newrelic/newrelic-client-go/pkg/common
      - github.com/newrelic/newrelic-client-go/pkg/entities
      - github.com/newrelic/newrelic-client-go/pkg/nrdb
    mutations:
      - name: dashboardCreate
        max_query_field_depth: 10
        # These fields are currently not returned correctly and error
        # out, so we'll filter them off 6/14/2021 JT
        exclude_fields:
          - goldenMetrics
          - goldenTags
      - name: dashboardDelete
        max_query_field_depth: 10
      - name: dashboardUpdate
        max_query_field_depth: 10
        # These fields are currently not returned correctly and error
        # out, so we'll filter them off 6/14/2021 JT
        exclude_fields:
          - goldenMetrics
          - goldenTags
    types:
      # This must be a string, as where ID is used the type is a string...
      - name: ID
        field_type_override: string
        skip_type_create: true
      - name: EntityGuid
        field_type_override: common.EntityGUID
        skip_type_create: true

      # These need to be pointers within DashboardWidgetConfigurationInput, so
      # they can be nullable
      - name: DashboardAreaWidgetConfigurationInput
        field_type_override: "*DashboardAreaWidgetConfigurationInput"
      - name: DashboardBarWidgetConfigurationInput
        field_type_override: "*DashboardBarWidgetConfigurationInput"
      - name: DashboardBillboardWidgetConfigurationInput
        field_type_override: "*DashboardBillboardWidgetConfigurationInput"
      - name: DashboardLineWidgetConfigurationInput
        field_type_override: "*DashboardLineWidgetConfigurationInput"
      - name: DashboardMarkdownWidgetConfigurationInput
        field_type_override: "*DashboardMarkdownWidgetConfigurationInput"
      - name: DashboardPieWidgetConfigurationInput
        field_type_override: "*DashboardPieWidgetConfigurationInput"
      - name: DashboardTableWidgetConfigurationInput
        field_type_override: "*DashboardTableWidgetConfigurationInput"

      # Override this in type_overrides.go
      - name: DashboardBillboardWidgetThresholdInput
        skip_type_create: true

      #
      # Types that we should auto-detect are in another package someday
      #
      - name: DashboardAlertSeverity
        field_type_override: entities.DashboardAlertSeverity
        skip_type_create: true
      - name: DashboardEntity
        field_type_override: entities.DashboardEntity
        skip_type_create: true
      - name: DashboardEntityOutline
        field_type_override: entities.DashboardEntityOutline
        skip_type_create: true
      - name: DashboardOwnerInfo
        field_type_override: entities.DashboardOwnerInfo
        skip_type_create: true
      - name: DashboardPage
        field_type_override: entities.DashboardPage
        skip_type_create: true
      - name: DashboardPermissions
        field_type_override: entities.DashboardPermissions
        skip_type_create: true
      - name: DashboardWidget
        field_type_override: entities.DashboardWidget
        skip_type_create: true
      - name: DashboardWidgetRawConfiguration
        field_type_override: entities.DashboardWidgetRawConfiguration
        skip_type_create: true
      - name: DateTime
        field_type_override: nrtime.DateTime
        skip_type_create: true
      - name: Entity
        field_type_override: entities.Entity
        skip_type_create: true
      - name: EntityGuid
        field_type_override: common.EntityGUID
        skip_type_create: true
      - name: EntityOutline
        field_type_override: entities.EntityOutline
        skip_type_create: true
      - name: EntityResult
        field_type_override: entities.EntityResult
        skip_type_create: true
      - name: EpochMilliseconds
        field_type_override: nrtime.EpochMilliseconds
        skip_type_create: true
      - name: GenericEntityOutline
        field_type_override: entities.GenericEntityOutline
        skip_type_create: true
      - name: Milliseconds
        field_type_override: nrtime.Milliseconds
        skip_type_create: true
      - name: Nrql
        field_type_override: nrdb.NRQL
        skip_type_create: true


  - name: edge
    path: pkg/edge
    import_path: github.com/newrelic/newrelic-client-go/pkg/edge
    generators:
      - typegen
    types:
      - name: EdgeAccountStitchedFields
      - name: EdgeAgentEndpointDetail
      - name: EdgeCreateTraceObserverInput
      - name: EdgeCreateTraceObserverResponse
      - name: EdgeCreateTraceObserverResponseError
      - name: EdgeCreateTraceObserverResponseErrorType
      - name: EdgeCreateTraceObserverResponses
      - name: EdgeDeleteTraceObserverInput
      - name: EdgeDeleteTraceObserverResponse
      - name: EdgeDeleteTraceObserverResponseError
      - name: EdgeDeleteTraceObserverResponseErrorType
      - name: EdgeDeleteTraceObserverResponses
      - name: EdgeEndpoint
      - name: EdgeEndpointStatus
      - name: EdgeEndpointType
      - name: EdgeHttpsEndpointDetail
      - name: EdgeProviderRegion
      - name: EdgeTraceObserver
      - name: EdgeTraceObserverResponse
      - name: EdgeTraceObserverResponseError
      - name: EdgeTraceObserverResponseErrorType
      - name: EdgeTraceObserverStatus
      - name: EdgeTracing


  - name: entities
    path: pkg/entities
    import_path: github.com/newrelic/newrelic-client-go/pkg/entities
    generators:
      - typegen
      - nerdgraphclient
    imports:
      - github.com/newrelic/newrelic-client-go/pkg/accounts
      - github.com/newrelic/newrelic-client-go/pkg/ai
      - github.com/newrelic/newrelic-client-go/pkg/common
      - github.com/newrelic/newrelic-client-go/pkg/nrdb
      - github.com/newrelic/newrelic-client-go/pkg/nrtime
      - github.com/newrelic/newrelic-client-go/pkg/users
    queries:
      - path: ["actor"]
        endpoints:
          - name: entities
            max_query_field_depth: 2
            exclude_fields:
              - slug
          - name: entity
            max_query_field_depth: 2
            exclude_fields:
              - slug
          - name: entitySearch
            max_query_field_depth: 2
            exclude_fields:
              - slug
            include_arguments:
              - "queryBuilder"
    mutations:
      - name: taggingAddTagsToEntity
        max_query_field_depth: 1
      - name: taggingDeleteTagFromEntity
        max_query_field_depth: 1
      - name: taggingDeleteTagValuesFromEntity
        max_query_field_depth: 1
      - name: taggingReplaceTagsOnEntity
        max_query_field_depth: 1

    types:
      # Overrides for types this package owns
      - name: AttributeMap
        create_as: "map[string]interface{}"
      # This must be a string, as where ID is used the type is a string...
      - name: ID
        field_type_override: string
        skip_type_create: true
      - name: EntityGuid
        field_type_override: common.EntityGUID
        skip_type_create: true

      - name: DashboardWidgetRawConfiguration
        create_as: "[]byte"

      # Types this package owns
      - name: EntityRelationship
      - name: EntityRelationshipFilter
      - name: EntityRelationshipNode
      - name: EntityRelationshipType
      - name: EntitySearch
      - name: EntitySearchCounts
      - name: EntitySearchCountsFacet
      - name: EntitySearchOptions
      - name: EntitySearchQueryBuilder
      - name: EntitySearchResult
      - name: EntitySearchSortCriteria
      - name: EntitySearchTypes
      - name: EntityTag
      - name: EntityTagValueWithMetadata
      - name: EntityTagWithMetadata
      - name: EntityType

      # List of entities
      - name: Entity
        interface_methods:
          - "GetAccountID() int"
          - "GetDomain() string"
          - "GetGUID() common.EntityGUID"
          - "GetName() string"
          - "GetTags() []EntityTag"
          - "GetType() string"
          - "GetServiceLevel() ServiceLevelDefinition"
      - name: AlertableEntity
        generate_struct_getters: true
      - name: ApmApplicationEntity
        generate_struct_getters: true
      - name: ApmBrowserApplicationEntity
        generate_struct_getters: true
      - name: ApmDatabaseInstanceEntity
        generate_struct_getters: true
      - name: ApmExternalServiceEntity
        generate_struct_getters: true
      - name: BrowserApplicationEntity
        generate_struct_getters: true
      - name: CollectionEntity
        generate_struct_getters: true
      - name: DashboardEntity
        generate_struct_getters: true
      - name: ExternalEntity
        generate_struct_getters: true
      - name: GenericEntity
        generate_struct_getters: true
      - name: GenericInfrastructureEntity
        generate_struct_getters: true
      - name: InfrastructureAwsLambdaFunctionEntity
        generate_struct_getters: true
      - name: InfrastructureHostEntity
        generate_struct_getters: true
      - name: InfrastructureIntegrationEntity
        generate_struct_getters: true
      - name: MobileApplicationEntity
        generate_struct_getters: true
      - name: SecureCredentialEntity
        generate_struct_getters: true
      - name: SyntheticMonitorEntity
        generate_struct_getters: true
      - name: ThirdPartyServiceEntity
        generate_struct_getters: true
      - name: UnavailableEntity
        generate_struct_getters: true
      - name: WorkloadEntity
        generate_struct_getters: true


      # New Entity types
      - name: ApmAgentInstrumentedServiceEntity
        generate_struct_getters: true
      - name: GenericServiceEntity
        generate_struct_getters: true
      - name: ServiceEntity
        generate_struct_getters: true
      # End new Entity types


      # Entity Outlines contain the summary of an Entity's data
      - name: EntityOutline
        interface_methods:
          - "GetAccountID() int"
          - "GetDomain() string"
          - "GetGUID() common.EntityGUID"
          - "GetName() string"
          - "GetType() string"


      # Start new EntityOutline types
      - name: ApmAgentInstrumentedServiceEntityOutline
        generate_struct_getters: true
      - name: GenericServiceEntityOutline
        generate_struct_getters: true
      - name: ServiceEntityOutline
        generate_struct_getters: true
      - name: GenericServiceEntityOutline
        generate_struct_getters: true
      # End new EntityOutline types


      - name: AlertableEntityOutline
        generate_struct_getters: true
      - name: ApmApplicationEntityOutline
        generate_struct_getters: true
      - name: ApmBrowserApplicationEntityOutline
        generate_struct_getters: true
      - name: ApmDatabaseInstanceEntityOutline
        generate_struct_getters: true
      - name: ApmExternalServiceEntityOutline
        generate_struct_getters: true
      - name: BrowserApplicationEntityOutline
        generate_struct_getters: true
      - name: CollectionEntityOutline
        generate_struct_getters: true
      - name: DashboardEntityOutline
        generate_struct_getters: true
      - name: ExternalEntityOutline
        generate_struct_getters: true
      - name: GenericEntityOutline
        generate_struct_getters: true
      - name: GenericInfrastructureEntityOutline
        generate_struct_getters: true
      - name: InfrastructureAwsLambdaFunctionEntityOutline
        generate_struct_getters: true
      - name: InfrastructureHostEntityOutline
        generate_struct_getters: true
      - name: InfrastructureIntegrationEntityOutline
        generate_struct_getters: true
      - name: MobileApplicationEntityOutline
        generate_struct_getters: true
      - name: SecureCredentialEntityOutline
        generate_struct_getters: true
      - name: SyntheticMonitorEntityOutline
        generate_struct_getters: true
      - name: ThirdPartyServiceEntityOutline
        generate_struct_getters: true
      - name: UnavailableEntityOutline
        generate_struct_getters: true
      - name: WorkloadEntityOutline
        generate_struct_getters: true

      #
      # Types that our other packages define
      #   TODO: Fix tutone to figure this out for us
      #

      # accounts imports
      - name: AccountOutline
        field_type_override: accounts.AccountOutline
        skip_type_create: true
      - name: AccountReference
        field_type_override: accounts.AccountReference
        skip_type_create: true

      # nrtime imports
      - name: DateTime
        field_type_override: nrtime.DateTime
        skip_type_create: true
      - name: EpochSeconds
        field_type_override: nrtime.EpochSeconds
        skip_type_create: true
      - name: EpochMilliseconds
        field_type_override: "*nrtime.EpochMilliseconds"
        skip_type_create: true
      - name: Minutes
        field_type_override: nrtime.Minutes
        skip_type_create: true
      - name: Seconds
        field_type_override: nrtime.Seconds
        skip_type_create: true

      # nrdb imports
      - name: EventDefinition
        field_type_override: nrdb.EventDefinition
        skip_type_create: true
      - name: NrdbMetadataTimeWindow
        field_type_override: nrdb.NRDBMetadataTimeWindow
        skip_type_create: true
      - name: NrdbResult
        field_type_override: nrdb.NRDBResult
        skip_type_create: true
      - name: NrdbResultContainer
        field_type_override: nrdb.NRDBResultContainer
        skip_type_create: true
      - name: Nrql
        field_type_override: nrdb.NRQL
        skip_type_create: true
      - name: NrqlHistoricalQuery
        field_type_override: nrdb.NrqlHistoricalQuery
        skip_type_create: true
      - name: NrqlFacetSuggestion
        field_type_override: nrdb.NRQLFacetSuggestion
        skip_type_create: true
      - name: SuggestedNrqlQuery
        field_type_override: nrdb.SuggestedNRQLQuery
        skip_type_create: true
      - name: SuggestedAnomalyBasedNRQLQuery
        field_type_override: nrdb.SuggestedAnomalyBasedNRQLQuery
        skip_type_create: true
      - name: SuggestedHistoryBasedNRQLQuery
        field_type_override: nrdb.SuggestedHistoryBasedNRQLQuery
        skip_type_create: true
      - name: SuggestedNRQLQueryAnomaly
        field_type_override: nrdb.SuggestedNRQLQueryAnomaly
        skip_type_create: true
      - name: ServiceLevelIndicator
        field_type_override: servicelevel.ServiceLevelIndicator
        skip_type_create: true

      # users imports
      - name: UserReference
        field_type_override: users.UserReference
        skip_type_create: true


  - name: eventstometrics
    path: pkg/eventstometrics
    import_path: github.com/newrelic/newrelic-client-go/pkg/eventstometrics
    generators:
      - typegen
    imports:
      - github.com/newrelic/newrelic-client-go/pkg/nrtime
    types:
      - name: EventsToMetricsAccountStitchedFields
      - name: EventsToMetricsCreateRuleFailure
      - name: EventsToMetricsCreateRuleInput
      - name: EventsToMetricsCreateRuleResult
      - name: EventsToMetricsCreateRuleSubmission
      - name: EventsToMetricsDeleteRuleFailure
      - name: EventsToMetricsDeleteRuleInput
      - name: EventsToMetricsDeleteRuleResult
      - name: EventsToMetricsDeleteRuleSubmission
      - name: EventsToMetricsErrorReason
      - name: EventsToMetricsListRuleResult
      - name: EventsToMetricsRule
      - name: EventsToMetricsUpdateRuleFailure
      - name: EventsToMetricsUpdateRuleInput
      - name: EventsToMetricsUpdateRuleResult
      - name: EventsToMetricsUpdateRuleSubmission
      - name: ID
        field_type_override: string
        skip_type_create: true

      #
      # Types that we should auto-detect are in another package someday
      #
      - name: DateTime
        field_type_override: nrtime.DateTime
        skip_type_create: true

  - name: installevents
    path: pkg/installevents
    import_path: github.com/newrelic/newrelic-client-go/pkg/installevents
    generators:
      - typegen
      - nerdgraphclient
    imports:
      - github.com/newrelic/newrelic-client-go/pkg/common
      - github.com/newrelic/newrelic-client-go/pkg/entities
      - github.com/newrelic/newrelic-client-go/pkg/nrtime
    types:
      - name: Timestamp
        field_type_override: nrtime.DateTime
        skip_type_create: true
      - name: ValidationDurationMilliseconds
        field_type_override: nrtime.EpochMilliseconds
        skip_type_create: true
      - name: EpochMilliseconds
        field_type_override: int64
        skip_type_create: true
      - name: EpochSeconds
        field_type_override: nrtime.EpochSeconds
        skip_type_create: true
      - name: EntityGuid
        field_type_override: common.EntityGUID
        skip_type_create: true
      - name: SemVer
        field_type_override: string
        skip_type_create: true
      - name: ID
        field_type_override: string
        skip_type_create: true
      - name: InstallationRawMetadata
        field_type_override: map[string]interface{}
        skip_type_create: true
    mutations:
      - name: installationCreateRecipeEvent
        max_query_field_depth: 1
      - name: installationCreateInstallStatus
        max_query_field_depth: 1

  - name: nerdstorage
    path: pkg/nerdstorage
    import_path: github.com/newrelic/newrelic-client-go/pkg/nerdstorage
    generators:
      - typegen
    types:
      - name: NerdStorageCollectionMember
      - name: NerdStorageDocument
      - name: NerdStorageEntityScope
      - name: NerdStorageScope
      - name: NerdStorageScopeInput


  - name: nrdb
    path: pkg/nrdb
    import_path: github.com/newrelic/newrelic-client-go/pkg/nrdb
    generators:
      - typegen
    imports:
      - github.com/newrelic/newrelic-client-go/pkg/nrtime
    types:
      - name: Nrql
        create_as: string
      - name: NRDBMetadataTimeWindow
      - name: NRDBResult
        create_as: map[string]interface{}
      - name: NrqlHistoricalQuery
      - name: SuggestedNRQLQuery
      - name: NrdbResultContainer
      - name: EventDefinition

      #
      # Types that we should auto-detect are in another package someday
      #
      - name: EpochSeconds
        field_type_override: nrtime.EpochSeconds
        skip_type_create: true
      - name: EpochMilliseconds
        field_type_override: nrtime.EpochMilliseconds
        skip_type_create: true
      - name: TimeWindowInput
        field_type_override: nrtime.TimeWindowInput
        skip_type_create: true


  - name: nrqldroprules
    path: pkg/nrqldroprules
    import_path: github.com/newrelic/newrelic-client-go/pkg/nrqldroprules
    generators:
      - typegen
      - nerdgraphclient
    imports:
      - github.com/newrelic/newrelic-client-go/pkg/nrdb
      - github.com/newrelic/newrelic-client-go/pkg/nrtime
    queries:
      - path: ["actor", "account", "nrqlDropRules"]
        endpoints:
          - name: "list"
            max_query_field_depth: 2
    mutations:
      - name: nrqlDropRulesCreate
        max_query_field_depth: 1
      - name: nrqlDropRulesDelete
        max_query_field_depth: 1
    types:
      - name: NRQLDropRulesAccountStitchedFields
      - name: NrqlDropRulesAction
      - name: NrqlDropRulesCreateDropRuleFailure
      - name: NrqlDropRulesCreateDropRuleInput
      - name: NrqlDropRulesCreateDropRuleResult
      - name: NrqlDropRulesCreateDropRuleSubmission
      - name: NrqlDropRulesDeleteDropRuleFailure
      - name: NrqlDropRulesDeleteDropRuleResult
      - name: NrqlDropRulesDeleteDropRuleSubmission
      - name: NrqlDropRulesDropRule
      - name: NrqlDropRulesDropRule
      - name: NrqlDropRulesError
      - name: NrqlDropRulesErrorReason
      - name: NrqlDropRulesListDropRulesResult
      # All of the IDs are created as ints, yet this unused type is being created.
      - name: ID
        field_type_override: string
        skip_type_create: true


      #
      # Types that we should auto-detect are in another package someday
      #
      - name: DateTime
        field_type_override: nrtime.DateTime
        skip_type_create: true
      # TODO: This doesn't appear to be working for THIS package, but does for others
      - name: NRQL
        field_type_override: nrdb.NRQL
        skip_type_create: true


  - name: nrtime
    path: pkg/nrtime
    import_path: github.com/newrelic/newrelic-client-go/pkg/nrtime
    generators:
      - typegen
    imports:
      - github.com/newrelic/newrelic-client-go/internal/serialization
    types:
      - name: DateTime
        create_as: string
      - name: EpochMilliseconds
        create_as: serialization.EpochTime
      - name: EpochSeconds
        create_as: serialization.EpochTime
      - name: Milliseconds
        create_as: int
      - name: Minutes
        create_as: int
      - name: NaiveDateTime
        create_as: string
      - name: Seconds
        create_as: string
      - name: TimeWindowInput


  - name: users
    path: pkg/users
    import_path: github.com/newrelic/newrelic-client-go/pkg/users
    generators:
      - typegen
      - nerdgraphclient
    queries:
      - path: ["actor"]
        endpoints:
          - name: user
            max_query_field_depth: 2
    types:
      - name: User
      - name: UserReference


  - name: workloads
    path: pkg/workloads
    import_path: github.com/newrelic/newrelic-client-go/pkg/workloads
    generators:
      - typegen
      - nerdgraphclient
    imports:
      - github.com/newrelic/newrelic-client-go/pkg/accounts
      - github.com/newrelic/newrelic-client-go/pkg/common
      - github.com/newrelic/newrelic-client-go/pkg/entities
      - github.com/newrelic/newrelic-client-go/pkg/nrtime
      - github.com/newrelic/newrelic-client-go/pkg/users
    mutations:
      - name: workloadCreate
        max_query_field_depth: 3
      - name: workloadDelete
        max_query_field_depth: 3
      - name: workloadDuplicate
        max_query_field_depth: 3
      - name: workloadUpdate
        max_query_field_depth: 3
    types:
      - name: WorkloadCreateInput
      - name: WorkloadDuplicateInput

      # Some overrides we need
      - name: WorkloadStatusConfigInput
        field_type_override: "*WorkloadStatusConfigInput"
      - name: WorkloadScopeAccountsInput
        field_type_override: "*WorkloadScopeAccountsInput"
      - name: WorkloadUpdateStatusConfigInput
        field_type_override: "*WorkloadUpdateStatusConfigInput"

      #
      # Types owned by other packages
      #
      - name: AccountReference
        field_type_override: accounts.AccountReference
        skip_type_create: true
      - name: EntityGuid
        field_type_override: common.EntityGUID
        skip_type_create: true
      # UpdateAt returns `null`, so this needs to be a ptr (can't override just the UpdatedAt field)
      - name: EpochMilliseconds
        field_type_override: "*nrtime.EpochMilliseconds"
        skip_type_create: true
      - name: UserReference
        field_type_override: users.UserReference
        skip_type_create: true

  - name: servicelevel
    path: pkg/servicelevel
    import_path: github.com/newrelic/newrelic-client-go/pkg/servicelevel
    generators:
      - typegen
      - nerdgraphclient
    imports:
      - github.com/newrelic/newrelic-client-go/pkg/accounts
      - github.com/newrelic/newrelic-client-go/pkg/common
      - github.com/newrelic/newrelic-client-go/pkg/entities
      - github.com/newrelic/newrelic-client-go/pkg/nrtime
      - github.com/newrelic/newrelic-client-go/pkg/users
    types:
      - name: User
      - name: UserReference
    # Custom query to fetch SLIs from the entity API
    queries:
      - path: ["actor", "entity", "serviceLevel"]
        endpoints:
          - name: "indicators"
            max_query_field_depth: 3
            exclude_fields:
              - resultQueries
    mutations:
      - name: serviceLevelCreate
        exclude_fields:
          - slug
          - resultQueries
        max_query_field_depth: 3
      - name: serviceLevelDelete
        exclude_fields:
          - slug
          - resultQueries
        max_query_field_depth: 3
      - name: serviceLevelUpdate
        exclude_fields:
          - slug
          - resultQueries
        max_query_field_depth: 3
    types:
      - name: ID
        field_type_override: string
      - name: ServiceLevelIndicator
        skip_fields:
          - Slug
          - ResultQueries
      - name: ServiceLevelIndicatorCreateInput
        skip_fields:
          - Slug
      - name: ServiceLevelObjective
        skip_fields:
          - ResultQueries

      # Overrides needed
      - name: ServiceLevelEventsQuery
        field_type_override: "*ServiceLevelEventsQuery"
      - name: ServiceLevelEventsQueryCreateInput
        field_type_override: "*ServiceLevelEventsQueryCreateInput"
      - name: ServiceLevelEventsQueryUpdateInput
        field_type_override: "*ServiceLevelEventsQueryUpdateInput"
      - name: ServiceLevelEventsUpdateInput
        field_type_override: "*ServiceLevelEventsUpdateInput"

      #
      # Types owned by other packages
      #
      # UpdateAt returns `null`, so this needs to be a ptr (can't override just the UpdatedAt field)
      - name: EpochMilliseconds
        field_type_override: "*nrtime.EpochMilliseconds"
        skip_type_create: true
      - name: AccountReference
        field_type_override: accounts.AccountReference
        skip_type_create: true
      - name: EntityGuid
        field_type_override: common.EntityGUID
        skip_type_create: true

generators:
  - name: typegen
    fileName: "types.go"
  - name: nerdgraphclient
    fileName: "{{.PackageName}}_api.go"
