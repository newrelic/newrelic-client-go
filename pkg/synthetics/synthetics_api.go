// Code generated by tutone: DO NOT EDIT
package synthetics

import "context"

// Queues a request to create a secure credential
func (a *Synthetics) SyntheticsCreateSecureCredential(
	accountID int,
	description string,
	key string,
	value SecureValue,
) (*SyntheticsSecureCredentialMutationResult, error) {
	return a.SyntheticsCreateSecureCredentialWithContext(context.Background(),
		accountID,
		description,
		key,
		value,
	)
}

// Queues a request to create a secure credential
func (a *Synthetics) SyntheticsCreateSecureCredentialWithContext(
	ctx context.Context,
	accountID int,
	description string,
	key string,
	value SecureValue,
) (*SyntheticsSecureCredentialMutationResult, error) {

	resp := SyntheticsCreateSecureCredentialQueryResponse{}
	vars := map[string]interface{}{
		"accountId":   accountID,
		"description": description,
		"key":         key,
		"value":       value,
	}

	if err := a.client.NerdGraphQueryWithContext(ctx, SyntheticsCreateSecureCredentialMutation, vars, &resp); err != nil {
		return nil, err
	}

	return &resp.SyntheticsSecureCredentialMutationResult, nil
}

type SyntheticsCreateSecureCredentialQueryResponse struct {
	SyntheticsSecureCredentialMutationResult SyntheticsSecureCredentialMutationResult `json:"SyntheticsCreateSecureCredential"`
}

const SyntheticsCreateSecureCredentialMutation = `mutation(
	$accountId: Int!,
	$description: String,
	$key: String!,
	$value: SecureValue!,
) { syntheticsCreateSecureCredential(
	accountId: $accountId,
	description: $description,
	key: $key,
	value: $value,
) {
	createdAt
	description
	errors {
		description
	}
	key
	lastUpdate
} }`

// Queues a request to delete an existing secure credential
func (a *Synthetics) SyntheticsDeleteSecureCredential(
	accountID int,
	key string,
) (*SyntheticsSecureCredentialMutationResult, error) {
	return a.SyntheticsDeleteSecureCredentialWithContext(context.Background(),
		accountID,
		key,
	)
}

// Queues a request to delete an existing secure credential
func (a *Synthetics) SyntheticsDeleteSecureCredentialWithContext(
	ctx context.Context,
	accountID int,
	key string,
) (*SyntheticsSecureCredentialMutationResult, error) {

	resp := SyntheticsDeleteSecureCredentialQueryResponse{}
	vars := map[string]interface{}{
		"accountId": accountID,
		"key":       key,
	}

	if err := a.client.NerdGraphQueryWithContext(ctx, SyntheticsDeleteSecureCredentialMutation, vars, &resp); err != nil {
		return nil, err
	}

	return &resp.SyntheticsSecureCredentialMutationResult, nil
}

type SyntheticsDeleteSecureCredentialQueryResponse struct {
	SyntheticsSecureCredentialMutationResult SyntheticsSecureCredentialMutationResult `json:"SyntheticsDeleteSecureCredential"`
}

const SyntheticsDeleteSecureCredentialMutation = `mutation(
	$accountId: Int!,
	$key: String!,
) { syntheticsDeleteSecureCredential(
	accountId: $accountId,
	key: $key,
) {
	createdAt
	description
	errors {
		description
	}
	key
	lastUpdate
} }`

// Queues a request to update an existing secure credential
func (a *Synthetics) SyntheticsUpdateSecureCredential(
	accountID int,
	description string,
	key string,
	value SecureValue,
) (*SyntheticsSecureCredentialMutationResult, error) {
	return a.SyntheticsUpdateSecureCredentialWithContext(context.Background(),
		accountID,
		description,
		key,
		value,
	)
}

// Queues a request to update an existing secure credential
func (a *Synthetics) SyntheticsUpdateSecureCredentialWithContext(
	ctx context.Context,
	accountID int,
	description string,
	key string,
	value SecureValue,
) (*SyntheticsSecureCredentialMutationResult, error) {

	resp := SyntheticsUpdateSecureCredentialQueryResponse{}
	vars := map[string]interface{}{
		"accountId":   accountID,
		"description": description,
		"key":         key,
		"value":       value,
	}

	if err := a.client.NerdGraphQueryWithContext(ctx, SyntheticsUpdateSecureCredentialMutation, vars, &resp); err != nil {
		return nil, err
	}

	return &resp.SyntheticsSecureCredentialMutationResult, nil
}

type SyntheticsUpdateSecureCredentialQueryResponse struct {
	SyntheticsSecureCredentialMutationResult SyntheticsSecureCredentialMutationResult `json:"SyntheticsUpdateSecureCredential"`
}

const SyntheticsUpdateSecureCredentialMutation = `mutation(
	$accountId: Int!,
	$description: String,
	$key: String!,
	$value: SecureValue,
) { syntheticsUpdateSecureCredential(
	accountId: $accountId,
	description: $description,
	key: $key,
	value: $value,
) {
	createdAt
	description
	errors {
		description
	}
	key
	lastUpdate
} }`
