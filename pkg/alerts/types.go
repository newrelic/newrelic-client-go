// Code generated by tutone: DO NOT EDIT
package alerts

// AlertsIncidentPreference - Determines how incidents are created for critical violations of the conditions contained in the policy.
type AlertsIncidentPreference string

var AlertsIncidentPreferenceTypes = struct {
	// A condition will create a condition-level incident when it violates its critical threshold.
	// Other violating conditions will create their own incidents.
	PER_CONDITION AlertsIncidentPreference
	// Each target of each condition will create an entity-level incident upon critical violation.
	// Other violating targets will create their own incidents (even on the same condition).
	PER_CONDITION_AND_TARGET AlertsIncidentPreference
	// A condition will create a policy-level incident when it violates its critical threshold.
	// Other violating conditions will be grouped into this incident.
	PER_POLICY AlertsIncidentPreference
}{
	// A condition will create a condition-level incident when it violates its critical threshold.
	// Other violating conditions will create their own incidents.
	PER_CONDITION: "PER_CONDITION",
	// Each target of each condition will create an entity-level incident upon critical violation.
	// Other violating targets will create their own incidents (even on the same condition).
	PER_CONDITION_AND_TARGET: "PER_CONDITION_AND_TARGET",
	// A condition will create a policy-level incident when it violates its critical threshold.
	// Other violating conditions will be grouped into this incident.
	PER_POLICY: "PER_POLICY",
}

// AlertsMutingRuleConditionGroupOperator - An operator used to combine MutingRuleConditions within a MutingRuleConditionGroup.
type AlertsMutingRuleConditionGroupOperator string

var AlertsMutingRuleConditionGroupOperatorTypes = struct {
	// Match conditions by AND
	AND AlertsMutingRuleConditionGroupOperator
	// Match conditions by OR
	OR AlertsMutingRuleConditionGroupOperator
}{
	// Match conditions by AND
	AND: "AND",
	// Match conditions by OR
	OR: "OR",
}

// AlertsMutingRuleConditionOperator - The list of operators to be used in a MutingRuleCondition. Each operator is limited to one value in the `values` list unless otherwise specified.
type AlertsMutingRuleConditionOperator string

var AlertsMutingRuleConditionOperatorTypes = struct {
	// Where attribute is any.
	ANY AlertsMutingRuleConditionOperator
	// Where attribute contains value.
	CONTAINS AlertsMutingRuleConditionOperator
	// Where attribute ends with value.
	ENDS_WITH AlertsMutingRuleConditionOperator
	// Where attribute equals value.
	EQUALS AlertsMutingRuleConditionOperator
	// Where attribute in values. (Limit 500)
	IN AlertsMutingRuleConditionOperator
	// Where attribute is blank.
	IS_BLANK AlertsMutingRuleConditionOperator
	// Where attribute is not blank.
	IS_NOT_BLANK AlertsMutingRuleConditionOperator
	// Where attribute does not contain value.
	NOT_CONTAINS AlertsMutingRuleConditionOperator
	// Where attribute does not end with value.
	NOT_ENDS_WITH AlertsMutingRuleConditionOperator
	// Where attribute does not equal value.
	NOT_EQUALS AlertsMutingRuleConditionOperator
	// Where attribute not in values. (Limit 500)
	NOT_IN AlertsMutingRuleConditionOperator
	// Where attribute does not start with value.
	NOT_STARTS_WITH AlertsMutingRuleConditionOperator
	// Where attribute starts with value.
	STARTS_WITH AlertsMutingRuleConditionOperator
}{
	// Where attribute is any.
	ANY: "ANY",
	// Where attribute contains value.
	CONTAINS: "CONTAINS",
	// Where attribute ends with value.
	ENDS_WITH: "ENDS_WITH",
	// Where attribute equals value.
	EQUALS: "EQUALS",
	// Where attribute in values. (Limit 500)
	IN: "IN",
	// Where attribute is blank.
	IS_BLANK: "IS_BLANK",
	// Where attribute is not blank.
	IS_NOT_BLANK: "IS_NOT_BLANK",
	// Where attribute does not contain value.
	NOT_CONTAINS: "NOT_CONTAINS",
	// Where attribute does not end with value.
	NOT_ENDS_WITH: "NOT_ENDS_WITH",
	// Where attribute does not equal value.
	NOT_EQUALS: "NOT_EQUALS",
	// Where attribute not in values. (Limit 500)
	NOT_IN: "NOT_IN",
	// Where attribute does not start with value.
	NOT_STARTS_WITH: "NOT_STARTS_WITH",
	// Where attribute starts with value.
	STARTS_WITH: "STARTS_WITH",
}

// AlertsNrqlConditionTermsOperator - Operator used to compare against the threshold for NrqlConditions.
type AlertsNrqlConditionTermsOperator string

var AlertsNrqlConditionTermsOperatorTypes = struct {
	// For comparing values above a threshold.
	ABOVE AlertsNrqlConditionTermsOperator
	// For comparing values below a threshold.
	BELOW AlertsNrqlConditionTermsOperator
	// For comparing values equal to a threshold.
	EQUALS AlertsNrqlConditionTermsOperator
}{
	// For comparing values above a threshold.
	ABOVE: "ABOVE",
	// For comparing values below a threshold.
	BELOW: "BELOW",
	// For comparing values equal to a threshold.
	EQUALS: "EQUALS",
}

// AlertsMutingRuleConditionGroupInput - A group of MutingRuleConditions combined by an operator.
type AlertsMutingRuleConditionGroupInput struct {
	Conditions []AlertsMutingRuleConditionInput       `json:"conditions"`
	Operator   AlertsMutingRuleConditionGroupOperator `json:"operator"`
}

// AlertsMutingRuleConditionInput - A condition which describes how to target a New Relic Alerts Violation.
type AlertsMutingRuleConditionInput struct {
	Attribute string                            `json:"attribute"`
	Operator  AlertsMutingRuleConditionOperator `json:"operator"`
	Values    []string                          `json:"values"`
}

// AlertsMutingRuleInput - Input for creating MutingRules for New Relic Alerts Violations.
type AlertsMutingRuleInput struct {
	Condition   AlertsMutingRuleConditionGroupInput `json:"condition"`
	Description string                              `json:"description"`
	Enabled     bool                                `json:"enabled"`
	Name        string                              `json:"name"`
}

// AlertsPoliciesSearchCriteriaInput - Search criteria for returning specific policies.
type AlertsPoliciesSearchCriteriaInput struct {
	IDs []int `json:"ids"`
}

// AlertsPoliciesSearchResultSet - Collection of policies with pagination information.
type AlertsPoliciesSearchResultSet struct {
	NextCursor string         `json:"nextCursor"`
	Policies   []AlertsPolicy `json:"policies"`
	TotalCount int            `json:"totalCount"`
}

// AlertsPolicy - Container for conditions with associated notifications channels.
type AlertsPolicy struct {
	AccountID          int                      `json:"accountId"`
	ID                 string                   `json:"id"`
	IncidentPreference AlertsIncidentPreference `json:"incidentPreference"`
	Name               string                   `json:"name"`
}

// AlertsPolicyInput - Container for conditions with associated notifications channels.
type AlertsPolicyInput struct {
	IncidentPreference AlertsIncidentPreference `json:"incidentPreference"`
	Name               string                   `json:"name"`
}

// AlertsPolicyUpdateInput - Policy fields to be updated.
type AlertsPolicyUpdateInput struct {
	IncidentPreference AlertsIncidentPreference `json:"incidentPreference"`
	Name               string                   `json:"name"`
}
