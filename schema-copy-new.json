{
 "mutationType": {
  "name": "RootMutationType",
  "description": "This is the root of all GraphQL mutations. Unlike queries, mutations\nrepresent actions that have a side effects, like `create` or `update`.",
  "kind": "OBJECT",
  "fields": [
   {
    "name": "abTestGetVariation",
    "description": "This calculates which experimental variation a user should see. NOTE: Calling this function will record an impression!",
    "type": {
     "name": "AbTestGetVariationResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "req",
      "description": "An object for organizing parameters",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AbTestGetVariationRequest",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "abTestTrackEvent",
    "description": "This tracks user behaviors.",
    "type": {
     "name": "Boolean",
     "kind": "SCALAR"
    },
    "args": [
     {
      "name": "req",
      "description": "An object for organizing parameters",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AbTestTrackEventRequest",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "accountFeatureConfigurationSetFedrampCompliance",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "AccountFeatureConfigurationSetFedrampComplianceResult",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID of the account being configured for FedRamp compliance",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "accountFeatureConfigurationSetHipaaCompliance",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "AccountFeatureConfigurationSetHipaaComplianceResult",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID of the account being configured for HIPAA compliance",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "accountManagementCancelAccount",
    "description": "Cancels an account.",
    "type": {
     "name": "AccountManagementManagedAccount",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "id",
      "description": "The attributes for canceling an account.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "accountManagementCreateAccount",
    "description": "Creates an organization-scoped account.",
    "type": {
     "name": "AccountManagementCreateResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "managedAccount",
      "description": "The attributes for the account being created.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AccountManagementCreateInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "accountManagementUpdateAccount",
    "description": "Updates an account.",
    "type": {
     "name": "AccountManagementUpdateResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "managedAccount",
      "description": "The attributes for updating an account.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AccountManagementUpdateInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "accountShareInvitationsAcceptInvitation",
    "description": "Accept an invitation by passing it's token",
    "type": {
     "name": "AccountShareInvitationsAcceptInvitationByTokenMutationPayload",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "token",
      "description": "The id of the invitation to be revoked.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "SecureValue",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "accountShareInvitationsCreateAccountShareInvitation",
    "description": "Create an account share invitation",
    "type": {
     "name": "AccountShareInvitationsCreateAccountShareMutationPayload",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The id of the account that is to be shared",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "limitingRoleId",
      "description": "The id of the role that will limit the access of this account share",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "note",
      "description": "A simple text label for this invitation",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    ]
   },
   {
    "name": "accountShareInvitationsRevokeInvitation",
    "description": "Revoke an invitation",
    "type": {
     "name": "AccountShareInvitationsRevokeInvitationByIdMutationPayload",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "id",
      "description": "The token of the invitation to be accepted.",
      "type": {
       "name": "SecureValue",
       "kind": "SCALAR"
      }
     }
    ]
   },
   {
    "name": "agentApplicationCreateBrowser",
    "description": "If you aren't using an auto-instrumenting agent on the backend, use this to set up browser monitoring for an application. For more information on enabling copy/paste, [see our docs](https://docs.newrelic.com/docs/browser/browser-monitoring/installation/install-browser-monitoring-agent/#copy-paste-app)",
    "type": {
     "name": "AgentApplicationCreateBrowserResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The account ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "name",
      "description": "The application's name.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "settings",
      "description": "Browser settings input object.",
      "type": {
       "name": "AgentApplicationBrowserSettingsInput",
       "kind": "INPUT_OBJECT"
      }
     }
    ]
   },
   {
    "name": "agentApplicationCreateMobile",
    "description": "Create a new mobile application.",
    "type": {
     "name": "AgentApplicationCreateMobileResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The application's account ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "name",
      "description": "The application's name..",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "agentApplicationDelete",
    "description": "Deletes a browser, mobile, or APM application. This isn't allowed if an application is actively reporting data.",
    "type": {
     "name": "AgentApplicationDeleteResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "guid",
      "description": "An application's GUID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "agentApplicationEnableApmBrowser",
    "description": "Enable browser monitoring for an application monitored by APM. For information about specific APM agents, [see our docs](https://docs.newrelic.com/docs/browser/browser-monitoring/installation/install-browser-monitoring-agent/#agent-instrumentation)",
    "type": {
     "name": "AgentApplicationEnableBrowserResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "guid",
      "description": "The affected entity's GUID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "settings",
      "description": "Browsers settings input object.",
      "type": {
       "name": "AgentApplicationBrowserSettingsInput",
       "kind": "INPUT_OBJECT"
      }
     }
    ]
   },
   {
    "name": "agentApplicationSegmentsReplaceAllBrowserSegmentAllowList",
    "description": "Replaces the entity's allow list with the provided segments.",
    "type": {
     "name": "AgentApplicationSegmentsBrowserSegmentAllowListResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "allowList",
      "description": "The list of url segments to replace the current allow list with. The list cannot be Empty.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AgentApplicationSegmentsBrowserSegmentAllowListInput",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "entityGuid",
      "description": "The NR1 entity guid",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "agentApplicationSettingsUpdate",
    "description": "Update configuration for APM applications. Includes thresholds for how often to record Transaction traces, SQL traces, enabling Distributed traces, ignoring certain error classes. This is the main mutation that powers the Application \u003e Settings page in APM.",
    "type": {
     "name": "AgentApplicationSettingsUpdateResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "guid",
      "description": "The GUID for the affected entity.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "settings",
      "description": "Input data about the entities you want to update and the settings to use. Any unspecified fields will retain their original values.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AgentApplicationSettingsUpdateInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "agentTracesDeleteErrorTrace",
    "description": "Deletes an existing error trace returning a collection of errors if any",
    "type": {
     "name": "AgentTracesTraceMutationResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "guid",
      "description": "GUID of the entity that holds the error trace to be deleted.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "id",
      "description": "ID of the trace to be deleted",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "agentTracesDeleteErrorTraces",
    "description": "Deletes all existing Error traces for the provided realAgentsIds returning a collection of errors if any",
    "type": {
     "name": "AgentTracesTraceMutationResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "guid",
      "description": "GUID of the entity that holds the error traces to be deleted.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "realAgentIds",
      "description": "ID of the real agents that hold the error traces to be deleted",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     }
    ]
   },
   {
    "name": "agentTracesDeleteSqlTrace",
    "description": "Deletes an existing SQL trace returning a collection of errors if any",
    "type": {
     "name": "AgentTracesTraceMutationResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "guid",
      "description": "GUID of the entity that holds the SQL trace to be deleted.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "id",
      "description": "ID of the trace to be deleted",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "agentTracesDeleteSqlTraces",
    "description": "Deletes all existing SQL traces for the provided realAgentsIds returning a collection of errors if any",
    "type": {
     "name": "AgentTracesTraceMutationResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "guid",
      "description": "GUID of the entity that holds the SQL traces to be deleted.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "realAgentIds",
      "description": "ID of the real agents that hold the SQL traces to be deleted",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     }
    ]
   },
   {
    "name": "agentTracesDeleteTransactionTrace",
    "description": "Deletes an existing Transaction trace returning a collection of errors if any",
    "type": {
     "name": "AgentTracesTraceMutationResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "guid",
      "description": "GUID of the entity that holds the transaction trace to be deleted.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "id",
      "description": "ID of the trace to be deleted",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "agentTracesDeleteTransactionTraces",
    "description": "Deletes all existing Transaction traces for the provided realAgentsIds returning a collection of errors if any",
    "type": {
     "name": "AgentTracesTraceMutationResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "guid",
      "description": "GUID of the entity that holds the transaction traces to be deleted.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "realAgentIds",
      "description": "ID of the real agents that hold the transaction traces to be deleted",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     }
    ]
   },
   {
    "name": "aiConnectAddEnrichers",
    "description": "Create Enrichers and attach them to a given Workflow, returns the entire Workflow",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "AiConnectWorkflowResponse",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "The account this Enricher belongs to",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "enrichers",
      "description": "The Enrichers that will be added to the Workflow",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AiConnectEnrichers",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "workflowId",
      "description": "The Workflow Id the new Enrichers will be attached to",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "aiConnectAddNotifier",
    "description": "Create a new Notifier and attach it to a given Workflow",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "AiConnectWorkflowResponse",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "The account this Notifier belongs to",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "notifiers",
      "description": "The Notifiers that will be added to the Workflow",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AiConnectNotifiers",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "workflowId",
      "description": "The Workflow Id the new Enrichers will be attached to",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "aiConnectCreateWorkflow",
    "description": "Creates a new Connect Workflow",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "AiConnectWorkflowResponse",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "The account this Workflow belongs to",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "workflow",
      "description": "WorkflowInput object",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AiConnectWorkflowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "aiConnectDeleteEnricher",
    "description": "Delete an Enricher from the system",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "AiConnectDeleteResponse",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "The account this entity belongs to",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "entityId",
      "description": "Entity that will be deleted",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "aiConnectDeleteNotifier",
    "description": "Delete a Notifier from the system",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "AiConnectDeleteResponse",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "The account this entity belongs to",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "entityId",
      "description": "Entity that will be deleted",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "aiConnectDeleteWorkflow",
    "description": "Delete a Workflow and all its entities from the system",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "AiConnectDeleteResponse",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "The account this Workflow belongs to",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "workflowId",
      "description": "Workflow that will be deleted",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "aiConnectEditEnricher",
    "description": "Edit an Enricher, return the successfully updated Enrichers and/or errors",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "AiConnectResponse",
      "kind": "INTERFACE"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "The account this Enricher belongs to",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "enricher",
      "description": "Enricher update",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AiConnectEnrichersUpdate",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "aiConnectEditNotifier",
    "description": "Edit a Notifier by Id, return the successfully updated Notifiers and/or errors",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "AiConnectResponse",
      "kind": "INTERFACE"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "The account this Notifier belongs to",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "notifier",
      "description": "Notifier update",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AiConnectNotifiersUpdate",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "aiConnectEditWorkflow",
    "description": "Update a Workflow by Id - change name, policies or status",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "AiConnectWorkflowResponse",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "The account this Workflow belongs to",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "workflowUpdate",
      "description": "The desired Workflow to be updated and all relevant parameters that will be changed",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AiConnectWorkflowUpdate",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "aiConnectTestNotifier",
    "description": "Test a single Notifier",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "AiConnectNotifierTestResponse",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "The account the tested Notifier belongs to",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "notifier",
      "description": "Notifier configuration to be tested",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AiConnectNotifierTestInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "aiConnectTestNotifierById",
    "description": "Test a single Notifier after it was saved",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "AiConnectNotifierTestResponse",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "The account this Workflow belongs to",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "notifierId",
      "description": "The ID of the Notifier to be tested",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "aiConnectTestWorkflow",
    "description": "Test a complete Workflow before saving it",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "AiConnectWorkflowTestResponse",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "The account this Workflow belongs to",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "workflow",
      "description": "The Workflow configuration to be tested",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AiConnectWorkflowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "aiConnectTestWorkflowById",
    "description": "Test a complete workflow after it was saved, only test active components (enrichers/notifiers)",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "AiConnectWorkflowTestResponse",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "The account this Workflow belongs to",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "workflowId",
      "description": "The ID of the Workflow to be tested",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "aiDecisionsAcceptSuggestion",
    "description": "Accept and deploy an existing suggested rule.",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "AiDecisionsRule",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "suggestionId",
      "description": "Suggestion ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "aiDecisionsCreateImplicitRule",
    "description": "Create and deploy a new implicit rule.",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "AiDecisionsRule",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "rule",
      "description": "Rule blueprint to be created.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AiDecisionsRuleBlueprint",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "aiDecisionsCreateRule",
    "description": "Create and deploy a new rule.",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "AiDecisionsRule",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "rule",
      "description": "Rule blueprint to be created.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AiDecisionsRuleBlueprint",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "aiDecisionsCreateSuggestion",
    "description": "Create a new suggested rule.",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "AiDecisionsSuggestion",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "suggestion",
      "description": "Suggestion blueprint to be created.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AiDecisionsSuggestionBlueprint",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "aiDecisionsDeclineSuggestion",
    "description": "Decline an existing suggested rule.",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "AiDecisionsOperationResult",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "suggestionId",
      "description": "Suggestion ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "aiDecisionsDeleteMergeFeedback",
    "description": "Delete existing feedback for a merge.",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "AiDecisionsOperationResult",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "childIssueId",
      "description": "Child issue ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "parentIssueId",
      "description": "Parent issue ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "ruleId",
      "description": "Rule ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "aiDecisionsDeleteRule",
    "description": "Delete an existing rule.",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "AiDecisionsOperationResult",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "ruleId",
      "description": "Rule ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "aiDecisionsDeleteSuggestion",
    "description": "Delete an existing suggested rule.",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "AiDecisionsOperationResult",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "suggestionId",
      "description": "Suggestion ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "aiDecisionsDisableRule",
    "description": "Disable an existing enabled rule.",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "AiDecisionsOperationResult",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "ruleId",
      "description": "Rule ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "aiDecisionsEnableRule",
    "description": "Enable an existing disabled rule.",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "AiDecisionsOperationResult",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "ruleId",
      "description": "Rule ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "aiDecisionsFindApplicableIncidents",
    "description": "Create a search operation to fetch applicable incidents for a rule expression",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "AiDecisionsApplicableIncidentSearch",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "search",
      "description": "Search operation blueprint to be created.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AiDecisionsSearchBlueprint",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "aiDecisionsPostponeSuggestion",
    "description": "Postpone an existing suggested rule.",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "AiDecisionsRule",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "suggestionId",
      "description": "Suggestion ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "aiDecisionsRecordMergeFeedback",
    "description": "Record feedback for a merge",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "AiDecisionsMergeFeedback",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "childIssueId",
      "description": "Child issue ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "opinion",
      "description": "Opinion type.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AiDecisionsOpinion",
        "kind": "ENUM"
       }
      }
     },
     {
      "name": "parentIssueId",
      "description": "Parent issue ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "ruleId",
      "description": "Rule ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "aiDecisionsSimulate",
    "description": "Create an arbitrary expression simulation.",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "AiDecisionsSimulation",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "simulation",
      "description": "Simulation blueprint to be created.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AiDecisionsSimulationBlueprint",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "aiDecisionsUpdateImplicitRule",
    "description": "Update an existing implicit rule.",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "AiDecisionsRule",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "rule",
      "description": "Rule blueprint to be created.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AiDecisionsRuleBlueprint",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "ruleId",
      "description": "Rule ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "aiDecisionsUpdateRule",
    "description": "Update an existing rule.",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "AiDecisionsRule",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "rule",
      "description": "Rule blueprint to be created.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AiDecisionsRuleBlueprint",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "ruleId",
      "description": "Rule ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "aiIssuesAckIssue",
    "description": "Acknowledge issue",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "AiIssuesIssueUserActionResponse",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "account id",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "issueId",
      "description": "issue id",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "aiIssuesCloseIncident",
    "description": "Close incident",
    "type": {
     "name": "AiIssuesIncidentUserActionResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "account id",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "incidentId",
      "description": "Incident id",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "aiIssuesResolveIssue",
    "description": "Resolve issue",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "AiIssuesIssueUserActionResponse",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "account id",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "issueId",
      "description": "issue id",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "aiIssuesUnackIssue",
    "description": "Unacknowledge issue",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "AiIssuesIssueUserActionResponse",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "account id",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "issueId",
      "description": "issue id",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "aiIssuesUpdateGracePeriod",
    "description": "Set interval between issue being created and being activated (and user being notified)",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "AiIssuesConfigurationOverrideResponse",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account id",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "gracePeriod",
      "description": "Grace period configuration",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AiIssuesGracePeriodConfigurationInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "aiIssuesUpdateIssueTtl",
    "description": "Update issue TTL",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "AiIssuesConfigurationOverrideResponse",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account id",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "issueTtl",
      "description": "Issue TTL",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Seconds",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "aiNotificationsCreateChannel",
    "description": "Create a Channel",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "AiNotificationsChannelResponse",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account Id",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "channel",
      "description": "Channel object",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AiNotificationsChannelInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "aiNotificationsCreateDestination",
    "description": "Create a Destination",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "AiNotificationsDestinationResponse",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account Id",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "destination",
      "description": "Destination object",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AiNotificationsDestinationInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "aiNotificationsDeleteChannel",
    "description": "Delete a Channel",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "AiNotificationsDeleteResponse",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account Id",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "channelId",
      "description": "Id of the deleted channel",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "aiNotificationsDeleteDestination",
    "description": "Delete a Destination",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "AiNotificationsDeleteResponse",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account Id",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "destinationId",
      "description": "Id of the deleted destination",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "aiNotificationsMergeDestinations",
    "description": "Merge several destinations together",
    "type": {
     "name": "AiNotificationsMergeDestinationsResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account Id",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "mergeGroups",
      "description": "Groups of destinations to merge",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "AiNotificationsMergeGroup",
          "kind": "INPUT_OBJECT"
         }
        }
       }
      }
     }
    ]
   },
   {
    "name": "aiNotificationsTestChannel",
    "description": "Test notifications",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "AiNotificationsChannelTestResponse",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account Id",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "channel",
      "description": "Channel to test notification for",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AiNotificationsChannelInput",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "variables",
      "description": "Dynamic variables",
      "type": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiNotificationsDynamicVariable",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     }
    ]
   },
   {
    "name": "aiNotificationsTestChannelById",
    "description": "Test channel by channelId",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "AiNotificationsChannelTestResponse",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account Id",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "channelId",
      "description": "Channel ID to test notification for",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "variables",
      "description": "Dynamic variables",
      "type": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiNotificationsDynamicVariable",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     }
    ]
   },
   {
    "name": "aiNotificationsTestDestination",
    "description": "Test connection",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "AiNotificationsDestinationTestResponse",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account Id",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "destination",
      "description": "Destination to test connection for",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AiNotificationsDestinationInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "aiNotificationsTestDestinationById",
    "description": "Test connection by destination id",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "AiNotificationsDestinationTestResponse",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account Id",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "destinationId",
      "description": "Destination ID to test",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "update",
      "description": "Update that will override existing properties",
      "type": {
       "name": "AiNotificationsDestinationUpdate",
       "kind": "INPUT_OBJECT"
      }
     }
    ]
   },
   {
    "name": "aiNotificationsUpdateChannel",
    "description": "Update a Channel",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "AiNotificationsChannelResponse",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account Id",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "channel",
      "description": "Channel object",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AiNotificationsChannelUpdate",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "channelId",
      "description": "Channel to update",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "aiNotificationsUpdateDestination",
    "description": "Update a Destination",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "AiNotificationsDestinationResponse",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account Id",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "destination",
      "description": "Update Destination fields",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AiNotificationsDestinationUpdate",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "destinationId",
      "description": "Destination to update",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "aiOpsAddIncidentIntelligenceDestinationToConfigs",
    "description": "Add an Incident Intelligence destination to all of the provided configurations",
    "type": {
     "name": "AiOpsProactiveDetectionConfigMutationResults",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "destination",
      "description": "The Incident Intelligence destination.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AiOpsIncidentIntelligenceDestinationInput",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "ids",
      "description": "The list of Proactive Detection configuration ids to which the destination will be added.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "ID",
          "kind": "SCALAR"
         }
        }
       }
      }
     }
    ]
   },
   {
    "name": "aiOpsArchiveProactiveDetectionConfig",
    "description": "Archive a Proactive Detection configuration.\nThese allow users to stop receiving events for the configured entities.",
    "type": {
     "name": "AiOpsProactiveDetectionConfigMutationResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "id",
      "description": "The Proactive Detection config id.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "aiOpsClearUserMessage",
    "description": "Clear a user message view",
    "type": {
     "name": "AiOpsUserMessageResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "userMessageId",
      "description": "The ID of the User Message view to clear",
      "type": {
       "name": "AiOpsUserMessageId",
       "kind": "ENUM"
      }
     }
    ]
   },
   {
    "name": "aiOpsCloseAnomaly",
    "description": "Closes an anomaly",
    "type": {
     "name": "AiOpsAnomalyCloseResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "id",
      "description": "Anomaly ID",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "aiOpsCreateAnomalyComment",
    "description": "Creates a comment for an anomaly",
    "type": {
     "name": "AiOpsCommentsResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "anomalyId",
      "description": "Anomaly ID",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "text",
      "description": "Comment text",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "aiOpsCreateDraftProactiveDetectionConfig",
    "description": "Draft a Proactive Detection configuration.\nDrafts allow users to store temporary changes to a config.\nDrafts will be ignored whenever events are detected.",
    "type": {
     "name": "AiOpsProactiveDetectionConfigMutationResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "config",
      "description": "The Proactive Detection configuration.",
      "type": {
       "name": "AiOpsProactiveDetectionConfigInput",
       "kind": "INPUT_OBJECT"
      }
     },
     {
      "name": "id",
      "description": "The Proactive Detection config id.",
      "type": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    ]
   },
   {
    "name": "aiOpsCreateIncidentComment",
    "description": "Creates a comment for an incident",
    "type": {
     "name": "AiOpsCommentsResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "incidentId",
      "description": "Incident ID",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "text",
      "description": "Comment text",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "aiOpsCreateProactiveDetectionConfig",
    "description": "Create a Proactive Detection configuration.\nThese allow users to subscribe to events detected by the AiOps platform.",
    "type": {
     "name": "AiOpsProactiveDetectionConfigMutationResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "config",
      "description": "The Proactive Detection configuration.",
      "type": {
       "name": "AiOpsProactiveDetectionConfigInput",
       "kind": "INPUT_OBJECT"
      }
     }
    ]
   },
   {
    "name": "aiOpsDeleteComment",
    "description": "Deletes a comment",
    "type": {
     "name": "AiOpsCommentDeleteResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "id",
      "description": "Comment ID",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "aiOpsPreviewWebhook",
    "description": "Preview the request that will be sent when the webhook is called",
    "type": {
     "name": "AiOpsWebhookPreviewResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "webhook",
      "description": "The webhook that you would like to preview.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AiOpsWebhookInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "aiOpsRemoveIncidentIntelligenceDestinationFromConfigs",
    "description": "Remove an Incident Intelligence destination to all of the provided configurations",
    "type": {
     "name": "AiOpsProactiveDetectionConfigMutationResults",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "destination",
      "description": "The Incident Intelligence destination.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AiOpsIncidentIntelligenceDestinationInput",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "ids",
      "description": "The list of Proactive Detection configurations to which the destination will be added.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "ID",
          "kind": "SCALAR"
         }
        }
       }
      }
     }
    ]
   },
   {
    "name": "aiOpsStoreTrainingSession",
    "description": "Stores a training session for an entity guid",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "AiOpsStoreTrainingSessionResult",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account Id",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "anomalyId",
      "description": "Anomaly Id",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "feedback",
      "description": "Feedback Normal or Anomaly",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AiOpsFeedbackLabel",
        "kind": "ENUM"
       }
      }
     }
    ]
   },
   {
    "name": "aiOpsTestWebhook",
    "description": "Send a test notification to the webhook",
    "type": {
     "name": "AiOpsWebhookTestResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "webhook",
      "description": "The webhook that will receive the test message.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AiOpsWebhookInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "aiOpsUpdateProactiveDetectionConfig",
    "description": "Update a Proactive Detection configuration.\nThese allow users to change the slack channels or entities associated with a real time failure warning.",
    "type": {
     "name": "AiOpsProactiveDetectionConfigMutationResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "config",
      "description": "The Proactive Detection configuration.",
      "type": {
       "name": "AiOpsProactiveDetectionConfigInput",
       "kind": "INPUT_OBJECT"
      }
     },
     {
      "name": "id",
      "description": "The Proactive Detection config id.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "aiOpsViewUserMessage",
    "description": "Tracks when a user has acknowledged viewing a particular User Message",
    "type": {
     "name": "AiOpsUserMessageResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "userMessageId",
      "description": "The ID of the User Message which the user is acknowledging they've viewed",
      "type": {
       "name": "AiOpsUserMessageId",
       "kind": "ENUM"
      }
     }
    ]
   },
   {
    "name": "aiPostmortemCreatePostmortem",
    "description": "Create a postmortem piece.",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "postmortem",
      "description": "Postmortem blueprint to be created or updated.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AiPostmortemPostmortemBlueprint",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "aiPostmortemDeletePostmortem",
    "description": "Delete a postmortem piece.",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "AiPostmortemOperationResult",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "postmortemId",
      "description": "Postmortem ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "aiPostmortemUpdatePostmortem",
    "description": "Update a postmortem piece.",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "postmortem",
      "description": "Postmortem blueprint to be created or updated.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AiPostmortemPostmortemBlueprint",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "postmortemId",
      "description": "Postmortem ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "aiTopologyCollectorCreateEdges",
    "description": "Create a list of new edges.",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "AiTopologyCollectorOperationResult",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "edges",
      "description": "List of edge blueprints to be created.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "AiTopologyCollectorEdgeBlueprint",
          "kind": "INPUT_OBJECT"
         }
        }
       }
      }
     }
    ]
   },
   {
    "name": "aiTopologyCollectorCreateVertices",
    "description": "Create a list of new vertices.",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "AiTopologyCollectorOperationResult",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "vertices",
      "description": "List of vertex blueprints to be created.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "AiTopologyCollectorVertexBlueprint",
          "kind": "INPUT_OBJECT"
         }
        }
       }
      }
     }
    ]
   },
   {
    "name": "aiTopologyCollectorDeleteEdges",
    "description": "Delete an existing list of edges.",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "AiTopologyCollectorOperationResult",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "edgeIds",
      "description": "List of edge IDs.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "ID",
          "kind": "SCALAR"
         }
        }
       }
      }
     }
    ]
   },
   {
    "name": "aiTopologyCollectorDeleteVertices",
    "description": "Delete an existing list of vertices.",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "AiTopologyCollectorOperationResult",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "vertexNames",
      "description": "List of vertex names.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "ID",
          "kind": "SCALAR"
         }
        }
       }
      }
     }
    ]
   },
   {
    "name": "aiWorkflowsCreateWorkflow",
    "description": "Create a new Workflow with issues filter, enrichments and destinations",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "AiWorkflowsCreateWorkflowResponse",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "Workflow's account id",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "createWorkflowData",
      "description": "Create Workflow input object",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AiWorkflowsCreateWorkflowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "aiWorkflowsDeleteWorkflow",
    "description": "Delete a workflow and all it's sub entities: filter, enrichments and destinations",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "AiWorkflowsDeleteWorkflowResponse",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "Workflow's account id",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "deleteChannels",
      "description": "If true, workflow channel will be deleted along with the workflow",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Boolean",
        "kind": "SCALAR"
       }
      },
      "defaultValue": "true"
     },
     {
      "name": "id",
      "description": "Workflow's id for deletion",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "aiWorkflowsTestWorkflow",
    "description": "test a workflow and all it's sub entities: filter, enrichments and destinations",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "AiWorkflowsTestWorkflowResponse",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "Workflow's account id",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "testWorkflowData",
      "description": "Test Workflow input object",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AiWorkflowsTestWorkflowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "aiWorkflowsUpdateWorkflow",
    "description": "Update Workflow with issues filter, enrichments and destinations",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "AiWorkflowsUpdateWorkflowResponse",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "Workflow's account id",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "deleteUnusedChannels",
      "description": "If true, the channels that are no longer used by the update workflow will be deleted",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Boolean",
        "kind": "SCALAR"
       }
      },
      "defaultValue": "true"
     },
     {
      "name": "updateWorkflowData",
      "description": "Update Workflow input object",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AiWorkflowsUpdateWorkflowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "alertsConditionDelete",
    "description": "Delete an Alerts condition.",
    "type": {
     "name": "AlertsConditionDeleteResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "id",
      "description": "Alerts condition ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "alertsConditionUpdateEnabled",
    "description": "Enable or disable an Alerts condition.",
    "type": {
     "name": "AlertsConditionUpdateEnabledResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "enabled",
      "description": "Alerts condition enabled state.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Boolean",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "id",
      "description": "Condition ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "alertsMutingRuleCreate",
    "description": "Create a muting rule for New Relic Alerts violations.",
    "type": {
     "name": "AlertsMutingRule",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "rule",
      "description": "Input settings for the muting rule.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AlertsMutingRuleInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "alertsMutingRuleDelete",
    "description": "Delete a muting rule for New Relic Alerts violations.",
    "type": {
     "name": "AlertsMutingRuleDeleteResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "id",
      "description": "Muting rule.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "alertsMutingRuleUpdate",
    "description": "Update a muting rule for New Relic Alerts violations.",
    "type": {
     "name": "AlertsMutingRule",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "id",
      "description": "Muting rule ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "rule",
      "description": "The input options for updating a muting rule.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AlertsMutingRuleUpdateInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "alertsNotificationChannelCreate",
    "description": "Creates a notification channel",
    "type": {
     "name": "AlertsNotificationChannelCreateResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "notificationChannel",
      "description": "Notification channel to create.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AlertsNotificationChannelCreateConfiguration",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "alertsNotificationChannelDelete",
    "description": "Deletes a notification channel",
    "type": {
     "name": "AlertsNotificationChannelDeleteResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "id",
      "description": "Notification channel ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "alertsNotificationChannelUpdate",
    "description": "Updates an existing notification channel",
    "type": {
     "name": "AlertsNotificationChannelUpdateResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "id",
      "description": "Notification channel ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "notificationChannel",
      "description": "Notification channel fields to update.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AlertsNotificationChannelUpdateConfiguration",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "alertsNotificationChannelsAddToPolicy",
    "description": "Associates notification channels with a policy.",
    "type": {
     "name": "AlertsNotificationChannelsAddToPolicyResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "notificationChannelIds",
      "description": "Notification channel IDs.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "ID",
          "kind": "SCALAR"
         }
        }
       }
      }
     },
     {
      "name": "policyId",
      "description": "Policy ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "alertsNotificationChannelsRemoveFromPolicy",
    "description": "Dissociates notification channels from a policy.",
    "type": {
     "name": "AlertsNotificationChannelsRemoveFromPolicyResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "notificationChannelIds",
      "description": "Notification channel IDs.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "ID",
          "kind": "SCALAR"
         }
        }
       }
      }
     },
     {
      "name": "policyId",
      "description": "Policy ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "alertsNrqlConditionBaselineCreate",
    "description": "Create a baseline NRQL condition.",
    "type": {
     "name": "AlertsNrqlBaselineCondition",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "condition",
      "description": "Input settings for the baseline NRQL condition.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AlertsNrqlConditionBaselineInput",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "policyId",
      "description": "Policy ID for the condition.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "alertsNrqlConditionBaselineUpdate",
    "description": "Update a baseline NRQL condition.",
    "type": {
     "name": "AlertsNrqlBaselineCondition",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "condition",
      "description": "Input settings for the baseline NRQL condition.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AlertsNrqlConditionUpdateBaselineInput",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "id",
      "description": "Alerts condition ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "alertsNrqlConditionOutlierCreate",
    "description": "Create an outlier NRQL condition.",
    "type": {
     "name": "AlertsNrqlOutlierCondition",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "condition",
      "description": "Input settings for the outlier NRQL condition.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AlertsNrqlConditionOutlierInput",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "policyId",
      "description": "Policy ID for the condition.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "alertsNrqlConditionOutlierUpdate",
    "description": "Update an outlier NRQL condition.",
    "type": {
     "name": "AlertsNrqlOutlierCondition",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "condition",
      "description": "Input settings for the outlier NRQL condition.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AlertsNrqlConditionUpdateOutlierInput",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "id",
      "description": "Alerts condition ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "alertsNrqlConditionStaticCreate",
    "description": "Create a static NRQL condition.",
    "type": {
     "name": "AlertsNrqlStaticCondition",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "condition",
      "description": "Input settings for the static NRQL condition.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AlertsNrqlConditionStaticInput",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "policyId",
      "description": "Policy ID for the condition.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "alertsNrqlConditionStaticUpdate",
    "description": "Update a static NRQL condition.",
    "type": {
     "name": "AlertsNrqlStaticCondition",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "condition",
      "description": "Input settings for the static NRQL condition.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AlertsNrqlConditionUpdateStaticInput",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "id",
      "description": "Alerts condition ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "alertsPolicyCreate",
    "description": "Create an Alerts policy.",
    "type": {
     "name": "AlertsPolicy",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "policy",
      "description": "Policy to be created.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AlertsPolicyInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "alertsPolicyDelete",
    "description": "Delete an Alerts policy. This archives all conditions associated to the policy.",
    "type": {
     "name": "AlertsPolicyDeleteResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "id",
      "description": "Policy ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "alertsPolicyUpdate",
    "description": "Update an Alerts policy.",
    "type": {
     "name": "AlertsPolicy",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "id",
      "description": "Policy ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "policy",
      "description": "Fields on the policy to be updated.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AlertsPolicyUpdateInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "alertsUpdateCrossAccountElection",
    "description": "Update the cross-account election status for the specified account.",
    "type": {
     "name": "AlertsCrossAccountElectionStatus",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "electionStatus",
      "description": "The new election status for the account.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Boolean",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "anomalyDetectorConfigurationsAnomalyDetectorDelete",
    "description": "Delete an anomaly detector.",
    "type": {
     "name": "AnomalyDetectorConfigurationsAnomalyDetectorDeleteResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "anomalyDetectorId",
      "description": "A unique identifier to distinguish the anomaly detector being deleted.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "anomalyDetectorConfigurationsEntityTypeAnomalyDetectorCreate",
    "description": "Create an anomaly detector scoped to an entity type. An anomaly detector is a set of data checked for anomalies at a regular interval.",
    "type": {
     "name": "AnomalyDetectorConfigurationsEntityTypeAnomalyDetectorCreateResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "An account to record anomalies in.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "anomalyDetector",
      "description": "An object representing configuration settings for detecting anomalies on the entities within a single entity type. The settings configure what qualifies as anomalous, how much anomalous data to record, and where to record anomalous data.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AnomalyDetectorConfigurationsCreateEntityTypeAnomalyDetectorInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "anomalyDetectorConfigurationsEntityTypeAnomalyDetectorUpdate",
    "description": "Update an anomaly detector scoped to an entity type.",
    "type": {
     "name": "AnomalyDetectorConfigurationsEntityTypeAnomalyDetectorUpdateResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "anomalyDetector",
      "description": "An object representing entity type detector configuration setting changes.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AnomalyDetectorConfigurationsUpdateEntityTypeAnomalyDetectorInput",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "anomalyDetectorId",
      "description": "A unique identifier to distinguish the anomaly detector being updated.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "anomalyDetectorConfigurationsNrqlAnomalyDetectorCreate",
    "description": "Create an anomaly detector scoped to custom NRQL results. An anomaly detector is a set of data checked for anomalies at a regular interval.",
    "type": {
     "name": "AnomalyDetectorConfigurationsNrqlAnomalyDetectorCreateResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "An account to record anomalies in. This may be different from the accounts being queried.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "anomalyDetector",
      "description": "An object representing configuration settings for detecting anomalies on the results of one or more NRQL queries. The settings configure what qualifies as anomalous, how much anomalous data to record, and where to record anomalous data.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AnomalyDetectorConfigurationsCreateNrqlAnomalyDetectorInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "anomalyDetectorConfigurationsNrqlAnomalyDetectorUpdate",
    "description": "Update an anomaly detector scoped to custom nrql results.",
    "type": {
     "name": "AnomalyDetectorConfigurationsNrqlAnomalyDetectorUpdateResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "An account to record anomalies in. This may be different from the accounts being queried.",
      "type": {
       "name": "Int",
       "kind": "SCALAR"
      }
     },
     {
      "name": "anomalyDetector",
      "description": "An object representing a NRQL detector configuration setting changes.",
      "type": {
       "name": "AnomalyDetectorConfigurationsUpdateNrqlAnomalyDetectorInput",
       "kind": "INPUT_OBJECT"
      }
     },
     {
      "name": "anomalyDetectorId",
      "description": "A unique identifier to distinguish the anomaly detector being updated.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "anomalyDetectorConfigurationsUpdateStatus",
    "description": "Change the status of any type of anomaly detector.",
    "type": {
     "name": "AnomalyDetectorConfigurationsStatusUpdateResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "anomalyDetectorId",
      "description": "A unique identifier to distinguish the anomaly detector being updated.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "status",
      "description": "A status representing whether the detector is actively processing anomalies.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AnomalyDetectorConfigurationsAnomalyDetectorStatus",
        "kind": "ENUM"
       }
      }
     }
    ]
   },
   {
    "name": "anomalyDetectorConfigurationsValidateNrqlSignal",
    "description": "Verify a NRQL query is valid for use in an anomaly detector. Anomaly detection does not support all valid NRQL features.",
    "type": {
     "name": "AnomalyDetectorConfigurationsNrqlValidatorResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "An account in which the NRQL query should be run.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "nrql",
      "description": "A NRQL query.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Nrql",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "anomalyDetectorConfigurationsWorkloadAnomalyDetectorCreate",
    "description": "Create an anomaly detector scoped to entities in a workload. An anomaly detector is a set of data checked for anomalies at a regular interval.",
    "type": {
     "name": "AnomalyDetectorConfigurationsWorkloadAnomalyDetectorCreateResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "anomalyDetector",
      "description": "An object representing configuration settings for detecting anomalies on the entities within a workload. The settings configure what qualifies as anomalous, how much anomalous data to record, and where to record anomalous data.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AnomalyDetectorConfigurationsCreateWorkloadAnomalyDetectorInput",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "workloadGuid",
      "description": "A workload guid representing a set of entities as the dataset for this anomaly detector.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "anomalyDetectorConfigurationsWorkloadAnomalyDetectorUpdate",
    "description": "Update an anomaly detector scoped to entities in a workload.",
    "type": {
     "name": "AnomalyDetectorConfigurationsWorkloadAnomalyDetectorUpdateResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "anomalyDetector",
      "description": "An object representing workload detector configuration setting changes.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AnomalyDetectorConfigurationsUpdateWorkloadAnomalyDetectorInput",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "anomalyDetectorId",
      "description": "A unique identifier to distinguish the anomaly detector being updated.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "apiAccessCreateKeys",
    "description": "Create keys. You can create keys for multiple accounts at once. You can read more about managing keys on [this documentation page](https://docs.newrelic.com/docs/apis/nerdgraph/examples/use-nerdgraph-manage-license-keys-personal-api-keys).",
    "type": {
     "name": "ApiAccessCreateKeyResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "keys",
      "description": "A list of the configurations for each key you want to create.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ApiAccessCreateInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "apiAccessDeleteKeys",
    "description": "A mutation to delete keys.",
    "type": {
     "name": "ApiAccessDeleteKeyResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "keys",
      "description": "A list of each key `id` that you want to delete. You can read more about managing keys on [this documentation page](https://docs.newrelic.com/docs/apis/nerdgraph/examples/use-nerdgraph-manage-license-keys-personal-api-keys).",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ApiAccessDeleteInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "apiAccessUpdateKeys",
    "description": "Update keys. You can update keys for multiple accounts at once. You can read more about managing keys on [this documentation page](https://docs.newrelic.com/docs/apis/nerdgraph/examples/use-nerdgraph-manage-license-keys-personal-api-keys).",
    "type": {
     "name": "ApiAccessUpdateKeyResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "keys",
      "description": "The configurations of each key you want to update.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ApiAccessUpdateInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "apmApplicationEntityChangeSettings",
    "description": "Change the settings of an ApmApplicationEntity.",
    "type": {
     "name": "ApmApplicationEntitySettingsResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "guid",
      "description": "The guid of the ApmApplicationEntity to update.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "settings",
      "description": "The desired settings of the ApmApplicationEntity.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ApmApplicationEntitySettings",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "authorizationManagementGrantAccess",
    "description": "Grant access for a group",
    "type": {
     "name": "AuthorizationManagementGrantAccessPayload",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "grantAccessOptions",
      "description": "The object representing the group and the access to add",
      "type": {
       "name": "AuthorizationManagementGrantAccess",
       "kind": "INPUT_OBJECT"
      }
     }
    ]
   },
   {
    "name": "authorizationManagementRevokeAccess",
    "description": "Revoke access for a group",
    "type": {
     "name": "AuthorizationManagementRevokeAccessPayload",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "revokeAccessOptions",
      "description": "The object representing the group and the access to remove",
      "type": {
       "name": "AuthorizationManagementRevokeAccess",
       "kind": "INPUT_OBJECT"
      }
     }
    ]
   },
   {
    "name": "autoflowsCreateSchedule",
    "description": "Create schedule to run a workflow on a cadence",
    "type": {
     "name": "AutoflowsCreateScheduleResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The account ID this schedule is scoped to",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "cronExpression",
      "description": "A cron expression that describes the desired schedule",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "definition",
      "description": "Scope type, name and version of the workflow definition to create a schedule for",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AutoflowsCreateScheduleDefinitionInput",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "overlapPolicy",
      "description": "Controls what happens if a scheduled run would overlap with an existing run. Defaults to SKIP.",
      "type": {
       "name": "AutoflowsScheduleOverlapPolicy",
       "kind": "ENUM"
      },
      "defaultValue": "SKIP"
     },
     {
      "name": "workflowInputs",
      "description": "Workflow inputs",
      "type": {
       "kind": "LIST",
       "ofType": {
        "name": "AutoflowsWorkflowRunInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "autoflowsCreateWorkflowDefinition",
    "description": "Creates workflow definition",
    "type": {
     "name": "AutoflowsCreateWorkflowDefinitionResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "definition",
      "description": "Input for creating a workflow definition",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AutoflowsCreateWorkflowDefinitionInput",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "scope",
      "description": "The scope for the workflow definition",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AutoflowsScopeInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "autoflowsDeleteSchedule",
    "description": "Delete schedule",
    "type": {
     "name": "AutoflowsDeleteScheduleResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The New Relic account ID that owns the schedule to delete",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "schedule",
      "description": "The ID of the schedule",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AutoflowsDeleteScheduleInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "autoflowsDeleteWorkflowDefinition",
    "description": "Deletes a workflow definition",
    "type": {
     "name": "AutoflowsDeleteWorkflowDefinitionResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "definition",
      "description": "Input for deleting a workflow definition",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AutoflowsDeleteWorkflowDefinitionInput",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "scope",
      "description": "The scope for the workflow definition",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AutoflowsScopeInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "autoflowsStartWorkflowRun",
    "description": "Starts workflow run",
    "type": {
     "name": "AutoflowsStartWorkflowRunResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The account ID this workflow run is scoped to",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "definition",
      "description": "Scope type, name and version of the workflow definition to run",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AutoflowsStartWorkflowRunDefinitionInput",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "workflowInputs",
      "description": "Workflow inputs",
      "type": {
       "kind": "LIST",
       "ofType": {
        "name": "AutoflowsWorkflowRunInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "autoflowsStopWorkflowRun",
    "description": "Stop workflow run",
    "type": {
     "name": "AutoflowsStopWorkflowRunResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The account ID this workflow run is scoped to",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "runId",
      "description": "Unique identifier for the workflow run",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "autoflowsUpdateWorkflowDefinition",
    "description": "Updates workflow definition",
    "type": {
     "name": "AutoflowsUpdateWorkflowDefinitionResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "definition",
      "description": "Input for updating a workflow definition",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AutoflowsUpdateWorkflowDefinitionInput",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "scope",
      "description": "The scope for the workflow definition",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AutoflowsScopeInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "cartographerCollectorCreateEdges",
    "description": "Create a list of new edges.",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "CartographerCollectorOperationResult",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "edges",
      "description": "List of edge blueprints to be created.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "CartographerCollectorEdgeBlueprint",
          "kind": "INPUT_OBJECT"
         }
        }
       }
      }
     }
    ]
   },
   {
    "name": "cartographerCollectorCreateVertices",
    "description": "Create a list of new vertices.",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "CartographerCollectorOperationResult",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "vertices",
      "description": "List of vertex blueprints to be created.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "CartographerCollectorVertexBlueprint",
          "kind": "INPUT_OBJECT"
         }
        }
       }
      }
     }
    ]
   },
   {
    "name": "cartographerCollectorDeleteEdges",
    "description": "Delete an existing list of edges.",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "CartographerCollectorOperationResult",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "edgeIds",
      "description": "List of edge IDs.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "ID",
          "kind": "SCALAR"
         }
        }
       }
      }
     }
    ]
   },
   {
    "name": "cartographerCollectorDeleteVertices",
    "description": "Delete an existing list of vertices.",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "CartographerCollectorOperationResult",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "vertexIds",
      "description": "List of vertex IDs.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "ID",
          "kind": "SCALAR"
         }
        }
       }
      }
     }
    ]
   },
   {
    "name": "changeTrackingCreateChangeTrackingEvent",
    "description": "Creates a new change tracking event in NRDB and its associated marker.",
    "type": {
     "name": "ChangeTrackingChangeTrackingResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "changeTrackingEvent",
      "description": "The data describing the change tracking event.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ChangeTrackingChangeTrackingInput",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "dataHandlingRules",
      "description": "Specify how you would like the API to handle validation failures.\nCurrently, the following validations should be considered:\n- Text fields must be less than 4,096 characters and encoded as UTF-8. By default, they will be trimmed with an UTF-8 ellipses character (…) placed at the end.\n- Failures to update the legacy REST API for APM entities can be used to determine whether the mutation should proceed.",
      "type": {
       "name": "ChangeTrackingDataHandlingRules",
       "kind": "INPUT_OBJECT"
      }
     },
     {
      "name": "entityGuid",
      "description": "The NR entity associated with the event.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "changeTrackingCreateDeployment",
    "description": "Creates a new deployment record in NRDB and its associated deployment marker.",
    "type": {
     "name": "ChangeTrackingDeployment",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "dataHandlingRules",
      "description": "Specify how you would like the API to handle validation failures.\nCurrently, the following validations should be considered:\n- Text fields must be less than 4,096 characters and encoded as UTF-8. By default, they will be trimmed with an UTF-8 ellipses character (…) placed at the end.\n- Failures to update the legacy REST API for APM entities can be used to determine whether the mutation should proceed.",
      "type": {
       "name": "ChangeTrackingDataHandlingRules",
       "kind": "INPUT_OBJECT"
      }
     },
     {
      "name": "deployment",
      "description": "The deployment to create.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ChangeTrackingDeploymentInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "chaosStart",
    "description": "Begin a chaos test with the provided configuration.\n\nWhen this mutation is run by a user, it will affect all queries made by that user\nfor 1 hour, or until the `chaosEnd` mutation is sent. Chaos testing is only available in `staging`.\n\nFor more information visit the [Chaos Testing docs](https://pages.datanerd.us/unified-api/nerdgraph-documentation/platform/chaos_testing/)",
    "type": {
     "name": "String",
     "kind": "SCALAR"
    },
    "args": [
     {
      "name": "configuration",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ChaosConfiguration",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "chaosStop",
    "type": {
     "name": "String",
     "kind": "SCALAR"
    }
   },
   {
    "name": "cloudConfigureIntegration",
    "description": "Create or modify a cloud integration.\n\nFor details and mutation examples visit\n[our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/manage-your-aws-azure-google-cloud-integrations-graphql-api).",
    "type": {
     "name": "CloudConfigureIntegrationPayload",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "Your New Relic account ID",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "integrations",
      "description": "The cloud integrations you want to configure.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "CloudIntegrationsInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "cloudDisableIntegration",
    "description": "Disable a cloud integration. Stops collecting data for the specified integration.\n\nFor details and mutation examples visit\n[our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/manage-your-aws-azure-google-cloud-integrations-graphql-api).",
    "type": {
     "name": "CloudDisableIntegrationPayload",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "Your New Relic account ID",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "integrations",
      "description": "The integrations you want to disable",
      "type": {
       "name": "CloudDisableIntegrationsInput",
       "kind": "INPUT_OBJECT"
      }
     }
    ]
   },
   {
    "name": "cloudGcpServiceAccountAuth",
    "description": "Create the credentials for the auth of the service account, if the credentials are already created just gets it.\nThe return value is an unique guid that is bound to the credentials",
    "type": {
     "name": "CloudGcpServiceAccountAuthPayload",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "Your New Relic account ID",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "cloudLinkAccount",
    "description": "Link a cloud provider account to a New Relic Account.\n\nFor details and mutation examples visit\n[our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/manage-your-aws-azure-google-cloud-integrations-graphql-api).",
    "type": {
     "name": "CloudLinkAccountPayload",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "Your New Relic account ID",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "accounts",
      "description": "The cloud provider account you want to link to your New Relic account.",
      "type": {
       "name": "CloudLinkCloudAccountsInput",
       "kind": "INPUT_OBJECT"
      }
     }
    ]
   },
   {
    "name": "cloudMigrateAwsGovCloudToAssumeRole",
    "description": "Migrate one or more existing AWS GovCloud Accounts to use AssumeRole authentication.\n\nFor details and mutation examples visit\n[our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/manage-your-aws-azure-google-cloud-integrations-graphql-api).",
    "type": {
     "name": "CloudMigrateAwsGovCloudToAssumeRolePayload",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "Your New Relic account ID",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "accounts",
      "description": "One or multiple ARNs for the IAM Role for the different accounts.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "CloudAwsGovCloudMigrateToAssumeroleInput",
          "kind": "INPUT_OBJECT"
         }
        }
       }
      }
     }
    ]
   },
   {
    "name": "cloudRenameAccount",
    "description": "Rename one or more linked cloud provider accounts.\n\nFor details and mutation examples visit\n[our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/manage-your-aws-azure-google-cloud-integrations-graphql-api).",
    "type": {
     "name": "CloudRenameAccountPayload",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "Your New Relic account ID",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "accounts",
      "description": "The cloud provider account you want to rename.",
      "type": {
       "kind": "LIST",
       "ofType": {
        "name": "CloudRenameAccountsInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "cloudUnlinkAccount",
    "description": "Unlink one or more cloud provider accounts.\nStops collecting data for all the associated integrations.\n\nFor details and mutation examples visit\n[our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/manage-your-aws-azure-google-cloud-integrations-graphql-api).",
    "type": {
     "name": "CloudUnlinkAccountPayload",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "Your New Relic account ID",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "accounts",
      "description": "The cloud provider accounts you want to unlink.",
      "type": {
       "kind": "LIST",
       "ofType": {
        "name": "CloudUnlinkAccountsInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "cloudUpdateAccount",
    "description": "Update one or more Cloud Provider accounts to a NewRelic account. Updates each Linked account with the passed parameters.",
    "type": {
     "name": "CloudUpdateAccountPayload",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "Your New Relic account ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "accounts",
      "description": "The desired cloud accounts to be updated.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "CloudUpdateCloudAccountsInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "collaborationCreateCodeMark",
    "description": "Create code mark",
    "type": {
     "name": "CollaborationCodeMark",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "code",
      "description": "The actual code",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "file",
      "description": "File to which this code block applies",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "permalink",
      "description": "The permalink used to jump to this code mark in codestream",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "repo",
      "description": "Path to the repo to which this code block applies",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "sha",
      "description": "The git commit sha the code was at when the code block was captured",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "collaborationCreateComment",
    "description": "Create a new comment on a thread",
    "type": {
     "name": "CollaborationComment",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "assistant",
      "description": "Type of assistant",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "assistantConfig",
      "description": "Configuration for assistant",
      "type": {
       "kind": "LIST",
       "ofType": {
        "name": "CollaborationAssistantConfigInput",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "body",
      "description": "The message of the comment",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "capabilityId",
      "description": "Capability Id at the time of comment creation",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "contextMetadata",
      "description": "Metadata to add to the comment",
      "type": {
       "name": "CollaborationRawContextMetadata",
       "kind": "SCALAR"
      }
     },
     {
      "name": "destinationId",
      "description": "Optional destination Id to send the comment to",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "displayName",
      "description": "Display name at the time of comment creation",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "nRConnectionId",
      "description": "Websocket Connection Id",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "referenceUrl",
      "description": "Reference URL of the comment",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "slackChannelId",
      "description": "Optional Slack Channel Id to send the comment to",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "suppress3rdPartyFileShare",
      "description": "Optional flag if true, do not share files/screenshots/thumbnails via email, slack or other future 3rd parties",
      "type": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     },
     {
      "name": "threadId",
      "description": "Thread ID where the comment will live",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "timePickerFrom",
      "description": "Optional time picker start time",
      "type": {
       "name": "EpochMilliseconds",
       "kind": "SCALAR"
      }
     },
     {
      "name": "timePickerTo",
      "description": "Optional time picker end time",
      "type": {
       "name": "EpochMilliseconds",
       "kind": "SCALAR"
      }
     }
    ]
   },
   {
    "name": "collaborationCreateContext",
    "description": "Create a context",
    "type": {
     "name": "CollaborationContext",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "Optional selected Account ID",
      "type": {
       "name": "Int",
       "kind": "SCALAR"
      }
     },
     {
      "name": "contextMetadata",
      "description": "Metadata to add to context",
      "type": {
       "name": "CollaborationRawContextMetadata",
       "kind": "SCALAR"
      }
     },
     {
      "name": "entityGuid",
      "description": "Optional URL state entity GUID to associate with contexts",
      "type": {
       "name": "EntityGuid",
       "kind": "SCALAR"
      }
     },
     {
      "name": "id",
      "description": "Context ID",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "referenceUrl",
      "description": "Optional URL to supply a link back to context",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    ]
   },
   {
    "name": "collaborationCreateEmail",
    "description": "Create a new email address to mention",
    "type": {
     "name": "CollaborationEmail",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "emailAddress",
      "description": "Email address",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "collaborationCreateExternalServiceConnection",
    "description": "Create an external service connection",
    "type": {
     "name": "CollaborationExternalServiceConnection",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "channelId",
      "description": "Optional 3rd party channel ID",
      "type": {
       "name": "ID",
       "kind": "SCALAR"
      }
     },
     {
      "name": "sessionId",
      "description": "Session ID provided by the notifications gateway when creating the first external message",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "threadId",
      "description": "Thread ID where messages from the external service will be created",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "type",
      "description": "Connection type. One of ['SLACK', 'TEAMS', 'EMAIL']",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "collaborationCreateMention",
    "description": "Create a new mention",
    "type": {
     "name": "CollaborationMention",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "commentId",
      "description": "Comment ID where the item ie mentioned",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "externalApplicationType",
      "description": "The type of external application associated with this mention (e.g.: SLACK)",
      "type": {
       "name": "CollaborationExternalApplicationType",
       "kind": "ENUM"
      }
     },
     {
      "name": "externalCreatorId",
      "description": "The user id of the user mentioning this item",
      "type": {
       "name": "ID",
       "kind": "SCALAR"
      }
     },
     {
      "name": "mentionableItemId",
      "description": "The ID of the item being mentioned",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "type",
      "description": "The type of thing being mentioned",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "collaborationCreateThread",
    "description": "Create a new thread",
    "type": {
     "name": "CollaborationThread",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "contextId",
      "description": "Context ID the thread should associate with",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "contextMetadata",
      "description": "Metadata to add to thread",
      "type": {
       "name": "CollaborationRawContextMetadata",
       "kind": "SCALAR"
      }
     },
     {
      "name": "externalApplicationType",
      "description": "Indicate that thread is linked to a external application type",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "referenceUrl",
      "description": "Reference URL",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "visibility",
      "description": "Indicate a PRIVATE, or CUSTOMER_SERVICE thread",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    ]
   },
   {
    "name": "collaborationDeactivateCodeMark",
    "description": "deactivates code mark",
    "type": {
     "name": "CollaborationCodeMark",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "id",
      "description": "Codemark Id to deactivate",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "collaborationDeactivateComment",
    "description": "Deactivate a comment",
    "type": {
     "name": "CollaborationComment",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "id",
      "description": "Comment ID",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "collaborationDeactivateContext",
    "description": "Deactivate a context",
    "type": {
     "name": "CollaborationContext",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "id",
      "description": "Context ID",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "collaborationDeactivateExternalServiceConnection",
    "description": "Deactivate an external service connection",
    "type": {
     "name": "CollaborationExternalServiceConnection",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "id",
      "description": "ID of the external service connection",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "collaborationDeactivateFile",
    "description": "Deactivate a file",
    "type": {
     "name": "String",
     "kind": "SCALAR"
    },
    "args": [
     {
      "name": "id",
      "description": "File ID",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "collaborationDeactivateMention",
    "description": "Deactivate a mention",
    "type": {
     "name": "CollaborationMention",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "id",
      "description": "Mention ID",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "collaborationDeactivateThread",
    "description": "Deactivate a thread",
    "type": {
     "name": "CollaborationThread",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "id",
      "description": "Thread ID",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "collaborationFeedbackOnBotResponse",
    "description": "Rate a bot reponse",
    "type": {
     "name": "CollaborationBotResponseFeedback",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "content",
      "description": "Optional content of the feedback",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "rating",
      "description": "rating",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "responseId",
      "description": "Bot Response ID",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "collaborationGetUploadUrl",
    "description": "Upload a new file",
    "type": {
     "name": "CollaborationFile",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "fileName",
      "description": "File Name",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "isScreenshot",
      "description": "Is NR Screenshot",
      "type": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    ]
   },
   {
    "name": "collaborationRegisterEmail",
    "description": "Register the current user's email and map it to any mentions",
    "type": {
     "name": "CollaborationEmail",
     "kind": "OBJECT"
    }
   },
   {
    "name": "collaborationSendMessage",
    "description": "Send a message without a thread",
    "type": {
     "name": "CollaborationMessageSent",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account that owns the message",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "body",
      "description": "The content of the message",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "destinationId",
      "description": "Optional destination Id to send the message to",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "emailAddresses",
      "description": "Optional email addresses to send the message to",
      "type": {
       "kind": "LIST",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "referenceUrl",
      "description": "Reference URL of the message",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "sharedToType",
      "description": "message destination type",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "slackChannelId",
      "description": "Optional Slack Channel Id to send the message to",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    ]
   },
   {
    "name": "collaborationSetExternalServiceConnectionChannel",
    "description": "Set the channel of the external service connection",
    "type": {
     "name": "CollaborationExternalServiceConnection",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "channelId",
      "description": "3rd party channel ID",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "id",
      "description": "ID of the external service connection",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "collaborationSocketSubscribe",
    "description": "Subscribe your websocket to one or more subscriptionKeys",
    "type": {
     "name": "String",
     "kind": "SCALAR"
    },
    "args": [
     {
      "name": "nrConnectionId",
      "description": "New Relic Connection ID",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "subscriptionKeys",
      "description": "An array of subscription keys to subscribe to",
      "type": {
       "kind": "LIST",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "collaborationSubscribeToThread",
    "description": "Subscribe to a thread",
    "type": {
     "name": "CollaborationSubscriber",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "threadId",
      "description": "Thread ID",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "userId",
      "description": "User ID",
      "type": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    ]
   },
   {
    "name": "collaborationUnsubscribeFromThread",
    "description": "Unsubscribe from a thread",
    "type": {
     "name": "CollaborationSubscriber",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "threadId",
      "description": "Thread ID",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "collaborationUpdateComment",
    "description": "Update a comment",
    "type": {
     "name": "CollaborationComment",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "body",
      "description": "The message of the comment",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "id",
      "description": "Comment ID",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "collaborationUpdateContextAddComment",
    "description": "Add a comment to the context's comment count",
    "type": {
     "name": "CollaborationContext",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "commentId",
      "description": "Comment ID",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "id",
      "description": "Context ID",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "collaborationUpdateContextAddThread",
    "description": "Add a thread to a context's thread count",
    "type": {
     "name": "CollaborationContext",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "id",
      "description": "Context ID",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "threadId",
      "description": "Thread ID",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "collaborationUpdateSubscriptionReadInfo",
    "description": "Update unread counts for a subscription",
    "type": {
     "name": "CollaborationSubscriber",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "commentsReadCount",
      "description": "New value for the number of comments read",
      "type": {
       "name": "Int",
       "kind": "SCALAR"
      }
     },
     {
      "name": "lastCommentReadId",
      "description": "Comment ID of the last comment read",
      "type": {
       "name": "ID",
       "kind": "SCALAR"
      }
     },
     {
      "name": "mentionsReadCount",
      "description": "New value for the mentions count",
      "type": {
       "name": "Int",
       "kind": "SCALAR"
      }
     },
     {
      "name": "threadId",
      "description": "Thread ID",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "collaborationUpdateThreadAddComment",
    "description": "Update a thread with a new comment",
    "type": {
     "name": "CollaborationThread",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "commentId",
      "description": "Comment ID",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "collaborationUpdateThreadStatus",
    "description": "Update a thread's status",
    "type": {
     "name": "CollaborationThread",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "id",
      "description": "Thread ID",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "status",
      "description": "Status to update thread to",
      "type": {
       "name": "CollaborationStatus",
       "kind": "ENUM"
      }
     }
    ]
   },
   {
    "name": "commerceCancelSubscription",
    "description": "Cancels the customer's active subscription if they pass validations.",
    "type": {
     "name": "CommerceCancelResult",
     "kind": "UNION"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The id of the selected account.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "commerceConfigureAutoTopUp",
    "description": "Configure auto top-ups",
    "type": {
     "name": "Boolean",
     "kind": "SCALAR"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The id of the selected account.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "optIn",
      "description": "Opting in or out choice",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Boolean",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "topUpAmount",
      "description": "Amount in dollars to be replenished when pool of funds is depleted",
      "type": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    ]
   },
   {
    "name": "commerceExecutePaymentRun",
    "description": "Create payment run for unpaid invoices",
    "type": {
     "name": "Boolean",
     "kind": "SCALAR"
    },
    "args": [
     {
      "name": "accountId",
      "description": "RPM account ID",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "invoiceIds",
      "description": "Collection of invoice ids",
      "type": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     }
    ]
   },
   {
    "name": "commerceExtendRetention",
    "description": "Extend data retention period.",
    "type": {
     "name": "CommercePurchaseResult",
     "kind": "UNION"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The id of the selected account.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "numberOfDays",
      "description": "Number of days to extend retention in increments of 30. Rounds to the closest 30 day increment.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "commerceNotificationsMuteNotification",
    "description": "Certain notifications can be muted for a set period of time. Depending on\n the notification, there may be limits on the number of times a request\n will be granted.",
    "type": {
     "name": "CommerceNotificationsMuteNotificationResult",
     "kind": "UNION"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The current selected account.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "notificationId",
      "description": "The id of the notification. For example, a paywall or banner id.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "notificationType",
      "description": "The type of the notification. For example, paywall or banner.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "CommerceNotificationsNotificationType",
        "kind": "ENUM"
       }
      }
     }
    ]
   },
   {
    "name": "commerceOptInOffer",
    "description": "Opt into an offer. The offer must be a promotion",
    "type": {
     "name": "Boolean",
     "kind": "SCALAR"
    },
    "args": [
     {
      "name": "accountId",
      "description": "RPM account ID",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "copyId",
      "description": "ID of the legal/terms of service copy",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "offerId",
      "description": "ID of the promotion offer",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "commerceOptOutOffer",
    "description": "Opt out of an offer. The offer must be a promotion",
    "type": {
     "name": "Boolean",
     "kind": "SCALAR"
    },
    "args": [
     {
      "name": "accountId",
      "description": "RPM account ID",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "offerId",
      "description": "ID of the promotion offer",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "commercePurchaseOffer",
    "description": "Purchases an offer by offerId.",
    "type": {
     "name": "CommercePurchaseResult",
     "kind": "UNION"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The id of the selected account.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "offerId",
      "description": "The id of the offer to purchase.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "options",
      "description": "Optional custom offer input",
      "type": {
       "name": "CommerceOptionsInput",
       "kind": "INPUT_OBJECT"
      }
     }
    ]
   },
   {
    "name": "commerceSetDefaultPaymentMethod",
    "description": "Set the default payment method of the account. Only allowed for credit card accounts.",
    "type": {
     "name": "CommercePaymentInfo",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The id of the selected account.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "paymentMethodId",
      "description": "The id of the payment method that will become the default on the account",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "commerceUpdateBillingInfo",
    "description": "Update billing information.",
    "type": {
     "name": "CommerceBillingInfo",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The id of the selected account.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "billingInfo",
      "description": "The new billing information.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "CommerceBillingInfoInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "contentSharingShareWithRecipients",
    "description": "Share content with recipients. If the recipient does not exist or does not have access, we will send request access to the Admin of the content.",
    "type": {
     "name": "ContentSharingShareContentResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "comment",
      "description": "Comment included in the share",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "recipients",
      "description": "The recipients of the content being shared",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "ContentSharingRecipientInput",
          "kind": "INPUT_OBJECT"
         }
        }
       }
      }
     },
     {
      "name": "sharedContent",
      "description": "The content being shared",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "ContentSharingContentInput",
          "kind": "INPUT_OBJECT"
         }
        }
       }
      }
     }
    ]
   },
   {
    "name": "correlationAcceptSuggestion",
    "description": "Accept and deploy an existing suggested rule.",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "CorrelationRule",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "suggestionId",
      "description": "Suggestion ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "correlationCreateImplicitRule",
    "description": "Create and deploy a new implicit rule.",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "CorrelationRule",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "rule",
      "description": "Rule blueprint to be created.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "CorrelationRuleBlueprint",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "correlationCreateRule",
    "description": "Create and deploy a new rule.",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "CorrelationRule",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "rule",
      "description": "Rule blueprint to be created.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "CorrelationRuleBlueprint",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "correlationCreateSuggestion",
    "description": "Create a new suggested rule.",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "CorrelationSuggestion",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "suggestion",
      "description": "Suggestion blueprint to be created.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "CorrelationSuggestionBlueprint",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "correlationDeclineSuggestion",
    "description": "Decline an existing suggested rule.",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "CorrelationOperationResult",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "suggestionId",
      "description": "Suggestion ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "correlationDeleteMergeFeedback",
    "description": "Delete existing feedback for a merge.",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "CorrelationOperationResult",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "childIssueId",
      "description": "Child issue ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "parentIssueId",
      "description": "Parent issue ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "ruleId",
      "description": "Rule ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "correlationDeleteMergeFeedbackByRules",
    "description": "Delete existing feedback by rule ids for a merge.",
    "type": {
     "name": "CorrelationOperationResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "childIssueId",
      "description": "Child issue ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "parentIssueId",
      "description": "Parent issue ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "ruleIds",
      "description": "List of rule IDs",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "ID",
          "kind": "SCALAR"
         }
        }
       }
      }
     }
    ]
   },
   {
    "name": "correlationDeleteRule",
    "description": "Delete an existing rule.",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "CorrelationOperationResult",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "ruleId",
      "description": "Rule ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "correlationDeleteSuggestion",
    "description": "Delete an existing suggested rule.",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "CorrelationOperationResult",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "suggestionId",
      "description": "Suggestion ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "correlationDisableRule",
    "description": "Disable an existing enabled rule.",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "CorrelationOperationResult",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "ruleId",
      "description": "Rule ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "correlationEnableRule",
    "description": "Enable an existing disabled rule.",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "CorrelationOperationResult",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "ruleId",
      "description": "Rule ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "correlationFindApplicableIncidents",
    "description": "Create a search operation to fetch applicable incidents for a rule expression",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "CorrelationApplicableIncidentSearch",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "search",
      "description": "Search operation blueprint to be created.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "CorrelationSearchBlueprint",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "correlationPostponeSuggestion",
    "description": "Postpone an existing suggested rule.",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "CorrelationRule",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "suggestionId",
      "description": "Suggestion ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "correlationRecordMergeFeedback",
    "description": "Record feedback for a merge",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "CorrelationMergeFeedback",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "childIssueId",
      "description": "Child issue ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "opinion",
      "description": "Opinion type.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "CorrelationOpinion",
        "kind": "ENUM"
       }
      }
     },
     {
      "name": "parentIssueId",
      "description": "Parent issue ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "ruleId",
      "description": "Rule ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "correlationRecordMergeFeedbackByRules",
    "description": "Record feedback by rule ids for a merge",
    "type": {
     "kind": "LIST",
     "ofType": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "CorrelationMergeFeedback",
       "kind": "OBJECT"
      }
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "childIssueId",
      "description": "Child issue ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "opinion",
      "description": "Opinion type.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "CorrelationOpinion",
        "kind": "ENUM"
       }
      }
     },
     {
      "name": "parentIssueId",
      "description": "Parent issue ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "ruleIds",
      "description": "List of rule IDs",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "ID",
          "kind": "SCALAR"
         }
        }
       }
      }
     }
    ]
   },
   {
    "name": "correlationSimulate",
    "description": "Create an arbitrary expression simulation.",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "CorrelationSimulation",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "simulation",
      "description": "Simulation blueprint to be created.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "CorrelationSimulationBlueprint",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "correlationUpdateImplicitRule",
    "description": "Update an existing implicit rule.",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "CorrelationRule",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "rule",
      "description": "Rule blueprint to be created.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "CorrelationRuleBlueprint",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "ruleId",
      "description": "Rule ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "correlationUpdateRule",
    "description": "Update an existing rule.",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "CorrelationRule",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "rule",
      "description": "Rule blueprint to be created.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "CorrelationRuleBlueprint",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "ruleId",
      "description": "Rule ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "correlationUpsertRuleAnnotations",
    "description": "Upsert an annotation entry to an existing rule.",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "CorrelationOperationResult",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "ruleAnnotation",
      "description": "Rule annotation entry to be created or updated.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "CorrelationAnnotationInput",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "ruleId",
      "description": "Rule ID.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "courierNotificationPreferencesUpdate",
    "description": "Update notification preferences for a user",
    "type": {
     "kind": "LIST",
     "ofType": {
      "name": "CourierNotificationPreferencesUpdatedNotificationPreferenceResponse",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "updatedNotificationPreferences",
      "description": "List of topics to be updated",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "name": "CourierNotificationPreferencesUpdatedNotificationPreference",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     },
     {
      "name": "userId",
      "description": "User's unique identifier",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "dashboardAddWidgetsToPage",
    "description": "Add widgets to a `DashboardPage`",
    "type": {
     "name": "DashboardAddWidgetsToPageResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "guid",
      "description": "Unique entity identifier of the `DashboardPage` where widgets will be added.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "widgets",
      "description": "Widgets input holding all required widgets data.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "DashboardWidgetInput",
          "kind": "INPUT_OBJECT"
         }
        }
       }
      }
     }
    ]
   },
   {
    "name": "dashboardCreate",
    "description": "Create a `DashboardEntity`",
    "type": {
     "name": "DashboardCreateResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID where the `DashboardEntity` will be created.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "dashboard",
      "description": "Dashboard input holding all required `DashboardEntity` data.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "DashboardInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "dashboardCreateLiveUrl",
    "description": "Creates a public Live URL where a `DashboardEntity` will show data changes in real time.",
    "type": {
     "name": "DashboardLiveUrl",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "guid",
      "description": "Unique entity identifier of the `DashboardEntity` to be accessed through a public URL.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "options",
      "description": "Options to configure the live url when is created",
      "type": {
       "name": "DashboardLiveUrlOptionsInput",
       "kind": "INPUT_OBJECT"
      }
     }
    ]
   },
   {
    "name": "dashboardCreateSnapshotUrl",
    "description": "Creates a public URL where a `DashboardPage` can be accessed in the form of a static snapshot.",
    "type": {
     "name": "String",
     "kind": "SCALAR"
    },
    "args": [
     {
      "name": "guid",
      "description": "Unique entity identifier of the `DashboardPage` to be accessed as a snapshot through a public URL.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "params",
      "description": "Optional input parameters for the generated snapshot.",
      "type": {
       "name": "DashboardSnapshotUrlInput",
       "kind": "INPUT_OBJECT"
      }
     }
    ]
   },
   {
    "name": "dashboardDelete",
    "description": "Delete an existing `DashboardEntity`",
    "type": {
     "name": "DashboardDeleteResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "guid",
      "description": "Unique entity identifier of the `DashboardEntity` to be deleted. A dashboard guid must be specified. Dashboard page guids are not supported.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "dashboardRevokeLiveUrl",
    "description": "Revokes a `DashboardEntity` public live URL",
    "type": {
     "name": "DashboardRevokeLiveDashboardUrlResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "id",
      "description": "The unique identifier of the public live dashboard URL to be revoked.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "dashboardUndelete",
    "description": "Undelete a `DashboardEntity` that was previously deleted.",
    "type": {
     "name": "DashboardUndeleteResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "guid",
      "description": "Unique entity identifier of the `DashboardEntity` to be undeleted. A dashboard guid must be specified. Dashboard page guids are not supported.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "dashboardUpdate",
    "description": "Update an existing `DashboardEntity`",
    "type": {
     "name": "DashboardUpdateResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "dashboard",
      "description": "Dashboard input holding all required data from an existing `DashboardEntity`.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "DashboardInput",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "guid",
      "description": "Unique entity identifier of the `DashboardEntity` to be updated.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "dashboardUpdateLiveUrl",
    "description": "Updates a created public Live URL",
    "type": {
     "name": "DashboardLiveUrl",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "id",
      "description": "The unique identifier of the public live URL to be updated.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "options",
      "description": "Options to configure the live url when is updated",
      "type": {
       "name": "DashboardLiveUrlOptionsInput",
       "kind": "INPUT_OBJECT"
      }
     }
    ]
   },
   {
    "name": "dashboardUpdatePage",
    "description": "Update a page in a dashboard.",
    "type": {
     "name": "DashboardUpdatePageResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "guid",
      "description": "Unique entity identifier of the Page to be updated.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "page",
      "description": "Page input holding all required data to update a page.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "DashboardUpdatePageInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "dashboardUpdateWidgetsInPage",
    "description": "Update an existing set of `Widget`s in a `DashboardPage`",
    "type": {
     "name": "DashboardUpdateWidgetsInPageResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "guid",
      "description": "Unique entity identifier of the `DashboardPage` where widgets will be updated.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "widgets",
      "description": "Widgets input holding all required widgets data.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "DashboardUpdateWidgetInput",
          "kind": "INPUT_OBJECT"
         }
        }
       }
      }
     }
    ]
   },
   {
    "name": "dashboardWidgetRevokeLiveUrl",
    "description": "Revokes a `DashboardWidget` public live URL that was created in advance.",
    "type": {
     "name": "DashboardRevokeLiveUrlResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "uuid",
      "description": "The unique identifier of the public live URL to be revoked.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "dataManagementCopyRetentions",
    "description": "Bulk copy account rules to list of accounts",
    "type": {
     "name": "DataManagementBulkCopyResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "destinationAccountIds",
      "description": "A list of IDs for the accounts that should have the source account retentions applied.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      }
     },
     {
      "name": "sourceAccountId",
      "description": "The ID of the source account",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "dataManagementCreateAccountLimit",
    "description": "Create a new account limit",
    "type": {
     "name": "DataManagementAccountLimit",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The id for the account",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "accountLimit",
      "description": "Global limit",
      "type": {
       "name": "DataManagementAccountLimitInput",
       "kind": "INPUT_OBJECT"
      }
     }
    ]
   },
   {
    "name": "dataManagementCreateEventRetentionRule",
    "description": "Create a new event retention rule for a namespace on an account",
    "type": {
     "name": "DataManagementRule",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The ID of the account the event retention rule applies to",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "namespace",
      "description": "The namespace the event retention rule applies to",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "retentionInDays",
      "description": "Length of time for event data retention (in days)",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "dataManagementCreateRetentionRules",
    "description": "Create event retention rules for namespaces",
    "type": {
     "kind": "LIST",
     "ofType": {
      "name": "DataManagementRule",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "The ID of the account the new retention rules will apply to",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "retentionRules",
      "description": "List of rule_input params (:namespace, :retention_in_days) for new rules to be created",
      "type": {
       "kind": "LIST",
       "ofType": {
        "name": "DataManagementRuleInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "dataManagementDeleteEventRetentionRule",
    "description": "Delete the event retention rule for a namespace on an account, if it exists",
    "type": {
     "name": "DataManagementRule",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The ID of the event retention rule's account",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "namespace",
      "description": "The event retention rule's namespace",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "dataManagementUpdateFeatureSettings",
    "description": "Mutation to add and change a feature setting toggle for an account",
    "type": {
     "name": "DataManagementFeatureSetting",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The ID of the account to apply this feature setting",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "setting",
      "description": "Arguments to update the feature setting on an account",
      "type": {
       "name": "DataManagementAccountFeatureSettingInput",
       "kind": "INPUT_OBJECT"
      }
     }
    ]
   },
   {
    "name": "discussionCreateErrorGroupPost",
    "description": "Create a new Post.",
    "type": {
     "name": "DiscussionErrorGroupPost",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "errorGroupGuid",
      "description": "Error group guid that the Post is attached to",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "post",
      "description": "Post details",
      "type": {
       "name": "DiscussionCreateErrorGroupPostInput",
       "kind": "INPUT_OBJECT"
      }
     }
    ]
   },
   {
    "name": "discussionDeleteErrorGroupPost",
    "description": "Delete (mark deactivated) an existing Post.",
    "type": {
     "name": "DiscussionErrorGroupPost",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "errorGroupGuid",
      "description": "Error group guid that the Post is attached to",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "postId",
      "description": "ID of the post to delete.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "discussionUpdateErrorGroupPost",
    "description": "Update an existing Post.",
    "type": {
     "name": "DiscussionErrorGroupPost",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "errorGroupGuid",
      "description": "Error group guid that the Post is attached to",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "post",
      "description": "Fields to update in the target post.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "DiscussionUpdateErrorGroupPostInput",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "postId",
      "description": "ID of the post to update.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "domainManagementCreateDomain",
    "description": "Creates a new domain, and begins the domain verification process",
    "type": {
     "name": "DomainManagementCreateDomainResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "domainName",
      "description": "Portion of email address after the @, used for associating new users with your organization",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "domainManagementDeleteDomain",
    "description": "Removes a domain",
    "type": {
     "name": "DomainManagementDomainDeleteResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "domainId",
      "description": "The domain Id",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "domainManagementRetryDomainVerification",
    "description": "Replaces existing verification record with a new one. Won't be allowed if a domain is already verified",
    "type": {
     "name": "DomainManagementCreateDomainResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "domainId",
      "description": "The id of the domain",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "domainManagementUpdateCaptureConfiguration",
    "description": "Updates an existing capture record for the given domainId",
    "type": {
     "name": "DomainManagementUpdateCaptureConfigurationResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "domainId",
      "description": "The id of the domain to update",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "joinOrganizationPreference",
      "description": "Defines the options available to new users at signup.",
      "type": {
       "name": "DomainManagementJoinOrganizationPreference",
       "kind": "ENUM"
      }
     },
     {
      "name": "message",
      "description": "Message displayed to new users during signup, who's email address belongs to the given domain",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "newUserConfiguration",
      "description": "Collection of settings to configure new users that join your organization via domain capture",
      "type": {
       "name": "DomainManagementNewUserConfigurationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    ]
   },
   {
    "name": "edgeCreateTraceFilterRules",
    "description": "Create one or more trace filter rules, as defined by the `CreateTraceFilterRulesInput`.",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "EdgeCreateTraceFilterRuleResponses",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "ID of the account in the account family the trace observer belongs to.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "rules",
      "description": "A grouping of trace filter rule configurations",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EdgeCreateTraceFilterRulesInput",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "traceObserverId",
      "description": "ID of the trace observer to apply the trace filter(s) to.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "edgeCreateTraceObserver",
    "description": "Create one or more trace observers, as defined by the `CreateTraceObserverInput`. Currently, only one trace observer can be created per provider region.",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "EdgeCreateTraceObserverResponses",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "ID of the account in the account family the trace observer(s) belong to.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "traceObserverConfigs",
      "description": "One or more `CreateTraceObserverInput` that describe the trace observer to be created.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "EdgeCreateTraceObserverInput",
          "kind": "INPUT_OBJECT"
         }
        }
       }
      }
     }
    ]
   },
   {
    "name": "edgeDeleteTraceFilterRules",
    "description": "Delete one or more trace filter rules, as defined by the `DeleteTraceFilterRulesInput`.",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "EdgeDeleteTraceFilterRuleResponses",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "ID of the account in the account family the trace observer belongs to.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "rules",
      "description": "A grouping of trace filter rule configurations",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EdgeDeleteTraceFilterRulesInput",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "traceObserverId",
      "description": "ID of the trace observer to remove the provided trace filter(s) from.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "edgeDeleteTraceObservers",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "EdgeDeleteTraceObserverResponses",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "ID of the account in the account family the trace observer(s) belong to.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "traceObserverConfigs",
      "description": "One or more `DeleteTraceObserverInput` that describe the trace observer to be deleted.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "EdgeDeleteTraceObserverInput",
          "kind": "INPUT_OBJECT"
         }
        }
       }
      }
     }
    ]
   },
   {
    "name": "edgeUpdateTraceObservers",
    "description": "Update one or more trace observers, as defined by the `UpdateTraceObserverInput`.",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "EdgeUpdateTraceObserverResponses",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "ID of the account in the account family the trace observer(s) belong to.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "traceObserverConfigs",
      "description": "One or more `UpdateTraceObserverInput` that describe the trace observer to be updated.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "EdgeUpdateTraceObserverInput",
          "kind": "INPUT_OBJECT"
         }
        }
       }
      }
     }
    ]
   },
   {
    "name": "entityDelete",
    "description": "Delete an entity",
    "type": {
     "name": "EntityDeleteResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "forceDelete",
      "description": "Set to true to skip safety checks and force-delete the entity",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Boolean",
        "kind": "SCALAR"
       }
      },
      "defaultValue": "false"
     },
     {
      "name": "guids",
      "description": "List of guids to be deleted",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "EntityGuid",
          "kind": "SCALAR"
         }
        }
       }
      }
     }
    ]
   },
   {
    "name": "entityGoldenMetricsOverride",
    "description": "Override the default golden metrics given an account or a collection guid. Only use one context",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "EntityGoldenMetricsDomainTypeScopedResponse",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "context",
      "description": "Context to scope the golden metrics",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "domainType",
      "description": "Entity Domain Type to override the golden metrics",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "DomainTypeInput",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "metrics",
      "description": "The new golden metrics by the entity domain type and the context",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "EntityGoldenMetricInput",
          "kind": "INPUT_OBJECT"
         }
        }
       }
      }
     }
    ]
   },
   {
    "name": "entityGoldenMetricsReset",
    "description": "Reset the default golden metrics given an account or a collection guid. Only use one context",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "EntityGoldenMetricsDomainTypeScopedResponse",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "context",
      "description": "Context to scope the golden metrics",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "domainType",
      "description": "Entity Domain Type to reset the golden metrics",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "DomainTypeInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "entityGoldenTagsOverride",
    "description": "Override the default tags given an account or a collection guid. Only use one context",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "EntityGoldenTagsDomainTypeScopedResponse",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "context",
      "description": "Context to scope the golden metrics",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "domainType",
      "description": "Entity Domain Type to override the golden tags",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "DomainTypeInput",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "tags",
      "description": "The new golden tags by the entity domain type and the tags",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "EntityGoldenTagInput",
          "kind": "INPUT_OBJECT"
         }
        }
       }
      }
     }
    ]
   },
   {
    "name": "entityGoldenTagsReset",
    "description": "Reset the default tags given an account or a collection guid. Only use one context",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "EntityGoldenTagsDomainTypeScopedResponse",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "context",
      "description": "Context to scope the golden metrics",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "domainType",
      "description": "Entity Domain Type to reset the golden tags",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "DomainTypeInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "entityKeepAlive",
    "description": "Keep an entity alive by refreshing its TTL",
    "type": {
     "name": "EntityKeepAliveResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "guids",
      "description": "List of guids to be kept alive",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "EntityGuid",
          "kind": "SCALAR"
         }
        }
       }
      }
     }
    ]
   },
   {
    "name": "entityRelationshipUserDefinedCreateOrReplace",
    "description": "Create a relationship between entities.",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "EntityRelationshipUserDefinedCreateOrReplaceResult",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "sourceEntityGuid",
      "description": "The source entity guid of the relationship.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "targetEntityGuid",
      "description": "The target entity guid of the relationship.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "type",
      "description": "The type of the relationship.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityRelationshipEdgeType",
        "kind": "ENUM"
       }
      }
     }
    ]
   },
   {
    "name": "entityRelationshipUserDefinedDelete",
    "description": "Delete a relationship between entities. If no type is provided, it will delete all relationships between source and target.",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "EntityRelationshipUserDefinedDeleteResult",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "sourceEntityGuid",
      "description": "The source entity guid of the relationship.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "targetEntityGuid",
      "description": "The target entity guid of the relationship.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "type",
      "description": "The type of the relationship. If none provided, it will delete all relationships between source and target.",
      "type": {
       "name": "EntityRelationshipEdgeType",
       "kind": "ENUM"
      }
     }
    ]
   },
   {
    "name": "errorTrackingAssignErrorGroup",
    "description": "Assigns a user to the error group",
    "type": {
     "name": "ErrorTrackingAssignErrorGroupResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "assignment",
      "description": "An input object that represents the new assignment.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ErrorTrackingAssignErrorGroupInput",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "id",
      "description": "The id of the error group.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "errorTrackingCommentOnErrorGroup",
    "description": "Comment on error group",
    "type": {
     "name": "ErrorTrackingCommentOnErrorGroupResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "comment",
      "description": "An input object that represents the comment.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ErrorTrackingCommentOnErrorGroupInput",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "id",
      "description": "The id of the error group.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "errorTrackingConfigureErrorGroupChannel",
    "description": "Associates a notification channel with an error group and generates a notification.",
    "type": {
     "name": "ErrorTrackingConfigureErrorGroupChannelResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "channel",
      "description": "An input object that represents the new channel.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ErrorTrackingErrorGroupChannelInput",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "id",
      "description": "The id of the error group.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "workloadGuid",
      "description": "Guid of the workload context",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "errorTrackingConfigureNotificationPolicy",
    "description": "Creates or updates notification policies.",
    "type": {
     "name": "ErrorTrackingConfigureNotificationPolicyResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "policy",
      "description": "Input of the policy.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ErrorTrackingConfigureNotificationPolicyInput",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "workloadGuid",
      "description": "Guid of the workload to associate the policy to.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "errorTrackingDeleteCommentFromErrorGroup",
    "description": "Delete comment from error group",
    "type": {
     "name": "ErrorTrackingDeleteCommentFromErrorGroupResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "comment",
      "description": "An input object that represents the comment to be deleted.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ErrorTrackingDeleteCommentFromErrorGroupInput",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "id",
      "description": "The id of the error group.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "errorTrackingDeleteErrorGroupChannel",
    "description": "Removes a notification channel from an error group.",
    "type": {
     "name": "ErrorTrackingDeleteErrorGroupChannelResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "channelId",
      "description": "The id of the notification channel to remove.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "id",
      "description": "The id of the error group.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "workloadGuid",
      "description": "Guid of the workload context",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "errorTrackingDeleteNotificationPolicy",
    "description": "Removes a configured notification policy.",
    "type": {
     "name": "ErrorTrackingDeleteNotificationPolicyResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "workloadGuid",
      "description": "Guid of the workload the policy is associated with.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "errorTrackingUpdateErrorGroupState",
    "description": "Marks the error group as expected.",
    "type": {
     "name": "ErrorTrackingUpdateErrorGroupStateResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "id",
      "description": "The id of the error group.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "state",
      "description": "An input object that represents the new assignment.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ErrorTrackingUpdateErrorGroupStateInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "errorsInboxAssignErrorGroup",
    "description": "Assigns a user to an error group",
    "type": {
     "name": "ErrorsInboxAssignErrorGroupResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "assignment",
      "description": "An input object that represents the new assignment.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ErrorsInboxAssignErrorGroupInput",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "id",
      "description": "The id of the error group.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "errorsInboxConfigureNotificationPolicy",
    "description": "Creates or updates notification policies.",
    "type": {
     "name": "ErrorsInboxConfigureNotificationPolicyResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "entityGuid",
      "description": "The entityGuid to associate the errors inbox notification policy with.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "policy",
      "description": "Input of the policy.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ErrorsInboxConfigureNotificationPolicyInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "errorsInboxDeleteErrorGroupResource",
    "description": "Removes a resource from an error group.",
    "type": {
     "name": "ErrorsInboxDeleteErrorGroupResourceResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "id",
      "description": "The id of the error group.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "resourceId",
      "description": "Id of the resource",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "errorsInboxDeleteNotificationPolicy",
    "description": "Removes a configured notification policy.",
    "type": {
     "name": "ErrorsInboxDeleteNotificationPolicyResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "entityGuid",
      "description": "The entityGuid associated with the errors inbox notification policy.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "errorsInboxUpdateErrorGroupState",
    "description": "Updates the states of error groups.",
    "type": {
     "name": "ErrorsInboxUpdateErrorGroupStateResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "id",
      "description": "DEPRECATED. Use `ids` field instead.",
      "type": {
       "name": "ID",
       "kind": "SCALAR"
      }
     },
     {
      "name": "ids",
      "description": "The ids of the error groups.",
      "type": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     },
     {
      "name": "resolveInNextVersion",
      "description": "Allows error group(s) to be marked as `Resolved` prior to deployment.  Configures errors inbox to resolve an error group in the next semantically higher version that is detected via change tracking. Cannot be used with `versions`.\n\nFor example, if an error group is occurring in version `1.5` and marked as `resolvedInNextVersion` = `true`, then the error group will remain in a resolved state for errors with versions `1.5` or lower.\n- When the next version is deployed (say `1.6`), the error group will be updated to reflect as resolved in version `1.6`.\n- If an error occurs in a newer version (say `1.6`) before the next detected deployment, then the error group will be set to unresolved with regression in `1.6`.",
      "type": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     },
     {
      "name": "state",
      "description": "State that the error groups should transition to.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ErrorsInboxErrorGroupState",
        "kind": "ENUM"
       }
      }
     },
     {
      "name": "versions",
      "description": "Optionally specify versions of the entity for which an error group's state applies. Note: this is currently only applicable for `Resolved` and cannot be used with `resolvedInNextVersion`.\n\nFor example, let's say a given error group is occurring for version `1.0.0`.  A fix was implemented and deployed in `1.0.1`.  The error group may be marked as `Resolved` in version `1.0.1`.  For any errors still occurring in `1.0.0` or lower, they will continue to appear as occurrences but the error group will remain in a resolved state.  If there is a new occurrence in `1.0.1` or higher, then the error group will become unresolved with regression in the affected version(s).",
      "type": {
       "name": "ErrorsInboxStateVersionInput",
       "kind": "INPUT_OBJECT"
      }
     }
    ]
   },
   {
    "name": "eventsToMetricsCreateRule",
    "description": "Create a new rule which will make metrics from event data.",
    "type": {
     "name": "EventsToMetricsCreateRuleResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "rules",
      "description": "List of events to metrics rules to create.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "name": "EventsToMetricsCreateRuleInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     }
    ]
   },
   {
    "name": "eventsToMetricsDeleteRule",
    "description": "Delete an event-to-metric rule.",
    "type": {
     "name": "EventsToMetricsDeleteRuleResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "deletes",
      "description": "List of events to metrics rules to delete.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "name": "EventsToMetricsDeleteRuleInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     }
    ]
   },
   {
    "name": "eventsToMetricsUpdateRule",
    "description": "Enable or disable an event-to-metric rule.",
    "type": {
     "name": "EventsToMetricsUpdateRuleResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "updates",
      "description": "List of events to metrics rules to update.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "name": "EventsToMetricsUpdateRuleInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     }
    ]
   },
   {
    "name": "grokCreateFeedback",
    "description": "Create a new Grok feedback",
    "type": {
     "name": "GrokFeedback",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "capabilityId",
      "description": "Capability ID associated with the Grok feedback",
      "type": {
       "name": "ID",
       "kind": "SCALAR"
      }
     },
     {
      "name": "messageId",
      "description": "Message ID associated with the Grok feedback",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "nerdletId",
      "description": "Nerdlet ID associated with the Grok feedback",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "sentiment",
      "description": "The sentiment of the feedback. True = positive, False = negative",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Boolean",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "sentimentCategories",
      "description": "The values representing the reasons the user selected for giving feedback",
      "type": {
       "kind": "LIST",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "sentimentDetail",
      "description": "The message that a user sends with the feedback",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    ]
   },
   {
    "name": "grokCreateGrokInitiatedConversation",
    "description": "Create a new Grok initiated conversation",
    "type": {
     "name": "GrokConversationReplyToId",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "assistant",
      "description": "Type of assistant",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "assistantConfig",
      "description": "Configuration for assistant",
      "type": {
       "kind": "LIST",
       "ofType": {
        "name": "GrokAssistantConfigInput",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "context",
      "description": "Context data to add to the prompt",
      "type": {
       "name": "GrokRawContextMetadata",
       "kind": "SCALAR"
      }
     },
     {
      "name": "prompt",
      "description": "Prompt for the AI to use",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "referenceUrl",
      "description": "Optional URL to supply a link back to context",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "threadId",
      "description": "Thread ID",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "grokCreatePrompt",
    "description": "Create a new Grok prompt",
    "type": {
     "name": "GrokPromptData",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "User's account id",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "assistant",
      "description": "Type of assistant",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "assistantConfig",
      "description": "Configuration for assistant",
      "type": {
       "kind": "LIST",
       "ofType": {
        "name": "GrokAssistantConfigInput",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "capabilityId",
      "description": "Capability ID",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "componentId",
      "description": "Component ID",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "context",
      "description": "Context data to add to the prompt",
      "type": {
       "name": "GrokRawContextMetadata",
       "kind": "SCALAR"
      }
     },
     {
      "name": "nRConnectionId",
      "description": "Socket connection id",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "prompt",
      "description": "Prompt to ask grok",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "source",
      "description": "NRAI registration ID",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    ]
   },
   {
    "name": "grokUpdateFeedback",
    "description": "Update an existing Grok feedback",
    "type": {
     "name": "GrokFeedback",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "id",
      "description": "The ID of the feedback to be updated",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "sentiment",
      "description": "The sentiment of the feedback. True = positive, False = negative",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Boolean",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "sentimentCategories",
      "description": "The values representing the reasons the user selected for giving feedback",
      "type": {
       "kind": "LIST",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "sentimentDetail",
      "description": "The message that a user sends with the feedback",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    ]
   },
   {
    "name": "grokUpdateMessageStateById",
    "description": "Update a Grok message state ID",
    "type": {
     "name": "GrokMessageState",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "messageId",
      "description": "The ID of the AI message",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "stateRaw",
      "description": "The raw state data of the Grok message",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "GrokMessageStateData",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "historicalDataExportCancelExport",
    "description": "Cancel a historic export",
    "type": {
     "name": "HistoricalDataExportCustomerExportResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The account id which created the export",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "id",
      "description": "The id of the export to cancel",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "historicalDataExportCreateExport",
    "description": "Create a historic export",
    "type": {
     "name": "HistoricalDataExportCustomerExportResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The account id to run the Export against",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "nrql",
      "description": "The NRQL string to use for this Export",
      "type": {
       "name": "Nrql",
       "kind": "SCALAR"
      }
     }
    ]
   },
   {
    "name": "incidentIntelligenceEnvironmentConsentAccounts",
    "description": "Consent accounts to usage of the Incident Intelligence product in the EU or FedRAMP",
    "type": {
     "name": "IncidentIntelligenceEnvironmentConsentAccounts",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountIds",
      "description": "The account ids to mark with consent, will consent the parent accounts",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      }
     }
    ]
   },
   {
    "name": "incidentIntelligenceEnvironmentConsentAuthorizedAccounts",
    "description": "Consent all of the user's authorized accounts",
    "type": {
     "name": "IncidentIntelligenceEnvironmentConsentAuthorizedAccounts",
     "kind": "OBJECT"
    }
   },
   {
    "name": "incidentIntelligenceEnvironmentCreateEnvironment",
    "description": "Creates a new environment, each environment is attached to a parent account and an account. Note that only one environment per parent account is supported.",
    "type": {
     "name": "IncidentIntelligenceEnvironmentCreateEnvironment",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "associatedAccountIds",
      "description": "The account ids of the accounts that should be manually associated with the environment, if empty or null then the accounts are determinted automatically",
      "type": {
       "kind": "LIST",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "incidentIntelligenceAccountId",
      "description": "The account id to attach to the environment",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "name",
      "description": "The environment name",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    ]
   },
   {
    "name": "incidentIntelligenceEnvironmentDeleteEnvironment",
    "description": "Deletes an existing environment",
    "type": {
     "name": "IncidentIntelligenceEnvironmentDeleteEnvironment",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The account id to delete",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "incidentIntelligenceEnvironmentDissentAccounts",
    "description": "Dissent accounts to usage of the Incident Intelligence product in the EU or FedRAMP (removes the consent marking)",
    "type": {
     "name": "IncidentIntelligenceEnvironmentDissentAccounts",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountIds",
      "description": "The account ids to dissent, empty list will mark all of the current user parent-accounts",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      }
     }
    ]
   },
   {
    "name": "incidentIntelligencePlatformCreatePathway",
    "description": "Create a new pathway",
    "type": {
     "name": "IncidentIntelligencePlatformCreatePathway",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "New relic account id",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "pathway",
      "description": "Map between filters and destinations",
      "type": {
       "name": "IncidentIntelligencePlatformPathwayInput",
       "kind": "INPUT_OBJECT"
      }
     }
    ]
   },
   {
    "name": "incidentIntelligencePlatformCreatePlatformPagerduty",
    "description": "Create PagerDuty platform",
    "type": {
     "name": "IncidentIntelligencePlatformCreatePlatformPagerDuty",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "New relic account id",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "platformConfiguration",
      "description": "Parameters needed to perform platform operations",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "IncidentIntelligencePlatformPagerDutyPlatformConfigurationInput",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "platformEnabled",
      "description": "Disable/Enable platform",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Boolean",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "platformType",
      "description": "Platform type",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "IncidentIntelligencePlatformPlatforms",
        "kind": "ENUM"
       }
      }
     }
    ]
   },
   {
    "name": "incidentIntelligencePlatformDeletePathway",
    "description": "Delete pathway",
    "type": {
     "name": "IncidentIntelligencePlatformDeletePathway",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "New relic account id",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "pathwayId",
      "description": "Id of Pathway to delete",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "incidentIntelligencePlatformDeletePlatform",
    "description": "Delete platform",
    "type": {
     "name": "IncidentIntelligencePlatformDeletePlatform",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "New relic account id",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "platformType",
      "description": "Platform type",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "IncidentIntelligencePlatformPlatforms",
        "kind": "ENUM"
       }
      }
     }
    ]
   },
   {
    "name": "incidentIntelligencePlatformDeprovisionDestination",
    "description": "Deprovision destination",
    "type": {
     "name": "IncidentIntelligencePlatformDeprovisionDestination",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "New relic account id",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "destinationId",
      "description": "Id of destination to deprovision",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "incidentIntelligencePlatformDeprovisionSource",
    "description": "Deprovision source",
    "type": {
     "name": "IncidentIntelligencePlatformDeprovisionSource",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "New relic account id",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "sourceId",
      "description": "Id of source to deprovision",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "incidentIntelligencePlatformPagerdutySetAdmin",
    "description": "Set user as admin in PagerDuty",
    "type": {
     "name": "IncidentIntelligencePlatformPagerDutySetAdmin",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "New relic account id",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "user",
      "description": "User to set as admin",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "incidentIntelligencePlatformProvisionDestinationPagerduty",
    "description": "Provision a new PagerDuty destination",
    "type": {
     "name": "IncidentIntelligencePlatformProvisionDestinationPagerDuty",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "New relic account id",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "channelConfiguration",
      "description": "Destination behaviour configuration",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "IncidentIntelligencePlatformPagerDutyDestinationConfigurationInput",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "serviceId",
      "description": "PagerDuty service to set as destination",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "incidentIntelligencePlatformProvisionDestinationWebhook",
    "description": "Provision a new Webhook destination",
    "type": {
     "name": "IncidentIntelligencePlatformProvisionDestinationWebhook",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "New relic account id",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "channelConfiguration",
      "description": "Webhook destination configuration",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "IncidentIntelligencePlatformWebHookDestinationConfigurationInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "incidentIntelligencePlatformProvisionSourcePagerduty",
    "description": "Provision a new PagerDuty source",
    "type": {
     "name": "IncidentIntelligencePlatformProvisionSourcePagerDuty",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "New relic account id",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "serviceId",
      "description": "Id of service in PagerDuty",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "incidentIntelligencePlatformSyncServicesPagerduty",
    "description": "Sync services from PagerDuty",
    "type": {
     "name": "IncidentIntelligencePlatformSyncServicesPagerDuty",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "New relic account id",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "forceSync",
      "description": "Perform sync even if one was recently done",
      "type": {
       "name": "Boolean",
       "kind": "SCALAR"
      },
      "defaultValue": "false"
     }
    ]
   },
   {
    "name": "incidentIntelligencePlatformUpdateDestinationPagerduty",
    "description": "Update PagerDuty destination",
    "type": {
     "name": "IncidentIntelligencePlatformUpdateDestinationPagerDuty",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "New relic account id",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "channelConfiguration",
      "description": "Destination behaviour configuration",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "IncidentIntelligencePlatformPagerDutyDestinationConfigurationInput",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "destinationId",
      "description": "Id of destination to update",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "incidentIntelligencePlatformUpdateDestinationWebhook",
    "description": "Update Webhook destination",
    "type": {
     "name": "IncidentIntelligencePlatformUpdateDestinationWebhook",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "New relic account id",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "channelConfiguration",
      "description": "Destination behaviour configuration",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "IncidentIntelligencePlatformWebHookDestinationConfigurationInput",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "destinationId",
      "description": "Id of destination to update",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "enabled",
      "description": "Disable/Enable destination",
      "type": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    ]
   },
   {
    "name": "incidentIntelligencePlatformUpdatePathway",
    "description": "Update pathway",
    "type": {
     "name": "IncidentIntelligencePlatformUpdatePathway",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "New relic account id",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "pathway",
      "description": "Map between filters and destinations",
      "type": {
       "name": "IncidentIntelligencePlatformUpdatePathwayInput",
       "kind": "INPUT_OBJECT"
      }
     }
    ]
   },
   {
    "name": "incidentIntelligencePlatformUpdatePlatformPagerduty",
    "description": "Update platform",
    "type": {
     "name": "IncidentIntelligencePlatformUpdatePlatformPagerDuty",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "New relic account id",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "platformConfiguration",
      "description": "Parameters needed to perform platform operations",
      "type": {
       "name": "IncidentIntelligencePlatformPagerDutyPlatformConfigurationInput",
       "kind": "INPUT_OBJECT"
      }
     },
     {
      "name": "platformEnabled",
      "description": "Disable/Enable platform",
      "type": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     },
     {
      "name": "platformType",
      "description": "Platform type",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "IncidentIntelligencePlatformPlatforms",
        "kind": "ENUM"
       }
      }
     }
    ]
   },
   {
    "name": "infrastructureAgentRunIntegration",
    "description": "Activate an integration on a given host",
    "type": {
     "name": "InfrastructureAgentSendCommandResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "guid",
      "description": "The GUID of the host the process is running in",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "integrationArgs",
      "description": "An array of command-line arguments for the integration",
      "type": {
       "kind": "LIST",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "integrationName",
      "description": "The name of the integration",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "target",
      "description": "The target process for instrumentation.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "InfrastructureAgentTargetDetails",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "infrastructureAgentStopIntegration",
    "description": "Stop an integration on a given host",
    "type": {
     "name": "InfrastructureAgentSendCommandResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "guid",
      "description": "The GUID of the host the process is running in",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "integrationArgs",
      "description": "An array of arguments for the integration",
      "type": {
       "kind": "LIST",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "integrationName",
      "description": "The name of the integration",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "target",
      "description": "The target process for instrumentation.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "InfrastructureAgentTargetDetails",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "installationCreateInstallStatus",
    "description": "Creates a new install status.\nAn install status is created on behalf of the newrelic-cli whenever the CLI has started an installation and completed an installation.\n\nGuided install: https://docs.newrelic.com/docs/full-stack-observability/observe-everything/get-started/new-relic-guided-install-overview/\nnewrelic-cli: https://github.com/newrelic/newrelic-cli",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "InstallationInstallStatus",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "The accountId associated with the install status.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "installStatus",
      "description": "The installation status.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "InstallationInstallStatusInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "installationCreateRecipeEvent",
    "description": "Creates a new recipe event.\n- A recipe event is created on behalf of the newrelic-cli whenever the CLI attempts to install the infrastructure-agent, for example.\n- A recipe event is appended to any existing recipe events, if there are any present in the cache.\n\nGuided install: https://docs.newrelic.com/docs/full-stack-observability/observe-everything/get-started/new-relic-guided-install-overview/\nnewrelic-cli: https://github.com/newrelic/newrelic-cli",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "InstallationRecipeEvent",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "The accountId associated with the recipe event.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "status",
      "description": "The installation status associated with the recipe event.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "InstallationRecipeStatus",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "installationDeleteInstall",
    "description": "Deletes an installation status and all recipe statuses given the accountId.",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "The accountId associated with the installation.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "invitationsInviteUser",
    "description": "Invite a new user to the specified account",
    "type": {
     "name": "InvitationsInviteResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "ID of the account the new user will be invited to join",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "invitee",
      "description": "The user being invited",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "InvitationsInviteeInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "invitationsInviteUserToOrganization",
    "description": "Invite a new user to the Organization",
    "type": {
     "name": "InvitationsInviteUserToOrganizationResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "invitee",
      "description": "The user being invited",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "InvitationsInviteeInput",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "inviteeName",
      "description": "The name of the user being invited",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "sourceInfo",
      "description": "invite a teammate request source information",
      "type": {
       "name": "InvitationsSourceInfoInput",
       "kind": "INPUT_OBJECT"
      }
     }
    ]
   },
   {
    "name": "invitationsManageAddUserToOrganizationRequests",
    "description": "Manage add user to organization requests",
    "type": {
     "name": "InvitationsManageAddUserToOrganizationRequestsResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "addRequestResponse",
      "description": "The chosen admin response to the relevant requests",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "InvitationsAddUserRequestAdminResponse",
        "kind": "ENUM"
       }
      }
     },
     {
      "name": "requestIds",
      "description": "The request ids to update",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "ID",
          "kind": "SCALAR"
         }
        }
       }
      }
     },
     {
      "name": "requestResponseMessage",
      "description": "Optional admin message to the requested user",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    ]
   },
   {
    "name": "invitationsManageInviteUserToOrganizationRequests",
    "description": "Manage invite user to organization requests",
    "type": {
     "name": "InvitationsManageInviteUserToOrganizationRequestsResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "inviteRequestResponse",
      "description": "The chosen admin response to the relevant requests",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "InvitationsUserInviteRequestAdminResponse",
        "kind": "ENUM"
       }
      }
     },
     {
      "name": "inviteRequestResponseMessage",
      "description": "Optional admin message to the requested user",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "requestIds",
      "description": "The request ids to update",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "ID",
          "kind": "SCALAR"
         }
        }
       }
      }
     }
    ]
   },
   {
    "name": "invitationsManageUserUpgradeRequests",
    "description": "Manage user upgrade requests",
    "type": {
     "name": "InvitationsManageUserUpgradeRequestsResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "ID of the relevant account",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "requestResponse",
      "description": "The chosen admin response to the relevant requests",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "InvitationsUserUpgradeRequestAdminResponse",
        "kind": "ENUM"
       }
      }
     },
     {
      "name": "requestResponseMessage",
      "description": "Optional admin message to the user",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "requests",
      "description": "The request ids to update",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "Int",
          "kind": "SCALAR"
         }
        }
       }
      }
     }
    ]
   },
   {
    "name": "invitationsRequestAccess",
    "description": "Request access to higher user type",
    "type": {
     "name": "InvitationsRequestAccessResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "ID of the account to request access within",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "currentUserType",
      "description": "Users current user type",
      "type": {
       "name": "InvitationsRequestableUserType",
       "kind": "ENUM"
      }
     },
     {
      "name": "requestReason",
      "description": "Reason for the request",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "requestedUserType",
      "description": "New user type that the user is requesting access for",
      "type": {
       "name": "InvitationsRequestableUserType",
       "kind": "ENUM"
      }
     }
    ]
   },
   {
    "name": "keyTransactionCreate",
    "description": "Creates a key transaction.",
    "type": {
     "name": "KeyTransactionCreateResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "apdexTarget",
      "description": "The acceptable amount of the time spent in the backend before customers get frustrated (Apdex target).",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Float",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "applicationGuid",
      "description": "The GUID of the application.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "browserApdexTarget",
      "description": "The acceptable amount of time for rendering a page in a browser before customers get frustrated (browser Apdex target).",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Float",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "metricName",
      "description": "The name of the metric underlying this key transaction.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "name",
      "description": "The name of the key transaction.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "keyTransactionDelete",
    "description": "Deletes a key transaction (historical data is not removed).",
    "type": {
     "name": "KeyTransactionDeleteResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "guid",
      "description": "The GUID of the key transaction to delete.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "keyTransactionDeleteAllByApplicationId",
    "description": "Deletes all key transactions associated with an application (historical data is not removed).",
    "type": {
     "name": "KeyTransactionDeleteResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "guid",
      "description": "The GUID of the key transaction to delete.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "keyTransactionUpdate",
    "description": "Update a key transaction.",
    "type": {
     "name": "KeyTransactionUpdateResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "apdexTarget",
      "description": "The acceptable amount of time spent in the backend before customers get frustrated (Apdex target).",
      "type": {
       "name": "Float",
       "kind": "SCALAR"
      }
     },
     {
      "name": "browserApdexTarget",
      "description": "The acceptable amount of time for rendering a page in a browser before customers get frustrated (browser Apdex target).",
      "type": {
       "name": "Float",
       "kind": "SCALAR"
      }
     },
     {
      "name": "guid",
      "description": "The GUID for the affected key transaction.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "name",
      "description": "The name of the key transaction.",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    ]
   },
   {
    "name": "logConfigurationsCreateDataPartitionRule",
    "description": "Create a new data partition rule.",
    "type": {
     "name": "LogConfigurationsCreateDataPartitionRuleResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The account id associated with the data partition rule.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "rule",
      "description": "The data partition rule to be created.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "LogConfigurationsCreateDataPartitionRuleInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "logConfigurationsCreateObfuscationExpression",
    "description": "Create an obfuscation expression.",
    "type": {
     "name": "LogConfigurationsObfuscationExpression",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The account id associated with the obfuscation expression.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "expression",
      "description": "The obfuscation expression you want to create.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "LogConfigurationsCreateObfuscationExpressionInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "logConfigurationsCreateObfuscationRule",
    "description": "Create an obfuscation rule.",
    "type": {
     "name": "LogConfigurationsObfuscationRule",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The account id associated with the obfuscation rule.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "rule",
      "description": "The obfuscation rule you want to create.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "LogConfigurationsCreateObfuscationRuleInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "logConfigurationsCreateParsingRule",
    "description": "Create a new parsing rule.",
    "type": {
     "name": "LogConfigurationsCreateParsingRuleResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The account id associated with the rule.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "rule",
      "description": "The rule to be created.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "LogConfigurationsParsingRuleConfiguration",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "logConfigurationsDeleteDataPartitionRule",
    "description": "Delete an existing data partition rule.\nThis operation will result in data to be allocated in the main NRDB storage (Log) if no other data partition rule exists intercepting the logs matching this rule.\nA deleted data partition rule can be recreated using the same name.",
    "type": {
     "name": "LogConfigurationsDeleteDataPartitionRuleResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The account id associated with the data partition rule.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "id",
      "description": "The id of the data partition rule you want to mark as deleted.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "logConfigurationsDeleteObfuscationExpression",
    "description": "Delete an obfuscation expression.",
    "type": {
     "name": "LogConfigurationsObfuscationExpression",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The account id associated with the obfuscation expression.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "id",
      "description": "The id of the obfuscation expression to mark as deleted.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "logConfigurationsDeleteObfuscationRule",
    "description": "Delete an obfuscation rule.",
    "type": {
     "name": "LogConfigurationsObfuscationRule",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The account id associated with the obfuscation rule.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "id",
      "description": "The id of the obfuscation rule to mark as deleted.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "logConfigurationsDeleteParsingRule",
    "description": "Delete an existing parsing rule.",
    "type": {
     "name": "LogConfigurationsDeleteParsingRuleResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The account id associated with the rule.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "id",
      "description": "The id of the rule you want to mark as deleted.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "logConfigurationsUpdateDataPartitionRule",
    "description": "Update an existing data partition rule.",
    "type": {
     "name": "LogConfigurationsUpdateDataPartitionRuleResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The account id associated with the data partition rule.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "rule",
      "description": "The data partition rule to be updated. Only the rule description or Matching criteria fields are allowed to be updated.",
      "type": {
       "name": "LogConfigurationsUpdateDataPartitionRuleInput",
       "kind": "INPUT_OBJECT"
      }
     }
    ]
   },
   {
    "name": "logConfigurationsUpdateLiveArchiveConfiguration",
    "description": "Update the Live Archive configuration of an event type.",
    "type": {
     "name": "LogConfigurationsLiveArchiveConfiguration",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The account id associated with the EventType.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "enabled",
      "description": "Indicates if the Live Archive configuration is enabled",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Boolean",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "eventType",
      "description": "EventType name that will be configured.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "retentionPolicy",
      "description": "Retention policy for the EventType.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "LogConfigurationsLiveArchiveRetentionPolicyType",
        "kind": "ENUM"
       }
      }
     }
    ]
   },
   {
    "name": "logConfigurationsUpdateObfuscationExpression",
    "description": "Update an existing data partition rule.",
    "type": {
     "name": "LogConfigurationsObfuscationExpression",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The account id associated with the obfuscation expression.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "expression",
      "description": "The obfuscation expression to be updated.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "LogConfigurationsUpdateObfuscationExpressionInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "logConfigurationsUpdateObfuscationRule",
    "description": "Update an existing data partition rule.",
    "type": {
     "name": "LogConfigurationsObfuscationRule",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The account id associated with the obfuscation rule.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "rule",
      "description": "The obfuscation rule to be updated.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "LogConfigurationsUpdateObfuscationRuleInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "logConfigurationsUpdateParsingRule",
    "description": "Update an existing parsing rule.",
    "type": {
     "name": "LogConfigurationsUpdateParsingRuleResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The account id associated with the rule.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "id",
      "description": "The identifier of the rule to update.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "rule",
      "description": "The updated rule.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "LogConfigurationsParsingRuleConfiguration",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "logConfigurationsUpsertPipelineConfiguration",
    "description": "Upsert pipeline configuration for an account.",
    "type": {
     "name": "LogConfigurationsUpsertPipelineConfigurationResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The account id associated with the rule.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "pipelineConfiguration",
      "description": "The updated pipeline configuration.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "LogConfigurationsPipelineConfigurationInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "metricNormalizationCreateRule",
    "description": "Creates a metric normalization rule",
    "type": {
     "name": "MetricNormalizationRuleMutationResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account Id",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "rule",
      "description": "An input object that represents the rule to be created.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "MetricNormalizationCreateRuleInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "metricNormalizationDisableRule",
    "description": "Disables a metric normalization rule",
    "type": {
     "name": "MetricNormalizationRuleMutationResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account Id",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "ruleId",
      "description": "Rule id",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "metricNormalizationEditRule",
    "description": "edit a metric normalization rule",
    "type": {
     "name": "MetricNormalizationRuleMutationResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account Id",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "rule",
      "description": "An input object that represents the rule to be created.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "MetricNormalizationEditRuleInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "metricNormalizationEnableRule",
    "description": "Enables a metric normalization rule",
    "type": {
     "name": "MetricNormalizationRuleMutationResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account Id",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "ruleId",
      "description": "Rule id",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "mobilePushNotificationAddDevice",
    "description": "Add a mobile device that will receive push notifications",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "MobilePushNotificationDevice",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "appVersion",
      "description": "The version of the app.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "SemVer",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "deviceId",
      "description": "The uuid of the device.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "deviceName",
      "description": "The name of the device.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "deviceToken",
      "description": "The push notification token.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "SecureValue",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "operatingSystem",
      "description": "The OS this device is running (android/ios).",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "mobilePushNotificationRemoveDevice",
    "description": "Remove a mobile device from the users list of devices",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "MobilePushNotificationRemoveDeviceResult",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "deviceId",
      "description": "The uuid of the device.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "mobilePushNotificationSendTestPush",
    "description": "Send a test push notification to a users specific mobile device",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "MobilePushNotificationSendPushResult",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "deviceId",
      "description": "The uuid of the device.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "mobilePushNotificationSendTestPushToAll",
    "description": "Send a test push notification to all of a users mobile devices",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "MobilePushNotificationSendPushResult",
      "kind": "OBJECT"
     }
    }
   },
   {
    "name": "nerdStorageDeleteCollection",
    "description": "Delete a NerdStorage collection.\n\nTo use the NerdStorage schema you must specify a Nerdpack ID using the NewRelic-Package-Id header in your request.",
    "type": {
     "name": "NerdStorageDeleteResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "collection",
      "description": "The collection to be deleted.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "scope",
      "description": "The data access level and ID for the selected scope.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "NerdStorageScopeInput",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "scopeByActor",
      "type": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    ]
   },
   {
    "name": "nerdStorageDeleteDocument",
    "description": "Delete a NerdStorage document.\n\nTo use the NerdStorage schema you must specify a Nerdpack ID using the NewRelic-Package-Id header in your request.",
    "type": {
     "name": "NerdStorageDeleteResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "collection",
      "description": "The NerdStorage collection that the document being deleted belongs to.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "documentId",
      "description": "The documentId of the document to be deleted.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "scope",
      "description": "The data access level and ID for the selected scope.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "NerdStorageScopeInput",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "scopeByActor",
      "type": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    ]
   },
   {
    "name": "nerdStorageVaultDeleteSecret",
    "description": "Delete an existing secret for the selected scope.",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "NerdStorageVaultDeleteSecretResult",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "key",
      "description": "The unique identifier of the secret.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "scope",
      "description": "The NerdStorageVault data access level of the secret.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "NerdStorageVaultScope",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "nerdStorageVaultWriteSecret",
    "description": "Store or modify a secret.",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "NerdStorageVaultWriteSecretResult",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "scope",
      "description": "The type of scope the secret will be associated with.\nThe mutation allows for only one scope type at a time to add a secret.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "NerdStorageVaultScope",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "secret",
      "description": "The secrets data",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "NerdStorageVaultWriteSecretInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "nerdStorageWriteDocument",
    "description": "Create a new NerdStorage document.\n\nTo use the NerdStorage schema you must specify a Nerdpack ID using the NewRelic-Package-Id header in your request.",
    "type": {
     "name": "NerdStorageDocument",
     "kind": "SCALAR"
    },
    "args": [
     {
      "name": "collection",
      "description": "The NerdStorage collection to which the new document will be written.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "document",
      "description": "The new NerdStorage document to be written.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "NerdStorageDocument",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "documentId",
      "description": "The documentId for the newly created NerdStorage document.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "scope",
      "description": "The data access level and ID for the selected scope.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "NerdStorageScopeInput",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "scopeByActor",
      "type": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    ]
   },
   {
    "name": "nerdStoreDeleteCollection",
    "description": "Delete a Nerdstore collection.",
    "type": {
     "name": "NerdStoreDeleteResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "collection",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "scope",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "NerdStoreScopeInput",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "scopeByActor",
      "type": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    ]
   },
   {
    "name": "nerdStoreDeleteDocument",
    "description": "Delete a Nerdstore document.",
    "type": {
     "name": "NerdStoreDeleteResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "collection",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "documentId",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "scope",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "NerdStoreScopeInput",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "scopeByActor",
      "type": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    ]
   },
   {
    "name": "nerdStoreWriteDocument",
    "description": "Create a new Nerdstore document.",
    "type": {
     "name": "NerdStoreDocument",
     "kind": "SCALAR"
    },
    "args": [
     {
      "name": "collection",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "document",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "NerdStoreDocument",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "documentId",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "scope",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "NerdStoreScopeInput",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "scopeByActor",
      "type": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    ]
   },
   {
    "name": "nerdpackAddAllowedAccounts",
    "description": "Adds accounts to the Nerdpack allow list. The accounts must belong to the user's authorized account list.",
    "type": {
     "name": "NerdpackAllowListResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "allowList",
      "description": "Data of accounts to be added to the allow list.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "NerdpackAllowListInput",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "nerdpackId",
      "description": "Nerdpack id.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "nerdpackCreate",
    "description": "Creates a Nerdpack with a unique and random uuid V5.",
    "type": {
     "name": "NerdpackData",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "nerdpackData",
      "description": "Nerdpack input data.",
      "type": {
       "name": "NerdpackCreationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    ]
   },
   {
    "name": "nerdpackRemoveAllowedAccounts",
    "description": "Removes accounts from the Nerdpack allow list. The accounts must belong to the user's authorized account list.",
    "type": {
     "name": "NerdpackAllowListResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "allowList",
      "description": "Data of accounts to be removed from the allow list.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "NerdpackAllowListInput",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "nerdpackId",
      "description": "Nerdpack id.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "nerdpackRemoveVersionTag",
    "description": "Remove a specific nerdpack version tag. This operation can only be performed if:\n- User has untagging capabilities.\n- User has accepted the terms and conditions.\n- User's account is the Nerdpack owner, or is an authorized account, or is an admin account for the Nerdpack owner account.",
    "type": {
     "name": "NerdpackRemovedTagResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "nerdpackId",
      "description": "Nerdpack id.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "versionTag",
      "description": "Input data for nerdpack version tagging.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "NerdpackRemoveVersionTagInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "nerdpackSubscribeAccounts",
    "description": "Make a Nerdpack publication available to a list of accounts. Providing partial results.",
    "type": {
     "name": "NerdpackSubscribeResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "nerdpackId",
      "description": "Nerdpack id.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "subscription",
      "description": "Subscription data.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "NerdpackSubscribeAccountsInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "nerdpackTagVersion",
    "description": "Tag a Nerdpack version. This operation can only be performed if:\n- User has tagging capabilities.\n- User has accepted the terms and conditions.\n- User's account is the Nerdpack owner, or is an authorized account, or is an admin account for the Nerdpack owner account.",
    "type": {
     "name": "NerdpackVersion",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "nerdpackId",
      "description": "Nerdpack id.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "versionTag",
      "description": "Input data for nerdpack version tagging.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "NerdpackTagVersionInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "nerdpackUnsubscribeAccounts",
    "description": "Make a Nerdpack publication unavailable to a list of accounts. Providing partial results.",
    "type": {
     "name": "NerdpackUnsubscribeResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "nerdpackId",
      "description": "Nerdpack id.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "subscription",
      "description": "Subscription data.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "NerdpackUnsubscribeAccountsInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "networkMonitoringCreateAgentConfiguration",
    "description": "Creates a network agent configuration.",
    "type": {
     "name": "String",
     "kind": "SCALAR"
    },
    "args": [
     {
      "name": "configuration",
      "description": "Input object to create configuration.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "NetworkMonitoringCreateAgentConfigurationInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "networkMonitoringDeleteAgentConfiguration",
    "description": "Delete a network agent configuration.",
    "type": {
     "name": "String",
     "kind": "SCALAR"
    },
    "args": [
     {
      "name": "agentConfigurationId",
      "description": "Network configuration id to delete",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "networkMonitoringPublishAgentConfiguration",
    "description": "Publish the current version of a network agent's configuration. Only changes to specific fields will be stored",
    "type": {
     "name": "NetworkMonitoringPublishAgentConfigurationResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "agentConfigurationId",
      "description": "Network configuration id where devices will be updated",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "rawConfiguration",
      "description": "A raw json representation of network agent configuration with updated device discovery map from network agent",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "NetworkMonitoringRawConfiguration",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "networkMonitoringUpdateAgentConfiguration",
    "description": "Updates a network agent configuration.",
    "type": {
     "name": "String",
     "kind": "SCALAR"
    },
    "args": [
     {
      "name": "configuration",
      "description": "Input object to update configuration.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "NetworkMonitoringUpdateAgentConfigurationInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "newRelicServiceHealthCreateStatusNotificationConfiguration",
    "description": "Creates a new notification configuration allowing a user to receive status updates on New Relic health",
    "type": {
     "name": "String",
     "kind": "SCALAR"
    },
    "args": [
     {
      "name": "accounts",
      "description": "A list of accounts to be notified about",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "Int",
          "kind": "SCALAR"
         }
        }
       }
      }
     },
     {
      "name": "active",
      "description": "Whether or not notifications for this configuration will be sent out",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Boolean",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "email",
      "description": "The email address to send notifications to",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "name",
      "description": "A descriptive name to help delineate configurations",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "services",
      "description": "A list of services to be notified about",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "String",
          "kind": "SCALAR"
         }
        }
       }
      }
     }
    ]
   },
   {
    "name": "newRelicServiceHealthUpdateStatusNotificationConfiguration",
    "description": "update a notification configuration allowing a user to receive status updates on New Relic health",
    "type": {
     "name": "NewRelicServiceHealthNotificationConfiguration",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accounts",
      "description": "A list of accounts to be notified about",
      "type": {
       "kind": "LIST",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "active",
      "description": "Whether or not notifications for this configuration will be sent out",
      "type": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     },
     {
      "name": "email",
      "description": "The email address to send notifications to",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "name",
      "description": "A descriptive name to help delineate configurations",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "services",
      "description": "A list of services to be notified about",
      "type": {
       "kind": "LIST",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "uuid",
      "description": "A universally unique identifier for each notification configuration",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "notificationAuthenticationGenerateToken",
    "description": "Generates an auth token for the currently logged in user",
    "type": {
     "name": "NotificationAuthenticationGenerateTokenResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "userId",
      "description": "The New Relic User that is requesting the auth token",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "nr1CatalogCreateQuickstart",
    "description": "Submit a new quickstart to New Relic Instant Observability",
    "type": {
     "name": "Nr1CatalogCreateQuickstartResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "dryRun",
      "description": "Indicates whether this mutation should just perform validation",
      "type": {
       "name": "Boolean",
       "kind": "SCALAR"
      },
      "defaultValue": "false"
     },
     {
      "name": "quickstartMetadata",
      "description": "The metadata for the quickstart that will be available in New Relic Instant Observability",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Nr1CatalogQuickstartMetadataInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "nr1CatalogInstallAlertPolicyTemplate",
    "description": "Install an alert policy template on a given account for use in it",
    "type": {
     "name": "Nr1CatalogInstallAlertPolicyTemplateResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The id of the account to install the alert policy template on",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "alertPolicyTemplateId",
      "description": "The id of the alert policy template to install on the account",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "nr1CatalogInstallDashboardTemplate",
    "description": "Install a dashboard template on a given account for use in it",
    "type": {
     "name": "Nr1CatalogInstallDashboardTemplateResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The id of the account to install the dashboard template on",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "dashboardTemplateId",
      "description": "The id of the dashboard template to install on the account",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "nr1CatalogSetAutoInstallAlertPolicyTemplatesForDataSource",
    "description": "Sets the set of auto install dashboard templates for a data source",
    "type": {
     "name": "Nr1CatalogSetAutoInstallAlertPolicyTemplatesForDataSourceResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "alertPolicyTemplateIds",
      "description": "The set of alert policy template IDs that will be set as auto install alert policies for the data source",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "ID",
          "kind": "SCALAR"
         }
        }
       }
      }
     },
     {
      "name": "dataSourceId",
      "description": "The unique identifier for the data source",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "nr1CatalogSetAutoInstallDashboardTemplatesForDataSource",
    "description": "Sets the set of auto install dashboard templates for a data source",
    "type": {
     "name": "Nr1CatalogSetAutoInstallDashboardTemplatesForDataSourceResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "dashboardTemplateIds",
      "description": "The set of dashboard template IDs that will be set as auto install dashboards for the data source",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "ID",
          "kind": "SCALAR"
         }
        }
       }
      }
     },
     {
      "name": "dataSourceId",
      "description": "The unique identifier for the data source",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "nr1CatalogSetRequiredDataSourcesForAlertPolicyTemplate",
    "description": "Sets the set of required data sources for an alert policy template",
    "type": {
     "name": "Nr1CatalogSetRequiredDataSourcesForAlertPolicyTemplateResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "alertPolicyTemplateId",
      "description": "The unique identifier for the alert policy template",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "dataSourceIds",
      "description": "The set of data source IDs that will be set as required data sources for the alert policy template",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "ID",
          "kind": "SCALAR"
         }
        }
       }
      }
     }
    ]
   },
   {
    "name": "nr1CatalogSetRequiredDataSourcesForDashboardTemplate",
    "description": "Sets the set of required data sources for a dashboard template",
    "type": {
     "name": "Nr1CatalogSetRequiredDataSourcesForDashboardTemplateResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "dashboardTemplateId",
      "description": "The unique identifier for the dashboard template",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "dataSourceIds",
      "description": "The set of data source IDs that will be set as required data sources for the dashboard template",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "ID",
          "kind": "SCALAR"
         }
        }
       }
      }
     }
    ]
   },
   {
    "name": "nr1CatalogSubmitDataSource",
    "description": "Submit a data source that will be available in New Relic Instant Observability",
    "type": {
     "name": "Nr1CatalogSubmitDataSourceResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "dataSourceMetadata",
      "description": "The metadata for the data source that will be available in New Relic Instant Observability",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Nr1CatalogDataSourceMetadataInput",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "dryRun",
      "description": "Indicates whether this mutation should only perform validation",
      "type": {
       "name": "Boolean",
       "kind": "SCALAR"
      },
      "defaultValue": "false"
     },
     {
      "name": "id",
      "description": "The unique identifier for the data source",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "nr1CatalogSubmitInstallPlanStep",
    "description": "Submit an install plan step that will be used to facilitate installation of a quickstart in New Relic Instant Observability",
    "type": {
     "name": "Nr1CatalogSubmitInstallPlanStepResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "dryRun",
      "description": "Indicates whether this mutation should just perform validation",
      "type": {
       "name": "Boolean",
       "kind": "SCALAR"
      },
      "defaultValue": "false"
     },
     {
      "name": "installPlanStep",
      "description": "The metadata describing the install plan and how it should function",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Nr1CatalogInstallPlanStepInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "nr1CatalogSubmitMetadata",
    "description": "Submit metadata for a Nerdpack that will be available in the New Relic One Catalog",
    "type": {
     "name": "Nr1CatalogSubmitMetadataResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "id",
      "description": "The Nerdpack's ID that will be associated with the metadata",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "nerdpackMetadata",
      "description": "The metadata for the Nerdpack that will be available in the New Relic One Catalog",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Nr1CatalogSubmitMetadataInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "nr1CatalogSubmitQuickstart",
    "description": "Submit a quickstart that will be available in New Relic Instant Observability",
    "type": {
     "name": "Nr1CatalogSubmitQuickstartResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "dryRun",
      "description": "Indicates whether this mutation should just perform validation",
      "type": {
       "name": "Boolean",
       "kind": "SCALAR"
      },
      "defaultValue": "false"
     },
     {
      "name": "id",
      "description": "The unique identifier for the quickstart",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "quickstartMetadata",
      "description": "The metadata for the quickstart that will be available in New Relic Instant Observability",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Nr1CatalogQuickstartMetadataInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "nr1CatalogUpdateQuickstart",
    "description": "Update an existing quickstart in New Relic Instant Observability",
    "type": {
     "name": "Nr1CatalogUpdateQuickstartResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "dryRun",
      "description": "Indicates whether this mutation should just perform validation",
      "type": {
       "name": "Boolean",
       "kind": "SCALAR"
      },
      "defaultValue": "false"
     },
     {
      "name": "id",
      "description": "The unique identifier for the quickstart",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "quickstartMetadata",
      "description": "The metadata for the quickstart that will be available in New Relic Instant Observability",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Nr1CatalogQuickstartMetadataInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "nrqlDropRulesCreate",
    "description": "Create new drop rule(s).",
    "type": {
     "name": "NrqlDropRulesCreateDropRuleResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The account the targeted data report to.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "rules",
      "description": "The list of drop rules you want to create.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "name": "NrqlDropRulesCreateDropRuleInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     }
    ]
   },
   {
    "name": "nrqlDropRulesDelete",
    "description": "Delete drop rule(s) by id.",
    "type": {
     "name": "NrqlDropRulesDeleteDropRuleResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account the rule was created on.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "ruleIds",
      "description": "The list of drop rules Ids you want to delete.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     }
    ]
   },
   {
    "name": "nrqlLookupsDelete",
    "description": "Delete a lookup table.",
    "type": {
     "name": "NrqlLookupsLookupFileSummary",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The account that owns the table that will be deleted.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "name",
      "description": "The name of the table to delete.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "nrqlLookupsEdit",
    "description": "Edit the description of a lookup table.",
    "type": {
     "name": "NrqlLookupsLookupFileSummary",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The account that owns the table.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "description",
      "description": "The new description of the table. If this is an empty string, it will remove the existing description.",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "name",
      "description": "The name of the table. This must match an existing table. This operation does not allow you to change the name of an existing table.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "offerCopyCreateLegalCopy",
    "description": "Create the legal copy for a promotion",
    "type": {
     "name": "OfferCopyLegalCopy",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "customLegalAddendum",
      "description": "If the promotion requires custom language to the standard pre-release agreement the copy will be entered here and displayed after the standard agreement copy",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "customLegalRequired",
      "description": "True if the promotion requires custom legal terms",
      "type": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     },
     {
      "name": "customLegalStandalone",
      "description": "Stand-alone custom legal terms for customers that don’t need to see the standard agreement",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "offerTypeId",
      "description": "An identifier for the relating Offer object from Product Service",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "offerCopyCreateMarketingCopy",
    "description": "Create the marketing copy for a promotion",
    "type": {
     "name": "OfferCopyMarketingCopy",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "marketingDescription",
      "description": "The description to be used on the Promotion Marketing page. The field name correlates to that used on empty gate component.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "marketingDivider",
      "description": "True if there is subtext and need to display divider on the Promotion Marketing page. The field name correlates to that used on empty gate component.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Boolean",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "marketingExtraContent",
      "description": "Information needed to display image or video on the Promotion Marketing page. The field name correlates to that used on empty gate component",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "marketingLabelType",
      "description": "The label states the main purpose or type of message. Only allows GET_STARTED, MONITOR_MORE, GET_DATA_PLUS, GET_UPGRADED_ACCESS, and ERROR",
      "type": {
       "name": "OfferCopyMarketingLabelType",
       "kind": "ENUM"
      }
     },
     {
      "name": "marketingLink",
      "description": "An optional link to supporting documentation or extra information",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "marketingSubtext",
      "description": "Subtext to be used on the Promotion Marketing page. The field name correlates to that used on empty gate component.",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "marketingTitle",
      "description": "The title to be used on the Promotion Marketing page. The field name correlates to that used on empty gate component.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "marketingVideoUrl",
      "description": "An optional URL to a video or animation asset to support your message. Currently URLs for embedded Youtube and Wistia videos are supported",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "name",
      "description": "The name of the Promotion Offer used for customization and reporting",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "offerTypeId",
      "description": "An identifier for the relating Offer object from Product Service",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "requiredFeatureFlags",
      "description": "A list of feature flags required by the promotion",
      "type": {
       "kind": "LIST",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "thankYouCopy",
      "description": "Text that should be displayed on the thank you confirmation page after opt-in",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    ]
   },
   {
    "name": "offerCopyUpdateLegalCopy",
    "description": "Update the legal copy for a promotion",
    "type": {
     "name": "OfferCopyLegalCopy",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "customLegalAddendum",
      "description": "If the promotion requires custom language to the standard pre-release agreement the copy will be entered here and displayed after the standard agreement copy",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "customLegalRequired",
      "description": "True if the promotion requires custom legal terms",
      "type": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     },
     {
      "name": "customLegalStandalone",
      "description": "Stand-alone custom legal terms for customers that don’t need to see the standard agreement",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "offerTypeId",
      "description": "An identifier for the relating Offer object from Product Service",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "offerCopyUpdateMarketingCopy",
    "description": "Update marketing copy for a promotion",
    "type": {
     "name": "OfferCopyMarketingCopy",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "marketingDescription",
      "description": "The description to be used on the Promotion Marketing page. The field name correlates to that used on empty gate component.",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "marketingDivider",
      "description": "True if there is subtext and need to display divider on the Promotion Marketing page. The field name correlates to that used on empty gate component.",
      "type": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     },
     {
      "name": "marketingExtraContent",
      "description": "Information needed to display image or video on the Promotion Marketing page. The field name correlates to that used on empty gate component.",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "marketingLabelType",
      "description": "The label states the main purpose or type of message. Only allows GET_STARTED, MONITOR_MORE, GET_DATA_PLUS, GET_UPGRADED_ACCESS, and ERROR",
      "type": {
       "name": "OfferCopyMarketingLabelType",
       "kind": "ENUM"
      }
     },
     {
      "name": "marketingLink",
      "description": "An optional link to supporting documentation or extra information.",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "marketingSubtext",
      "description": "Subtext to be used on the Promotion Marketing page. The field name correlates to that used on empty gate component.",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "marketingTitle",
      "description": "The title to be used on the Promotion Marketing page. The field name correlates to that used on empty gate component.",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "marketingVideoUrl",
      "description": "An optional URL to a video or animation asset to support your message. Currently URLs for embedded Youtube and Wistia videos are supported.",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "name",
      "description": "The name of the Promotion Offer used for customization and reporting",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "offerTypeId",
      "description": "An identifier for the relating Offer object from Product Service",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "requiredFeatureFlags",
      "description": "A list of feature flags required by the promotion.",
      "type": {
       "kind": "LIST",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "thankYouCopy",
      "description": "Text that should be displayed on the thank you confirmation page after opt-in",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    ]
   },
   {
    "name": "openAgentManagementCreateConfiguration",
    "description": "Create a configuration in the specified account.",
    "type": {
     "name": "OpenAgentManagementConfiguration",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The account this configuration belongs to.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "agentType",
      "description": "The agent type this configuration is for.",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "configType",
      "description": "The type of the configuration.",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "configuration",
      "description": "The configuration parameters.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "OpenAgentManagementConfigurationInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "openAgentManagementCreateConfigurationRevision",
    "description": "Create a new revision for the specified configuration",
    "type": {
     "name": "OpenAgentManagementConfigurationRevision",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The account this configuration belongs to.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "configurationRevision",
      "description": "The revision parameters.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "OpenAgentManagementConfigurationRevisionInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "openAgentManagementCreateFleet",
    "description": "Create a fleet",
    "type": {
     "name": "OpenAgentManagementFleet",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The account the fleet belongs to.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "managedEntityType",
      "description": "The managed entity type for this fleet",
      "type": {
       "name": "OpenAgentManagementManagedEntityType",
       "kind": "ENUM"
      }
     },
     {
      "name": "name",
      "description": "The name of the fleet",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "openAgentManagementDeleteConfiguration",
    "description": "Delete a configuration",
    "type": {
     "name": "OpenAgentManagementDeleteConfigurationResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The account this configuration belongs to.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "configurationId",
      "description": "The id of the configuration to be updated",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "openAgentManagementDeleteConfigurationRevision",
    "description": "Delete a configuration revision",
    "type": {
     "name": "OpenAgentManagementDeleteConfigurationRevisionResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The account this configuration belongs to.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "configurationId",
      "description": "The id of the configuration.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "revisionNumber",
      "description": "The revision number.",
      "type": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    ]
   },
   {
    "name": "openAgentManagementDeleteFleet",
    "description": "Delete a fleet. Will return an error if there are entities associated to it.",
    "type": {
     "name": "OpenAgentManagementDeleteFleetResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The account the fleet belongs to.",
      "type": {
       "name": "Int",
       "kind": "SCALAR"
      }
     },
     {
      "name": "fleetGuid",
      "description": "The fleet entityGuid",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "openAgentManagementDeployFleet",
    "description": "Attach a set of configurations to a fleet",
    "type": {
     "name": "OpenAgentManagementDeployFleetConfigurationRevisionsResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The account the configurations belongs to.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "addEntities",
      "description": "A list of entities that will be added to the fleet during this deployment",
      "type": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EntityGuid",
         "kind": "SCALAR"
        }
       }
      }
     },
     {
      "name": "configurationRevisions",
      "description": "The set of configurations",
      "type": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "OpenAgentManagementFleetDeploymentInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     },
     {
      "name": "description",
      "description": "An optional description for the deployment",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "fleetGuid",
      "description": "The fleet entityGuid",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "name",
      "description": "User defined name for the deployment",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "removeEntities",
      "description": "A list of entities that will be removed to the fleet during this deployment",
      "type": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EntityGuid",
         "kind": "SCALAR"
        }
       }
      }
     }
    ]
   },
   {
    "name": "openAgentManagementSetManagedEntityAuthState",
    "description": "Set the auth state for the managed entity. All related agents will inherit this auth state",
    "type": {
     "name": "OpenAgentManagementSetManagedEntityAuthStateResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The account the entity belongs to",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "authState",
      "description": "Auth state for the entity and related agents",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "OpenAgentManagementAuthState",
        "kind": "ENUM"
       }
      }
     },
     {
      "name": "entityGuid",
      "description": "The Entity Guid for the managed entity",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "openAgentManagementUpdateConfiguration",
    "description": "Update metadata for a configuration.",
    "type": {
     "name": "OpenAgentManagementConfiguration",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The account this configuration belongs to.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "configuration",
      "description": "The configuration parameters.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "OpenAgentManagementConfigurationInput",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "configurationId",
      "description": "The id of the configuration to be updated",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "openAgentManagementUpdateFleet",
    "description": "Update a fleet.",
    "type": {
     "name": "OpenAgentManagementFleet",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The account this configuration belongs to.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "fleet",
      "description": "The fleet parameters.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "OpenAgentManagementFleetInput",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "fleetGuid",
      "description": "The fleet entityGuid",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "organizationCreate",
    "description": "The new organization to create.",
    "type": {
     "name": "OrganizationCreateOrganizationResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "customerId",
      "description": "The customer id in which the new organization will be created.",
      "type": {
       "name": "ID",
       "kind": "SCALAR"
      }
     },
     {
      "name": "newManagedAccount",
      "description": "The attributes of managed account to create. This is only required if sharedAccount field is not provided.",
      "type": {
       "name": "OrganizationNewManagedAccountInput",
       "kind": "INPUT_OBJECT"
      }
     },
     {
      "name": "organization",
      "description": "The attributes of organization to create.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "OrganizationCreateOrganizationInput",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "sharedAccount",
      "description": "The attributes of the account that will be shared with the new organization. This is only required if newManagedAccount field is not provided",
      "type": {
       "name": "OrganizationSharedAccountInput",
       "kind": "INPUT_OBJECT"
      }
     }
    ]
   },
   {
    "name": "organizationCreateSharedAccount",
    "description": "The shared account to create",
    "type": {
     "name": "OrganizationCreateSharedAccountResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "sharedAccount",
      "description": "The attributes for the account share.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "OrganizationCreateSharedAccountInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "organizationProvisioningUpdatePartnerSubscription",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "OrganizationProvisioningUpdateSubscriptionResult",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "Partner Owner Account Id for the Partnership that includes the affected account.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "affectedAccountId",
      "description": "Account id to which new entitlements will be applied",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "products",
      "description": "New entitlement set to be applied",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "OrganizationProvisioningProductInput",
          "kind": "INPUT_OBJECT"
         }
        }
       }
      }
     }
    ]
   },
   {
    "name": "organizationRevokeSharedAccount",
    "description": "The shared account to revoke",
    "type": {
     "name": "OrganizationRevokeSharedAccountResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "sharedAccount",
      "description": "The attributes for the revoked account share.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "OrganizationRevokeSharedAccountInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "organizationUpdate",
    "description": "The organization to update",
    "type": {
     "name": "OrganizationUpdateResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "organization",
      "description": "The new attributes for the organization.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "OrganizationUpdateInput",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "organizationId",
      "description": "The id of the organization to update",
      "type": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    ]
   },
   {
    "name": "organizationUpdateSharedAccount",
    "description": "The shared account to update",
    "type": {
     "name": "OrganizationUpdateSharedAccountResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "sharedAccount",
      "description": "The new attributes for the account share.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "OrganizationUpdateSharedAccountInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "partnershipMigrationMigrateAccount",
    "description": "Disconnects account from partnership and will eventually move to a standalone NR1 account",
    "type": {
     "name": "PartnershipMigrationMigrateAccountResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "New Relic account ID of account to be migrated",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "pixieLinkPixieProject",
    "description": "Link a Pixie project to a New Relic account using a Pixie API key",
    "type": {
     "name": "PixieLinkPixieProjectResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The New Relic account to link with Pixie",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "apiKey",
      "description": "The Pixie API key",
      "type": {
       "name": "SecureValue",
       "kind": "SCALAR"
      }
     }
    ]
   },
   {
    "name": "pixieRecordPixieTosAcceptance",
    "description": "Record the Pixie terms of service acceptance for a given account",
    "type": {
     "name": "PixieRecordPixieTosAcceptanceResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The New Relic account to link with Pixie",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "pixieUnlinkPixieProject",
    "description": "Unlink a Pixie project to a New Relic account",
    "type": {
     "name": "PixieLinkPixieProjectResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The New Relic account to link with Pixie",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "preReleaseProgramCreateProgram",
    "description": "Allows to create a new Pre Release Program",
    "type": {
     "name": "PreReleaseProgramProgram",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "customLegal",
      "description": "[Deprecated]: customLegal is deprecated. Use customLegalAddendum instead. If the program requires custom language to the standard pre-release agreement the copy will be entered here and displayed after the standard agreement copy.",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "customLegalAddendum",
      "description": "If the program requires custom language to the standard pre-release agreement the copy will be entered here and displayed after the standard agreement copy",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "customLegalRequired",
      "description": "True if the pre-release program requires custom legal terms.",
      "type": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     },
     {
      "name": "customLegalStandalone",
      "description": "Stand-alone custom legal terms copy for customers that don’t need to see the standard pre-release agreement",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "emailBody",
      "description": "Email body to use if emailCustomer is true",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "emailCustomer",
      "description": "A flag to determine whether or not to send a confirmation email to the customer upon signing up",
      "type": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     },
     {
      "name": "emailFrom",
      "description": "Email address to use as sender if emailCustomer is true",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "emailSubject",
      "description": "Email subject to use if emailCustomer is true",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "excludeEntitlements",
      "description": "A list of entitlements to be used for blocking access to sign-up for a preview. For example 'hipaa, fedramp' would not allow customers with either a hipaa entitlement or fedramp entitlement from signing up for the preview.",
      "type": {
       "kind": "LIST",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "excludeFeatureFlags",
      "description": "A list of feature flags to be excluded in the program pre release.",
      "type": {
       "kind": "LIST",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "excludeFedramp",
      "description": "[Deprecated]: excludeFedramp is deprecated. Use excludeEntitlements instead. If true don’t allow FedRAMP customers to sign-up.",
      "type": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     },
     {
      "name": "excludeHippa",
      "description": "[Deprecated]: excludeHippa is deprecated. Use excludeEntitlements instead. If true don’t allow HIPPA customers to sign-up.",
      "type": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     },
     {
      "name": "excludeTiers",
      "description": "A list of tiers to be used for blocking access to sign-up for a preview.",
      "type": {
       "kind": "LIST",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "formSubmitCopy",
      "description": "After accepting the pre-release agreement and submitting the form this field can allow the PM to customize the copy that appears on the form submit confirmation",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "includeEntitlements",
      "description": "A list of entitlements a user must have in order to be able to sign-up for a preview. For example, if set to 'query-based_pricing' only users with that entitlement can sign-up and those without it will not have access.",
      "type": {
       "kind": "LIST",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "includeFeatureFlags",
      "description": "A list of feature flags to be included in the program pre release.",
      "type": {
       "kind": "LIST",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "marketingDescription",
      "description": "The description to be used on the Preview Marketing page. The field name correlates to that used on empty gate component.",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "marketingDivider",
      "description": "True if there is subtext and need to display divider on the Preview Marketing page. The field name correlates to that used on empty gate component.",
      "type": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     },
     {
      "name": "marketingExtraContent",
      "description": "Information needed to display image or video on the Preview Marketing page. The field name correlates to that used on empty gate component.",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "marketingLabelType",
      "description": "The label states the main purpose or type of message. Only allows GET_STARTED, MONITOR_MORE, and GET_DATA_PLUS.",
      "type": {
       "name": "PreReleaseProgramProgramMarketingLabelType",
       "kind": "ENUM"
      }
     },
     {
      "name": "marketingLink",
      "description": "An optional link to supporting documentation or extra information.",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "marketingSubtext",
      "description": "Subtext to be used on the Preview Marketing page. The field name correlates to that used on empty gate component.",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "marketingTitle",
      "description": "The title to be used on the Preview Marketing page. The field name correlates to that used on empty gate component.",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "marketingVideoUrl",
      "description": "An optional URL to a video or animation asset to support your message. Currently URLs for embedded Youtube and Wistia videos are supported.",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "name",
      "description": "The name of the program used for customization and reporting",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "programType",
      "description": "Type of the Program. Default 'PREVIEW'.",
      "type": {
       "name": "PreReleaseProgramProgramType",
       "kind": "ENUM"
      }
     },
     {
      "name": "readableId",
      "description": "A unique identifier in kebab case for the preview program",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "scope",
      "description": "ORGANIZATION | ACCOUNT An identifier to determine if just the individual that completed agreement should have access to features, or the whole org",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "PreReleaseProgramProgramScope",
        "kind": "ENUM"
       }
      }
     },
     {
      "name": "status",
      "description": "Determines if program is Active or Inactive",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "PreReleaseProgramProgramStatus",
        "kind": "ENUM"
       }
      }
     },
     {
      "name": "team",
      "description": "List of internal email addresses to notify when a customer signs-up",
      "type": {
       "kind": "LIST",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "trialLength",
      "description": "Indicates how long, in milliseconds, the trial is for.",
      "type": {
       "name": "EpochMilliseconds",
       "kind": "SCALAR"
      }
     }
    ]
   },
   {
    "name": "preReleaseProgramCreateSubmission",
    "description": "Allows to submit an agreement for a specific Pre Release Program",
    "type": {
     "name": "PreReleaseProgramSubmission",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accepted",
      "description": "[Deprecated]: accepted is deprecated. Use agreementTypeAccepted instead. Wether or not the user accepted the terms of the program.",
      "type": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     },
     {
      "name": "accountId",
      "description": "The New Relic account ID you want to query for",
      "type": {
       "name": "Int",
       "kind": "SCALAR"
      }
     },
     {
      "name": "agreementTypeAccepted",
      "description": "Represents which version, if any, of the pre-release agreement a customer sees. Potential values are 'standard', 'standard+custom', 'custom-only', 'none'.",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "enabledDate",
      "description": "Date from which program will be available",
      "type": {
       "name": "EpochMilliseconds",
       "kind": "SCALAR"
      }
     },
     {
      "name": "expirationDate",
      "description": "Date until which the program will be available",
      "type": {
       "name": "EpochMilliseconds",
       "kind": "SCALAR"
      }
     },
     {
      "name": "programId",
      "description": "Program Id from which this submission belongs to",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "productRatingV2CreatePromoUsageMeter",
    "description": "Create a new promotion-usage meter mapping.",
    "type": {
     "name": "ProductRatingV2PromotionUsageMeter",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "promotionUsageMeter",
      "description": "The promotion mapping to create.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ProductRatingV2PromotionUsageMeterInsertInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "productRatingV2UpdatePromoUsageMeter",
    "description": "Update an existing promotion.",
    "type": {
     "name": "ProductRatingV2PromotionUsageMeter",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "promotionUsageMeter",
      "description": "The promotion to update.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ProductRatingV2PromotionUsageMeterUpdateInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "programmabilityTnCAccept",
    "description": "The user account provided in the `AccountInput` argument accepts the NR1 programmability terms and conditions.",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "ProgrammabilityTnCAccepted",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "account",
      "description": "Account data.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ProgrammabilityTnCAccountInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "provisioningAddAccountEntitlementBlocklistToAccounts",
    "description": "Adds an entitlement block to an account",
    "type": {
     "name": "ProvisioningEntitleAccountsResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountIds",
      "description": "Account ids to which the entitlement blocklist will be applied",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "Int",
          "kind": "SCALAR"
         }
        }
       }
      }
     },
     {
      "name": "authorizedBy",
      "description": "The email address of the person authorizing the blocked entitlement",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "entitlementName",
      "description": "Entitlement name to be applied as a blocklist",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "lowPriority",
      "description": "When true account entitlements will be refreshed in slow mode",
      "type": {
       "name": "Boolean",
       "kind": "SCALAR"
      },
      "defaultValue": "true"
     },
     {
      "name": "skipRefresh",
      "description": "When true account refreshes will not be enqueued",
      "type": {
       "name": "Boolean",
       "kind": "SCALAR"
      },
      "defaultValue": "false"
     }
    ]
   },
   {
    "name": "provisioningAddBetaEntitlementToAccounts",
    "description": "Adds a beta entitlement to an account",
    "type": {
     "name": "ProvisioningEntitleAccountsResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountIds",
      "description": "Account ids to which the entitlement will be applied",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "Int",
          "kind": "SCALAR"
         }
        }
       }
      }
     },
     {
      "name": "authorizedBy",
      "description": "The email address of the person authorizing the entitlement",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "entitlementName",
      "description": "Entitlement name to be applied",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "lowPriority",
      "description": "When true account entitlements will be refreshed in slow mode",
      "type": {
       "name": "Boolean",
       "kind": "SCALAR"
      },
      "defaultValue": "true"
     },
     {
      "name": "skipRefresh",
      "description": "When true account refreshes will not be enqueued",
      "type": {
       "name": "Boolean",
       "kind": "SCALAR"
      },
      "defaultValue": "false"
     }
    ]
   },
   {
    "name": "provisioningAddEntitlementToAccounts",
    "description": "Adds an entitlement to an account",
    "type": {
     "name": "ProvisioningEntitleAccountsResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountIds",
      "description": "Account ids to which the entitlement will be applied",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "Int",
          "kind": "SCALAR"
         }
        }
       }
      }
     },
     {
      "name": "authorizedBy",
      "description": "The email address of the person authorizing the entitlement",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "endDate",
      "description": "Timestamp representing when the entitlement will end",
      "type": {
       "name": "DateTime",
       "kind": "SCALAR"
      }
     },
     {
      "name": "entitlementName",
      "description": "Entitlement name to be applied",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "lowPriority",
      "description": "When true account entitlements will be refreshed in slow mode",
      "type": {
       "name": "Boolean",
       "kind": "SCALAR"
      },
      "defaultValue": "true"
     },
     {
      "name": "skipRefresh",
      "description": "When true account refreshes will not be enqueued",
      "type": {
       "name": "Boolean",
       "kind": "SCALAR"
      },
      "defaultValue": "false"
     }
    ]
   },
   {
    "name": "provisioningApplyAccountConfigurations",
    "description": "Applies an account configuration",
    "type": {
     "name": "ProvisioningAccountConfigurationResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountIds",
      "description": "Account IDs of the accounts we are applying the configuration to",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "Int",
          "kind": "SCALAR"
         }
        }
       }
      }
     },
     {
      "name": "dataSet",
      "description": "The key value pairs used to define the configuation",
      "type": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ProvisioningConfigurationKeyValuePairInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     },
     {
      "name": "enabled",
      "description": "The state to which you want to change to configuration",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Boolean",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "type",
      "description": "Configuration Type name for knowing the type of configuration",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "provisioningApplyAccountEnablementPackages",
    "description": "Applies an enablement package to an account",
    "type": {
     "name": "ProvisioningEnablementApplicationResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account id that the enablement is being applied to",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "enablementCode",
      "description": "The code for the enablement being applied to the account",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "lowPriority",
      "description": "When true account entitlements will be refreshed in slow mode",
      "type": {
       "name": "Boolean",
       "kind": "SCALAR"
      },
      "defaultValue": "true"
     }
    ]
   },
   {
    "name": "provisioningApplyEnablementToAccounts",
    "description": "Applies an enablement to an account",
    "type": {
     "name": "ProvisioningBulkApplicationResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountIds",
      "description": "Account ids that the enablement is being applied to",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "Int",
          "kind": "SCALAR"
         }
        }
       }
      }
     },
     {
      "name": "enablementCode",
      "description": "The code for the enablement being applied to the account",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "endDate",
      "description": "Timestamp representing when the enablement will end",
      "type": {
       "name": "DateTime",
       "kind": "SCALAR"
      }
     },
     {
      "name": "lowPriority",
      "description": "When true account entitlements will be refreshed in slow mode",
      "type": {
       "name": "Boolean",
       "kind": "SCALAR"
      },
      "defaultValue": "true"
     },
     {
      "name": "skipRefresh",
      "description": "When true account refreshes will not be enqueued",
      "type": {
       "name": "Boolean",
       "kind": "SCALAR"
      },
      "defaultValue": "false"
     }
    ]
   },
   {
    "name": "provisioningApplyPromoCodeToAccount",
    "description": "Applies a promotion to an account",
    "type": {
     "name": "ProvisioningPromotionApplicationResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account id that the promotion is being applied to",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "endDate",
      "description": "Timestamp representing when the promotion will end",
      "type": {
       "name": "DateTime",
       "kind": "SCALAR"
      }
     },
     {
      "name": "lowPriority",
      "description": "When true account entitlements will be refreshed in slow mode",
      "type": {
       "name": "Boolean",
       "kind": "SCALAR"
      },
      "defaultValue": "false"
     },
     {
      "name": "promotionCode",
      "description": "The code for the promotion being applied to the account",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "provisioningApplyPromotionToAccounts",
    "description": "Applies a promotion to one or many accounts",
    "type": {
     "name": "ProvisioningBulkApplicationResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountIds",
      "description": "Account ids that the promotion is being applied to",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "Int",
          "kind": "SCALAR"
         }
        }
       }
      }
     },
     {
      "name": "endDate",
      "description": "Timestamp representing when the promotion will end",
      "type": {
       "name": "DateTime",
       "kind": "SCALAR"
      }
     },
     {
      "name": "lowPriority",
      "description": "When true account entitlements will be refreshed in slow mode",
      "type": {
       "name": "Boolean",
       "kind": "SCALAR"
      },
      "defaultValue": "false"
     },
     {
      "name": "promotionCode",
      "description": "The code for the promotion being applied to the account",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "skipRefresh",
      "description": "When true account refreshes will not be enqueued",
      "type": {
       "name": "Boolean",
       "kind": "SCALAR"
      },
      "defaultValue": "false"
     }
    ]
   },
   {
    "name": "provisioningBulkAccountRefresh",
    "description": "Refreshes the entitlements on one or many accounts",
    "type": {
     "name": "ProvisioningBulkAccountRefreshPayload",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountIds",
      "description": "List of account IDs to refresh",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "Int",
          "kind": "SCALAR"
         }
        }
       }
      }
     }
    ]
   },
   {
    "name": "provisioningBulkCpmConversions",
    "description": "Converts legacy accounts to CPM",
    "type": {
     "name": "ProvisioningBulkCpmConversionsResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountIds",
      "description": "List of account IDs to convert to CPM",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "Int",
          "kind": "SCALAR"
         }
        }
       }
      }
     }
    ]
   },
   {
    "name": "provisioningBulkRemoveEnablementFromAccounts",
    "description": "Removes an enablement from a list of accounts",
    "type": {
     "name": "ProvisioningBulkApplicationResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountIds",
      "description": "Account ids that the enablement is being applied to",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "Int",
          "kind": "SCALAR"
         }
        }
       }
      }
     },
     {
      "name": "enablementCode",
      "description": "The code for the enablement being applied to the account",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "lowPriority",
      "description": "When true account entitlements will be refreshed in slow mode",
      "type": {
       "name": "Boolean",
       "kind": "SCALAR"
      },
      "defaultValue": "true"
     },
     {
      "name": "skipRefresh",
      "description": "When true account refreshes will not be enqueued",
      "type": {
       "name": "Boolean",
       "kind": "SCALAR"
      },
      "defaultValue": "false"
     }
    ]
   },
   {
    "name": "provisioningConvertAccountToNonProfit",
    "description": "Converts a standard account to a non-profit",
    "type": {
     "name": "ProvisioningConvertAccountResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID that will have Non Profit product applied to it",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "type",
      "description": "The type of non-profit",
      "type": {
       "name": "ProvisioningNonProfit",
       "kind": "ENUM"
      }
     }
    ]
   },
   {
    "name": "provisioningRefreshEntitlements",
    "description": "Refreshes the entitlements on an account",
    "type": {
     "name": "ProvisioningRefreshEntitlementResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID that will have its entitlements refreshed",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "linkId",
      "description": "Link ID to associate this entitlement refresh with",
      "type": {
       "name": "Int",
       "kind": "SCALAR"
      }
     },
     {
      "name": "linkType",
      "description": "Link Type to associate this entitlement refresh with",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    ]
   },
   {
    "name": "provisioningRemoveAccountEnablementPackages",
    "description": "Removes an enablement package from an account",
    "type": {
     "name": "ProvisioningEnablementRemovalResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account id that the enablement is being removed from",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "enablementCode",
      "description": "The code for the enablement being removed from the account",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "lowPriority",
      "description": "When true account entitlements will be refreshed in slow mode",
      "type": {
       "name": "Boolean",
       "kind": "SCALAR"
      },
      "defaultValue": "true"
     }
    ]
   },
   {
    "name": "provisioningRemoveAccountEntitlementBlocklistFromAccounts",
    "description": "Removes an entitlement block from a list of accounts",
    "type": {
     "name": "ProvisioningEntitleAccountsResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountIds",
      "description": "Account ids from which the entitlement blocklist will be removed",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "Int",
          "kind": "SCALAR"
         }
        }
       }
      }
     },
     {
      "name": "authorizedBy",
      "description": "The email address of the person authorizing the blocked entitlement",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "entitlementName",
      "description": "Entitlement name to be removed as a blocklist",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "lowPriority",
      "description": "When true account entitlements will be refreshed in slow mode",
      "type": {
       "name": "Boolean",
       "kind": "SCALAR"
      },
      "defaultValue": "true"
     },
     {
      "name": "skipRefresh",
      "description": "When true account refreshes will not be enqueued",
      "type": {
       "name": "Boolean",
       "kind": "SCALAR"
      },
      "defaultValue": "false"
     }
    ]
   },
   {
    "name": "provisioningRemoveBetaEntitlementFromAccounts",
    "description": "Removes a beta entitlement from a list of accounts",
    "type": {
     "name": "ProvisioningEntitleAccountsResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountIds",
      "description": "Account ids from which the entitlement will be removed",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "Int",
          "kind": "SCALAR"
         }
        }
       }
      }
     },
     {
      "name": "entitlementName",
      "description": "Entitlement name to be removed",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "lowPriority",
      "description": "When true account entitlements will be refreshed in slow mode",
      "type": {
       "name": "Boolean",
       "kind": "SCALAR"
      },
      "defaultValue": "true"
     },
     {
      "name": "skipRefresh",
      "description": "When true account refreshes will not be enqueued",
      "type": {
       "name": "Boolean",
       "kind": "SCALAR"
      },
      "defaultValue": "false"
     }
    ]
   },
   {
    "name": "provisioningRemoveEntitlementFromAccounts",
    "description": "Removes an entitlement from a list of accounts",
    "type": {
     "name": "ProvisioningEntitleAccountsResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountIds",
      "description": "Account ids from which the entitlement will be removed",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "Int",
          "kind": "SCALAR"
         }
        }
       }
      }
     },
     {
      "name": "authorizedBy",
      "description": "The email address of the person authorizing the entitlement",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "entitlementName",
      "description": "Entitlement name to be removed",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "lowPriority",
      "description": "When true account entitlements will be refreshed in slow mode",
      "type": {
       "name": "Boolean",
       "kind": "SCALAR"
      },
      "defaultValue": "true"
     },
     {
      "name": "skipRefresh",
      "description": "When true account refreshes will not be enqueued",
      "type": {
       "name": "Boolean",
       "kind": "SCALAR"
      },
      "defaultValue": "false"
     }
    ]
   },
   {
    "name": "provisioningRemovePlatformRecord",
    "description": "Removes the database record that indicates that an account is a CPM account",
    "type": {
     "kind": "LIST",
     "ofType": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ProvisioningRemovePlatformResult",
       "kind": "OBJECT"
      }
     }
    },
    "args": [
     {
      "name": "accountIds",
      "description": "Account IDs for the platform records to be removed",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "Int",
          "kind": "SCALAR"
         }
        }
       }
      }
     }
    ]
   },
   {
    "name": "provisioningRemovePromotionFromAccount",
    "description": "Removes a promotion from an account",
    "type": {
     "name": "ProvisioningPromotionRemovalResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The id of the account that the promo code is being removed from",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "lowPriority",
      "description": "When true account entitlements will be refreshed in slow mode",
      "type": {
       "name": "Boolean",
       "kind": "SCALAR"
      },
      "defaultValue": "true"
     },
     {
      "name": "promotionCode",
      "description": "Promotion code for the promotion being removed",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "provisioningRemovePromotionFromAccounts",
    "description": "Removes a promotion from a list of accounts",
    "type": {
     "name": "ProvisioningBulkApplicationResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountIds",
      "description": "Account ids that the promotion is being applied to",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "Int",
          "kind": "SCALAR"
         }
        }
       }
      }
     },
     {
      "name": "lowPriority",
      "description": "When true account entitlements will be refreshed in slow mode",
      "type": {
       "name": "Boolean",
       "kind": "SCALAR"
      },
      "defaultValue": "true"
     },
     {
      "name": "promotionCode",
      "description": "The code for the promotion being applied to the account",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "skipRefresh",
      "description": "When true account refreshes will not be enqueued",
      "type": {
       "name": "Boolean",
       "kind": "SCALAR"
      },
      "defaultValue": "false"
     }
    ]
   },
   {
    "name": "provisioningToggleAccountConfiguration",
    "description": "Toggles on and off an account configuration",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "ProvisioningAccountConfigurationResult",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID of the account we are toggling the configuration on",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "enabled",
      "description": "The state to which you want to change to configuration",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Boolean",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "lowPriority",
      "description": "When true account entitlements will be refreshed in slow mode",
      "type": {
       "name": "Boolean",
       "kind": "SCALAR"
      },
      "defaultValue": "true"
     },
     {
      "name": "type",
      "description": "Configuration Type name for knowing the type of configuration",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "provisioningUpdateAccountConfiguration",
    "description": "Updates an account configuration",
    "type": {
     "name": "ProvisioningAccountConfigurationResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account ID of the account we are toggling the configuration on",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "dataSet",
      "description": "The key value pairs used to define the configuation",
      "type": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ProvisioningConfigurationKeyValuePairInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     },
     {
      "name": "lowPriority",
      "description": "When true account entitlements will be refreshed in slow mode",
      "type": {
       "name": "Boolean",
       "kind": "SCALAR"
      },
      "defaultValue": "true"
     },
     {
      "name": "type",
      "description": "Configuration Type name for knowing the type of configuration",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "provisioningUpdateAccountEntitlement",
    "description": "Updates an account entitlement",
    "type": {
     "name": "ProvisioningEntitleAccountsResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountIds",
      "description": "Account ids to which the entitlement will be applied",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "Int",
          "kind": "SCALAR"
         }
        }
       }
      }
     },
     {
      "name": "authorizedBy",
      "description": "The email address of the person authorizing the entitlement",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "endDate",
      "description": "Timestamp representing when the entitlement will end",
      "type": {
       "name": "DateTime",
       "kind": "SCALAR"
      }
     },
     {
      "name": "entitlementName",
      "description": "Entitlement name to be applied",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "lowPriority",
      "description": "When true account entitlements will be refreshed in slow mode",
      "type": {
       "name": "Boolean",
       "kind": "SCALAR"
      },
      "defaultValue": "true"
     },
     {
      "name": "propertyName",
      "description": "The name of the property being updated",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "propertyQuantity",
      "description": "The quantity set for the property",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "skipRefresh",
      "description": "When true account refreshes will not be enqueued",
      "type": {
       "name": "Boolean",
       "kind": "SCALAR"
      },
      "defaultValue": "false"
     }
    ]
   },
   {
    "name": "provisioningUpdateSubscriptions",
    "description": "Updates the subscription on an account",
    "type": {
     "kind": "NON_NULL",
     "ofType": {
      "name": "ProvisioningUpdateSubscriptionResult",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "Account id to which new entitlements will be applied",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "enableConsumptionPricing",
      "description": "Setting this to true will convert a legacy account to a CPM account, necessary to apply CPM products. This is not reversible.",
      "type": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     },
     {
      "name": "products",
      "description": "New entitlement set to be applied",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "ProvisioningProductInput",
          "kind": "INPUT_OBJECT"
         }
        }
       }
      }
     }
    ]
   },
   {
    "name": "queryHistoryRecordNrql",
    "description": "Record a NRQL query in the user's query history.",
    "type": {
     "name": "QueryHistoryRecordNrqlResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "query",
      "description": "NRQL query to be recorded.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "QueryHistoryRecordNrqlInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "referenceEntityCreateOrUpdateRepository",
    "description": "Creates or updates repository entities.",
    "type": {
     "name": "ReferenceEntityCreateRepositoryResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "repositories",
      "description": "The list of repositories to create or update.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "ReferenceEntityCreateRepositoryInput",
          "kind": "INPUT_OBJECT"
         }
        }
       }
      }
     },
     {
      "name": "sync",
      "description": "Flag to force a synchronous execution of the mutation, which means that the entity has been stored once the mutation returns. Default is 'false', which means the entity is queued for storage.",
      "type": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    ]
   },
   {
    "name": "rootCauseAnalysisSubmit",
    "description": "This submits a request for a root cause analysis",
    "type": {
     "name": "RootCauseAnalysisAsyncResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "entityGuid",
      "description": "A unique entity identifier.",
      "type": {
       "name": "EntityGuid",
       "kind": "SCALAR"
      }
     },
     {
      "name": "filter",
      "description": "Contains the set of filters to apply to the query",
      "type": {
       "name": "RootCauseAnalysisSearchFilter",
       "kind": "INPUT_OBJECT"
      }
     }
    ]
   },
   {
    "name": "savedViewsCreate",
    "description": "Create a new Saved View.",
    "type": {
     "name": "SavedViewsCreateResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "account",
      "description": "The account id of the saved view owner.",
      "type": {
       "name": "Int",
       "kind": "SCALAR"
      }
     },
     {
      "name": "additionalData",
      "description": "Unstructured arbitrary data associated with the Saved View.",
      "type": {
       "name": "SavedViewsRawAdditionalData",
       "kind": "SCALAR"
      }
     },
     {
      "name": "capability",
      "description": "The optional Capability the Saved View is scoped to.",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "favorite",
      "description": "Define if a saved view is a favorite for the user making the request.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Boolean",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "filter",
      "description": "Define the saved view filter to be persisted e.g. A common query for Entity Explorer.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Nrql",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "name",
      "description": "Name of the saved view.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "viewType",
      "description": "Define how the saved view should be shown to the user in the UI (Tiles/Table).",
      "type": {
       "name": "SavedViewsViewType",
       "kind": "ENUM"
      }
     },
     {
      "name": "visibility",
      "description": "Visibility of a saved view.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "SavedViewsVisibility",
        "kind": "ENUM"
       }
      },
      "defaultValue": "SHARED"
     }
    ]
   },
   {
    "name": "savedViewsDelete",
    "description": "Delete a saved view.",
    "type": {
     "name": "SavedViewsDeleteResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "id",
      "description": "Unique identifier of the saved view.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "savedViewsUpdate",
    "description": "Update a saved view.",
    "type": {
     "name": "SavedViewsUpdateResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "account",
      "description": "The account id of the saved view owner.",
      "type": {
       "name": "Int",
       "kind": "SCALAR"
      }
     },
     {
      "name": "additionalData",
      "description": "Unstructured arbitrary data associated with the Saved View.",
      "type": {
       "name": "SavedViewsRawAdditionalData",
       "kind": "SCALAR"
      }
     },
     {
      "name": "capability",
      "description": "The optional Capability the Saved View is scoped to.",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "creator",
      "description": "Change the ownership of a saved view. Only admins are allowed to change this.",
      "type": {
       "name": "Int",
       "kind": "SCALAR"
      }
     },
     {
      "name": "favorite",
      "description": "Define if a saved view is a favorite for the user making the request, can only be applied if the user is the creator of the saved view.",
      "type": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     },
     {
      "name": "filter",
      "description": "Define the saved view filter to be persisted e.g. A common query for Entity Explorer.",
      "type": {
       "name": "Nrql",
       "kind": "SCALAR"
      }
     },
     {
      "name": "id",
      "description": "Unique identifier of the saved view.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "name",
      "description": "Name of the saved view.",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "viewType",
      "description": "Define how the saved view should be shown to the user in the UI (Tiles/Table).",
      "type": {
       "name": "SavedViewsViewType",
       "kind": "ENUM"
      }
     },
     {
      "name": "visibility",
      "description": "Visibility of a saved view.",
      "type": {
       "name": "SavedViewsVisibility",
       "kind": "ENUM"
      }
     }
    ]
   },
   {
    "name": "serverSideInstrumentationDisable",
    "description": "Disable custom Instrumentation",
    "type": {
     "name": "ServerSideInstrumentationDisableResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "guid",
      "description": "The GUID for the affected entity.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "serverSideInstrumentationEnable",
    "description": "Enable custom Instrumentation",
    "type": {
     "name": "ServerSideInstrumentationEnableResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "guid",
      "description": "The GUID for the affected entity.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "serverSideInstrumentationUpdatePointcuts",
    "description": "Update pointcuts for Java app",
    "type": {
     "name": "ServerSideInstrumentationUpdatePointcutsResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "enabled",
      "description": "Sets whether instrmentation enabled or not",
      "type": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     },
     {
      "name": "guid",
      "description": "The GUID for the affected entity.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "pointcuts",
      "description": "Sets the pointcuts",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "ServerSideInstrumentationPointcutsInput",
          "kind": "INPUT_OBJECT"
         }
        }
       }
      }
     }
    ]
   },
   {
    "name": "serverSideInstrumentationUpload",
    "description": "Upload a new Custom Instrumentation",
    "type": {
     "name": "ServerSideInstrumentationUploadResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "guid",
      "description": "The GUID for the affected entity.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "xml",
      "description": "Custom instrumentation configuration",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "serviceLevelCreate",
    "description": "Creates a new SLI.",
    "type": {
     "name": "ServiceLevelIndicator",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "entityGuid",
      "description": "The entity GUID which the SLI will be attached to.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "indicator",
      "description": "The input object that represents the SLI that will be created.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ServiceLevelIndicatorCreateInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "serviceLevelCreateRecommendedIndicators",
    "description": "Creates a new SLI with recommended indicators.",
    "type": {
     "name": "ServiceLevelRecommendedIndicatorsCreationResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "entityGuid",
      "description": "The entity GUID which the SLI will be attached to.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "serviceLevelDelete",
    "description": "Deletes an existing SLI by the GUID.",
    "type": {
     "name": "ServiceLevelIndicator",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "guid",
      "description": "The unique entity identifier of the SLI.",
      "type": {
       "name": "EntityGuid",
       "kind": "SCALAR"
      }
     },
     {
      "name": "id",
      "description": "[DEPRECATED] Please, use the GUID input field to delete the SLI.",
      "type": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    ]
   },
   {
    "name": "serviceLevelUpdate",
    "description": "Updates an existing SLI by the GUID.",
    "type": {
     "name": "ServiceLevelIndicator",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "guid",
      "description": "The unique entity identifier of the SLI.",
      "type": {
       "name": "EntityGuid",
       "kind": "SCALAR"
      }
     },
     {
      "name": "id",
      "description": "[DEPRECATED] Please, use the GUID input field to update the SLI.",
      "type": {
       "name": "ID",
       "kind": "SCALAR"
      }
     },
     {
      "name": "indicator",
      "description": "The input object that represents the SLI that will be updated.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ServiceLevelIndicatorUpdateInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "signupIntegrationsBulkCreatePromoCodes",
    "description": "Creates a PromoCodes in bulk. Returns an array with the PromoCodes created.",
    "type": {
     "name": "SignupIntegrationsBulkCreatePromoCodesResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "expiresOn",
      "description": "expires_on",
      "type": {
       "name": "DateTime",
       "kind": "SCALAR"
      }
     },
     {
      "name": "integrationId",
      "description": "The Partnership id",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "issuedOn",
      "description": "issued on",
      "type": {
       "name": "DateTime",
       "kind": "SCALAR"
      }
     },
     {
      "name": "promoCode",
      "description": "Set this if you want a promo code to created with a specific string",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "promoCodeSize",
      "description": "The size of the promo code to create",
      "type": {
       "name": "Int",
       "kind": "SCALAR"
      }
     },
     {
      "name": "promoKey",
      "description": "the promotions.code from Product Configuration database",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "quantity",
      "description": "How many promo codes to create",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "reusable",
      "description": "Can the promo code be reapplied",
      "type": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     },
     {
      "name": "urlForInvalid",
      "description": "The url to redirect to if the promo code is invalid",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "urlForValid",
      "description": "The url to redirect to if the promo code is valid",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    ]
   },
   {
    "name": "streamingExportCreateRule",
    "description": "Create new streaming rule",
    "type": {
     "name": "StreamingExportRule",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The New Relic account to export data from",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "awsParameters",
      "description": "AWS information needed for the data to be exported",
      "type": {
       "name": "StreamingExportAwsInput",
       "kind": "INPUT_OBJECT"
      }
     },
     {
      "name": "azureParameters",
      "description": "Azure information needed for the data to be exported",
      "type": {
       "name": "StreamingExportAzureInput",
       "kind": "INPUT_OBJECT"
      }
     },
     {
      "name": "gcpParameters",
      "description": "GCP information needed for the streaming rule to be updated",
      "type": {
       "name": "StreamingExportGcpInput",
       "kind": "INPUT_OBJECT"
      }
     },
     {
      "name": "ruleParameters",
      "description": "Information about the data to be exported",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "StreamingExportRuleInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "streamingExportDeleteRule",
    "description": "Delete a streaming rule",
    "type": {
     "name": "StreamingExportRule",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "id",
      "description": "The id of the streaming rule to delete",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "streamingExportDisableRule",
    "description": "Disable an existing streaming rule",
    "type": {
     "name": "StreamingExportRule",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "id",
      "description": "The id of the streaming rule to disable",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "streamingExportEnableRule",
    "description": "Enable an existing streaming rule",
    "type": {
     "name": "StreamingExportRule",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "id",
      "description": "The id of the streaming rule to enable",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "streamingExportUpdateRule",
    "description": "Update an existing streaming rule",
    "type": {
     "name": "StreamingExportRule",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "awsParameters",
      "description": "AWS information needed for the streaming rule to be updated",
      "type": {
       "name": "StreamingExportAwsInput",
       "kind": "INPUT_OBJECT"
      }
     },
     {
      "name": "azureParameters",
      "description": "Azure information needed for the streaming rule to be updated",
      "type": {
       "name": "StreamingExportAzureInput",
       "kind": "INPUT_OBJECT"
      }
     },
     {
      "name": "gcpParameters",
      "description": "GCP information needed for the streaming rule to be updated",
      "type": {
       "name": "StreamingExportGcpInput",
       "kind": "INPUT_OBJECT"
      }
     },
     {
      "name": "id",
      "description": "The id of the streaming rule to update",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "ruleParameters",
      "description": "The information needed for the streaming rule to be updated",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "StreamingExportRuleInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "supportAttachmentDelete",
    "description": "Deletes a file attached to a support ticket",
    "type": {
     "name": "SupportAttachmentDeleteResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "id",
      "description": "The id of the file",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "ticketId",
      "description": "The id of the ticket file is associated with",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "supportDiagnosticsCategoryCreate",
    "description": "Creates category for Guided Diagnostics",
    "type": {
     "name": "SupportGuidedDiagnosticsCategory",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "category",
      "description": "The category",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "SupportCategoryCreateInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "supportDiagnosticsCategoryDelete",
    "description": "Deletes category for Guided Diagnostics",
    "type": {
     "name": "SupportGuidedDiagnosticsDeleteResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "id",
      "description": "The category id to delete",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "supportDiagnosticsCategoryUpdate",
    "description": "Updates category for Guided Diagnostics",
    "type": {
     "name": "SupportGuidedDiagnosticsCategory",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "category",
      "description": "The category",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "SupportCategoryUpdateInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "supportDiagnosticsEdgeCreate",
    "description": "Creates edge for Guided Diagnostics",
    "type": {
     "name": "SupportGuidedDiagnosticsEdge",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "edge",
      "description": "The edge",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "SupportEdgeCreateInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "supportDiagnosticsEdgeDelete",
    "description": "Deletes edge for Guided Diagnostics",
    "type": {
     "name": "SupportGuidedDiagnosticsEdgeDeleteResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "edge",
      "description": "The edge to delete",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "SupportEdgeDeleteInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "supportDiagnosticsFrameworkCreate",
    "description": "Creates a new framework or new framework revision for Guided Diagnostics",
    "type": {
     "name": "SupportGuidedDiagnosticsFramework",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "framework",
      "description": "The framework",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "SupportFrameworkCreateInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "supportDiagnosticsFrameworkDelete",
    "description": "Deletes framework for Guided Diagnostics",
    "type": {
     "name": "SupportGuidedDiagnosticsDeleteResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "id",
      "description": "The framework id to delete",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "supportDiagnosticsFrameworkUpdateActiveRevision",
    "description": "Updates active framework revision",
    "type": {
     "name": "SupportGuidedDiagnosticsFramework",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "id",
      "description": "The framework id",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "revision",
      "description": "The framework revision id",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "supportDiagnosticsFrameworkUpdateState",
    "description": "Updates framework state",
    "type": {
     "name": "SupportGuidedDiagnosticsFramework",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "id",
      "description": "The framework id",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "state",
      "description": "The framework state",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "SupportStateType",
        "kind": "ENUM"
       }
      }
     }
    ]
   },
   {
    "name": "supportDiagnosticsNerdgraphQueryAdd",
    "description": "Add a Nerdgraph query for use with Guided Diagnostics",
    "type": {
     "name": "SupportDiagnosticsNerdgraphQueryMutationResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "nerdgraphQuery",
      "description": "The input that describes the query",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "SupportDiagnosticsNerdgraphQueryCreateInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "supportDiagnosticsNerdgraphQueryDelete",
    "description": "Delete a Guided Diagnostics Query",
    "type": {
     "name": "SupportDiagnosticsQueryDeleteResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "id",
      "description": "The query id to delete",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "supportDiagnosticsNodeCreate",
    "description": "Creates node for Guided Diagnostics",
    "type": {
     "name": "SupportGuidedDiagnosticsNode",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "node",
      "description": "The node",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "SupportNodeCreateInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "supportDiagnosticsNodeDelete",
    "description": "Deletes node for Guided Diagnostics",
    "type": {
     "name": "SupportGuidedDiagnosticsDeleteResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "id",
      "description": "The node id to delete",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "supportDiagnosticsQueryAdd",
    "description": "Add a query for use with Guided Diagnostics",
    "type": {
     "name": "SupportDiagnosticsQueryMutationResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "query",
      "description": "The input that describes the query",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "SupportDiagnosticsQueryCreateInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "supportDiagnosticsQueryDelete",
    "description": "Delete a Guided Diagnostics Query",
    "type": {
     "name": "SupportDiagnosticsQueryDeleteResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "id",
      "description": "The query id to delete",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "supportStartChat",
    "description": "Starts a chat session",
    "type": {
     "name": "SupportChatSession",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The account associated with the case",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "email",
      "description": "The case requester's email",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "firstName",
      "description": "The case requester's first name",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "lastName",
      "description": "The case requester's last name",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "sfAccountId",
      "description": "The Salesforce account ID of the case",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "sfCaseId",
      "description": "The Salesforce ID for the case",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "sfContactId",
      "description": "The Salesforce contact ID of the case requester",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "supportTicketAttachmentCreate",
    "description": "Create an attachment for a support ticket or ticket comment",
    "type": {
     "name": "SupportTicketAttachment",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "filename",
      "description": "The filename for the attachment",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "supportTicketAttachmentLink",
    "description": "Links attachment to support ticket",
    "type": {
     "name": "SupportTicketAttachmentLinkResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "attachments",
      "description": "Attachment Ids to link to ticket",
      "type": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      }
     },
     {
      "name": "ticketId",
      "description": "The filename for the attachment",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "supportTicketCollaboratorsAdd",
    "description": "Adds collaborators to the ticket",
    "type": {
     "name": "SupportTicketCollaboratorsResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "collaboratorEmails",
      "description": "The email addresses of the collaborators to add",
      "type": {
       "kind": "LIST",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "ticketId",
      "description": "The ticket id",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "supportTicketCollaboratorsRemove",
    "description": "Adds collaborators to the ticket",
    "type": {
     "name": "SupportTicketCollaboratorsResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "collaboratorEmails",
      "description": "The email addresses of the collaborators to add",
      "type": {
       "kind": "LIST",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "ticketId",
      "description": "The ticket id",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "supportTicketCreate",
    "description": "Creates a support ticket",
    "type": {
     "name": "SupportTicketCreateResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The account the issue is associated with",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "ticket",
      "description": "The input that describes the ticket to create",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "SupportTicketCreateInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "supportTicketEscalate",
    "description": "Creates a ticket escalation",
    "type": {
     "name": "SupportTicketEscalationResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The account associated with the escalation",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "ticketEscalation",
      "description": "The input that describes the ticket escalation",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "SupportTicketEscalationInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "supportTicketMessageCreate",
    "description": "Creates a message associated with a case",
    "type": {
     "name": "SupportTicketMessageCreateResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "message",
      "description": "The input that describes the ticket to create",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "SupportTicketMessageInput",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "ticketId",
      "description": "The account the issue is associated with",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "syntheticsCreateBrokenLinksMonitor",
    "description": "Create a Synthetic Broken Links monitor",
    "type": {
     "name": "SyntheticsBrokenLinksMonitorCreateMutationResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The account in which the Synthetics Broken Links monitor will be created",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "monitor",
      "description": "The input arguments required to create a Synthetics Broken Links monitor",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "SyntheticsCreateBrokenLinksMonitorInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "syntheticsCreateCertCheckMonitor",
    "description": "Create a Synthetic Cert Check (Certificate check) monitor",
    "type": {
     "name": "SyntheticsCertCheckMonitorCreateMutationResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The account in which the Synthetics Cert Check monitor will be created",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "monitor",
      "description": "The input arguments required to create a Synthetics Cert Check monitor",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "SyntheticsCreateCertCheckMonitorInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "syntheticsCreateDailyMonitorDowntime",
    "description": "Create a monitor downtime that runs daily",
    "type": {
     "name": "SyntheticsDailyMonitorDowntimeMutationResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The account that will be associated with the created monitor downtime",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "endRepeat",
      "description": "Configuration options if the customer wants the monitor to end at a specific date",
      "type": {
       "name": "SyntheticsDateWindowEndConfig",
       "kind": "INPUT_OBJECT"
      }
     },
     {
      "name": "endTime",
      "description": "The date and time in which the monitor downtime will end",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "NaiveDateTime",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "monitorGuids",
      "description": "Monitor GUIDs this monitor downtime will affect",
      "type": {
       "kind": "LIST",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "name",
      "description": "The name of the monitor downtime",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "startTime",
      "description": "The date and time in which the monitor downtime will begin",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "NaiveDateTime",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "timezone",
      "description": "The timezone the time values will be in",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "syntheticsCreateMonitor",
    "description": "Create a Synthetic Monitor",
    "type": {
     "name": "SyntheticsMonitorMutationResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The account that will be associated with the created monitor",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "advancedOptions",
      "description": "The monitor advanced options",
      "type": {
       "name": "SyntheticsAdvancedOptionsInput",
       "kind": "INPUT_OBJECT"
      }
     },
     {
      "name": "extendedTypeMetadata",
      "description": "(CERT_CHECK) Additional monitor metadata for newer monitor types",
      "type": {
       "name": "SyntheticsExtendedTypeInput",
       "kind": "INPUT_OBJECT"
      }
     },
     {
      "name": "hmacs",
      "description": "HMACs for any selected verified script execution enabled private locations",
      "type": {
       "kind": "LIST",
       "ofType": {
        "name": "SyntheticsPrivateLocationHmacInput",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "locations",
      "description": "The locations the monitor will run from",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      }
     },
     {
      "name": "name",
      "description": "A monitor identifier for humans",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "period",
      "description": "The interval at which the monitor runs in minutes",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "SyntheticsMonitorPeriod",
        "kind": "ENUM"
       }
      }
     },
     {
      "name": "script",
      "description": "The script the monitor will run",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "slaThreshold",
      "description": "The sla threshold for the monitor",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Float",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "status",
      "description": "The run state of the monitor",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "SyntheticsMonitorStatus",
        "kind": "ENUM"
       }
      }
     },
     {
      "name": "steps",
      "description": "(STEP_MONITOR only) The steps that will make up the monitor script",
      "type": {
       "kind": "LIST",
       "ofType": {
        "name": "SyntheticsStepInput",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "tags",
      "description": "The tags that will be associated with the monitor",
      "type": {
       "kind": "LIST",
       "ofType": {
        "name": "SyntheticsTag",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "type",
      "description": "The type of monitor",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "SyntheticsMonitorType",
        "kind": "ENUM"
       }
      }
     },
     {
      "name": "uri",
      "description": "The uri the monitor will run against",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    ]
   },
   {
    "name": "syntheticsCreateMonthlyMonitorDowntime",
    "description": "Create a monitor downtime that runs monthly",
    "type": {
     "name": "SyntheticsMonthlyMonitorDowntimeMutationResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The account that will be associated with the created monitor downtime",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "endRepeat",
      "description": "Configuration options if the customer wants the monitor to end at a specific date",
      "type": {
       "name": "SyntheticsDateWindowEndConfig",
       "kind": "INPUT_OBJECT"
      }
     },
     {
      "name": "endTime",
      "description": "The date and time in which the monitor downtime will end",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "NaiveDateTime",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "frequency",
      "description": "Configuration options for which days of the month a monitor downtime will occur",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "SyntheticsMonitorDowntimeMonthlyFrequency",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "monitorGuids",
      "description": "Monitor GUIDs this monitor downtime will affect",
      "type": {
       "kind": "LIST",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "name",
      "description": "The name of the monitor downtime",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "startTime",
      "description": "The date and time in which the monitor downtime will begin",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "NaiveDateTime",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "timezone",
      "description": "The timezone the time values will be in",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "syntheticsCreateOnceMonitorDowntime",
    "description": "Create a monitor downtime that runs once",
    "type": {
     "name": "SyntheticsOnceMonitorDowntimeMutationResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The account that will be associated with the created monitor downtime",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "endTime",
      "description": "The date and time in which the monitor downtime will end",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "NaiveDateTime",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "monitorGuids",
      "description": "Monitor GUIDs this monitor downtime will affect",
      "type": {
       "kind": "LIST",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "name",
      "description": "The name of the monitor downtime",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "startTime",
      "description": "The date and time in which the monitor downtime will begin",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "NaiveDateTime",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "timezone",
      "description": "The timezone the time values will be in",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "syntheticsCreatePrivateLocation",
    "description": "Create a Synthetics Private Location",
    "type": {
     "name": "SyntheticsPrivateLocationMutationResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The account that will be associated with the created private location",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "description",
      "description": "The private location description",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "name",
      "description": "The name of the private location",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "verifiedScriptExecution",
      "description": "The private location requires a password to edit if value is true",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Boolean",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "syntheticsCreateScriptApiMonitor",
    "description": "Create a Synthetic Script Api monitor",
    "type": {
     "name": "SyntheticsScriptApiMonitorCreateMutationResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The account in which the Synthetics Script Api monitor will be created",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "monitor",
      "description": "The input arguments required to create a Synthetics Script Api monitor",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "SyntheticsCreateScriptApiMonitorInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "syntheticsCreateScriptBrowserMonitor",
    "description": "Create a Synthetic Script Browser Monitor",
    "type": {
     "name": "SyntheticsScriptBrowserMonitorCreateMutationResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The account in which the Synthetics Script Browser monitor will be created",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "monitor",
      "description": "The input arguments required to create a Synthetics Script Browser monitor",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "SyntheticsCreateScriptBrowserMonitorInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "syntheticsCreateSecureCredential",
    "description": "Queues a request to create a secure credential",
    "type": {
     "name": "SyntheticsSecureCredentialMutationResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The account that will be associated with the created secure credential",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "description",
      "description": "The description identifier for the Synthetics Secure Credential in New Relic",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "key",
      "description": "The unique key identifier for the Synthetics Secure Credential in New Relic",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "value",
      "description": "The value identifier for the Synthetics Secure Credential in New Relic",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "SecureValue",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "syntheticsCreateSimpleBrowserMonitor",
    "description": "Create a Synthetic Simple (Ping) monitor",
    "type": {
     "name": "SyntheticsSimpleBrowserMonitorCreateMutationResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The account in which the Synthetics Simple Browser monitor will be created",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "monitor",
      "description": "The input arguments required to create a Synthetics Simple Browser monitor",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "SyntheticsCreateSimpleBrowserMonitorInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "syntheticsCreateSimpleMonitor",
    "description": "Create a Synthetic Simple (Ping) monitor",
    "type": {
     "name": "SyntheticsSimpleBrowserMonitorCreateMutationResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The account in which the Synthetics Simple (Ping) monitor will be created",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "monitor",
      "description": "The input arguments required to create a Synthetics Simple (Ping) monitor",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "SyntheticsCreateSimpleMonitorInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "syntheticsCreateStepMonitor",
    "description": "Create a Synthetic Step monitor",
    "type": {
     "name": "SyntheticsStepMonitorCreateMutationResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The account in which the Synthetics Step monitor will be created",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "monitor",
      "description": "The input arguments required to create a Synthetics Step Monitor",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "SyntheticsCreateStepMonitorInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "syntheticsCreateWeeklyMonitorDowntime",
    "description": "Create a monitor downtime that runs weekly",
    "type": {
     "name": "SyntheticsWeeklyMonitorDowntimeMutationResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The account that will be associated with the created monitor downtime",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "endRepeat",
      "description": "Configuration options if the customer wants the monitor to end at a specific date",
      "type": {
       "name": "SyntheticsDateWindowEndConfig",
       "kind": "INPUT_OBJECT"
      }
     },
     {
      "name": "endTime",
      "description": "The date and time in which the monitor downtime will end",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "NaiveDateTime",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "maintenanceDays",
      "description": "Days of the week the monitor downtime will run",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "name": "SyntheticsMonitorDowntimeWeekDays",
         "kind": "ENUM"
        }
       }
      }
     },
     {
      "name": "monitorGuids",
      "description": "Monitor GUIDs this monitor downtime will affect",
      "type": {
       "kind": "LIST",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "name",
      "description": "The name of the monitor downtime",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "startTime",
      "description": "The date and time in which the monitor downtime will begin",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "NaiveDateTime",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "timezone",
      "description": "The timezone the time values will be in",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "syntheticsDeleteMonitor",
    "description": "Delete a Synthetic Monitor",
    "type": {
     "name": "SyntheticsMonitorDeleteMutationResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "guid",
      "description": "The unique identifier for the Synthetic Monitor in New Relic",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "syntheticsDeleteMonitorByGuid",
    "description": "Delete a Synthetic Monitor",
    "type": {
     "name": "SyntheticsMonitorDeleteMutationResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "guid",
      "description": "The unique identifier for the Synthetic Monitor in New Relic",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "syntheticsDeleteMonitorDowntime",
    "description": "Delete a monitor downtime",
    "type": {
     "name": "SyntheticsMonitorDowntimeDeleteResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "guid",
      "description": "The client identifier of the monitor downtime to be deleted",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "syntheticsDeletePrivateLocation",
    "description": "Delete a Synthetics Private Location",
    "type": {
     "name": "SyntheticsPrivateLocationDeleteResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "guid",
      "description": "The client identifier of the private location to be deleted",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "syntheticsDeleteScript",
    "description": "Delete a Synthetic Monitor script",
    "type": {
     "name": "SyntheticsMonitorScriptMutationResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "guid",
      "description": "The unique identifier for the Synthetics Monitor in New Relic",
      "type": {
       "name": "EntityGuid",
       "kind": "SCALAR"
      }
     }
    ]
   },
   {
    "name": "syntheticsDeleteSecureCredential",
    "description": "Queues a request to delete an existing secure credential",
    "type": {
     "name": "SyntheticsSecureCredentialMutationResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The account that is associated with the secure credential to be deleted",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "key",
      "description": "The unique key identifier for the Synthetics Secure Credential in New Relic",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "syntheticsEditMonitorDowntime",
    "description": "Edit a monitor downtime",
    "type": {
     "name": "SyntheticsMonitorDowntimeMutationResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "daily",
      "description": "Configuration options for a monitor downtime that runs daily (only 1 of these can be selected)",
      "type": {
       "name": "SyntheticsMonitorDowntimeDailyConfig",
       "kind": "INPUT_OBJECT"
      }
     },
     {
      "name": "guid",
      "description": "The unique identifier for the Synthetic Monitor Downtime in New Relic",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "monitorGuids",
      "description": "Monitor GUIDs this monitor downtime will affect",
      "type": {
       "kind": "LIST",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "monthly",
      "description": "Configuration options for a monitor downtime that runs monthly (only 1 of these can be selected)",
      "type": {
       "name": "SyntheticsMonitorDowntimeMonthlyConfig",
       "kind": "INPUT_OBJECT"
      }
     },
     {
      "name": "name",
      "description": "The name for the monitor downtime",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "once",
      "description": "Configuration options for a monitor downtime that runs once (only 1 of these can be selected)",
      "type": {
       "name": "SyntheticsMonitorDowntimeOnceConfig",
       "kind": "INPUT_OBJECT"
      }
     },
     {
      "name": "weekly",
      "description": "Configuration options for a monitor downtime that runs weekly (only 1 of these can be selected)",
      "type": {
       "name": "SyntheticsMonitorDowntimeWeeklyConfig",
       "kind": "INPUT_OBJECT"
      }
     }
    ]
   },
   {
    "name": "syntheticsGenerateStepScript",
    "description": "Generate a script from monitor steps",
    "type": {
     "name": "SyntheticsGenerateMonitorScriptResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The account that is making the request",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "stepMonitorScriptDefinition",
      "description": "Input for script generation from steps",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "SyntheticsGenerateMonitorScriptInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "syntheticsPurgePrivateLocationQueue",
    "description": "Purge the job queue for a specified private location",
    "type": {
     "name": "SyntheticsPrivateLocationPurgeQueueResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "guid",
      "description": "The unique client identifier for the Synthetics Private Location in New Relic",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "syntheticsRunMonitor",
    "description": "Queues a manual request to execute a check in location",
    "type": {
     "name": "SyntheticsRunMonitorMutationResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "guid",
      "description": "The unique entity identifier of the Synthetics Monitor in New Relic",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "locationId",
      "description": "The location identifier to use for check execution",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "syntheticsStartAutomatedTest",
    "description": "Starts automated testing job",
    "type": {
     "name": "SyntheticsAutomatedTestStartResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "config",
      "description": "Global config for the automated test",
      "type": {
       "name": "SyntheticsAutomatedTestConfigInput",
       "kind": "INPUT_OBJECT"
      }
     },
     {
      "name": "tests",
      "description": "List of monitor tests to run",
      "type": {
       "kind": "LIST",
       "ofType": {
        "name": "SyntheticsAutomatedTestMonitorInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "syntheticsTriggerScriptValidation",
    "description": "Queues a manual request to execute a job in location using a given script",
    "type": {
     "name": "SyntheticsTriggerScriptValidationResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The account in which the script validation will run",
      "type": {
       "name": "Int",
       "kind": "SCALAR"
      }
     },
     {
      "name": "advancedOptions",
      "description": "The monitor advanced options",
      "type": {
       "name": "SyntheticsSimpleBrowserMonitorAdvancedOptionsInput",
       "kind": "INPUT_OBJECT"
      }
     },
     {
      "name": "browsers",
      "description": "The list of possible browsers to use for check execution",
      "type": {
       "kind": "LIST",
       "ofType": {
        "name": "SyntheticsBrowser",
        "kind": "ENUM"
       }
      }
     },
     {
      "name": "deviceEmulation",
      "description": "Settings for emulating a device",
      "type": {
       "name": "SyntheticsDeviceEmulationInput",
       "kind": "INPUT_OBJECT"
      }
     },
     {
      "name": "devices",
      "description": "The list of possible devices to use for check execution",
      "type": {
       "kind": "LIST",
       "ofType": {
        "name": "SyntheticsDevice",
        "kind": "ENUM"
       }
      }
     },
     {
      "name": "domain",
      "description": "The domain of the host that will have its certificate checked",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "guid",
      "description": "The unique entity identifier of the Synthetics Monitor in New Relic",
      "type": {
       "name": "EntityGuid",
       "kind": "SCALAR"
      }
     },
     {
      "name": "hmacs",
      "description": "HMACs for Private Locations in New Relic",
      "type": {
       "kind": "LIST",
       "ofType": {
        "name": "SyntheticsPrivateLocationHmacInput",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "locations",
      "description": "The location identifiers to use for check execution",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      }
     },
     {
      "name": "monitorApiVersion",
      "description": "The API version to run against for the Synthetics Monitor in New Relic",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "monitorType",
      "description": "The type of Synthetics Monitor in New Relic",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "SyntheticsMonitorType",
        "kind": "ENUM"
       }
      }
     },
     {
      "name": "numberDaysToFailBeforeCertExpires",
      "description": "The desired number of remaining days until the certificate expires to trigger a monitor failure",
      "type": {
       "name": "Int",
       "kind": "SCALAR"
      }
     },
     {
      "name": "runtime",
      "description": "Input to determine which runtime the monitor will run",
      "type": {
       "name": "SyntheticsRuntimeInput",
       "kind": "INPUT_OBJECT"
      }
     },
     {
      "name": "script",
      "description": "The script to run the job for",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "uri",
      "description": "The uri the monitor runs against",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    ]
   },
   {
    "name": "syntheticsUpdateBrokenLinksMonitor",
    "description": "Update a Synthetic Broken Links monitor",
    "type": {
     "name": "SyntheticsBrokenLinksMonitorUpdateMutationResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "guid",
      "description": "The unique identifier for the Synthetic Monitor in New Relic",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "monitor",
      "description": "The input arguments required to update a Synthetics Broken Links monitor",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "SyntheticsUpdateBrokenLinksMonitorInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "syntheticsUpdateCertCheckMonitor",
    "description": "Update a Synthetic Cert Check (Certificate check) monitor",
    "type": {
     "name": "SyntheticsCertCheckMonitorUpdateMutationResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "guid",
      "description": "The unique identifier for the Synthetic Monitor in New Relic",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "monitor",
      "description": "The input arguments required to update a Synthetics Cert Check monitor",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "SyntheticsUpdateCertCheckMonitorInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "syntheticsUpdateMonitor",
    "description": "Update a Synthetic Monitor",
    "type": {
     "name": "SyntheticsMonitorMutationResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "advancedOptions",
      "description": "The monitor advanced options",
      "type": {
       "name": "SyntheticsAdvancedOptionsInput",
       "kind": "INPUT_OBJECT"
      }
     },
     {
      "name": "extendedTypeMetadata",
      "description": "(CERT_CHECK) Additional monitor metadata for newer monitor types",
      "type": {
       "name": "SyntheticsExtendedTypeInput",
       "kind": "INPUT_OBJECT"
      }
     },
     {
      "name": "guid",
      "description": "The unique identifier for the Synthetic Monitor in New Relic",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "hmacs",
      "description": "HMACs for any selected verified script execution enabled private locations",
      "type": {
       "kind": "LIST",
       "ofType": {
        "name": "SyntheticsPrivateLocationHmacInput",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "locations",
      "description": "The locations the monitor will run from",
      "type": {
       "kind": "LIST",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "name",
      "description": "A monitor identifier for humans",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "period",
      "description": "The interval at which the monitor runs in minutes",
      "type": {
       "name": "SyntheticsMonitorPeriod",
       "kind": "ENUM"
      }
     },
     {
      "name": "slaThreshold",
      "description": "The sla threshold for the monitor",
      "type": {
       "name": "Float",
       "kind": "SCALAR"
      }
     },
     {
      "name": "status",
      "description": "The run state of the monitor",
      "type": {
       "name": "SyntheticsMonitorStatus",
       "kind": "ENUM"
      }
     },
     {
      "name": "steps",
      "description": "(STEP_MONITOR only) The steps that will make up the monitor script",
      "type": {
       "kind": "LIST",
       "ofType": {
        "name": "SyntheticsStepInput",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "tags",
      "description": "The tags that will be associated with the monitor",
      "type": {
       "kind": "LIST",
       "ofType": {
        "name": "SyntheticsTag",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "type",
      "description": "The type of monitor",
      "type": {
       "name": "SyntheticsMonitorType",
       "kind": "ENUM"
      }
     },
     {
      "name": "uri",
      "description": "The uri the monitor will run against",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    ]
   },
   {
    "name": "syntheticsUpdatePrivateLocation",
    "description": "Update a Synthetics Private Location",
    "type": {
     "name": "SyntheticsPrivateLocationMutationResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "description",
      "description": "The private location description",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "guid",
      "description": "The unique client identifier for a Synthetics Private Location in New Relic",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "verifiedScriptExecution",
      "description": "Requires password to run scripts on this private location",
      "type": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    ]
   },
   {
    "name": "syntheticsUpdateScript",
    "description": "Update a monitor script",
    "type": {
     "name": "SyntheticsMonitorScriptMutationResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "guid",
      "description": "The unique client identifier for the Synthetics Monitor in New Relic",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "script",
      "description": "The script content for a Synthetics scripted monitor",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "syntheticsUpdateScriptApiMonitor",
    "description": "Update a Synthetic Script Api monitor",
    "type": {
     "name": "SyntheticsScriptApiMonitorUpdateMutationResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "guid",
      "description": "The unique identifier for the Synthetic Monitor in New Relic",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "monitor",
      "description": "The input arguments required to update a Synthetics Script Api Monitor",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "SyntheticsUpdateScriptApiMonitorInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "syntheticsUpdateScriptBrowserMonitor",
    "description": "Update a Synthetic Script Browser Monitor",
    "type": {
     "name": "SyntheticsScriptBrowserMonitorUpdateMutationResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "guid",
      "description": "The unique identifier for the Synthetic Monitor in New Relic",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "monitor",
      "description": "The input arguments required to update a Synthetics Script Browser monitor",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "SyntheticsUpdateScriptBrowserMonitorInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "syntheticsUpdateSecureCredential",
    "description": "Queues a request to update an existing secure credential",
    "type": {
     "name": "SyntheticsSecureCredentialMutationResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The account that is associated with the secure credential to be updated",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "description",
      "description": "The description identifier for the Synthetics Secure Credential in New Relic",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "key",
      "description": "The unique key identifier for the Synthetics Secure Credential in New Relic",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "value",
      "description": "The value identifier for the Synthetics Secure Credential in New Relic",
      "type": {
       "name": "SecureValue",
       "kind": "SCALAR"
      }
     }
    ]
   },
   {
    "name": "syntheticsUpdateSimpleBrowserMonitor",
    "description": "Update a Synthetic Simple Browser monitor",
    "type": {
     "name": "SyntheticsSimpleBrowserMonitorUpdateMutationResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "guid",
      "description": "The unique identifier for the Synthetic Monitor in New Relic",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "monitor",
      "description": "The input arguments required to update a Synthetics Simple Browser monitor",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "SyntheticsUpdateSimpleBrowserMonitorInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "syntheticsUpdateSimpleMonitor",
    "description": "Update a Synthetic Simple (Ping) monitor",
    "type": {
     "name": "SyntheticsSimpleMonitorUpdateMutationResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "guid",
      "description": "The unique identifier for the Synthetic Monitor in New Relic",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "monitor",
      "description": "The input arguments required to update a Synthetics Simple (ping) Monitor",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "SyntheticsUpdateSimpleMonitorInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "syntheticsUpdateStepMonitor",
    "description": "Update a Synthetic Step monitor",
    "type": {
     "name": "SyntheticsStepMonitorUpdateMutationResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "guid",
      "description": "The unique identifier for the Synthetic Monitor in New Relic",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "monitor",
      "description": "The input arguments required to update a Synthetics Step Monitor",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "SyntheticsUpdateStepMonitorInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "syntheticsUpgradeMonitorRuntime",
    "description": "Update the runtime for Monitors",
    "type": {
     "name": "SyntheticsUpgradeMonitorRuntimeResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "monitors",
      "description": "The list of monitors to upgrade",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "EntityGuid",
          "kind": "SCALAR"
         }
        }
       }
      }
     }
    ]
   },
   {
    "name": "syntheticsUpgradeMonitorRuntimeByAccountsAndStatuses",
    "description": "Update the runtimes for monitors belonging to the supplied accounts with any of the supplied statuses",
    "type": {
     "name": "SyntheticsUpgradeMonitorRuntimeResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accounts",
      "description": "list of account IDs to upgrade by",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "Int",
          "kind": "SCALAR"
         }
        }
       }
      }
     },
     {
      "name": "validationStatuses",
      "description": "list of validation statuses to upgrade by",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "SyntheticsValidationStatus",
          "kind": "ENUM"
         }
        }
       }
      }
     }
    ]
   },
   {
    "name": "systemIdentityCreate",
    "description": "Create a system identity",
    "type": {
     "name": "SystemIdentityType",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "name",
      "description": "The name of the system identity",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "organizationId",
      "description": "The organization id of the system identity",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "publicKey",
      "description": "The public key the system identity will use",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "systemIdentityDelete",
    "description": "Delete a system identity",
    "type": {
     "name": "SystemIdentityType",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "id",
      "description": "The id of the system identity to delete",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "systemIdentityUpdate",
    "description": "Update a system identity",
    "type": {
     "name": "SystemIdentityType",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "id",
      "description": "The id of the system identity to update",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "name",
      "description": "The name of the system identity",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "publicKey",
      "description": "The public key the system identity will use",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    ]
   },
   {
    "name": "taggingAddTagsToEntity",
    "description": "Adds the provided tags to your specified entity, without deleting existing ones.\nThe maximum number of tag-values per entity is 100; if the sum of existing and new tag-values if over the limit this mutation will fail.\n\nFor details and mutation examples, visit [our docs](https://docs.newrelic.com/docs/apis/nerdgraph/examples/nerdgraph-tagging-api-tutorial).",
    "type": {
     "name": "TaggingMutationResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "guid",
      "description": "The guid of the new entity.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "tags",
      "description": "An array of key-values pairs to represent a tag. For example:  Team:TeamName.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "TaggingTagInput",
          "kind": "INPUT_OBJECT"
         }
        }
       }
      }
     }
    ]
   },
   {
    "name": "taggingDeleteTagFromEntity",
    "description": "Delete specific tag keys from the entity.\n\nFor details and mutation examples, visit [our docs](https://docs.newrelic.com/docs/apis/nerdgraph/examples/nerdgraph-tagging-api-tutorial).",
    "type": {
     "name": "TaggingMutationResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "guid",
      "description": "The guid of the existing entity.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "tagKeys",
      "description": "An array of keys that have to be deleted. For example: ['Team'].",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "String",
          "kind": "SCALAR"
         }
        }
       }
      }
     }
    ]
   },
   {
    "name": "taggingDeleteTagValuesFromEntity",
    "description": "Delete specific tag key-values from the entity.\n\nFor details and mutation examples, visit [our docs](https://docs.newrelic.com/docs/apis/nerdgraph/examples/nerdgraph-tagging-api-tutorial).",
    "type": {
     "name": "TaggingMutationResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "guid",
      "description": "The guid of the existing entity.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "tagValues",
      "description": "An array of key-values pairs to represent a tag. For example: Team:TeamName.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "TaggingTagValueInput",
          "kind": "INPUT_OBJECT"
         }
        }
       }
      }
     }
    ]
   },
   {
    "name": "taggingReplaceTagsOnEntity",
    "description": "Replaces the entity's entire set of tags with the provided tag set.\nThe maximum number of tag-values per entity is 100; if more than 100 tag-values are provided this mutation will fail.\n\nFor details and mutation examples, visit [our docs](https://docs.newrelic.com/docs/apis/nerdgraph/examples/nerdgraph-tagging-api-tutorial).",
    "type": {
     "name": "TaggingMutationResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "guid",
      "description": "The guid of the existing entity.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "tags",
      "description": "An array of key-values pairs to represent a tag. For example:  Team:TeamName.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "TaggingTagInput",
          "kind": "INPUT_OBJECT"
         }
        }
       }
      }
     }
    ]
   },
   {
    "name": "teamAddEntities",
    "description": "Append a list of entities to an existing team",
    "type": {
     "name": "TeamDefinition",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "entityGuids",
      "description": "A list of entities to be owned by the Team",
      "type": {
       "kind": "LIST",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "guid",
      "description": "The unique entity identifier of the Team",
      "type": {
       "name": "EntityGuid",
       "kind": "SCALAR"
      }
     }
    ]
   },
   {
    "name": "teamCreate",
    "description": "Creates a new Team",
    "type": {
     "name": "TeamDefinition",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The ID of the New Relic account where the Team will be created",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "team",
      "description": "The input object that represents the Team that will be created",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "TeamCreateInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "teamDelete",
    "description": "Deletes an existing Team by the GUID",
    "type": {
     "name": "TeamDefinition",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "guid",
      "description": "The unique entity identifier of the Team",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "teamDeleteEntities",
    "description": "Delete a list of entities of an existing team",
    "type": {
     "name": "TeamDefinition",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "entityGuids",
      "description": "A list of entities owned by the Team to remove",
      "type": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EntityGuid",
         "kind": "SCALAR"
        }
       }
      }
     },
     {
      "name": "guid",
      "description": "The unique entity identifier of the Team",
      "type": {
       "name": "EntityGuid",
       "kind": "SCALAR"
      }
     }
    ]
   },
   {
    "name": "teamUpdate",
    "description": "Updates an existing Team by the GUID",
    "type": {
     "name": "TeamDefinition",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "guid",
      "description": "The unique entity identifier of the Team",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "team",
      "description": "The input object that represents the Team that will be updated",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "TeamUpdateInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "teamUpdateEntityOwners",
    "description": "[DEPRECATED] Update several teams ownerships of an entity",
    "type": {
     "name": "TeamUpdatedEntityOwners",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "newTeams",
      "description": "List of teams that are the owners now",
      "type": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EntityGuid",
         "kind": "SCALAR"
        }
       }
      }
     },
     {
      "name": "oldTeams",
      "description": "List of teams that aren't the owners anymore",
      "type": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EntityGuid",
         "kind": "SCALAR"
        }
       }
      }
     },
     {
      "name": "targetGuid",
      "description": "Entity to be moved between teams",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "teamUpdateGlobalSettings",
    "description": "Edit teams global settings",
    "type": {
     "name": "TeamGlobalSettings",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "updateGlobalSettings",
      "description": "Updated global settings",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "TeamUpdateGlobalSettingsInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "threadProfilerCreate",
    "description": "Create a thread profile",
    "type": {
     "name": "ThreadProfilerThreadProfile",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "guid",
      "description": "The GUID for the entity to run a thread profile on.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "request",
      "description": "Attributes for a thread profile creation request",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ThreadProfilerRequest",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "userEmailNotificationPreferencesUpdateSuppressionGroup",
    "description": "Update suppression group for a user",
    "type": {
     "kind": "LIST",
     "ofType": {
      "name": "UserEmailNotificationPreferencesUpdatedSuppressionGroupResponse",
      "kind": "OBJECT"
     }
    },
    "args": [
     {
      "name": "accountId",
      "description": "Suppression groups linked to an account",
      "type": {
       "name": "Int",
       "kind": "SCALAR"
      }
     },
     {
      "name": "updatedSuppressionGroup",
      "description": "List of suppression groups to be updated",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "kind": "LIST",
        "ofType": {
         "name": "UserEmailNotificationPreferencesUpdatedSuppressionGroup",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     },
     {
      "name": "userId",
      "description": "User's unique identifier",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "userManagementAddUsersToGroups",
    "description": "A mutation for adding user(s) to group(s).",
    "type": {
     "name": "UserManagementAddUsersToGroupsPayload",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "addUsersToGroupsOptions",
      "description": "The input object representing the group(s) and user(s) to update.",
      "type": {
       "name": "UserManagementUsersGroupsInput",
       "kind": "INPUT_OBJECT"
      }
     }
    ]
   },
   {
    "name": "userManagementCreateGroup",
    "description": "A mutation for creating a group in an authentication domain.",
    "type": {
     "name": "UserManagementCreateGroupPayload",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "createGroupOptions",
      "description": "The input object representing the group to create",
      "type": {
       "name": "UserManagementCreateGroup",
       "kind": "INPUT_OBJECT"
      }
     }
    ]
   },
   {
    "name": "userManagementCreateUser",
    "description": "A mutation for creating a user in an authentication domain.",
    "type": {
     "name": "UserManagementCreateUserPayload",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "createUserOptions",
      "description": "The input object representing the user to be created.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "UserManagementCreateUser",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "userManagementDeleteGroup",
    "description": "A mutation for deleting a group.",
    "type": {
     "name": "UserManagementDeleteGroupPayload",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "groupOptions",
      "description": "The input object representing the group to remove",
      "type": {
       "name": "UserManagementDeleteGroup",
       "kind": "INPUT_OBJECT"
      }
     }
    ]
   },
   {
    "name": "userManagementDeleteUser",
    "description": "A mutation for deleting a user.",
    "type": {
     "name": "UserManagementDeleteUserPayload",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "deleteUserOptions",
      "description": "The input object containing the id of the user to be deleted.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "UserManagementDeleteUser",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "userManagementRemoveUsersFromGroups",
    "description": "A mutation for removing user(s) from group(s).",
    "type": {
     "name": "UserManagementRemoveUsersFromGroupsPayload",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "removeUsersFromGroupsOptions",
      "description": "The input object representing the users to remove and the groups to remove them from.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "UserManagementUsersGroupsInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "userManagementUpdateGroup",
    "description": "A mutation for updating an existing group.",
    "type": {
     "name": "UserManagementUpdateGroupPayload",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "updateGroupOptions",
      "description": "The input object representing the group to update",
      "type": {
       "name": "UserManagementUpdateGroup",
       "kind": "INPUT_OBJECT"
      }
     }
    ]
   },
   {
    "name": "userManagementUpdateUser",
    "description": "A mutation for updating an existing user.",
    "type": {
     "name": "UserManagementUpdateUserPayload",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "updateUserOptions",
      "description": "The input object representing the user to be updated.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "UserManagementUpdateUser",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "userUpdatePreferences",
    "description": "Update the data corresponding to the user preferences",
    "type": {
     "name": "UserUpdatePreferencesPayload",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "userPreferences",
      "description": "The input object representing the new desired user preferences",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "UserUpdatePreferences",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "userUpgradeSelf",
    "description": "Change the current user's tier",
    "type": {
     "name": "UserUpgradeSelfPayload",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "upgradeSelfOptions",
      "description": "The input object representing the user upgrade options",
      "type": {
       "name": "UserUpgradeSelf",
       "kind": "INPUT_OBJECT"
      }
     }
    ]
   },
   {
    "name": "v2CreateTeamEntity",
    "description": "Creates an entity of type TeamEntity.",
    "type": {
     "name": "V2TeamEntityCreateResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "teamEntity",
      "description": "The entity's data",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "V2TeamEntityCreateInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "v2DeleteEntity",
    "description": "Deletes an entity.",
    "type": {
     "name": "V2EntityDeleteResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "id",
      "description": "The id of the entity to be deleted.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "v2UpdateTeamEntity",
    "description": "Updates an entity of type TeamEntity.",
    "type": {
     "name": "V2TeamEntityUpdateResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "id",
      "description": "The id of the entity to be updated.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "teamEntity",
      "description": "The input data to be updated.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "V2TeamEntityUpdateInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "v2UpdateTeamsOrganizationSettingsEntity",
    "description": "Updates an entity of type TeamsOrganizationSettingsEntity.",
    "type": {
     "name": "V2TeamsOrganizationSettingsEntityUpdateResult",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "id",
      "description": "The id of the entity to be updated.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "teamsOrganizationSettingsEntity",
      "description": "The input data to be updated.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "V2TeamsOrganizationSettingsEntityUpdateInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "websitePerformanceMonitoringCreateLighthouseScriptMonitor",
    "description": "Creates synthetics script monitor for lighthouse metrics for the given website",
    "type": {
     "name": "WebsitePerformanceMonitoringCreateMonitorsResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "ID of the account in which monitors are to be created",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "requestSource",
      "description": "Source of the request",
      "type": {
       "name": "WebsitePerformanceMonitoringRequestSource",
       "kind": "ENUM"
      }
     },
     {
      "name": "websiteDetails",
      "description": "The website url for which script api monitor is being created",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "WebsitePerformanceMonitoringWebsiteInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "websitePerformanceMonitoringCreateWebsitePerformanceMonitors",
    "description": "Creates syntheticsMonitors for the given website",
    "type": {
     "name": "WebsitePerformanceMonitoringCreateMonitorsResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "ID of the account in which monitors are to be created",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "requestSource",
      "description": "Source of the request",
      "type": {
       "name": "WebsitePerformanceMonitoringRequestSource",
       "kind": "ENUM"
      }
     },
     {
      "name": "requestType",
      "description": "Type of the request",
      "type": {
       "name": "WebsitePerformanceMonitoringRequestType",
       "kind": "ENUM"
      }
     },
     {
      "name": "websiteDetails",
      "description": "The website url for which monitors are being created",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "WebsitePerformanceMonitoringWebsiteInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "websitePerformanceMonitoringUpdateRequest",
    "description": "Update website Performance monitoring",
    "type": {
     "name": "WebsitePerformanceMonitoringUpdateRequestResponse",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "ID of the account in which the details of the given url has to be updated",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "requestFields",
      "description": "The website performance monitoring fields to be updated",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "WebsitePerformanceMonitoringUpdateRequestFields",
        "kind": "INPUT_OBJECT"
       }
      }
     },
     {
      "name": "websiteDetails",
      "description": "The website url for which the details has to be updated",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "WebsitePerformanceMonitoringWebsiteInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "whatsNewSetLastReadDate",
    "description": "Updates the date the current user last read the news.",
    "type": {
     "name": "EpochMilliseconds",
     "kind": "SCALAR"
    },
    "args": [
     {
      "name": "date",
      "description": "The date, represented since the epoch in milliseconds, the current user last read the news.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EpochMilliseconds",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "workloadCreate",
    "description": "Creates a new workload.",
    "type": {
     "name": "WorkloadCollection",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The New Relic account ID where you want to create the workload.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "workload",
      "description": "An input object that represents the workload to be created.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "WorkloadCreateInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   },
   {
    "name": "workloadDelete",
    "description": "Deletes an existing workload.",
    "type": {
     "name": "WorkloadCollection",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "guid",
      "description": "The GUID of the workload to delete.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "workloadDuplicate",
    "description": "Duplicates an existing workload.",
    "type": {
     "name": "WorkloadCollection",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "accountId",
      "description": "The New Relic Account ID where you want to create the new workload.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "sourceGuid",
      "description": "The GUID of the workload you want to duplicate.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "workload",
      "description": "An input object with information about the new workload.",
      "type": {
       "name": "WorkloadDuplicateInput",
       "kind": "INPUT_OBJECT"
      }
     }
    ]
   },
   {
    "name": "workloadUpdate",
    "description": "Updates an existing workload.",
    "type": {
     "name": "WorkloadCollection",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "guid",
      "description": "The GUID of the workload you want to update.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     },
     {
      "name": "workload",
      "description": "An input object with information to identify the workload to be updated and its new changes.",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "WorkloadUpdateInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    ]
   }
  ]
 },
 "queryType": {
  "name": "RootQueryType",
  "description": "This is the root of all GraphQL queries. The fields in this object\nare available at the top level of a query.",
  "kind": "OBJECT",
  "fields": [
   {
    "name": "account",
    "description": "This field is deprecated and usage is locked to legacy clients.\n\nTo access account information, please use `actor.account(id: N)`",
    "type": {
     "name": "AccountObject",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "id",
      "type": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     }
    ]
   },
   {
    "name": "actor",
    "description": "The `actor` field is the top-level entry into all data that is scoped\nto the API user's access level.",
    "type": {
     "name": "Actor",
     "kind": "OBJECT"
    }
   },
   {
    "name": "currentUser",
    "type": {
     "name": "UserObject",
     "kind": "OBJECT"
    }
   },
   {
    "name": "customerAdministration",
    "description": "The `customerAdministration` field is the place for managing the configuration that defines the business relationships between New Relic, partners, and customers.",
    "type": {
     "name": "CustomerAdministration",
     "kind": "OBJECT"
    }
   },
   {
    "name": "docs",
    "description": "Access to structured New Relic documentation data",
    "type": {
     "name": "DocumentationFields",
     "kind": "OBJECT"
    }
   },
   {
    "name": "nerdGraphContext",
    "type": {
     "name": "NerdGraphContext",
     "kind": "OBJECT"
    }
   },
   {
    "name": "nrPlatform",
    "type": {
     "name": "NrPlatformQueryNamespace",
     "kind": "OBJECT"
    }
   },
   {
    "name": "requestContext",
    "description": "The `requestContext` field provides contextual information about the API request itself.",
    "type": {
     "name": "RequestContext",
     "kind": "OBJECT"
    }
   },
   {
    "name": "user",
    "description": "This field is deprecated and usage is locked to legacy clients.\n\nTo access user information, please use `actor.user` or `currentUser`.\nAccessing information about another user must be managed in the API\nto prevent leaking personal information.",
    "type": {
     "name": "UserObject",
     "kind": "OBJECT"
    },
    "args": [
     {
      "name": "email",
      "type": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     {
      "name": "id",
      "type": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    ]
   }
  ]
 },
 "types": [
  {
   "name": "AiDecisionsFixedStartsWithInput",
   "description": "Input type for FixedStartsWith expression",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "incident",
     "description": "Incident selector to be used in comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsIncidentObjectInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "value",
     "description": "Value to be used in comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AiWorkflowsConfiguration",
   "description": "Enrichment configuration object",
   "kind": "UNION",
   "possibleTypes": [
    {
     "name": "AiWorkflowsNrqlConfiguration",
     "kind": "OBJECT"
    }
   ]
  },
  {
   "name": "CloudAzureApimanagementIntegration",
   "description": "Api Management Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "resourceGroups",
     "description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "AiNotificationsResult",
   "description": "Result status",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "FAIL",
     "description": "Failure",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SUCCESS",
     "description": "Success",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AlertsNrqlStaticConditionValueFunction",
   "description": "Deprecated.  By default, condition is evaluated based on each query's returned value.  To aggregate data in time \"windows\", use `signal.slideBy`.\n\nFunction used to aggregate the NRQL query value(s) for comparison to the `terms.threshold`. When the result of this aggregate surpasses the `terms.threshold`, a violation will be opened.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "SINGLE_VALUE",
     "description": "Condition is evaluated based on each query's returned value.",
     "isDeprecated": true,
     "deprecationReason": "Default behavior."
    },
    {
     "name": "SUM",
     "description": "Condition is evaluated based on the sum of each query's returned values over the specified thresholdDuration.",
     "isDeprecated": true,
     "deprecationReason": "Replaced by `signal.slideBy`."
    }
   ]
  },
  {
   "name": "IncidentIntelligenceEnvironmentDissentAccountsResult",
   "description": "Result options for account consent marking",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "CONSENTED_ACCOUNTS_NOT_FOUND",
     "description": "There are no accounts authorized by the user that are consented for Incident Intelligence usage",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "DISSENTED",
     "description": "Accounts were dissented",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "USER_NOT_AUTHORIZED_MISSING_CAPABILITY",
     "description": "The user is not authorized to dissent due to a missing capability",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "EventsToMetricsListRuleResult",
   "description": "A list of rule details to be returned.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "rules",
     "description": "Event-to-metric rules to be returned.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EventsToMetricsRule",
       "kind": "OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "TimeWindowInput",
   "description": "Represents a time window input.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "endTime",
     "description": "The end time of the time window the number of milliseconds since the Unix epoch.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochMilliseconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "startTime",
     "description": "The start time of the time window the number of milliseconds since the Unix epoch.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochMilliseconds",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "MobilePushNotificationRemoveDeviceResult",
   "description": "Result from removing a device.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "deviceId",
     "description": "The uuid of the device that was removed.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "message",
     "description": "The success or failure message from the attempted remove.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AlertsNotificationChannelCreateConfiguration",
   "description": "The input configuration for creating a notification channel.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "email",
     "description": "The input configuration for creating an Email notification channel.",
     "type": {
      "name": "AlertsEmailNotificationChannelCreateInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "opsGenie",
     "description": "The input configuration for creating an OpsGenie notification channel.",
     "type": {
      "name": "AlertsOpsGenieNotificationChannelCreateInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "pagerDuty",
     "description": "The input configuration for creating a PagerDuty notification channel.",
     "type": {
      "name": "AlertsPagerDutyNotificationChannelCreateInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "slack",
     "description": "The input configuration for creating a Slack notification channel.",
     "type": {
      "name": "AlertsSlackNotificationChannelCreateInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "victorOps",
     "description": "The input configuration for creating a VictorOps notification channel.",
     "type": {
      "name": "AlertsVictorOpsNotificationChannelCreateInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "webhook",
     "description": "The input configuration for creating a Webhook notification channel.",
     "type": {
      "name": "AlertsWebhookNotificationChannelCreateInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "xMatters",
     "description": "The input configuration for creating an xMatters notification channel.",
     "type": {
      "name": "AlertsXMattersNotificationChannelCreateInput",
      "kind": "INPUT_OBJECT"
     }
    }
   ]
  },
  {
   "name": "SyntheticsPrivateLocationPurgeQueueResult",
   "description": "Result of a Synthetics purge private location queue mutation",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "errors",
     "description": "An array containing errors resulting from the mutation, if any",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "SyntheticsPrivateLocationMutationError",
       "kind": "OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "EntitySearchTypes",
   "description": "A detailed entity search response object type.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "count",
     "description": "The number of results with this type.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "domain",
     "description": "The domain of the search result group.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "entityType",
     "description": "The combined domain \u0026 type of the search result group.",
     "type": {
      "name": "EntityType",
      "kind": "ENUM"
     }
    },
    {
     "name": "type",
     "description": "The type of the search result group.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "CloudAzureEventhubIntegrationInput",
   "description": "Event Hub",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "resourceGroups",
     "description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "EdgeEndpointType",
   "description": "Type of connection established with the trace observer. Currently, only `PUBLIC` is supported.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "PUBLIC",
     "description": "PUBLIC: the endpoint is reachable on the internet.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AiNotificationsDeleteResponse",
   "description": "Delete response object",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "error",
     "description": "Error in object deletion",
     "type": {
      "name": "AiNotificationsResponseError",
      "kind": "OBJECT"
     }
    },
    {
     "name": "errors",
     "description": "Deprecated list of errors",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiNotificationsResponseError",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "ids",
     "description": "Deleted object ids",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    }
   ]
  },
  {
   "name": "Nr1CatalogSupportedEntityTypesMode",
   "description": "Possible modes for supported entity types",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "ALL",
     "description": "Indicates that all entity types are supported",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NONE",
     "description": "Indicates that no entity types are supported",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SPECIFIC",
     "description": "Indicates that a specific set of entity types are supported",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "SyntheticsScriptBrowserMonitorCreateMutationResult",
   "description": "The result of a Script Browser monitor create mutation",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "errors",
     "description": "Errors that occurred during Script Browser monitor create mutation",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "name": "SyntheticsMonitorCreateError",
        "kind": "OBJECT"
       }
      }
     }
    },
    {
     "name": "monitor",
     "description": "The resulting script browser monitor",
     "type": {
      "name": "SyntheticsScriptBrowserMonitor",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "ErrorsInboxErrorGroupsResponse",
   "description": "Response for error groups.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "nextCursor",
     "description": "Cursor to get the next page of results.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "results",
     "description": "List of error groups.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ErrorsInboxErrorGroupOutline",
        "kind": "OBJECT"
       }
      }
     }
    },
    {
     "name": "totalCount",
     "description": "Total error groups matching query",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "InfrastructureIntegrationEntity",
   "kind": "INTERFACE",
   "fields": [
    {
     "name": "integrationTypeCode",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ],
   "possibleTypes": [
    {
     "name": "GenericInfrastructureEntity",
     "kind": "OBJECT"
    },
    {
     "name": "InfrastructureAwsLambdaFunctionEntity",
     "kind": "OBJECT"
    }
   ]
  },
  {
   "name": "NerdStorageActorScope",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "collection",
     "description": "Nerdpack documents are stored inside a collection.\nA collection can be thought of as a key-value storage where each document is one of these key-value pairs.\n\nTo use the NerdStorage schema you must specify a Nerdpack ID using the NewRelic-Package-Id header in your request.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "NerdStorageCollectionMember",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "collection",
       "description": "The collection from which documents will be retrieved.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "document",
     "description": "A Nerdpack document is formed by an identifier (called documentId) and a set of data associated with it.\n\nTo use the NerdStorage schema you must specify a Nerdpack ID using the NewRelic-Package-Id header in your request.",
     "type": {
      "name": "NerdStorageDocument",
      "kind": "SCALAR"
     },
     "args": [
      {
       "name": "collection",
       "description": "The collection that the document belongs to.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "documentId",
       "description": "The documentId to be retrieved.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      }
     ]
    }
   ]
  },
  {
   "name": "AiWorkflowsUpdateEnrichmentsInput",
   "description": "Update Enrichment input object",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "nrql",
     "description": "nrql",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiWorkflowsNrqlUpdateEnrichmentInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     }
    }
   ]
  },
  {
   "name": "SyntheticsCreateStepMonitorInput",
   "description": "The monitor input values needed to create a Step monitor",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "advancedOptions",
     "description": "The monitor advanced options",
     "type": {
      "name": "SyntheticsStepMonitorAdvancedOptionsInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "apdexTarget",
     "description": "The monitor's Apdex target used to populate SLA reports",
     "type": {
      "name": "Float",
      "kind": "SCALAR"
     }
    },
    {
     "name": "browsers",
     "description": "The browser(s) that the monitor will use to run jobs",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "SyntheticsBrowser",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "devices",
     "description": "The devices that the monitor will use to run jobs",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "SyntheticsDevice",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "locations",
     "description": "The locations the monitor will run from",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SyntheticsScriptedMonitorLocationsInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "name",
     "description": "The human readable identifier for the monitor",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "period",
     "description": "The interval at which the monitor runs in minutes",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SyntheticsMonitorPeriod",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "runtime",
     "description": "The runtime that the monitor will use to run jobs. The only accepted values are runtimeType: CHROME_BROWSER \u0026 runtimeTypeVersion: 100",
     "type": {
      "name": "SyntheticsExtendedTypeMonitorRuntimeInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "status",
     "description": "The run state of the monitor",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SyntheticsMonitorStatus",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "steps",
     "description": "The steps that make up the script the monitor will run",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "SyntheticsStepInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "tags",
     "description": "The tags that will be associated with the monitor",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "SyntheticsTag",
       "kind": "INPUT_OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "CloudSnsIntegration",
   "description": "SNS Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "fetchExtendedInventory",
     "description": "Determine if extra inventory data be collected or not. May affect total data collection time and contribute to the Cloud provider API rate limit.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "AiDecisionsFixedContainsInput",
   "description": "Input type for FixedContains expression",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "container",
     "description": "Incident selector to be used in comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsIncidentObjectInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "value",
     "description": "Value to be used in comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AgentEnvironmentApplicationInstanceDetails",
   "description": "Details of an application instance such as host and language.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "host",
     "description": "Host of the application instance.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "hostDisplayName",
     "description": "Host display name of the application instance.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "ID of the application instance.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "instanceName",
     "description": "Instance name generated by language, host and name",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "language",
     "description": "Language of the application instance.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "Name of the application instance.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "CloudAzureSqlmanagedIntegration",
   "description": "SQL Managed Instances Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "resourceGroups",
     "description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "TeamEntityOutline",
   "description": "A Team entity outline.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "account",
     "type": {
      "name": "AccountOutline",
      "kind": "OBJECT"
     }
    },
    {
     "name": "accountId",
     "description": "The New Relic account ID associated with this entity.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "alertSeverity",
     "description": "The current alerting severity of the entity.",
     "type": {
      "name": "EntityAlertSeverity",
      "kind": "ENUM"
     }
    },
    {
     "name": "domain",
     "description": "The entity's domain",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "entityType",
     "description": "A value representing the combination of the entity's domain and type.",
     "type": {
      "name": "EntityType",
      "kind": "ENUM"
     }
    },
    {
     "name": "firstIndexedAt",
     "description": "The date of last time the entity has updated any of its fields.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "goldenMetrics",
     "description": "The list of golden metrics for a specific entity",
     "type": {
      "name": "EntityGoldenContextScopedGoldenMetrics",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden metrics",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "timeWindow",
       "description": "Time range to apply to the golden metric NRQL query result field",
       "type": {
        "name": "EntityGoldenNrqlTimeWindowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "goldenTags",
     "description": "The list of golden tags for a specific entityType.",
     "type": {
      "name": "EntityGoldenContextScopedGoldenTags",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden tags",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "guid",
     "description": "A unique entity identifier.",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    },
    {
     "name": "indexedAt",
     "description": "The time the entity was indexed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "lastReportingChangeAt",
     "description": "The last time the entity's reporting status changed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The name of this entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "permalink",
     "description": "The url to the entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "reporting",
     "description": "The reporting status of the entity. If New Relic is successfully collecting data from your application, this will be true.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "serviceLevel",
     "description": "The service level defined for the entity.",
     "type": {
      "name": "ServiceLevelDefinition",
      "kind": "OBJECT"
     }
    },
    {
     "name": "tags",
     "description": "The tags applied to the entity.\n\nFor details on tags, as well as query and mutation examples, visit [our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/graphql-tagging-api-tutorial).",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityTag",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "type",
     "description": "The entity's type",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ],
   "interfaces": [
    {
     "name": "AlertableEntityOutline",
     "kind": "INTERFACE"
    },
    {
     "name": "EntityOutline",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "Float",
   "description": "The `Float` scalar type represents signed double-precision fractional\nvalues as specified by\n[IEEE 754](https://en.wikipedia.org/wiki/IEEE_754).",
   "kind": "SCALAR"
  },
  {
   "name": "CloudGcpLoadbalancingIntegrationInput",
   "description": "Google Cloud Load Balancing",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "PixieRecordPixieTosAcceptanceErrorType",
   "description": "The errors that can be returned when recording the Pixie terms of service acceptance",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "MISSING_DATA",
     "description": "Some required data to record the Pixie terms of service acceptance is missing",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "MultiTenantAuthorizationPermissionCategoryEnum",
   "description": "The kind of access granted by permissions",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "DELETE",
     "description": "Delete access",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "MANAGE",
     "description": "Create and update access",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "MODIFY",
     "description": "Create and update access",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "OTHER",
     "description": "Other access",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "READ",
     "description": "View access",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "VIEW",
     "description": "View access",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AiTopologyVertexListing",
   "description": "Listing of vertices in a graph.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "count",
     "description": "Number of vertices returned by this query.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "cursor",
     "description": "Next cursor.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "vertices",
     "description": "List of vertices.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiTopologyVertex",
         "kind": "OBJECT"
        }
       }
      }
     }
    }
   ]
  },
  {
   "name": "NerdpackMutationResult",
   "description": "Mutation result.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "ERROR",
     "description": "Error executing mutation.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "OK",
     "description": "Successful mutation execution.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "CloudBaseIntegration",
   "description": "Base Integration Object",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "CloudGcpPubsubIntegrationInput",
   "description": "Cloud Pub/Sub",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "fetchTags",
     "description": "Specify if labels and the extended inventory should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "OrganizationCustomerOrganization",
   "description": "A customer organization",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "contractId",
     "description": "The ID of the organization group",
     "type": {
      "name": "ID",
      "kind": "SCALAR"
     }
    },
    {
     "name": "customerId",
     "description": "The ID of the customer",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "id",
     "description": "The ID of the organization",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "The name of the organization",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AlertsCampfireNotificationChannel",
   "description": "Campfire notification channel.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "associatedPolicies",
     "description": "Policies associated with the channel.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsNotificationChannelPoliciesResultSet",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "config",
     "description": "Campfire channel specific configuration.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsCampfireNotificationChannelConfig",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "id",
     "description": "Channel ID.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "Channel name.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "type",
     "description": "Channel type.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsNotificationChannelType",
       "kind": "ENUM"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "AlertsNotificationChannel",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "EventsToMetricsUpdateRuleResult",
   "description": "The result of which submitted events to metrics rules were successfully and unsuccessfully update.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "failures",
     "description": "Rules that failed to get updated.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EventsToMetricsUpdateRuleFailure",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "successes",
     "description": "Rules that were successfully enabled or disabled.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EventsToMetricsRule",
       "kind": "OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "CloudHealthIntegrationInput",
   "description": "AWS Health",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "EntityAlertViolationInt",
   "description": "The `ViolationInt` scalar type represents 52-bit signed integers",
   "kind": "SCALAR"
  },
  {
   "name": "CloudGcpRedisIntegration",
   "description": "Redis Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "EntityType",
   "description": "The specific type of entity",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "APM_APPLICATION_ENTITY",
     "description": "An APM Application",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "APM_DATABASE_INSTANCE_ENTITY",
     "description": "A database instance seen by an APM Application",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "APM_EXTERNAL_SERVICE_ENTITY",
     "description": "An external service seen by an APM Application",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "BROWSER_APPLICATION_ENTITY",
     "description": "A Browser Application",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "DASHBOARD_ENTITY",
     "description": "A Dashboard entity",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "EXTERNAL_ENTITY",
     "description": "An External entity. For more information about defining External entities, see the [open source documentation](https://github.com/newrelic-experimental/entity-synthesis-definitions).",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "GENERIC_ENTITY",
     "description": "A Generic entity with no detailed data",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "GENERIC_INFRASTRUCTURE_ENTITY",
     "description": "An Infrastructure entity",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "INFRASTRUCTURE_AWS_LAMBDA_FUNCTION_ENTITY",
     "description": "An Infrastructure Integration AWS Lambda Function entity",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "INFRASTRUCTURE_HOST_ENTITY",
     "description": "An Infrastructure Host entity",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "KEY_TRANSACTION_ENTITY",
     "description": "A Key Transaction entity",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "MOBILE_APPLICATION_ENTITY",
     "description": "A Mobile Application",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SECURE_CREDENTIAL_ENTITY",
     "description": "A Secure Credential entity",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SYNTHETIC_MONITOR_ENTITY",
     "description": "A Synthetic Monitor entity",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "TEAM_ENTITY",
     "description": "A Team Entity",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "THIRD_PARTY_SERVICE_ENTITY",
     "description": "A Third Party Service entity",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "UNAVAILABLE_ENTITY",
     "description": "A entity that is unavailable",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "WORKLOAD_ENTITY",
     "description": "A Workload entity",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "InfrastructureHostEntityOutline",
   "description": "An Infrastructure Host entity outline.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "account",
     "type": {
      "name": "AccountOutline",
      "kind": "OBJECT"
     }
    },
    {
     "name": "accountId",
     "description": "The New Relic account ID associated with this entity.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "alertSeverity",
     "description": "The current alerting severity of the entity.",
     "type": {
      "name": "EntityAlertSeverity",
      "kind": "ENUM"
     }
    },
    {
     "name": "domain",
     "description": "The entity's domain",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "entityType",
     "description": "A value representing the combination of the entity's domain and type.",
     "type": {
      "name": "EntityType",
      "kind": "ENUM"
     }
    },
    {
     "name": "firstIndexedAt",
     "description": "The date of last time the entity has updated any of its fields.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "goldenMetrics",
     "description": "The list of golden metrics for a specific entity",
     "type": {
      "name": "EntityGoldenContextScopedGoldenMetrics",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden metrics",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "timeWindow",
       "description": "Time range to apply to the golden metric NRQL query result field",
       "type": {
        "name": "EntityGoldenNrqlTimeWindowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "goldenTags",
     "description": "The list of golden tags for a specific entityType.",
     "type": {
      "name": "EntityGoldenContextScopedGoldenTags",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden tags",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "guid",
     "description": "A unique entity identifier.",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    },
    {
     "name": "hostSummary",
     "type": {
      "name": "InfrastructureHostSummaryData",
      "kind": "OBJECT"
     }
    },
    {
     "name": "indexedAt",
     "description": "The time the entity was indexed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "lastReportingChangeAt",
     "description": "The last time the entity's reporting status changed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The name of this entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "permalink",
     "description": "The url to the entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "reporting",
     "description": "The reporting status of the entity. If New Relic is successfully collecting data from your application, this will be true.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "serviceLevel",
     "description": "The service level defined for the entity.",
     "type": {
      "name": "ServiceLevelDefinition",
      "kind": "OBJECT"
     }
    },
    {
     "name": "tags",
     "description": "The tags applied to the entity.\n\nFor details on tags, as well as query and mutation examples, visit [our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/graphql-tagging-api-tutorial).",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityTag",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "type",
     "description": "The entity's type",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ],
   "interfaces": [
    {
     "name": "AlertableEntityOutline",
     "kind": "INTERFACE"
    },
    {
     "name": "EntityOutline",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "Nr1CatalogVisualizationMetadata",
   "description": "Metadata information for a visualization",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "description",
     "description": "A short form description for the visualization.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "displayName",
     "description": "The human-readable name for the visualization.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "previews",
     "description": "A list of previews for the visualization, such as screenshots.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Nr1CatalogPreview",
         "kind": "INTERFACE"
        }
       }
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "Nr1CatalogNerdpackItemMetadata",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "MultiTenantIdentityGroupSortInput",
   "description": "The input object representing the sort parameters for groups",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "direction",
     "description": "Order by which to sort groups",
     "type": {
      "name": "MultiTenantIdentitySortDirection",
      "kind": "ENUM"
     }
    },
    {
     "name": "key",
     "description": "Group attribute to sort on",
     "type": {
      "name": "MultiTenantIdentitySortKeyEnum",
      "kind": "ENUM"
     }
    }
   ]
  },
  {
   "name": "AlertsEmailNotificationChannelConfig",
   "description": "Configuration for Email notification channel.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "emails",
     "description": "List of email recipients.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      }
     }
    },
    {
     "name": "includeJson",
     "description": "Include details about the violation as a JSON attachment.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AiDecisionsVertexClass",
   "description": "Class of vertex.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "APPLICATION",
     "description": "Vertex class is application",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "CLOUDSERVICE",
     "description": "Vertex class is cloudservice",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "CLUSTER",
     "description": "Vertex class is cluster",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "DATASTORE",
     "description": "Vertex class is datastore",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "HOST",
     "description": "Vertex class is host",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "TEAM",
     "description": "Vertex class is team",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AiNotificationsVariableFields",
   "description": "Variable fields to filter by",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "ACTIVE",
     "description": "active field",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "DEFAULT",
     "description": "default field",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "DESCRIPTION",
     "description": "description field",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "EXAMPLE",
     "description": "example field",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "KEY",
     "description": "key field",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "LABEL",
     "description": "label field",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NAME",
     "description": "name field",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "PRODUCT",
     "description": "product field",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "TYPE",
     "description": "type field",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "ErrorsInboxAssignmentSearchFilterInput",
   "description": "Input type for assignment search filter",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "userEmail",
     "description": "Filter by assigned user email.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "userId",
     "description": "Filter by assigned user id",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AiDecisionsRelativeNumericalEqualInput",
   "description": "Input type for RelativeNumericalEqual expression",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "left",
     "description": "Left operand of comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsIncidentObjectInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "right",
     "description": "Right operand of comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsIncidentObjectInput",
       "kind": "INPUT_OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "UsersActorStitchedFields",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "userSearch",
     "description": "Search for users using a custom query.\n If no query is provided, returns all visible users.\n NOTE: this API only supports users in the New Relic One user model.",
     "type": {
      "name": "UsersUserSearchResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "cursor",
       "description": "The cursor to fetch paginated user search results.",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "query",
       "description": "The user search query takes 1 argument `scope` that takes in various arguments. \n `userIds` is only an exact match while the rest of the arguments can search for an exact or fuzzy match.",
       "type": {
        "name": "UsersUserSearchQuery",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    }
   ]
  },
  {
   "name": "LogConfigurationsDataPartitionRuleRetentionPolicyType",
   "description": "The retention policy for the data partition data.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "SECONDARY",
     "description": "The alternative data retention policy, 30 days of data retention since the log data is ingested.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "STANDARD",
     "description": "The maximum retention period associated with the account. This is determined by the customer’s subscription/contract with New Relic.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "SyntheticMonitorSummaryData",
   "description": "Summary statistics for the Synthetic Monitor.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "locationsFailing",
     "description": "The number of locations that are currently failing.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "locationsRunning",
     "description": "The number of locations that are currently running.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "status",
     "type": {
      "name": "SyntheticMonitorStatus",
      "kind": "ENUM"
     }
    },
    {
     "name": "successRate",
     "description": "The percentage of successful synthetic monitor checks in the last 24 hours.",
     "type": {
      "name": "Float",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "CloudAzureLogicappsIntegration",
   "description": "Logic Apps Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "resourceGroups",
     "description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "AttributeMap",
   "description": "This scalar represents a map of attributes in the form of key-value pairs.",
   "kind": "SCALAR"
  },
  {
   "name": "Nr1CatalogInstallPlanDirectiveMode",
   "description": "Possible modes for an install plan directive",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "LINK",
     "description": "Directs the installation toward an external link",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NERDLET",
     "description": "Directs the installation to open a stacked Nerdlet to perform the installation",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "TARGETED",
     "description": "Directs the installation toward a specific target",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "CloudAzureContainersIntegrationInput",
   "description": "Containers",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "resourceGroups",
     "description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AgentApplicationSettingsRecordSqlEnum",
   "description": "Obfuscation level for SQL queries reported in transaction trace nodes.\n\nWhen turned on, the New Relic agent will attempt to remove values from SQL qeries.\n\nFor example:\n\n```\nSELECT * FROM Table WHERE ssn='123-45-6789'\n```\n\nmight become:\n\n```\nSELECT * FROM Table WHERE ssn=?\n```\n\nThis can behave differently for differnet applications and frameworks. Please test for your specific case.\nNote: RAW collection is not campatible with High Security mode and cannot be set if your agent is running in that mode.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "OBFUSCATED",
     "description": "This is the default value. This setting strips string literals and numeric sequences from your queries and replaces them with the ? character. For example: the query select * from table where ssn='123-45-6789' would become select * from table where ssn=?.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "OFF",
     "description": "Query collection is turned off entirely.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "RAW",
     "description": "If you are confident that full query data collection will not impact your data security or your users' privacy, you can change the setting to RAW, which will record all query values. NOTE: 'RAW' is not permitted when 'High security mode' is enabled.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "EntityGoldenTag",
   "description": "An object that represents a golden tag.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "key",
     "description": "The golden tag key.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "OrganizationUpdateInput",
   "description": "Attributes for updating an organization.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "name",
     "description": "The new name for the organization.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "CloudUpdateCloudAccountsInput",
   "description": "Specific Cloud provider information required to update the Cloud provider account to a NewRelic account.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "aws",
     "description": "Aws provider",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "CloudAwsUpdateAccountInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    },
    {
     "name": "awsGovcloud",
     "description": "AwsGovCloud provider",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "CloudAwsGovCloudUpdateAccountInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    },
    {
     "name": "azure",
     "description": "Azure provider",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "CloudAzureUpdateAccountInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    },
    {
     "name": "gcp",
     "description": "Gcp provider",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "CloudGcpUpdateAccountInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    }
   ]
  },
  {
   "name": "EntityRelationshipFilter",
   "description": "Relationship filter",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "entityType",
     "description": "Filter the relationships to those that contain a specific entity type.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityType",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "infrastructureIntegrationType",
     "description": "Filter the relationships to those that contain a specific Infrastructure integration entity type",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityInfrastructureIntegrationType",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "ApmExternalServiceEntityOutline",
   "description": "An external service seen by an APM Application.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "account",
     "type": {
      "name": "AccountOutline",
      "kind": "OBJECT"
     }
    },
    {
     "name": "accountId",
     "description": "The New Relic account ID associated with this entity.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "alertSeverity",
     "description": "The current alerting severity of the entity.",
     "type": {
      "name": "EntityAlertSeverity",
      "kind": "ENUM"
     }
    },
    {
     "name": "domain",
     "description": "The entity's domain",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "entityType",
     "description": "A value representing the combination of the entity's domain and type.",
     "type": {
      "name": "EntityType",
      "kind": "ENUM"
     }
    },
    {
     "name": "externalSummary",
     "type": {
      "name": "ApmExternalServiceSummaryData",
      "kind": "OBJECT"
     }
    },
    {
     "name": "firstIndexedAt",
     "description": "The date of last time the entity has updated any of its fields.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "goldenMetrics",
     "description": "The list of golden metrics for a specific entity",
     "type": {
      "name": "EntityGoldenContextScopedGoldenMetrics",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden metrics",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "timeWindow",
       "description": "Time range to apply to the golden metric NRQL query result field",
       "type": {
        "name": "EntityGoldenNrqlTimeWindowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "goldenTags",
     "description": "The list of golden tags for a specific entityType.",
     "type": {
      "name": "EntityGoldenContextScopedGoldenTags",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden tags",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "guid",
     "description": "A unique entity identifier.",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    },
    {
     "name": "host",
     "description": "The host of the external service.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "indexedAt",
     "description": "The time the entity was indexed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "lastReportingChangeAt",
     "description": "The last time the entity's reporting status changed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The name of this entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "permalink",
     "description": "The url to the entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "reporting",
     "description": "The reporting status of the entity. If New Relic is successfully collecting data from your application, this will be true.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "serviceLevel",
     "description": "The service level defined for the entity.",
     "type": {
      "name": "ServiceLevelDefinition",
      "kind": "OBJECT"
     }
    },
    {
     "name": "tags",
     "description": "The tags applied to the entity.\n\nFor details on tags, as well as query and mutation examples, visit [our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/graphql-tagging-api-tutorial).",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityTag",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "type",
     "description": "The entity's type",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ],
   "interfaces": [
    {
     "name": "AlertableEntityOutline",
     "kind": "INTERFACE"
    },
    {
     "name": "EntityOutline",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "ServiceLevelObjectiveResultQueries",
   "description": "The resulting NRQL queries that help consume the metrics of the SLO.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "attainment",
     "description": "The NRQL query that measures the attainment of the SLO target.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ServiceLevelResultQuery",
       "kind": "OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "AiDecisionsDecisionSortMethod",
   "description": "Sorting method for decisions.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "ID",
     "description": "Sort decisions by id",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "LATEST_CREATED",
     "description": "Sort decisions by latest_created",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "STATE_LAST_MODIFIED",
     "description": "Sort decisions by state_last_modified",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AiDecisionsFixedRegularExpressionInput",
   "description": "Input type for FixedRegularExpression expression",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "incident",
     "description": "Incident selector to be used in comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsIncidentObjectInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "value",
     "description": "Value to be used in comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AiNotificationsSecureUrlInput",
   "description": "Destination SecureUrlInput object",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "prefix",
     "description": "prefix",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "secureSuffix",
     "description": "secureSuffix",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SecureValue",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "SyntheticsRuntime",
   "description": "The runtime that a monitor runs",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "runtimeType",
     "description": "The runtime type that the monitor will run",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "runtimeTypeVersion",
     "description": "The specific version of the runtime type selected",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SemVer",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "scriptLanguage",
     "description": "The programing language that should execute the script",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AiNotificationsDataValidationError",
   "description": "Object for validation errors",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "details",
     "description": "Top level error details",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "fields",
     "description": "List of invalid fields",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiNotificationsFieldError",
         "kind": "OBJECT"
        }
       }
      }
     }
    }
   ]
  },
  {
   "name": "WorkloadRollup",
   "description": "The rollup strategy.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "strategy",
     "description": "The rollup strategy that is applied to the group of entities.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "WorkloadRollupStrategy",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "thresholdType",
     "description": "Type of threshold defined for the rule. This is an optional field that only applies when strategy is WORST_STATUS_WINS. Use a threshold to roll up the worst status only after a certain amount of entities are not operational.",
     "type": {
      "name": "WorkloadRuleThresholdType",
      "kind": "ENUM"
     }
    },
    {
     "name": "thresholdValue",
     "description": "Threshold value defined for the rule. This optional field is used in combination with thresholdType. If the threshold type is null, the threshold value will be ignored.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "ErrorsInboxAssignErrorGroupErrorType",
   "description": "Type of assign error group error.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "NOT_AUTHORIZED",
     "description": "The user does not have permissions to perform the operation.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "EntityDeleteResult",
   "description": "Response type for delete operations over entities.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "deletedEntities",
     "description": "List that contains the guids of the deleted entities",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EntityGuid",
         "kind": "SCALAR"
        }
       }
      }
     }
    },
    {
     "name": "failures",
     "description": "List of failures for the delete operation.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EntityDeleteError",
         "kind": "OBJECT"
        }
       }
      }
     }
    }
   ]
  },
  {
   "name": "ApiAccessIngestKeyErrorType",
   "description": "The type of error.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "FORBIDDEN",
     "description": "Occurs when the user issuing the mutation does not have sufficient permissions to perform the action for a key.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "INVALID",
     "description": "Occurs when the action taken on a key did not successfully pass validation.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NOT_FOUND",
     "description": "Occurs when the requested key `id` was not found.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AgentApplicationSettingsSessionReplayInput",
   "description": "Session Replay configuration.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "autoStart",
     "description": "When true, Session Replay will activate normally (this is the default). If set to false, Session Replay will not record automatically, but the agent will allow recording to be turned on via it's API. Please see [here](https://docs.newrelic.com/docs/browser/new-relic-browser/browser-apis/start/) for more details.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "blockSelector",
     "description": "String to configure which selector should be blocked",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "collectFonts",
     "description": "Indicates whether the agent will serialize fonts for collection without public asset url.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "enabled",
     "description": "Session Replay enabled.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "errorSamplingRate",
     "description": "Percentage from 0-10 specifying how many of all user sessions that contain errors should be recorded.",
     "type": {
      "name": "Float",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inlineImages",
     "description": "Indicates whether the agent will serialize images for collection without public asset url",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inlineStylesheet",
     "description": "Indicates whether the agent will serialize css for collection without public asset url.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "maskAllInputs",
     "description": "Mask all input content as *",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "maskInputOptions",
     "description": "Mask specific kinds of input options as *.",
     "type": {
      "name": "AgentApplicationSettingsMaskInputOptionsInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "maskTextSelector",
     "description": "String to configure which selector should be masked.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "samplingRate",
     "description": "Percentage from 0-10 specifying how many of all user sessions should be recorded.",
     "type": {
      "name": "Float",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "Nr1CatalogInstallDashboardTemplateResult",
   "description": "Information about the mutation result when installing a dashboard template",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdDashboard",
     "description": "An outline of the created dashboard",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Nr1CatalogDashboardOutline",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "dashboardTemplate",
     "description": "The template that was used for the installation",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Nr1CatalogDashboardTemplate",
       "kind": "OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "SyntheticsPrivateLocationDeleteResult",
   "description": "An array containing errors from the deletion of a private location, if any",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "errors",
     "description": "An array container errors resulting from the mutation, if any",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "SyntheticsPrivateLocationMutationError",
       "kind": "OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "OrganizationAccountSharingModeFilterInput",
   "description": "A filter for Sharing Mode",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "eq",
     "description": "A Sharing Mode for the account.",
     "type": {
      "name": "OrganizationSharingMode",
      "kind": "ENUM"
     }
    }
   ]
  },
  {
   "name": "AuthorizationManagementGroupAccessGrant",
   "description": "The Group and Role another Group should have access to",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "groupId",
     "description": "The Group ID the Role will grant access to",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "roleId",
     "description": "The Role ID that will define the access",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "SyntheticsSimpleMonitor",
   "description": "A Simple (ping) monitor resulting from a Simple monitor mutation",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "advancedOptions",
     "description": "The monitor advanced options",
     "type": {
      "name": "SyntheticsSimpleMonitorAdvancedOptions",
      "kind": "OBJECT"
     }
    },
    {
     "name": "createdAt",
     "description": "The creation time of the monitor in millis",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "guid",
     "description": "The unique client identifier for the Synthetics Monitor in New Relic",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    },
    {
     "name": "id",
     "description": "The unique identifier of the monitor within the Synthetics domain",
     "type": {
      "name": "ID",
      "kind": "SCALAR"
     }
    },
    {
     "name": "locations",
     "description": "The locations the monitor runs from",
     "type": {
      "name": "SyntheticsLocations",
      "kind": "OBJECT"
     }
    },
    {
     "name": "modifiedAt",
     "description": "The last modification time of the monitor in millis",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The human readable identifier for the monitor",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "period",
     "description": "The interval at which the monitor runs in minutes",
     "type": {
      "name": "SyntheticsMonitorPeriod",
      "kind": "ENUM"
     }
    },
    {
     "name": "status",
     "description": "The run state of the monitor",
     "type": {
      "name": "SyntheticsMonitorStatus",
      "kind": "ENUM"
     }
    },
    {
     "name": "uri",
     "description": "The uri the monitor runs against",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AlertableEntity",
   "kind": "INTERFACE",
   "fields": [
    {
     "name": "alertSeverity",
     "description": "The current alerting severity of the entity.",
     "type": {
      "name": "EntityAlertSeverity",
      "kind": "ENUM"
     }
    },
    {
     "name": "alertViolations",
     "description": "Violations on the entity that were open during the specified time window. This will return up to 500 violations - if there are more in the time window selected, you must narrow the timewindow or look at fewer entities.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityAlertViolation",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "endTime",
       "description": "End of time window for violations.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EpochMilliseconds",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "startTime",
       "description": "Start of time window for violations.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EpochMilliseconds",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "recentAlertViolations",
     "description": "Recent violations on the entity.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityAlertViolation",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "count",
       "description": "The desired number of alert violations to be returned.",
       "type": {
        "name": "Int",
        "kind": "SCALAR"
       },
       "defaultValue": "10"
      }
     ]
    }
   ],
   "possibleTypes": [
    {
     "name": "ApmApplicationEntity",
     "kind": "OBJECT"
    },
    {
     "name": "ApmDatabaseInstanceEntity",
     "kind": "OBJECT"
    },
    {
     "name": "ApmExternalServiceEntity",
     "kind": "OBJECT"
    },
    {
     "name": "BrowserApplicationEntity",
     "kind": "OBJECT"
    },
    {
     "name": "DashboardEntity",
     "kind": "OBJECT"
    },
    {
     "name": "ExternalEntity",
     "kind": "OBJECT"
    },
    {
     "name": "GenericEntity",
     "kind": "OBJECT"
    },
    {
     "name": "GenericInfrastructureEntity",
     "kind": "OBJECT"
    },
    {
     "name": "InfrastructureAwsLambdaFunctionEntity",
     "kind": "OBJECT"
    },
    {
     "name": "InfrastructureHostEntity",
     "kind": "OBJECT"
    },
    {
     "name": "KeyTransactionEntity",
     "kind": "OBJECT"
    },
    {
     "name": "MobileApplicationEntity",
     "kind": "OBJECT"
    },
    {
     "name": "SecureCredentialEntity",
     "kind": "OBJECT"
    },
    {
     "name": "SyntheticMonitorEntity",
     "kind": "OBJECT"
    },
    {
     "name": "TeamEntity",
     "kind": "OBJECT"
    },
    {
     "name": "ThirdPartyServiceEntity",
     "kind": "OBJECT"
    },
    {
     "name": "UnavailableEntity",
     "kind": "OBJECT"
    },
    {
     "name": "WorkloadEntity",
     "kind": "OBJECT"
    }
   ]
  },
  {
   "name": "OrganizationAccountSortKeyEnum",
   "description": "Provides the available values of possible fields that can be sorted",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "ID",
     "description": "Account ID",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NAME",
     "description": "Account Name",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "EdgeSpanAttributeValueOperator",
   "description": "Span attribute value operator types",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "EQUALS",
     "description": "Matches on an exact value",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "IS_NOT_NULL",
     "description": "Matches on any value",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "LIKE",
     "description": "Matches on a value that starts-with and/or ends-with the provided value",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "WorkloadScopeAccountsInput",
   "description": "The input object containing accounts that will be used to get entities from.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "accountIds",
     "description": "A list of accounts that will be used to get entities from.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      }
     }
    }
   ]
  },
  {
   "name": "AgentApplicationSettingsNetworkAliasesInput",
   "description": "Input data that maps hosts to alias names for grouping and identification purposes.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "alias",
     "description": "An alternative name that can be used to reference the hostnames.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "hosts",
     "description": "A list of hostnames to associate with an alias.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      }
     }
    }
   ]
  },
  {
   "name": "DashboardSnapshotUrlTimeWindowInput",
   "description": "Period of time from which the data to be displayed on the dashboard will be obtained.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "beginTime",
     "description": "The starting time of the time window. If specified, an endTime or a duration must also be specified.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "duration",
     "description": "The duration of the time window.",
     "type": {
      "name": "Milliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "endTime",
     "description": "The end time of the time window. If specified, a beginTime or a duration must also be specified.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "EpochSeconds",
   "description": "The `EpochSeconds` scalar represents the number of seconds since the Unix epoch",
   "kind": "SCALAR"
  },
  {
   "name": "WorkloadResultingGroupType",
   "description": "Represents the type of the rule that the resulting group of entities belongs to.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "REGULAR_GROUP",
     "description": "The rule considers the entities within a specific group in the workload.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "REMAINING_ENTITIES",
     "description": "The rule considers all the entities within the workload that aren’t evaluated in any other rule.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AgentEnvironmentApplicationInstancesResult",
   "description": "List of APM application instances with pagination data.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "applicationInstances",
     "description": "List of APM application instances .",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AgentEnvironmentApplicationInstance",
        "kind": "OBJECT"
       }
      }
     }
    },
    {
     "name": "nextCursor",
     "description": "If nextCursor is a String value, set it to the cursor input field while searching in order to get the next page of results.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AiNotificationsBasicAuth",
   "description": "Basic user and password authentication",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "authType",
     "description": "Authentication Type - Basic",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiNotificationsAuthType",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "user",
     "description": "Username",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "DataManagementRule",
   "description": "A rule for setting a data retention value for a particular event namespace on an account",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The UNIX timestamp when the event retention rule went into effect",
     "type": {
      "name": "EpochSeconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "createdById",
     "description": "The New Relic ID of the user who created the event retention rule",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "deletedAt",
     "description": "The UNIX timestamp when the event retention rule was deleted",
     "type": {
      "name": "EpochSeconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "deletedById",
     "description": "The New Relic ID of the user who deleted the event retention rule",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "id",
     "description": "The event retention rule's unique identifier",
     "type": {
      "name": "ID",
      "kind": "SCALAR"
     }
    },
    {
     "name": "namespace",
     "description": "The namespace the event retention rule applies to",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "retentionInDays",
     "description": "Length of time data will be retained (in days)",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AgentApplicationSettingsTracerTypeInput",
   "description": "Input object for setting the type of tracing performed.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "value",
     "description": "The type of tracing being done.",
     "type": {
      "name": "AgentApplicationSettingsTracer",
      "kind": "ENUM"
     }
    }
   ]
  },
  {
   "name": "AgentApplicationSettingsTracer",
   "description": "The type of tracing being done.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "CROSS_APPLICATION_TRACER",
     "description": "Cross-application tracing feature enabled.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "DISTRIBUTED_TRACING",
     "description": "Distributed tracing feature enabled.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NONE",
     "description": "Both cross-application and distributed tracing disabled.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "DataDictionaryEvent",
   "description": "Event object that contains data about the event and its attributes",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "attributes",
     "description": "List of attributes in this event",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "DataDictionaryAttribute",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "dataSources",
     "description": "List of places where this event comes from",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "DataDictionaryDataSource",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "definition",
     "description": "A description of the event",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     },
     "args": [
      {
       "name": "format",
       "description": "Specify the text format for the definition",
       "type": {
        "name": "DataDictionaryTextFormat",
        "kind": "ENUM"
       },
       "defaultValue": "PLAIN"
      }
     ]
    },
    {
     "name": "name",
     "description": "The official name of this event",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "EntityGoldenContext",
   "description": "An object that represent the context.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "account",
     "description": "Account context.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "guid",
     "description": "Collection guid context.",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "DataManagementUnit",
   "description": "Unit for a limit value",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "BYTES",
     "description": "Value is in bytes",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "COUNT",
     "description": "Value is a count",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "GIGABYTES",
     "description": "Value is in gigabytes",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "MultiTenantAuthorizationRoleNameInputFilter",
   "description": "Provides all the available filters on the role name",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "contains",
     "description": "performs a contains operation",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "eq",
     "description": "performs an equals operation",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AiDecisionsRelativeCosineDistanceInput",
   "description": "Input type for RelativeCosineDistance expression",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "left",
     "description": "Left operand of comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsIncidentObjectInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "maxDistance",
     "description": "Maximum distance threshold.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Float",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "right",
     "description": "Right operand of comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsIncidentObjectInput",
       "kind": "INPUT_OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "ChangeTrackingDeploymentType",
   "description": "Type of deployment.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "BASIC",
     "description": "A vanilla deployment",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "BLUE_GREEN",
     "description": "Blue-green deployment",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "CANARY",
     "description": "Canary deployment",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "OTHER",
     "description": "Other types of deployment.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "ROLLING",
     "description": "Rolling deployment.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SHADOW",
     "description": "Shadow deployment",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AiDecisionsFixedNumericalEqualInput",
   "description": "Input type for FixedNumericalEqual expression",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "compared",
     "description": "Value to be used in comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Float",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "incident",
     "description": "Incident selector to be used in comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsIncidentObjectInput",
       "kind": "INPUT_OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "CloudGcpSpannerIntegrationInput",
   "description": "Cloud Spanner",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "fetchTags",
     "description": "Specify if labels and the extended inventory should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "EdgeDeleteSpanAttributeRuleResponseErrorType",
   "description": "Known error codes and messages for `DeleteSpanAttributeRuleResponseError`.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "NOT_FOUND",
     "description": "No trace observer was found with the id given.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "MobilePushNotificationDevice",
   "description": "Device info used for push notifications.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "appVersion",
     "description": "The version of the app.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SemVer",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "deviceId",
     "description": "The uuid of the device.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "deviceName",
     "description": "The name of the device.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "operatingSystem",
     "description": "The OS this device is running (android/ios).",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "userId",
     "description": "The id of the user this device belongs to.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "InfrastructureIntegrationEntityOutline",
   "kind": "INTERFACE",
   "fields": [
    {
     "name": "integrationTypeCode",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ],
   "possibleTypes": [
    {
     "name": "GenericInfrastructureEntityOutline",
     "kind": "OBJECT"
    },
    {
     "name": "InfrastructureAwsLambdaFunctionEntityOutline",
     "kind": "OBJECT"
    }
   ]
  },
  {
   "name": "LogConfigurationsDataPartitionRuleMutationError",
   "description": "An object that contains expected errors as a result of mutating an existing data partition rule.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "message",
     "description": "The message with the error cause.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "type",
     "description": "Type of error.",
     "type": {
      "name": "LogConfigurationsDataPartitionRuleMutationErrorType",
      "kind": "ENUM"
     }
    }
   ]
  },
  {
   "name": "AlertsPolicyDeleteResponse",
   "description": "Success response when deleting an Alerts policy.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "id",
     "description": "ID of the deleted policy.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AiDecisionsFixedEqualInput",
   "description": "Input type for FixedEqual expression",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "incident",
     "description": "Incident selector to be used in comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsIncidentObjectInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "value",
     "description": "Value to be used in comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "OrganizationAccountShareFilterInput",
   "description": "A filter for account shares",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "accountId",
     "description": "Filter by account id",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "OrganizationAccountIdInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "targetId",
     "description": "Filter by target id",
     "type": {
      "name": "OrganizationTargetIdInput",
      "kind": "INPUT_OBJECT"
     }
    }
   ]
  },
  {
   "name": "CloudAwsWafv2IntegrationInput",
   "description": "WAFV2",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "OrganizationCreateSharedAccountInput",
   "description": "Attributes for creating a shared account.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "accountId",
     "description": "The id of the account to be shared",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "limitingRoleId",
     "description": "The id of the limiting role",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "The name of the shared account",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "targetOrganizationId",
     "description": "The id of the target organization",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "SecureCredentialSummaryData",
   "description": "Summary statistics for the Synthetic Monitor Secure Credential.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "failingMonitorCount",
     "description": "The number of monitors that contain this secure credential and failed their last check.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "monitorCount",
     "description": "The number of monitors that contain this secure credential.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "Nr1CatalogCommunityContactChannelInput",
   "description": "Details about the contact channel where users can get support via the web",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "url",
     "description": "The URL linking to the website where users can get web support",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AgentApplicationSettingsErrorCollectorInput",
   "description": "The error collector captures information about uncaught exceptions and sends them to New Relic for viewing. For more information about what these settings do and which ones are applicable for your application, please see https://docs.newrelic.com for more information about agent configuration for your language agent.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "enabled",
     "description": "Enables error collector.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "expectedErrorClasses",
     "description": "Prevents specified exception classes from affecting error rate or Apdex score while still reporting the errors to APM.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "expectedErrorCodes",
     "description": "An array of individual HTTP status codes to be marked as expected and thus prevented from affecting error rate or Apdex score.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AgentApplicationSettingsErrorCollectorHttpStatus",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "ignoredErrorClasses",
     "description": "Specified exception class names will be ignored and will not affect error rate or Apdex score, or be reported to APM.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "ignoredErrorCodes",
     "description": "An array of individual HTTP status codes that should not be treated as errors.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AgentApplicationSettingsErrorCollectorHttpStatus",
        "kind": "SCALAR"
       }
      }
     }
    }
   ]
  },
  {
   "name": "EdgeAgentEndpointDetail",
   "description": "All the details necessary to configure an agent to connect to an endoint.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "host",
     "description": "Full host name that is used to connect to the endpoint. This is the part that will be placed into an agent config named `infinite_tracing.trace_observer.host`.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "port",
     "description": "Port that is used to connect to the endpoint. This is the part that will be placed into an agent config named `infinite_tracing.trace_observer.port`.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "EdgeEndpointDetail",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "AiWorkflowsTestResponseStatus",
   "description": "Status of the test",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "FAILURE",
     "description": "The test failed",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SUCCESS",
     "description": "The test succeeded",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "WorkloadAutomaticStatus",
   "description": "The automatic status configuration.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "enabled",
     "description": "Whether the automatic status configuration is enabled or not.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "remainingEntitiesRule",
     "description": "An additional meta-rule that can consider all entities that haven't been evaluated by any other rule.",
     "type": {
      "name": "WorkloadRemainingEntitiesRule",
      "kind": "OBJECT"
     }
    },
    {
     "name": "rules",
     "description": "A list of rules.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "WorkloadRegularRule",
         "kind": "OBJECT"
        }
       }
      }
     }
    }
   ]
  },
  {
   "name": "Actor",
   "description": "The `Actor` object contains fields that are scoped to the API user's access level.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "account",
     "description": "The `account` field is the entry point into data that is scoped to a single account.",
     "type": {
      "name": "Account",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "id",
       "description": "The New Relic account ID you want to query.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "accounts",
     "description": "The `accounts` field returns all accounts that the Actor is authorized to view.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "AccountOutline",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "scope",
       "type": {
        "name": "RegionScope",
        "kind": "ENUM"
       },
       "defaultValue": "IN_REGION"
      }
     ]
    },
    {
     "name": "apiAccess",
     "description": "This field provides access to ApiAccess data.",
     "type": {
      "name": "ApiAccessActorStitchedFields",
      "kind": "OBJECT"
     }
    },
    {
     "name": "cloud",
     "description": "The `cloud` field provides access to cloud integrations configuration data scoped to the Actor.",
     "type": {
      "name": "CloudActorFields",
      "kind": "OBJECT"
     }
    },
    {
     "name": "dashboard",
     "description": "This field provides access to Dashboard data.",
     "type": {
      "name": "DashboardActorStitchedFields",
      "kind": "OBJECT"
     }
    },
    {
     "name": "dataSourceGaps",
     "description": "This field provides access to DataSourceGaps data.",
     "type": {
      "name": "DataSourceGapsActorStitchedFields",
      "kind": "OBJECT"
     }
    },
    {
     "name": "distributedTracing",
     "description": "This field provides access to DistributedTracing data.",
     "type": {
      "name": "DistributedTracingActorStitchedFields",
      "kind": "OBJECT"
     }
    },
    {
     "name": "entities",
     "description": "Fetch a list of entities.\n\nYou can fetch a max of 25 entities in one query.\n\nFor more details on entities, visit our [entity docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/use-new-relic-graphql-api-query-entities).",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "Entity",
       "kind": "INTERFACE"
      }
     },
     "args": [
      {
       "name": "guids",
       "description": "A list of unique entity identifiers.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "kind": "LIST",
         "ofType": {
          "name": "EntityGuid",
          "kind": "SCALAR"
         }
        }
       }
      }
     ]
    },
    {
     "name": "entity",
     "description": "Fetch a single entity.\n\nFor more details on entities, visit our [entity docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/use-new-relic-graphql-api-query-entities).",
     "type": {
      "name": "Entity",
      "kind": "INTERFACE"
     },
     "args": [
      {
       "name": "guid",
       "description": "A unique entity identifier.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EntityGuid",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "entitySearch",
     "description": "Search for entities using a custom query.\n\nFor more details on how to create a custom query\nand what entity data you can request, visit our\n[entity docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/use-new-relic-graphql-api-query-entities).\n\nNote: you must supply either a `query` OR a `queryBuilder` argument, not both.",
     "type": {
      "name": "EntitySearch",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "options",
       "description": "Additional options to apply to the entity search.",
       "type": {
        "name": "EntitySearchOptions",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "query",
       "description": "Entity search query string.\nThe query string can search for an exact or fuzzy match on name, as well as searching several other attributes.\n\nNote: you must supply either a `query` OR a `queryBuilder` argument, not both.\n\nOperators available: `=`, `AND`, `IN`, `LIKE`\n\nSpecial characters (`.,;:*-_`) are treated as whitespace. For example, name LIKE ':aws:' will match `-aws.` or `foo aws.`\n\nTags can be referenced in multiple ways with or without backticks.\n\nExamples:\n- `\"name = 'MyApp (Staging)'`\n- `\"name LIKE 'MyApp' AND type IN ('APPLICATION')\"`\n- `\"reporting = 'false' AND type IN ('HOST')\"`\n- `\"domain IN ('INFRA', 'APM')\"`\n- `tags.Environment = 'staging' AND type IN ('APPLICATION')`",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "queryBuilder",
       "description": "The query builder object can be used to discover and create the entity search query argument.\n\nThis should be used as a means to discover, but it has limited functionality. For example, it can only search for one entity `type` at a time.\n\nThe `queryBuilder` parameters do not include all possible entity `type`s, entity `domain`s, or `infrastructureIntegrationType`s.\n\nTo see the query string that is generated by your `queryBuilder` search, ask for the `query` field in the result object. You can then use this to build a more complex query supplied to the `query` argument and remove your `queryBuilder`.\n\nNote: you must supply either a `query` OR a `queryBuilder` argument, not both.",
       "type": {
        "name": "EntitySearchQueryBuilder",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "sortBy",
       "description": "The criteria used to sort your entity search results. If both are provided, `sortByWithDirection` will take precedence over `sortBy`.",
       "type": {
        "kind": "LIST",
        "ofType": {
         "name": "EntitySearchSortCriteria",
         "kind": "ENUM"
        }
       },
       "defaultValue": "[NAME]"
      },
      {
       "name": "sortByWithDirection",
       "description": "Sort by criteria and direction. If both are provided, `sortByWithDirection` will take precedence over `sortBy`.",
       "type": {
        "kind": "LIST",
        "ofType": {
         "name": "SortCriterionWithDirection",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "errorsInbox",
     "description": "This field provides access to ErrorsInbox data.",
     "type": {
      "name": "ErrorsInboxActorStitchedFields",
      "kind": "OBJECT"
     }
    },
    {
     "name": "incidentIntelligenceEnvironment",
     "description": "This field provides access to IncidentIntelligenceEnvironment data.",
     "type": {
      "name": "IncidentIntelligenceEnvironmentActorStitchedFields",
      "kind": "OBJECT"
     }
    },
    {
     "name": "mobilePushNotification",
     "description": "This field provides access to MobilePushNotification data.",
     "type": {
      "name": "MobilePushNotificationActorStitchedFields",
      "kind": "OBJECT"
     }
    },
    {
     "name": "nerdStorage",
     "description": "NerdStorage is a document database that is accessible within the New Relic One interface.\nThis allows for persistence of Nerdpack data including users' configuration settings and preferences\n(like favorites), or any other small data sets.\n\nConceptually, you can imagine NerdStorage as a nested key-value map.\n\nFor information on New Relic NerdStorage, visit [our docs](https://developer.newrelic.com/build-tools/new-relic-one-applications/nerdstorage).\n\nTo use the NerdStorage schema you must specify a Nerdpack ID using the NewRelic-Package-Id header in your request.",
     "type": {
      "name": "NerdStorageActorScope",
      "kind": "OBJECT"
     }
    },
    {
     "name": "nerdStorageVault",
     "description": "This field provides access to NerdStorageVault data.",
     "type": {
      "name": "NerdStorageVaultActorStitchedFields",
      "kind": "OBJECT"
     }
    },
    {
     "name": "nerdpacks",
     "description": "Nerdpacks registry. Provides queries for nerdpacks by different conditions",
     "type": {
      "name": "NerdpackNerdpacks",
      "kind": "OBJECT"
     }
    },
    {
     "name": "nr1Catalog",
     "description": "This field provides access to Nr1Catalog data.",
     "type": {
      "name": "Nr1CatalogActorStitchedFields",
      "kind": "OBJECT"
     }
    },
    {
     "name": "nrql",
     "description": "Make a query to NRDB with a NRQL string.\n\nSee the [NRQL Docs](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/nrql-resources/nrql-syntax-components-functions) for more information about generating a query string.\n\nExample NRQL query:\n```\nSELECT count(*) FROM Transaction TIMESERIES\n```\n\nFor more details on how to use NRQL in the GraphQL API, visit [our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/query-nrql-through-new-relic-graphql-api)",
     "type": {
      "name": "CrossAccountNrdbResultContainer",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accounts",
       "description": "List of account IDs to return NRDB results from. Max of 5 can be supplied.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "kind": "LIST",
         "ofType": {
          "kind": "NON_NULL",
          "ofType": {
           "name": "Int",
           "kind": "SCALAR"
          }
         }
        }
       }
      },
      {
       "name": "async",
       "description": "When true, the query will begin asynchronous resolution after the allotted `timeout`. Include `queryProgress` fields in your GraphQL query to receive the information you will need to poll the `nrqlQueryProgress` field for the results of your async NRQL query.\n\nSee [this page](https://docs.newrelic.com/docs/apis/nerdgraph/examples/async-queries-nrql-tutorial) for additional asynchronous query documentation.",
       "type": {
        "name": "Boolean",
        "kind": "SCALAR"
       },
       "defaultValue": "false"
      },
      {
       "name": "options",
       "description": "Additional options for NRQL queries.",
       "type": {
        "name": "NrqlQueryOptions",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "query",
       "description": "The [NRQL](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/nrql-resources/nrql-syntax-components-functions) query string.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Nrql",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "timeout",
       "description": "The timeout we will apply to the NRQL Query. The value will be clamped to between 5 and 120 seconds and defaults to 5 seconds.\n\nFor `async` queries, if the query is still incomplete after this amount of time, resolution will become asynchronous and return `queryProgress` data if requested.",
       "type": {
        "name": "Seconds",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "nrqlQueryHistory",
     "description": "A historical log of NRQL queries executed by you.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "NrqlHistoricalQuery",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "nrqlQueryProgress",
     "description": "Poll for the results of a previously-executed asychronous NRDB query.\n\nThe `queryId` is available in the `queryProgress` data returned by the original asynchronous query.\n\nSee [this page](https://docs.newrelic.com/docs/apis/nerdgraph/examples/async-queries-nrql-tutorial) for additional asynchronous query documentation.",
     "type": {
      "name": "CrossAccountNrdbResultContainer",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accounts",
       "description": "List of account IDs associated with `queryId`. Must match the account IDs of the original asynchronous query. Max of 5 can be supplied.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "kind": "LIST",
         "ofType": {
          "kind": "NON_NULL",
          "ofType": {
           "name": "Int",
           "kind": "SCALAR"
          }
         }
        }
       }
      },
      {
       "name": "queryId",
       "description": "A token for retrieving the results of a previously executed asynchronous query.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "organization",
     "description": "The `organization` field is the entry point into data that is scoped to the user's organization.",
     "type": {
      "name": "Organization",
      "kind": "OBJECT"
     }
    },
    {
     "name": "pixie",
     "description": "This field provides access to Pixie data.",
     "type": {
      "name": "PixieActorStitchedFields",
      "kind": "OBJECT"
     }
    },
    {
     "name": "queryHistory",
     "description": "This field provides access to QueryHistory data.",
     "type": {
      "name": "QueryHistoryActorStitchedFields",
      "kind": "OBJECT"
     }
    },
    {
     "name": "user",
     "description": "The authenticated `User` who made this request.",
     "type": {
      "name": "User",
      "kind": "OBJECT"
     }
    },
    {
     "name": "users",
     "description": "This field provides access to Users data.",
     "type": {
      "name": "UsersActorStitchedFields",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "AlertsWebhookNotificationChannelConfig",
   "description": "Configuration for Webhook notification channel.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "baseUrl",
     "description": "Base URL.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "basicAuth",
     "description": "Basic auth.",
     "type": {
      "name": "AlertsWebhookBasicAuthInput",
      "kind": "OBJECT"
     }
    },
    {
     "name": "customHttpHeaders",
     "description": "Custom HTTP headers.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AlertsWebhookCustomHeaderInput",
        "kind": "OBJECT"
       }
      }
     }
    },
    {
     "name": "customPayloadBody",
     "description": "Custom payload body.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "customPayloadType",
     "description": "Custom payload type.",
     "type": {
      "name": "AlertsWebhookCustomPayloadType",
      "kind": "ENUM"
     }
    }
   ]
  },
  {
   "name": "CloudAzureFunctionsIntegration",
   "description": "Functions Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "resourceGroups",
     "description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "DashboardUndeleteErrorType",
   "description": "Expected error types that can be returned by undelete operation.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "DASHBOARD_NOT_FOUND",
     "description": "Dashboard not found in the system.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "FORBIDDEN_OPERATION",
     "description": "User is not allowed to execute the operation.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "OrganizationUpdateSharedAccountResponse",
   "description": "The object that's returned from successfully updating a shared account.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "sharedAccount",
     "description": "Information about the updated shared account.",
     "type": {
      "name": "OrganizationSharedAccount",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "AgentEnvironmentApplicationInstance",
   "description": "Representation of the New Relic agent collecting data.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "agentSettingsAttributes",
     "description": "Contains environment attributes regarding the reported setting of the reporting agent.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AgentEnvironmentAttribute",
        "kind": "OBJECT"
       }
      }
     },
     "args": [
      {
       "name": "filter",
       "description": "Filter to apply to results on attribute name.",
       "type": {
        "name": "AgentEnvironmentFilter",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "details",
     "description": "Information of the application instance, such as host and language.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AgentEnvironmentApplicationInstanceDetails",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "environmentAttributes",
     "description": "Contains general environment attributes from the same environment where the application instance is running.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AgentEnvironmentAttribute",
        "kind": "OBJECT"
       }
      }
     },
     "args": [
      {
       "name": "filter",
       "description": "Filter to apply to results on attribute name.",
       "type": {
        "name": "AgentEnvironmentFilter",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "modules",
     "description": "Contains environment attributes regarding modules loaded by the application instance. Used only by the Java agent.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AgentEnvironmentApplicationLoadedModule",
        "kind": "OBJECT"
       }
      }
     },
     "args": [
      {
       "name": "filter",
       "description": "Filter to apply to results on module name field.",
       "type": {
        "name": "AgentEnvironmentFilter",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    }
   ]
  },
  {
   "name": "AlertsVictorOpsNotificationChannelConfig",
   "description": "Configuration for VictorOps notification channel.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "key",
     "description": "Key.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SecureValue",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "routeKey",
     "description": "Route key.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AiNotificationsChannelInput",
   "description": "Channel input object",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "destinationId",
     "description": "destinationId",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "name",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "product",
     "description": "product",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiNotificationsProduct",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "properties",
     "description": "properties",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiNotificationsPropertyInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "type",
     "description": "type",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiNotificationsChannelType",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "AiNotificationsDestination",
   "description": "Destination Object",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "accountId",
     "description": "The accountId of the creator of the destination",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "active",
     "description": "Destination active",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "auth",
     "description": "Authentication for this destination",
     "type": {
      "name": "AiNotificationsAuth",
      "kind": "UNION"
     }
    },
    {
     "name": "createdAt",
     "description": "Destination created at",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "DateTime",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "guid",
     "description": "Entity Id of the Destination",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EntityGuid",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "Destination id",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "isUserAuthenticated",
     "description": "Indicates whether the user is authenticated with the destination",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "lastSent",
     "description": "Last time a notification was sent",
     "type": {
      "name": "DateTime",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "Destination name",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "properties",
     "description": "List of destination property types",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiNotificationsProperty",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "secureUrl",
     "description": "URL in secure format",
     "type": {
      "name": "AiNotificationsSecureUrl",
      "kind": "OBJECT"
     }
    },
    {
     "name": "status",
     "description": "Destination status",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiNotificationsDestinationStatus",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "type",
     "description": "Destination type",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiNotificationsDestinationType",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "updatedAt",
     "description": "Destination updated at",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "DateTime",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "updatedBy",
     "description": "Destination updated by",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "ReferenceEntityCreateRepositoryErrorType",
   "description": "List of all potential error types that an entity create operation might return.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "FORBIDDEN",
     "description": "Forbidden request",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "INVALID_INPUT",
     "description": "Invalid input",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "EdgeDataSourceGroupUpdateType",
   "description": "The type of update you would like to apply to the existing data source group.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "ADD",
     "description": "Add the supplied entity guids to those that are currently active.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "REMOVE",
     "description": "Remove the supplied entity guids from those that are currently active.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "REPLACE",
     "description": "Replace the currently active entity guids with the ones supplied.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "EventsToMetricsCreateRuleSubmission",
   "description": "The details that were submitted when creating an events to metrics conversion rule.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "accountId",
     "description": "The account where the events exist and the metrics will be put.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "description",
     "description": "Provides additional information about the rule.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The name of the rule. This must be unique within a given account.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "nrql",
     "description": "Explains how to create one or more metrics from events.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AlertsSignalAggregationMethod",
   "description": "The method that determines when we consider an aggregation window to be complete\nso that we can evaluate the signal for violations. Default is `CADENCE`.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "CADENCE",
     "description": "`CADENCE` streams data points as the clocks at New Relic advance past the end\nof their window. This ensures a rigorous evaluation cadence, but does not take\ninto account extraneous data latency.\n\nUse in conjunction with the `aggregationDelay` field.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "EVENT_FLOW",
     "description": "`EVENT_FLOW` streams data points for evaluation as data for newer time windows\narrive. Whenever data is received, any data points older than the specified\ndelay will be evaluated.\n\nUse in conjunction with the `aggregationDelay` field.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "EVENT_TIMER",
     "description": "`EVENT_TIMER` streams data points after the specified timer elapses since data\nlast arrived for that window. Special measures are taken to make sure data\npoints flow in order.\n\nUse in conjunction with the `aggregationTimer` field.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "Nr1CatalogDataSourceInstallDirective",
   "description": "Installation information for a data source",
   "kind": "UNION",
   "possibleTypes": [
    {
     "name": "Nr1CatalogLinkInstallDirective",
     "kind": "OBJECT"
    },
    {
     "name": "Nr1CatalogNerdletInstallDirective",
     "kind": "OBJECT"
    }
   ]
  },
  {
   "name": "NerdStorageVaultResultError",
   "description": "Mutation error information.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "message",
     "description": "The error message.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "type",
     "description": "The type of error that occured when performing the mutation.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "NerdStorageVaultErrorType",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "ThirdPartyServiceEntityOutline",
   "description": "A third party service entity outline.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "account",
     "type": {
      "name": "AccountOutline",
      "kind": "OBJECT"
     }
    },
    {
     "name": "accountId",
     "description": "The New Relic account ID associated with this entity.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "alertSeverity",
     "description": "The current alerting severity of the entity.",
     "type": {
      "name": "EntityAlertSeverity",
      "kind": "ENUM"
     }
    },
    {
     "name": "domain",
     "description": "The entity's domain",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "entityType",
     "description": "A value representing the combination of the entity's domain and type.",
     "type": {
      "name": "EntityType",
      "kind": "ENUM"
     }
    },
    {
     "name": "firstIndexedAt",
     "description": "The date of last time the entity has updated any of its fields.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "goldenMetrics",
     "description": "The list of golden metrics for a specific entity",
     "type": {
      "name": "EntityGoldenContextScopedGoldenMetrics",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden metrics",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "timeWindow",
       "description": "Time range to apply to the golden metric NRQL query result field",
       "type": {
        "name": "EntityGoldenNrqlTimeWindowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "goldenTags",
     "description": "The list of golden tags for a specific entityType.",
     "type": {
      "name": "EntityGoldenContextScopedGoldenTags",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden tags",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "guid",
     "description": "A unique entity identifier.",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    },
    {
     "name": "indexedAt",
     "description": "The time the entity was indexed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "lastReportingChangeAt",
     "description": "The last time the entity's reporting status changed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The name of this entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "permalink",
     "description": "The url to the entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "reporting",
     "description": "The reporting status of the entity. If New Relic is successfully collecting data from your application, this will be true.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "serviceLevel",
     "description": "The service level defined for the entity.",
     "type": {
      "name": "ServiceLevelDefinition",
      "kind": "OBJECT"
     }
    },
    {
     "name": "tags",
     "description": "The tags applied to the entity.\n\nFor details on tags, as well as query and mutation examples, visit [our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/graphql-tagging-api-tutorial).",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityTag",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "type",
     "description": "The entity's type",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ],
   "interfaces": [
    {
     "name": "AlertableEntityOutline",
     "kind": "INTERFACE"
    },
    {
     "name": "EntityOutline",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "AlertsMutingRuleCondition",
   "description": "A condition which describes how to target a New Relic Alerts Violation.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "attribute",
     "description": "The attribute on a violation. Expects one of:\n\n* **accountId** - The account id\n* **conditionId** - The alert condition id\n* **conditionName** - The alert condition name\n* **conditionRunbookUrl** - The alert condition's runbook url\n* **conditionType** - The alert condition type, such as `metric`\n* **entity.guid** - The entity GUID\n* **nrqlEventType** - The NRQL event type\n* **nrqlQuery** - The NRQL query string\n* **policyId** - The alert policy id\n* **policyName** - The alert policy name\n* **product** - The target product (e.g., `SYNTHETICS`)\n* **tags.\u003cNAME\u003e** - Arbitrary tags associated with some entity (e.g., FACET from a NRQL query, for example `tags.appName` or `tags.host`)\n* **targetId** - The ID of the alerts target\n* **targetName** - The name of the alerts target",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "operator",
     "description": "The operator used to compare the attribute's value with the supplied value(s).",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsMutingRuleConditionOperator",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "values",
     "description": "The value(s) to compare against the attribute's value.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    }
   ]
  },
  {
   "name": "MetricNormalizationRuleMutationError",
   "description": "Error for mutation results",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "message",
     "description": "Details of error",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "type",
     "description": "Type of error",
     "type": {
      "name": "MetricNormalizationRuleErrorType",
      "kind": "ENUM"
     }
    }
   ]
  },
  {
   "name": "AlertsNrqlOutlierCondition",
   "description": "An outlier NRQL condition looks for group behavior and values that are outliers from those\ngroups. Similar to a static NRQL condition, but requires a FACET clause.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "description",
     "description": "The custom violation description.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "enabled",
     "description": "Whether the condition is enabled.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "entity",
     "description": "The Entity associated with the NRQL Condition",
     "type": {
      "name": "EntityOutline",
      "kind": "INTERFACE"
     }
    },
    {
     "name": "entityGuid",
     "description": "The condition's entity GUID",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EntityGuid",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "expectedGroups",
     "description": "Number of groups expected in the returned values for the condition.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "expiration",
     "description": "Also known as **loss of signal**, these are settings for how violations are opened or closed when a signal expires.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsNrqlConditionExpiration",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "id",
     "description": "Condition ID.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "Name of the condition.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "nrql",
     "description": "The NRQL query that defines the signal for the condition.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsNrqlConditionQuery",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "openViolationOnGroupOverlap",
     "description": "Whether overlapping groups should produce a violation.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "policyId",
     "description": "Alerts policy ID.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "runbookUrl",
     "description": "Runbook URL.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "signal",
     "description": "Settings that determine how the NRQL results are evaluated",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsNrqlConditionSignal",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "terms",
     "description": "List of critical and warning terms for the condition.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AlertsNrqlConditionTerms",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "titleTemplate",
     "description": "This field allows you to create a custom title to be used when incidents are opened by the condition. Setting this field will override the default title. Must be [Handlebars format](https://handlebarsjs.com/guide/).",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "type",
     "description": "Type of NRQL condition.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsNrqlConditionType",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "updatedAt",
     "description": "The timestamp of the most recent update to the Condition",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "updatedBy",
     "description": "The actor for the most recent Condition update",
     "type": {
      "name": "UserReference",
      "kind": "OBJECT"
     }
    },
    {
     "name": "violationTimeLimit",
     "description": "Deprecated - use violationTimeLimitSeconds for full range of values.\n\nDuration after which a violation automatically closes.",
     "type": {
      "name": "AlertsViolationTimeLimit",
      "kind": "ENUM"
     }
    },
    {
     "name": "violationTimeLimitSeconds",
     "description": "Duration after which a violation automatically closes in seconds.",
     "type": {
      "name": "Seconds",
      "kind": "SCALAR"
     }
    }
   ],
   "interfaces": [
    {
     "name": "AlertsNrqlCondition",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "CloudAwsMsElasticacheIntegrationInput",
   "description": "Fetch ElastiCache entities",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AiNotificationsChannelsResponse",
   "description": "Channel result object",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "entities",
     "description": "Channel entities",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiNotificationsChannel",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "error",
     "description": "Error in channel entities fetching",
     "type": {
      "name": "AiNotificationsResponseError",
      "kind": "OBJECT"
     }
    },
    {
     "name": "errors",
     "description": "Deprecated list of errors",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiNotificationsResponseError",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "nextCursor",
     "description": "Cursor to get the next batch of results",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "totalCount",
     "description": "Count of all channel entities",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "CloudAwsMediaconvertIntegration",
   "description": "Elemental MediaConvert Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "ErrorsInboxErrorGroupStateTypeResult",
   "description": "Information about the error group state type",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "type",
     "description": "Type of the error group state",
     "type": {
      "name": "ErrorsInboxErrorGroupState",
      "kind": "ENUM"
     }
    }
   ]
  },
  {
   "name": "NerdpackDataFilter",
   "description": "Data to filter subscribable nerdpack list.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "accountId",
     "description": "ID of the account to be subscribed.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "subscriptionModel",
     "description": "Nerdpack subscription model to filter.",
     "type": {
      "name": "NerdpackSubscriptionModel",
      "kind": "ENUM"
     }
    },
    {
     "name": "tag",
     "description": "Tag the account may subscribe to.",
     "type": {
      "name": "NerdpackTagName",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "SyntheticsAutomatedTestOverridesInput",
   "description": "Automated test monitor overrides",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "domain",
     "description": "Override a domain throughout a scripted monitor",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "SyntheticsScriptDomainOverrideInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "location",
     "description": "Override monitor to use a specific location",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "secureCredential",
     "description": "Override a script secure credential with another credential value",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "SyntheticsSecureCredentialOverrideInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "startingUrl",
     "description": "Override a browser monitor starting url",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AiIssuesNewRelicIncident",
   "description": "Newrelic incident",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "account",
     "description": "account",
     "type": {
      "name": "AccountReference",
      "kind": "OBJECT"
     }
    },
    {
     "name": "accountIds",
     "description": "An account id this incident is stored in",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "closedAt",
     "description": "The time the incident was closed",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "conditionFamilyId",
     "description": "The condition id",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "createdAt",
     "description": "The time the incident was created",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochMilliseconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "description",
     "description": "The description is generated from the policy name and the condition name",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      }
     }
    },
    {
     "name": "entityGuids",
     "description": "A list of unique entity identifiers",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    },
    {
     "name": "entityNames",
     "description": "A list of entity names",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "entityTypes",
     "description": "A list of entity types",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "environmentId",
     "description": "See our documentation to learn about environments",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "incidentId",
     "description": "Incident identifier",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "policyIds",
     "description": "The policy id",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "priority",
     "description": "Incident priority",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiIssuesPriority",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "state",
     "description": "Incident state",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiIssuesIncidentState",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "timestamp",
     "description": "Incident event timestamp",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochMilliseconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "title",
     "description": "The description the user gave the condition if provided. Otherwise the incident description",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "updatedAt",
     "description": "The time the incident was last updated",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochMilliseconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "AiIssuesIIncident",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "EntityDeleteErrorType",
   "description": "List of all potential error types that an entity delete operation might return.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "FORBIDDEN",
     "description": "Forbidden request",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "INTERNAL_ERROR",
     "description": "Internal error",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "INVALID_INPUT",
     "description": "Invalid input",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "DashboardVariableType",
   "description": "Indicates where a variable's possible values may come from.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "ENUM",
     "description": "Value comes from an enumerated list of possible values.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NRQL",
     "description": "Value comes from the results of a NRQL query.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "STRING",
     "description": "Dashboard user can supply an arbitrary string value to variable.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "LogConfigurationsDeleteDataPartitionRuleResponse",
   "description": "The result after deleting a data partition rule.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "errors",
     "description": "List of errors, if any.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "LogConfigurationsDataPartitionRuleMutationError",
       "kind": "OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "ErrorsInboxUpdateErrorGroupStateErrorType",
   "description": "Type of update error group state error.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "NOT_AUTHORIZED",
     "description": "The user does not have permissions to perform the operation.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AiDecisionsFixedEndsWithInput",
   "description": "Input type for FixedEndsWith expression",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "incident",
     "description": "Incident selector to be used in comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsIncidentObjectInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "value",
     "description": "Value to be used in comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AlertsXMattersNotificationChannel",
   "description": "xMatters notification channel.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "associatedPolicies",
     "description": "Policies associated with the channel.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsNotificationChannelPoliciesResultSet",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "config",
     "description": "xMatters channel specific configuration.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsXMattersNotificationChannelConfig",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "id",
     "description": "Channel ID.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "Channel name.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "type",
     "description": "Channel type.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsNotificationChannelType",
       "kind": "ENUM"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "AlertsNotificationChannel",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "AgentEnvironmentAttribute",
   "description": "Represents one attribute from within the environment on which an agent is running.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "attribute",
     "description": "Environment attribute name.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "value",
     "description": "Value of the environment attribute.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "UserManagementUser",
   "description": "A user of New Relic scoped to an authentication domain.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "email",
     "description": "Email address of the user.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "emailVerificationState",
     "description": "One of: \"Not Verifiable\", \"Verified\", and \"Pending\".\n\nNot Verifiable: the user's email does not require verification.\n\nVerified: the user's email requires verification and has been.\n\nPending: the user's email requires verification and has not been.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "groups",
     "description": "container for groups enabling cursor based pagination",
     "type": {
      "name": "UserManagementUserGroups",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "cursor",
       "description": "the cursor from the previous request, to get     the next page",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "id",
       "description": "a list of ids to filter returned objects by",
       "type": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "ID",
          "kind": "SCALAR"
         }
        }
       }
      }
     ]
    },
    {
     "name": "id",
     "description": "a value that uniquely identifies this object",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "lastActive",
     "description": "The last active date of the user.",
     "type": {
      "name": "DateTime",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The full name of the user.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "pendingUpgradeRequest",
     "description": "The pending upgrade request for the user (if any).",
     "type": {
      "name": "UserManagementPendingUpgradeRequest",
      "kind": "OBJECT"
     }
    },
    {
     "name": "timeZone",
     "description": "Time zone of the user in IANA Time Zone database format, also known as the \"Olson\" time zone database format (for exmaple, \"America/Los_Angeles\").",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "type",
     "description": "A \"user type\" is what determines the set of New Relic capabilities a user can theoretically access.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "UserManagementUserType",
       "kind": "OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "ApmApplicationEntitySettings",
   "description": "The ApmApplicationEntity's settings to update.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "apdexTarget",
     "description": "The ApmApplicationEntity's apdex target. For documentation on using apdex effectively, visit [our docs about apdex](https://docs.newrelic.com/docs/apm/new-relic-apm/apdex/apdex-measure-user-satisfaction).",
     "type": {
      "name": "Float",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "DataDictionaryDocsStitchedFields",
   "description": "Event data definitions, where they come from, and information about the attributes they contain",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "events",
     "description": "List of events",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "DataDictionaryEvent",
        "kind": "OBJECT"
       }
      }
     },
     "args": [
      {
       "name": "names",
       "description": "The official name of this event",
       "type": {
        "kind": "LIST",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      }
     ]
    }
   ]
  },
  {
   "name": "AiNotificationsExampleValue",
   "description": "Example properties to be added to the rendering context, for tests",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "example",
     "description": "example",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "type",
     "description": "type",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiNotificationsVariableType",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "SyntheticsSecureCredentialMutationResult",
   "description": "The result of a secure credential mutation",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The moment when the secure credential was created, represented in milliseconds since the Unix epoch.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "description",
     "description": "Description of the secure credential, if available",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "errors",
     "description": "An array containing errors, if any",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "SyntheticsError",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "key",
     "description": "The unique identifier of the secure credential, if available",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "lastUpdate",
     "description": "The moment when the secure credential was last updated, represented in milliseconds since the Unix epoch.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AlertsNrqlDynamicConditionTermsInput",
   "description": "NRQL condition terms determine when a violation will be opened.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "operator",
     "description": "Operator used to compare against the threshold.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsNrqlDynamicConditionTermsOperator",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "priority",
     "description": "Priority determines how much attention your incidents need. Your workflow settings then tell us when and where to send notifications for different priorities.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsNrqlConditionPriority",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "threshold",
     "description": "Value that triggers a violation.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Float",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "thresholdDuration",
     "description": "The duration, in seconds, that the threshold must violate in order to create a violation.\nValue must be within 120-86400 seconds and a multiple of the aggregation window for baseline conditions.\n(Default aggregation window duration is 60 seconds.)",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "thresholdOccurrences",
     "description": "How many data points must be in violation for the specified threshold duration.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsNrqlConditionThresholdOccurrences",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "UserManagementCreateGroup",
   "description": "The input object representing the group being created",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "authenticationDomainId",
     "description": "The id of the authentication domain the group will belong to",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "displayName",
     "description": "The name of the group",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "MultiTenantIdentityCapability",
   "description": "Provides the types of group capabilities available",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "DELETE_GROUP",
     "description": "The capability to delete a group",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "GRANT_GROUP_MEMBERSHIP",
     "description": "The capability to grant membership to a group",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "REVOKE_GROUP_MEMBERSHIP",
     "description": "The capability to revoke membership from a group",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "UPDATE_GROUP_NAME",
     "description": "The capability to update a group's display name",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AiDecisionsFixedJaroWinklerInput",
   "description": "Input type for FixedJaroWinkler expression",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "incident",
     "description": "Incident selector to be used in comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsIncidentObjectInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "minDistance",
     "description": "Minimum distance threshold.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Float",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "value",
     "description": "Value to be used in comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "StreamingExportAwsDetails",
   "description": "AWS details about a streaming rule",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "awsAccountId",
     "description": "The AWS account to which the target firehose belongs",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "deliveryStreamName",
     "description": "The name of the delivery stream to write events to",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "region",
     "description": "The AWS region the delivery stream is located in",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "role",
     "description": "The role configured for New Relic to assume",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AlertsPagerDutyNotificationChannel",
   "description": "PagerDuty notification channel.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "associatedPolicies",
     "description": "Policies associated with the channel.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsNotificationChannelPoliciesResultSet",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "config",
     "description": "PagerDuty channel specific configuration.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsPagerDutyNotificationChannelConfig",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "id",
     "description": "Channel ID.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "Channel name.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "type",
     "description": "Channel type.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsNotificationChannelType",
       "kind": "ENUM"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "AlertsNotificationChannel",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "NerdStorageDocument",
   "description": "This scalar represents a NerdStorage document.",
   "kind": "SCALAR"
  },
  {
   "name": "CollectionEntity",
   "description": "A group of entities defined by entity search queries and specific GUIDs",
   "kind": "INTERFACE",
   "fields": [
    {
     "name": "collection",
     "type": {
      "name": "EntityCollection",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "name",
       "description": "The name of the collection to fetch.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "guid",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    }
   ],
   "possibleTypes": [
    {
     "name": "TeamEntity",
     "kind": "OBJECT"
    },
    {
     "name": "WorkloadEntity",
     "kind": "OBJECT"
    }
   ]
  },
  {
   "name": "EdgeSpanAttributesTraceFilter",
   "description": "Contains all of the data that is used to sample traces based on their attributes.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "spanAttributeRules",
     "description": "The list of rules that determine whether to keep or drop a trace based on a span attribute.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EdgeSpanAttributeRule",
         "kind": "OBJECT"
        }
       }
      }
     }
    }
   ]
  },
  {
   "name": "AiWorkflowsUpdateResponseError",
   "description": "Update error description",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "description",
     "description": "The error description",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "type",
     "description": "The error type",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiWorkflowsUpdateErrorType",
       "kind": "ENUM"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "AiWorkflowsResponseError",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "AiWorkflowsCreateResponseError",
   "description": "Create error description",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "description",
     "description": "The error description",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "type",
     "description": "The error type",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiWorkflowsCreateErrorType",
       "kind": "ENUM"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "AiWorkflowsResponseError",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "DashboardLiveUrlType",
   "description": "Live URL type.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "DASHBOARD",
     "description": "Dashboard.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "WIDGET",
     "description": "Widget.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AiIssuesConfigurationByEnvironment",
   "description": "Configuration per environment",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "config",
     "description": "Configuration",
     "type": {
      "name": "AiIssuesEnvironmentConfiguration",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "OrganizationOrganizationCreateAsyncOrganizationResult",
   "description": "An async organization creation result organization",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "id",
     "description": "Organization ID",
     "type": {
      "name": "ID",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "Organization name",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "OrganizationContractOrganizationIdInputFilter",
   "description": "Provides all the available filters on the organization id",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "eq",
     "description": "performs an equals operation",
     "type": {
      "name": "ID",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AlertsEmailNotificationChannel",
   "description": "Email notification channel.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "associatedPolicies",
     "description": "Policies associated with the channel.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsNotificationChannelPoliciesResultSet",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "config",
     "description": "Email channel specific configuration.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsEmailNotificationChannelConfig",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "id",
     "description": "Channel ID.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "Channel name.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "type",
     "description": "Channel type.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsNotificationChannelType",
       "kind": "ENUM"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "AlertsNotificationChannel",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "AiDecisionsAllInput",
   "description": "Input type for All expression",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "children",
     "description": "Children expressions.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiDecisionsRuleExpressionInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     }
    }
   ]
  },
  {
   "name": "UserManagementEmailInput",
   "description": "Available filtering types for email addresses",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "contains",
     "description": "Part of a user email",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "eq",
     "description": "A user email",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "OrganizationProvisioningUnitOfMeasureInput",
   "description": "UOM or unit of measure used to know what a product charges for, such as events, hosts, CUs, etc.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "quantity",
     "description": "Amount of unit",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "unit",
     "description": "Unit, such as events, hosts, CUs, etc",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "OrganizationProvisioningUnit",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "OrganizationOrganizationCreateAsyncJobResult",
   "description": "An async organization creation job result",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdUtc",
     "description": "The date and time the job was created in UTC",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "errorMessage",
     "description": "The error message in case of job failure",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "finishedUtc",
     "description": "The date and time the job was completed in UTC",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "id",
     "description": "The id of the job",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "status",
     "description": "The status of the job",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "OrganizationOrganizationCreateJobResultStatusEnum",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "ApiAccessIngestKeyType",
   "description": "The type of ingest key, which dictates what types of agents can use it to report.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "BROWSER",
     "description": "Ingest keys of type `BROWSER` mean browser agents will use them to report data to New Relic.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "LICENSE",
     "description": "For ingest keys of type `LICENSE`: APM and Infrastructure agents use the key to report data to New Relic.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AgentReleasesAgentRelease",
   "description": "Information about an Agent release",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "bugs",
     "description": "Patch for a bug",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "date",
     "description": "The date of the release",
     "type": {
      "name": "Date",
      "kind": "SCALAR"
     }
    },
    {
     "name": "downloadLink",
     "description": "Link to agent distribution",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "eolDate",
     "description": "The date the release will reach the end of its life. See [New Relic's EOL Policy](https://docs.newrelic.com/docs/licenses/end-of-life/notification-changes-new-relic-saas-features-distributed-software/) for details",
     "type": {
      "name": "Date",
      "kind": "SCALAR"
     }
    },
    {
     "name": "features",
     "description": "New feature or instrumentation",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "security",
     "description": "Fix for a security vulnerability",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "slug",
     "description": "The release note's location on the docs website. The full URL would be prefixed with [https://docs.newrelic.com](https://docs.newrelic.com/)",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "version",
     "description": "The version of the release",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "ApiAccessDeletedKey",
   "description": "The deleted key response of the key delete mutation.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "id",
     "description": "The `id` of the deleted key.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "OrganizationOrganizationGroupNameInputFilter",
   "description": "Provides all the available filters on the organization group name",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "contains",
     "description": "performs a contains operation",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "eq",
     "description": "performs an equals operation",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "IncidentIntelligenceEnvironmentDissentAccounts",
   "description": "Dissent accounts to usage of the Incident Intelligence product in the EU/FedRAMP (removes the consent marking).",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "dissentedAccounts",
     "description": "The list of previously consented accounts, now dissented",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "IncidentIntelligenceEnvironmentConsentedAccount",
        "kind": "OBJECT"
       }
      }
     }
    },
    {
     "name": "result",
     "description": "The outcome of the dissent marking",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "IncidentIntelligenceEnvironmentDissentAccountsResult",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "AiNotificationsSecureUrl",
   "description": "URL in secure format",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "prefix",
     "description": "URL prefix",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AiDecisionsIncidentObjectInput",
   "description": "Represents an attribute of an incident.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "attribute",
     "description": "Attribute to process of selected incident.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "select",
     "description": "Incident to select.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsIncidentSelect",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "CloudGcpVpcaccessIntegrationInput",
   "description": "VPC Access",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AlertsDayOfWeek",
   "description": "The day of the week used to configure a WEEKLY scheduled MutingRule",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "FRIDAY",
     "description": "Friday",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "MONDAY",
     "description": "Monday",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SATURDAY",
     "description": "Saturday",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SUNDAY",
     "description": "Sunday",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "THURSDAY",
     "description": "Thursday",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "TUESDAY",
     "description": "Tuesday",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "WEDNESDAY",
     "description": "Wednesday",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "UserManagementGroupSortInput",
   "description": "The input object representing the sort parameters for groups",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "direction",
     "description": "Sort groups in this direction",
     "type": {
      "name": "UserManagementSortDirection",
      "kind": "ENUM"
     }
    },
    {
     "name": "key",
     "description": "Sort groups by this key",
     "type": {
      "name": "UserManagementGroupSortKey",
      "kind": "ENUM"
     }
    }
   ]
  },
  {
   "name": "RootQueryType",
   "description": "This is the root of all GraphQL queries. The fields in this object\nare available at the top level of a query.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "actor",
     "description": "The `actor` field is the top-level entry into all data that is scoped\nto the API user's access level.",
     "type": {
      "name": "Actor",
      "kind": "OBJECT"
     }
    },
    {
     "name": "customerAdministration",
     "description": "The `customerAdministration` field is the place for managing the configuration that defines the business relationships between New Relic, partners, and customers.",
     "type": {
      "name": "CustomerAdministration",
      "kind": "OBJECT"
     }
    },
    {
     "name": "docs",
     "description": "Access to structured New Relic documentation data",
     "type": {
      "name": "DocumentationFields",
      "kind": "OBJECT"
     }
    },
    {
     "name": "requestContext",
     "description": "The `requestContext` field provides contextual information about the API request itself.",
     "type": {
      "name": "RequestContext",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "AiWorkflowsAccountStitchedFields",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "workflows",
     "description": "Returns a list of workflows with pagination cursor according to account id and filters",
     "type": {
      "name": "AiWorkflowsWorkflows",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "cursor",
       "description": "Cursor used to get the next page of results",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "filters",
       "description": "Query filters",
       "type": {
        "name": "AiWorkflowsFilters",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    }
   ]
  },
  {
   "name": "DashboardAddWidgetsToPageError",
   "description": "Expected errors that can be returned by addWidgetsToPage operation.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "description",
     "description": "Error description.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "type",
     "description": "Error type.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "DashboardAddWidgetsToPageErrorType",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "OrganizationAuthenticationDomainCollection",
   "description": "Authentication domains",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "items",
     "description": "Authentication domains",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "OrganizationAuthenticationDomain",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "nextCursor",
     "description": "an opaque cursor to supply with subsequent requests to get the next page of results, null if there are no more pages",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "UserManagementAuthenticationDomains",
   "description": "container for authentication domains enabling cursor based pagination",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "authenticationDomains",
     "description": "container for authentication_domains enabling cursor based pagination",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "UserManagementAuthenticationDomain",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "nextCursor",
     "description": "an opaque cursor to supply with subsequent     requests to get the next page of results, null if there are no more pages",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "totalCount",
     "description": "the total number of results",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "ChangeTrackingDataHandlingRules",
   "description": "Validation and data handling rules to be applied to deployment input data.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "validationFlags",
     "description": "Flags for validation, for example, ‘FAIL_ON_FIELD_LENGTH’.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ChangeTrackingValidationFlag",
        "kind": "ENUM"
       }
      }
     }
    }
   ]
  },
  {
   "name": "CloudEbsIntegrationInput",
   "description": "Amazon Elastic Block Store (EBS)",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "fetchExtendedInventory",
     "description": "Determine if extra inventory data be collected or not. May affect total data collection time and contribute to the Cloud provider API rate limit.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "tagKey",
     "description": "Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "tagValue",
     "description": "Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AgentApplicationSettingsApplicationExitInfo",
   "description": "Reports on application exits, which can be used to determine if an application is not responding.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "enabled",
     "description": "Whether or not application exit info is collected.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "DashboardWidget",
   "description": "Widgets in a Dashboard Page.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "configuration",
     "description": "Typed widgets are area, bar, billboard, line, markdown, pie, and table.",
     "type": {
      "name": "DashboardWidgetConfiguration",
      "kind": "OBJECT"
     }
    },
    {
     "name": "id",
     "description": "ID of the widget.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "layout",
     "description": "The widget's position and size in the dashboard.",
     "type": {
      "name": "DashboardWidgetLayout",
      "kind": "OBJECT"
     }
    },
    {
     "name": "linkedEntities",
     "description": "Entities related to the widget. Currently only supports one Dashboard entity guid, but may allow other cases in the future.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityOutline",
       "kind": "INTERFACE"
      }
     }
    },
    {
     "name": "rawConfiguration",
     "description": "Untyped widgets are all other widgets, such as bullet, histogram, inventory, etc.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "DashboardWidgetRawConfiguration",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "title",
     "description": "A title for the widget.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "visualization",
     "description": "Specifies how this widget will be visualized.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "DashboardWidgetVisualization",
       "kind": "OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "DashboardWidgetRawConfiguration",
   "description": "Raw JSON payload with full configuration of a widget.",
   "kind": "SCALAR"
  },
  {
   "name": "ErrorsInboxAssignErrorGroupError",
   "description": "Assign error group error",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "description",
     "description": "The description of the error",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "type",
     "description": "The error type",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ErrorsInboxAssignErrorGroupErrorType",
       "kind": "ENUM"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "ErrorsInboxResponseError",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "CloudUnlinkAccountsInput",
   "description": "Information required to unlink (remove) a linked account.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "DomainType",
   "description": "Details about an entity type",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "domain",
     "description": "The domain of the entity.\n\nThe domain must be a value matching /[A-Z][A-Z0-9_]{2,14}/.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "type",
     "description": "The type of the entity.\n\nThe type must be a value matching /[A-Z][A-Z0-9_]{2,49}/.\n\nSome examples are APPLICATION, HOST or CONTAINER.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "WorkloadStatusResult",
   "description": "The details of a status that was involved in the calculation of the workload status.",
   "kind": "INTERFACE",
   "fields": [
    {
     "name": "source",
     "description": "Indicates where the status value derives from.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "WorkloadStatusSource",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "value",
     "description": "The value of a status.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "WorkloadStatusValue",
       "kind": "ENUM"
      }
     }
    }
   ],
   "possibleTypes": [
    {
     "name": "WorkloadRollupRuleStatusResult",
     "kind": "OBJECT"
    },
    {
     "name": "WorkloadStaticStatusResult",
     "kind": "OBJECT"
    }
   ]
  },
  {
   "name": "ServiceLevelObjectiveTimeWindowCreateInput",
   "description": "The time window configuration of the SLO.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "rolling",
     "description": "The rolling time window configuration of the SLO.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ServiceLevelObjectiveRollingTimeWindowCreateInput",
       "kind": "INPUT_OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "AiDecisionsAccountStitchedFields",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "decision",
     "description": "Fetch a decision by ID.",
     "type": {
      "name": "AiDecisionsDecision",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "decisionId",
       "description": "Decision ID.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "decisions",
     "description": "Returns a paginated list of decisions.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsDecisionListing",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "after",
       "description": "Cursor to paginate forwards.",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "before",
       "description": "Cursor to paginate backwards.",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "decisionStates",
       "description": "List of decision states.",
       "type": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "AiDecisionsDecisionState",
          "kind": "ENUM"
         }
        }
       }
      },
      {
       "name": "decisionTypes",
       "description": "List of decision types.",
       "type": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "AiDecisionsDecisionType",
          "kind": "ENUM"
         }
        }
       }
      },
      {
       "name": "pageSize",
       "description": "Number of elements in page.",
       "type": {
        "name": "Int",
        "kind": "SCALAR"
       }
      },
      {
       "name": "sortMethod",
       "description": "Sorting method.",
       "type": {
        "name": "AiDecisionsDecisionSortMethod",
        "kind": "ENUM"
       }
      }
     ]
    }
   ]
  },
  {
   "name": "ExternalEntity",
   "description": "An External entity.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "account",
     "type": {
      "name": "AccountOutline",
      "kind": "OBJECT"
     }
    },
    {
     "name": "accountId",
     "description": "The New Relic account ID associated with this entity.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "alertSeverity",
     "description": "The current alerting severity of the entity.",
     "type": {
      "name": "EntityAlertSeverity",
      "kind": "ENUM"
     }
    },
    {
     "name": "alertViolations",
     "description": "Violations on the entity that were open during the specified time window. This will return up to 500 violations - if there are more in the time window selected, you must narrow the time window or look at fewer entities.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityAlertViolation",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "endTime",
       "description": "End of time window for violations.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EpochMilliseconds",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "startTime",
       "description": "Start of time window for violations.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EpochMilliseconds",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "deploymentSearch",
     "description": "Retrieve the deployment event(s). Ordered by timestamp DESC.",
     "type": {
      "name": "ChangeTrackingDeploymentSearchResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "filter",
       "description": "Contains the set of filters to apply to the query.",
       "type": {
        "name": "ChangeTrackingSearchFilter",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "domain",
     "description": "The entity's domain",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "entityType",
     "description": "A value representing the combination of the entity's domain and type.",
     "type": {
      "name": "EntityType",
      "kind": "ENUM"
     }
    },
    {
     "name": "firstIndexedAt",
     "description": "The date of last time the entity has updated any of its fields.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "goldenMetrics",
     "description": "The list of golden metrics for a specific entity",
     "type": {
      "name": "EntityGoldenContextScopedGoldenMetrics",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden metrics",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "timeWindow",
       "description": "Time range to apply to the golden metric NRQL query result field",
       "type": {
        "name": "EntityGoldenNrqlTimeWindowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "goldenTags",
     "description": "The list of golden tags for a specific entityType.",
     "type": {
      "name": "EntityGoldenContextScopedGoldenTags",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden tags",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "guid",
     "description": "A unique entity identifier.",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    },
    {
     "name": "indexedAt",
     "description": "The time the entity was indexed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "lastReportingChangeAt",
     "description": "The last time the entity's reporting status changed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The name of this entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nerdStorage",
     "type": {
      "name": "NerdStorageEntityScope",
      "kind": "OBJECT"
     }
    },
    {
     "name": "nrdbQuery",
     "description": "Make an `Entity` scoped query to NRDB with a NRQL string.\n\nA relevant `WHERE` clause will be added to your query to scope data to the entity in question.\n\nSee the [NRQL Docs](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/nrql-resources/nrql-syntax-components-functions) for more information about generating a query string.",
     "type": {
      "name": "NrdbResultContainer",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "async",
       "description": "When true, the query will begin asynchronous resolution after the allotted `timeout`. Include `queryProgress` fields in your GraphQL query to receive the information you will need to poll the `nrdbQueryProgress` field for the results of your async NRQL query.\n\nSee [this page](https://docs.newrelic.com/docs/apis/nerdgraph/examples/async-queries-nrql-tutorial) for additional asynchronous query documentation.",
       "type": {
        "name": "Boolean",
        "kind": "SCALAR"
       },
       "defaultValue": "false"
      },
      {
       "name": "nrql",
       "description": "The [NRQL](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/nrql-resources/nrql-syntax-components-functions) query string.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Nrql",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "options",
       "description": "Additional options for NRQL queries.",
       "type": {
        "name": "NrqlQueryOptions",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "timeout",
       "description": "The timeout we will apply to the NRQL Query. The value will be clamped to between 5 and 120 seconds and defaults to 5 seconds.\n\nFor `async` queries, if the query is still incomplete after this amount of time, resolution will become asynchronous and return `queryProgress` data if requested.",
       "type": {
        "name": "Seconds",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "nrdbQueryProgress",
     "description": "Poll for the results of a previously-executed asychronous NRDB query.\n\nThe `queryId` is available in the `queryProgress` data returned by the original asynchronous query.\n\nSee [this page](https://docs.newrelic.com/docs/apis/nerdgraph/examples/async-queries-nrql-tutorial) for additional asynchronous query documentation.",
     "type": {
      "name": "NrdbResultContainer",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "queryId",
       "description": "A token for retrieving the results of a previously executed asynchronous query.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "permalink",
     "description": "The url to the entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "recentAlertViolations",
     "description": "Recent violations on the entity.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityAlertViolation",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "count",
       "description": "The desired number of alert violations to be returned.",
       "type": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "relatedEntities",
     "description": "Related entities result with optional filtering.",
     "type": {
      "name": "EntityRelationshipRelatedEntitiesResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "cursor",
       "description": "The cursor to fetch paginated results.",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "filter",
       "description": "Apply an optional filter to the related entities.",
       "type": {
        "name": "EntityRelationshipEdgeFilter",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "limit",
       "description": "A limit to apply to the number of relationships returned. Note: this option can only lower the default limits (2000 relationships).",
       "type": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "relationships",
     "description": "A list of the entities' relationships.\n\nFor more information, visit [our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/graphql-relationships-api-tutorial).",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityRelationship",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "endTime",
       "description": "Return relationships as they existed in the past. The duration of the time window queried is fixed at 75 minutes.",
       "type": {
        "name": "EpochMilliseconds",
        "kind": "SCALAR"
       }
      },
      {
       "name": "filter",
       "description": "Apply an optional filter to the relationships.",
       "type": {
        "name": "EntityRelationshipFilter",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "reporting",
     "description": "The reporting status of the entity. If New Relic is successfully collecting data from your application, this will be true.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "serviceLevel",
     "description": "The service level defined for the entity.",
     "type": {
      "name": "ServiceLevelDefinition",
      "kind": "OBJECT"
     }
    },
    {
     "name": "tags",
     "description": "The tags applied to the entity.\n\nFor details on tags, as well as query and mutation examples, visit [our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/graphql-tagging-api-tutorial).",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityTag",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "tagsWithMetadata",
     "description": "The tags applied to the entity with their metadata.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityTagWithMetadata",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "tracingSummary",
     "description": "Look up Distributed Tracing summary data for the selected `EntityGuid`",
     "type": {
      "name": "DistributedTracingEntityTracingSummary",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "timeWindow",
       "description": "The start and end of the tracing data. Defaults to the last 30 minutes",
       "type": {
        "name": "TimeWindowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "type",
     "description": "The entity's type",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ],
   "interfaces": [
    {
     "name": "AlertableEntity",
     "kind": "INTERFACE"
    },
    {
     "name": "Entity",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "AlertsVictorOpsNotificationChannelUpdateInput",
   "description": "The input for updating an existing VictorOps notification channel.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "key",
     "description": "Key.",
     "type": {
      "name": "SecureValue",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "Notification channel name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "routeKey",
     "description": "Route key.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AiWorkflowsFilter",
   "description": "Filter Object",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "accountId",
     "description": "Account Id of this Filter",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "Filter Id",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "Name of the Filter",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "predicates",
     "description": "Expressions that determine which issues will be handled",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiWorkflowsPredicate",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "type",
     "description": "The type of the Filter",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiWorkflowsFilterType",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "AuthorizationManagementGrantAccessPayload",
   "description": "Autogenerated return type of GrantAccess",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "roles",
     "description": "the roles that were granted to this group",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AuthorizationManagementGrantedRole",
         "kind": "OBJECT"
        }
       }
      }
     }
    }
   ]
  },
  {
   "name": "SyntheticsMonitorDowntimeDailyConfig",
   "description": "Configuration options for a monitor downtime that runs daily",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "endRepeat",
     "description": "Configuration options if the customer wants the monitor to end at a specific date",
     "type": {
      "name": "SyntheticsDateWindowEndConfig",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "endTime",
     "description": "The date and time in which the monitor downtime will end",
     "type": {
      "name": "NaiveDateTime",
      "kind": "SCALAR"
     }
    },
    {
     "name": "startTime",
     "description": "The date and time in which the monitor downtime will begin",
     "type": {
      "name": "NaiveDateTime",
      "kind": "SCALAR"
     }
    },
    {
     "name": "timezone",
     "description": "The timezone the time values will be in",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "ReferenceEntityCreateRepositoryResult",
   "description": "Response type for create operations over entities.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "created",
     "description": "The list of entities guids that have been created correctly.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EntityGuid",
         "kind": "SCALAR"
        }
       }
      }
     }
    },
    {
     "name": "failures",
     "description": "List of failures for the create operation.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ReferenceEntityCreateRepositoryError",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "updated",
     "description": "The list of entities guids that have been updated correctly.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EntityGuid",
         "kind": "SCALAR"
        }
       }
      }
     }
    }
   ]
  },
  {
   "name": "WhatsNewContentSearchQuery",
   "description": "A query that represents a criteria for searching news.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "contentType",
     "description": "Criteria to narrow the scope of the search to a specific type of news.",
     "type": {
      "name": "WhatsNewContentType",
      "kind": "ENUM"
     }
    },
    {
     "name": "unreadOnly",
     "description": "Criteria to narrow the scope of the search to only those news that are unread by the current user.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "CloudAwsConnectIntegrationInput",
   "description": "Connect",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AiDecisionsFixedLongestCommonSubsequenceDistanceInput",
   "description": "Input type for FixedLongestCommonSubsequenceDistance expression",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "incident",
     "description": "Incident selector to be used in comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsIncidentObjectInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "maxDistance",
     "description": "Maximum distance threshold.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Float",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "value",
     "description": "Value to be used in comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "DashboardCreateErrorType",
   "description": "Expected error types that can be returned by create operation.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "INVALID_INPUT",
     "description": "Invalid input error.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "LogConfigurationsCreateDataPartitionRuleErrorType",
   "description": "Expected error types as result of creating a new data partition rule.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "DUPLICATE_DATA_PARTITION_RULE_NAME",
     "description": "A data partition rule with the provided name already exists.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "INVALID_DATA_PARTITION_INPUT",
     "description": "The provided data partition does not match the validation requirements",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "MAX_DATA_PARTITION_RULES",
     "description": "Customer has reached the maximum number of allowed data partition rules.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "OrganizationRevokeSharedAccountInput",
   "description": "Attributes for revoking an account share.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "id",
     "description": "The id of the account share to be revoked",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AlertsNotificationChannelPolicy",
   "description": "Information about a policy associated with a notification channel.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "id",
     "description": "Policy ID.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "Policy name.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "Nr1CatalogIssuesContactChannel",
   "description": "A contact channel where users can get support via the repository issues page",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "url",
     "description": "The URL linking to the repository issues page",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "NerdpackAllowListResult",
   "description": "Result of an allow list mutation.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "nerdpack",
     "description": "Nerdpack to allow to subscribe.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "NerdpackData",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "resultsPerAccount",
     "description": "Subscription allow list result per account.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "NerdpackMutationResultPerAccount",
       "kind": "OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "AiDecisionsSearchBlueprint",
   "description": "Blueprint for a search operation",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "expression",
     "description": "Expression to use to compare incidents.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsRuleExpressionInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "limit",
     "description": "Maximum number of incidents to query for each available incident selector",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "retentionWindowLength",
     "description": "Duration to consider resources for.",
     "type": {
      "name": "Milliseconds",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "CloudAwsMsElasticacheIntegration",
   "description": "Fetch ElastiCache entities Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "EdgeCreateTraceObserverResponse",
   "description": "Successfully created trace observers, or one or more error responses if there were issues.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "errors",
     "description": "Errors that may occur when creating a `TraceObserver`. Defaults to `null` in case of success.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EdgeCreateTraceObserverResponseError",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "traceObserver",
     "description": "The trace observer defined in `CreateTraceObserverInput`. Defaults to `null` in case of failure.",
     "type": {
      "name": "EdgeTraceObserver",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "OrganizationBillingStructure",
   "description": "Valid billing structure values",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "ACCOUNT_HIERARCHY",
     "description": "Account Hierarchy",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "CUSTOMER_CONTRACT",
     "description": "Customer Contract",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "UNSTRUCTURED",
     "description": "Unstructured",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "CloudSqsIntegrationInput",
   "description": "Amazon Simple Queue Service (SQS)",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "fetchExtendedInventory",
     "description": "Determine if extra inventory data be collected or not. May affect total data collection time and contribute to the Cloud provider API rate limit.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "fetchTags",
     "description": "Specify if tags should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "queuePrefixes",
     "description": "Specify each name or prefix for the Queues that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "tagKey",
     "description": "Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "tagValue",
     "description": "Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "StreamingExportAzureDetails",
   "description": "Azure details about a streaming rule",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "eventHubConnectionString",
     "description": "Connection string that has access to the specific Event Hub",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "eventHubName",
     "description": "The name of Event Hub to write events to",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "SyntheticsMonthlyMonitorDowntimeMutationResult",
   "description": "Monitor downtime object returned to the customer for a downtime run monthly",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "accountId",
     "description": "The account ID associated with the monitor downtime",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "endRepeat",
     "description": "Configuration options if the customer wants the monitor to end at a specific date",
     "type": {
      "name": "SyntheticsDateWindowEndOutput",
      "kind": "OBJECT"
     }
    },
    {
     "name": "endTime",
     "description": "The date and time in which the monitor downtime will end",
     "type": {
      "name": "NaiveDateTime",
      "kind": "SCALAR"
     }
    },
    {
     "name": "frequency",
     "description": "Configuration options for which days of the month a monitor downtime will occur",
     "type": {
      "name": "SyntheticsMonitorDowntimeMonthlyFrequencyOutput",
      "kind": "OBJECT"
     }
    },
    {
     "name": "guid",
     "description": "The entity GUID associated with the monitor downtime",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    },
    {
     "name": "monitorGuids",
     "description": "The monitor GUIDs associated with the monitor downtime",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityGuid",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "The name of the monitor downtime",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "startTime",
     "description": "The date and time in which the monitor downtime will begin",
     "type": {
      "name": "NaiveDateTime",
      "kind": "SCALAR"
     }
    },
    {
     "name": "timezone",
     "description": "The timezone the time values will be in",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "TimeZoneInfo",
   "description": "Information about a Time Zone",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "name",
     "description": "The name of the Time Zone",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "offset",
     "description": "The offset in seconds from UTC",
     "type": {
      "name": "Seconds",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "Nr1CatalogEmailContactChannel",
   "description": "A contact channel where users can get support via email",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "address",
     "description": "The email address for email support",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "PixiePixieProject",
   "description": "Pixie Project keys linked to a New Relic account",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "apiKey",
     "description": "Pixie API key",
     "type": {
      "name": "SecureValue",
      "kind": "SCALAR"
     }
    },
    {
     "name": "deployKey",
     "description": "Pixie Deploy key",
     "type": {
      "name": "SecureValue",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AiWorkflowsTestNotificationResponseStatus",
   "description": "Status of the test notification",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "FAILURE",
     "description": "The test notification failed",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SUCCESS",
     "description": "The test notification succeeded",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AiDecisionsRelativeLessThanInput",
   "description": "Input type for RelativeLessThan expression",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "left",
     "description": "Left operand of comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsIncidentObjectInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "right",
     "description": "Right operand of comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsIncidentObjectInput",
       "kind": "INPUT_OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "UserManagementUpdateGroupPayload",
   "description": "Autogenerated return type of UpdateGroup.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "group",
     "description": "The group that was updated",
     "type": {
      "name": "UserManagementGroup",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "EntityAlertSeverity",
   "description": "The alert severity of the entity.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "CRITICAL",
     "description": "Indicates an entity has a critical violation in progress.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NOT_ALERTING",
     "description": "Indicates an entity has no violations and therefore is not alerting.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NOT_CONFIGURED",
     "description": "Indicates an entity is not configured for alerting.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "WARNING",
     "description": "Indicates an entity  has a warning violation in progress.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "Int",
   "description": "The `Int` scalar type represents non-fractional signed whole numeric\nvalues. It is NOT compliant with the GraphQl spec, it can represent\nvalues between `-(2^53 - 1)` and `2^53 - 1` as specified by\n[IEEE 754](https://en.wikipedia.org/wiki/IEEE_754).\nIt is kept here for backwards compatibility, prefer using\nthe SpecCompliantInt.",
   "kind": "SCALAR"
  },
  {
   "name": "AiTopologyCollectorEdgeBlueprint",
   "description": "Blueprint for edge creation.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "directed",
     "description": "Whether or not from and to have any semantic meaning.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "fromVertexName",
     "description": "The source vertex name.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "toVertexName",
     "description": "The destination vertex name.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AiTopologyVertex",
   "description": "A vertex is a representation of a node in a graph: a host; an application; etc.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "definingAttributes",
     "description": "The attributes used to define a vertex as a key-value entry.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiTopologyDefiningAttribute",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "id",
     "description": "ID of vertex.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "Name of the vertex.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "updatedAt",
     "description": "Time rule was last updated.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochMilliseconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "vertexClass",
     "description": "Class of the vertex.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiTopologyVertexClass",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "StackTraceBrowserException",
   "description": "A structured representation of an exception for a Browser application.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "message",
     "description": "The top level message associated to the stack trace.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "stackTrace",
     "description": "The stack trace associated with the exception.",
     "type": {
      "name": "StackTraceBrowserStackTrace",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "IncidentIntelligenceEnvironmentCreateEnvironmentResultDetails",
   "description": "Result details union",
   "kind": "UNION",
   "possibleTypes": [
    {
     "name": "IncidentIntelligenceEnvironmentEnvironmentAlreadyExists",
     "kind": "OBJECT"
    },
    {
     "name": "IncidentIntelligenceEnvironmentEnvironmentCreated",
     "kind": "OBJECT"
    }
   ]
  },
  {
   "name": "NrqlQueryOptions",
   "description": "Additional options for NRQL queries.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "eventNamespaces",
     "description": "Limit the NRQL query to return results from the chosen Event Namespaces.\n\nYou must supply at least 1 valid event namespace when using this option.\nInvalid event namespaces will be filtered out.\n\nIf omitted, the default list will be `[\"Default\"]`\n\nFor more details about Event Namespaces, visit our [docs](https://docs.newrelic.com/docs/accounts/original-accounts-billing/original-product-based-pricing/introduction-new-relic-subscription-usage-data/#namespace).",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    }
   ]
  },
  {
   "name": "ReferenceEntityCreateRepositoryError",
   "description": "Type that wraps the errors from a entity create operation.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "guid",
     "description": "Guid related to the error.",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    },
    {
     "name": "message",
     "description": "User-friendly message describing the error.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "type",
     "description": "Describes all potential error types that a create operation might return.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ReferenceEntityCreateRepositoryErrorType",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "BrowserAgentInstallType",
   "description": "Browser agent install types.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "LITE",
     "description": "Lite agent install type.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "PRO",
     "description": "Pro agent install type.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "PRO_SPA",
     "description": "Pro + SPA agent install type.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "SyntheticsDeviceEmulation",
   "description": "Information related to device emulation - will be deprecated soon",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "deviceOrientation",
     "description": "The device orientation the user would like to represent",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SyntheticsDeviceOrientation",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "deviceType",
     "description": "The device type that a user can select",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SyntheticsDeviceType",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "AiNotificationsChannelStatus",
   "description": "Channel statuses",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "CONFIGURATION_ERROR",
     "description": "Configuration Error channel status",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "CONFIGURATION_WARNING",
     "description": "Configuration Warning channel status",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "DEFAULT",
     "description": "Default channel status",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "DRAFT",
     "description": "Draft channel status",
     "isDeprecated": true,
     "deprecationReason": "unused status"
    },
    {
     "name": "ERROR",
     "description": "Error channel status",
     "isDeprecated": true,
     "deprecationReason": "unused status"
    },
    {
     "name": "TESTED",
     "description": "Tested channel status",
     "isDeprecated": true,
     "deprecationReason": "unused status"
    },
    {
     "name": "THROTTLED",
     "description": "Throttled channel status",
     "isDeprecated": true,
     "deprecationReason": "unused status"
    },
    {
     "name": "UNKNOWN_ERROR",
     "description": "Unknown Error channel status",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "ErrorsInboxResource",
   "description": "Basic external resource",
   "kind": "INTERFACE",
   "fields": [
    {
     "name": "id",
     "description": "Unique resource identifier",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "url",
     "description": "External resource url",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "possibleTypes": [
    {
     "name": "ErrorsInboxJiraIssue",
     "kind": "OBJECT"
    }
   ]
  },
  {
   "name": "MultiTenantIdentityGroupNameInput",
   "description": "The input object representing parameters for the name filter",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "contains",
     "description": "Part of a group name",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "eq",
     "description": "A group name",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "CloudAwsDocdbIntegrationInput",
   "description": "DocumentDB",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AiDecisionsSelectorExamples",
   "description": "Example subset of incidents applicable for a selector",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "incidents",
     "description": "IDs of incidents that can be applied to this selector",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     }
    },
    {
     "name": "select",
     "description": "Incident selector",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsIncidentSelect",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "AlertsVictorOpsNotificationChannelCreateInput",
   "description": "The input for creating a new VictorOps notification channel.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "key",
     "description": "Key.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SecureValue",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "Notification channel name.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "routeKey",
     "description": "Route key.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AiNotificationsSuggestionFilterType",
   "description": "Filters for the suggestions object",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "CONTAINS",
     "description": "Contains specific string",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "STARTSWITH",
     "description": "Starts with a specific string",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "DashboardVariableNrqlQueryInput",
   "description": "Configuration for variables of type NRQL.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "accountIds",
     "description": "New Relic account ID(s) to issue the query against.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      }
     }
    },
    {
     "name": "query",
     "description": "NRQL formatted query.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Nrql",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "CloudAwsTagsGlobalIntegration",
   "description": "Fetch tags for all integrations Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "AlertsWebhookNotificationChannelUpdateInput",
   "description": "The input for updating an existing Webhook notification channel.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "baseUrl",
     "description": "Base URL.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "basicAuth",
     "description": "Basic auth.",
     "type": {
      "name": "AlertsWebhookBasicAuthMutationInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "customHttpHeaders",
     "description": "Custom HTTP headers.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AlertsWebhookCustomHeaderMutationInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    },
    {
     "name": "customPayloadBody",
     "description": "Custom payload body.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "customPayloadType",
     "description": "Custom payload type.",
     "type": {
      "name": "AlertsWebhookCustomPayloadType",
      "kind": "ENUM"
     }
    },
    {
     "name": "name",
     "description": "Notification channel name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "NerdpackVersionFilter",
   "description": "Attributes to filter a list of nerdpack versions. Restrictions: 'tags' attribute cannot combined with other attributes.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "fallback",
     "description": "Fallback version to return if no version matches the given filters. No version is returned by default.",
     "type": {
      "name": "NerdpackVersionFilterFallback",
      "kind": "ENUM"
     }
    },
    {
     "name": "tag",
     "description": "Get a version with the specified tag.",
     "type": {
      "name": "NerdpackTagName",
      "kind": "SCALAR"
     }
    },
    {
     "name": "tags",
     "description": "Get the versions with a tag from the tag list.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "NerdpackTagName",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "version",
     "description": "Nerdpack version.",
     "type": {
      "name": "SemVer",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AiNotificationsOAuth2Auth",
   "description": "OAuth2 based authentication",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "accessTokenUrl",
     "description": "OAuth2 access token url",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "authType",
     "description": "Authentication Type - Token or Oauth2",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiNotificationsAuthType",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "authorizationUrl",
     "description": "OAuth2 authorization url",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "clientId",
     "description": "OAuth2 clientId",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "prefix",
     "description": "Token prefix",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "refreshInterval",
     "description": "Interval of how often should the access token be refreshed",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "refreshable",
     "description": "Is the OAuth2 access token refreshable",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "scope",
     "description": "OAuth2 token's scope",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "ServiceLevelEventsQuerySelect",
   "description": "The resulting NRQL SELECT clause to aggregate events.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "attribute",
     "description": "The attribute used in the selected function.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "function",
     "description": "The function to use in the SELECT clause.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ServiceLevelEventsQuerySelectFunction",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "threshold",
     "description": "The threshold used in the selected function.",
     "type": {
      "name": "Float",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "ErrorsInboxErrorGroupSearchFilterInput",
   "description": "Set of filters for scoping error group searches",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "accountIds",
     "description": "Filter error groups by account ID",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "applicationVersions",
     "description": "Filter error groups by the version of the application",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "assignment",
     "description": "Filter error groups by assignment",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ErrorsInboxAssignmentSearchFilterInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    },
    {
     "name": "ids",
     "description": "Filter error groups by id",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "isAssigned",
     "description": "Filter error groups by assignment status",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "states",
     "description": "Filter error groups by error group states",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ErrorsInboxErrorGroupState",
        "kind": "ENUM"
       }
      }
     }
    }
   ]
  },
  {
   "name": "NrdbMetadataTimeWindow",
   "description": "An object representing details about a query's time window.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "begin",
     "description": "Timestamp marking the query begin time.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "compareWith",
     "description": "A clause representing the comparison time window.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "end",
     "description": "Timestamp marking the query end time.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "since",
     "description": "SINCE clause resulting from the query",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "until",
     "description": "UNTIL clause resulting from the query",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "UserManagementCreateUser",
   "description": "The input object representing the user being created",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "authenticationDomainId",
     "description": "The authentication domain id for the user to be created under.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "email",
     "description": "The email address of the user to be created.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "The name of the user to be created.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "userType",
     "description": "The user type for the user to be created.",
     "type": {
      "name": "UserManagementRequestedTierName",
      "kind": "ENUM"
     }
    }
   ]
  },
  {
   "name": "Nr1CatalogSupportedEntityTypes",
   "description": "Specifies fields required for types that implement the ability to determine the level of supported entity types.",
   "kind": "INTERFACE",
   "fields": [
    {
     "name": "mode",
     "description": "Determines the supported entity type mode.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Nr1CatalogSupportedEntityTypesMode",
       "kind": "ENUM"
      }
     }
    }
   ],
   "possibleTypes": [
    {
     "name": "Nr1CatalogAllSupportedEntityTypes",
     "kind": "OBJECT"
    },
    {
     "name": "Nr1CatalogNoSupportedEntityTypes",
     "kind": "OBJECT"
    },
    {
     "name": "Nr1CatalogSpecificSupportedEntityTypes",
     "kind": "OBJECT"
    }
   ]
  },
  {
   "name": "HistoricalDataExportCustomerExportResponse",
   "description": "A Historic Export. Contains information about the request and the current status of that request.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "account",
     "description": "The id of the account whose data the Export will run against",
     "type": {
      "name": "AccountReference",
      "kind": "OBJECT"
     }
    },
    {
     "name": "availableUntil",
     "description": "The time at which the results of this Export expire and are no longer available. Null values indicate that the export is not ready and does not have an expiration time yet",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "beginTime",
     "description": "The beginning of the time range of this Export. Determined from the Query String",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochMilliseconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "createdAt",
     "description": "The time at which the Export Request was created",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochMilliseconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "endTime",
     "description": "The end of the time range of this Export. Determined from the Query String",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochMilliseconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "eventCount",
     "description": "The number of events returned by this Export",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "eventTypes",
     "description": "The event types that the Export will run against. Determined from the Query String",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      }
     }
    },
    {
     "name": "id",
     "description": "Unique Identifier for the Export",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "message",
     "description": "If relevant, an error message about the status of the current export",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrql",
     "description": "The NRQL query for which this Export will run",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Nrql",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "percentComplete",
     "description": "The current completion percentage of this Export",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Float",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "results",
     "description": "A list of urls to download the resulting files. Null values indicate that result files are not yet ready for download",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "status",
     "description": "The current status of this Export",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "HistoricalDataExportStatus",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "submittedAt",
     "description": "The time at which the Export Request was submitted",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochMilliseconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "user",
     "description": "The ID of the user who submitted this Export Request",
     "type": {
      "name": "UserReference",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "ApiAccessKey",
   "description": "A key for accessing New Relic APIs.",
   "kind": "INTERFACE",
   "fields": [
    {
     "name": "createdAt",
     "description": "The UNIX epoch when the key was created, in seconds.",
     "type": {
      "name": "EpochSeconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "id",
     "description": "The ID of the key. This can be used to identify a key without revealing the key itself (used to update and delete).",
     "type": {
      "name": "ID",
      "kind": "SCALAR"
     }
    },
    {
     "name": "key",
     "description": "The keystring of the key.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The name of the key. This can be used as a short identifier for easy reference.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "notes",
     "description": "Any notes can be attached to a key. This is intended for more a more detailed description of the key use if desired.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "obfuscatedKey",
     "description": "The obfuscated key.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "type",
     "description": "The type of key, indicating what New Relic APIs it can be used to access.",
     "type": {
      "name": "ApiAccessKeyType",
      "kind": "ENUM"
     }
    }
   ],
   "possibleTypes": [
    {
     "name": "ApiAccessIngestKey",
     "kind": "OBJECT"
    },
    {
     "name": "ApiAccessUserKey",
     "kind": "OBJECT"
    }
   ]
  },
  {
   "name": "CloudEc2Integration",
   "description": "EC2 Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "duplicateEc2Tags",
     "description": "Specify if the old legacy metadata and tag names have to be kept, it will consume more ingest data size",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "fetchIpAddresses",
     "description": "Specify if IP addresses of ec2 instance should be collected",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "tagKey",
     "description": "Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "tagValue",
     "description": "Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "WorkloadAutomaticStatusInput",
   "description": "An input object used to represent an automatic status configuration. If not provided, a status configuration will be created by default.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "enabled",
     "description": "Whether the automatic status configuration is enabled or not.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "remainingEntitiesRule",
     "description": "An additional meta-rule that can consider all entities that haven't been evaluated by any other rule.",
     "type": {
      "name": "WorkloadRemainingEntitiesRuleInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "rules",
     "description": "A list of rules.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "WorkloadRegularRuleInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    }
   ]
  },
  {
   "name": "DashboardTableWidgetConfigurationInput",
   "description": "Configuration for visualization type 'viz.table'.  Learn more about [table](https://docs.newrelic.com/docs/apis/nerdgraph/examples/create-widgets-dashboards-api/#table) widget.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "nrqlQueries",
     "description": "NRQL queries.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "DashboardWidgetNrqlQueryInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    }
   ]
  },
  {
   "name": "SyntheticsMonitorType",
   "description": "Enum of monitor types",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "BROKEN_LINKS",
     "description": "Broken links monitor",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "BROWSER",
     "description": "Simple browser monitor",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "CERT_CHECK",
     "description": "Certificate Check",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SCRIPT_API",
     "description": "Script API monitor",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SCRIPT_BROWSER",
     "description": "Script browser monitor",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SIMPLE",
     "description": "Simple (ping) monitor",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "STEP_MONITOR",
     "description": "Step Monitor",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "SecureCredentialEntityOutline",
   "description": "A secure credential entity outline.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "account",
     "type": {
      "name": "AccountOutline",
      "kind": "OBJECT"
     }
    },
    {
     "name": "accountId",
     "description": "The New Relic account ID associated with this entity.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "alertSeverity",
     "description": "The current alerting severity of the entity.",
     "type": {
      "name": "EntityAlertSeverity",
      "kind": "ENUM"
     }
    },
    {
     "name": "description",
     "description": "The description of the entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "domain",
     "description": "The entity's domain",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "entityType",
     "description": "A value representing the combination of the entity's domain and type.",
     "type": {
      "name": "EntityType",
      "kind": "ENUM"
     }
    },
    {
     "name": "firstIndexedAt",
     "description": "The date of last time the entity has updated any of its fields.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "goldenMetrics",
     "description": "The list of golden metrics for a specific entity",
     "type": {
      "name": "EntityGoldenContextScopedGoldenMetrics",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden metrics",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "timeWindow",
       "description": "Time range to apply to the golden metric NRQL query result field",
       "type": {
        "name": "EntityGoldenNrqlTimeWindowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "goldenTags",
     "description": "The list of golden tags for a specific entityType.",
     "type": {
      "name": "EntityGoldenContextScopedGoldenTags",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden tags",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "guid",
     "description": "A unique entity identifier.",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    },
    {
     "name": "indexedAt",
     "description": "The time the entity was indexed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "lastReportingChangeAt",
     "description": "The last time the entity's reporting status changed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The name of this entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "permalink",
     "description": "The url to the entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "reporting",
     "description": "The reporting status of the entity. If New Relic is successfully collecting data from your application, this will be true.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "secureCredentialId",
     "description": "The domain-specific identifier for the entity.",
     "type": {
      "name": "ID",
      "kind": "SCALAR"
     }
    },
    {
     "name": "secureCredentialSummary",
     "description": "Summary statistics for the Synthetic Monitor Secure Credential.",
     "type": {
      "name": "SecureCredentialSummaryData",
      "kind": "OBJECT"
     }
    },
    {
     "name": "serviceLevel",
     "description": "The service level defined for the entity.",
     "type": {
      "name": "ServiceLevelDefinition",
      "kind": "OBJECT"
     }
    },
    {
     "name": "tags",
     "description": "The tags applied to the entity.\n\nFor details on tags, as well as query and mutation examples, visit [our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/graphql-tagging-api-tutorial).",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityTag",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "type",
     "description": "The entity's type",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "updatedAt",
     "description": "The time at which the entity was last updated.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    }
   ],
   "interfaces": [
    {
     "name": "AlertableEntityOutline",
     "kind": "INTERFACE"
    },
    {
     "name": "EntityOutline",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "EntitySearchQueryBuilder",
   "description": "An object that can be used to discover and create the entity search query argument.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "alertSeverity",
     "description": "The alerting severity of the entity.",
     "type": {
      "name": "EntityAlertSeverity",
      "kind": "ENUM"
     }
    },
    {
     "name": "alertable",
     "description": "The alertable status of the entity",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "domain",
     "description": "The entity domain. This is not a complete list of entity domains available; it is a way to explore the most popular domains.",
     "type": {
      "name": "EntitySearchQueryBuilderDomain",
      "kind": "ENUM"
     }
    },
    {
     "name": "infrastructureIntegrationType",
     "description": "**WARNING! This argument is deprecated and will not be updated with new infrastructure integration types.** If you want to query for a type not in this list, use the `query` argument instead of `queryBuilder`. To see the query string that is generated by your `queryBuilder` search, ask for the `query` field in the result object. You can then use this to build a query supplied to the `query` argument and remove your `queryBuilder`.\n\nThe Infrastructure integration type. This should be used in place of the `type` field to search for Infrastructure integration specific types.",
     "type": {
      "name": "EntityInfrastructureIntegrationType",
      "kind": "ENUM"
     }
    },
    {
     "name": "name",
     "description": "The entity name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "reporting",
     "description": "The reporting status of the entity.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "tags",
     "description": "A list of tags applied to the entity.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntitySearchQueryBuilderTag",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    },
    {
     "name": "type",
     "description": "The entity type.\n\nThis is not a complete list of entity types available; it is a way to explore the most popular types.\n\nIf you are querying for Infrastructure integration types, use the `infrastructureIntegrationType` field instead of `type`.",
     "type": {
      "name": "EntitySearchQueryBuilderType",
      "kind": "ENUM"
     }
    }
   ]
  },
  {
   "name": "SyntheticsStepInput",
   "description": "A step that will be added to the monitor script",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "ordinal",
     "description": "The position of the step within the script ranging from 1-100.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "type",
     "description": "The type of step to be added to the script",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SyntheticsStepType",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "values",
     "description": "The metadata values related to the step",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    }
   ]
  },
  {
   "name": "MultiTenantAuthorizationRoleOrganizationIdInputFilter",
   "description": "Provides all the available filters on the organization id",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "eq",
     "description": "performs an equals operation",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "IncidentIntelligenceEnvironmentUserNotAuthorizedForAccount",
   "description": "The user is not authorized for this account",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "accountId",
     "description": "The account id the user is not authorized to receive an environment for",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AiIssuesConfigurationOverrideResponse",
   "description": "Response for configuration override",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "config",
     "description": "Updated configuration",
     "type": {
      "name": "AiIssuesEnvironmentConfiguration",
      "kind": "OBJECT"
     }
    },
    {
     "name": "error",
     "description": "Error, if any",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "WhatsNewDocsStitchedFields",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "announcement",
     "description": "Fetches an announcement by ID.",
     "type": {
      "name": "WhatsNewAnnouncementContent",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "id",
       "description": "The ID of the announcement.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "newsSearch",
     "description": "Provides a paginated search to fetch news.",
     "type": {
      "name": "WhatsNewSearchResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "cursor",
       "description": "A cursor.",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "query",
       "description": "A criteria for searching news.",
       "type": {
        "name": "WhatsNewContentSearchQuery",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    }
   ]
  },
  {
   "name": "AiNotificationsProduct",
   "description": "Product types",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "ALERTS",
     "description": "Alerts product type",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "APM",
     "description": "APM product type",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "CHANGE_TRACKING",
     "description": "Change tracking product type",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "CSSP",
     "description": "CSSP (EOPs) product type",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "DISCUSSIONS",
     "description": "Discussions and comments product type",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "ERROR_TRACKING",
     "description": "Error Tracking product type",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "IINT",
     "description": "Incident Intelligence product type",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NTFC",
     "description": "Notifications internal product type",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "PD",
     "description": "Proactive Detection product type",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SECURITY",
     "description": "Security product type",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SHARING",
     "description": "Sharing product type",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "EventsToMetricsCreateRuleResult",
   "description": "The result of which submitted events to metrics rules were successfully and unsuccessfully created",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "failures",
     "description": "Rules that were not created and why.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EventsToMetricsCreateRuleFailure",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "successes",
     "description": "Rules that were successfully created.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EventsToMetricsRule",
       "kind": "OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "AiDecisionsAttributeExistsInput",
   "description": "Input type for AttributeExists expression",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "incident",
     "description": "Incident selector to be used in comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsIncidentObjectInput",
       "kind": "INPUT_OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "CloudGcpDataprocIntegration",
   "description": "Dataproc Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "EntityCollectionType",
   "description": "Indicates where this collection is used",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "TEAM",
     "description": "Collections that define the entities that belong to a team",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "WORKLOAD",
     "description": "Collections that define the entities that belong to a workload",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "WORKLOAD_STATUS_RULE_GROUP",
     "description": "Collections that define the entity groups that are used to calculate the status of a workload",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "Nr1CatalogInstallPlanDirective",
   "description": "Information about an install plan directive",
   "kind": "INTERFACE",
   "fields": [
    {
     "name": "mode",
     "description": "The mode of the install plan directive",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Nr1CatalogInstallPlanDirectiveMode",
       "kind": "ENUM"
      }
     }
    }
   ],
   "possibleTypes": [
    {
     "name": "Nr1CatalogLinkInstallPlanDirective",
     "kind": "OBJECT"
    },
    {
     "name": "Nr1CatalogNerdletInstallPlanDirective",
     "kind": "OBJECT"
    },
    {
     "name": "Nr1CatalogTargetedInstallPlanDirective",
     "kind": "OBJECT"
    }
   ]
  },
  {
   "name": "DashboardVariableInput",
   "description": "Definition of a variable that is local to this dashboard. Variables are placeholders for dynamic values in widget NRQLs.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "defaultValue",
     "description": "[DEPRECATED] Default value for this variable. The actual value to be used will depend on the type.",
     "type": {
      "name": "DashboardVariableDefaultValueInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "defaultValues",
     "description": "Default values for this variable. The actual value to be used will depend on the type.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "DashboardVariableDefaultItemInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    },
    {
     "name": "isMultiSelection",
     "description": "Indicates whether this variable supports multiple selection or not. Only applies to variables of type NRQL or ENUM.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "items",
     "description": "List of possible values for variables of type ENUM",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "DashboardVariableEnumItemInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "name",
     "description": "Variable identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "nrqlQuery",
     "description": "Configuration for variables of type NRQL.",
     "type": {
      "name": "DashboardVariableNrqlQueryInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "options",
     "description": "Options applied to the variable",
     "type": {
      "name": "DashboardVariableOptionsInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "replacementStrategy",
     "description": "Indicates the strategy to apply when replacing a variable in a NRQL query.",
     "type": {
      "name": "DashboardVariableReplacementStrategy",
      "kind": "ENUM"
     }
    },
    {
     "name": "title",
     "description": "Human-friendly display string for this variable.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "type",
     "description": "Specifies the data type of the variable and where its possible values may come from.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "DashboardVariableType",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "EntityGoldenGoldenMetricsError",
   "description": "The different error types in golden metrics",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "message",
     "description": "The error description",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "type",
     "description": "An error type",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EntityGoldenGoldenMetricsErrorType",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "UserManagementAddUsersToGroupsPayload",
   "description": "Autogenerated return type of AddUsersToGroups.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "groups",
     "description": "The group(s) updated.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "UserManagementGroup",
        "kind": "OBJECT"
       }
      }
     }
    }
   ]
  },
  {
   "name": "DataDictionaryDataSource",
   "description": "The source generating the event data",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "name",
     "description": "Name of the source",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "Nr1CatalogSupportLevel",
   "description": "Possible levels of support",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "COMMUNITY",
     "description": "Community supported",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "ENTERPRISE",
     "description": "Enterprise supported",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NEW_RELIC",
     "description": "New Relic supported",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "VERIFIED",
     "description": "Partner supported",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AiDecisionsMergeFeedback",
   "description": "Represents a piece of user feedback for a merge.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "childIssueId",
     "description": "ID of child issue.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "opinion",
     "description": "Opinion of the current user on this merge.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsOpinion",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "parentIssueId",
     "description": "ID of parent issue.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "ruleId",
     "description": "ID of correlation rule.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "userId",
     "description": "ID of user.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "CloudGcpRunIntegrationInput",
   "description": "Run",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "Organization",
   "description": "The `Organization` object provides basic data about an organization.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "accountManagement",
     "description": "This field provides access to AccountManagement data.",
     "type": {
      "name": "AccountManagementOrganizationStitchedFields",
      "kind": "OBJECT"
     }
    },
    {
     "name": "accountShares",
     "description": "Namespace for querying and filtering the actor's organization's shared accounts",
     "type": {
      "name": "OrganizationAccountShares",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "limitingRoleId",
       "description": "Input for filtering by limiting role id of a shared account.",
       "type": {
        "name": "Int",
        "kind": "SCALAR"
       }
      },
      {
       "name": "sourceOrganizationId",
       "description": "Input for filtering by source organization id for a shared account.",
       "type": {
        "name": "ID",
        "kind": "SCALAR"
       }
      },
      {
       "name": "targetOrganizationId",
       "description": "Input for filtering by target organization id of a shared account.",
       "type": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "administrator",
     "description": "The organization's administrator",
     "type": {
      "name": "OrganizationOrganizationAdministrator",
      "kind": "OBJECT"
     }
    },
    {
     "name": "authorizationManagement",
     "description": "This field provides access to AuthorizationManagement data.",
     "type": {
      "name": "AuthorizationManagementOrganizationStitchedFields",
      "kind": "OBJECT"
     }
    },
    {
     "name": "customerId",
     "description": "The customer id for the organization.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "id",
     "description": "The ID of the organization.",
     "type": {
      "name": "ID",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The name of the organization.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "telemetryId",
     "description": "The telemetry id for the organization",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "userManagement",
     "description": "This field provides access to UserManagement data.",
     "type": {
      "name": "UserManagementOrganizationStitchedFields",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "DashboardAddWidgetsToPageResult",
   "description": "Result of addWidgetsToPage operation.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "errors",
     "description": "Expected errors while processing request. No errors means successful request.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "DashboardAddWidgetsToPageError",
       "kind": "OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "CloudConfigureIntegrationPayload",
   "description": "Autogenerated return type of ConfigureIntegration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "errors",
     "description": "The list of errors.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "CloudIntegrationMutationError",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "integrations",
     "description": "The created/modified service integrations.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "CloudIntegration",
         "kind": "INTERFACE"
        }
       }
      }
     }
    }
   ]
  },
  {
   "name": "OrganizationUpdateErrorType",
   "description": "An enum specifying the specific types of errors that may be returned.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "INVALID_RECORD",
     "description": "Returned when the attributes provided for an object are invalid.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NOT_AUTHORIZED",
     "description": "Returned when the actor has insufficient capabilties to fulfill the request.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AgentApplicationSettingsTransactionTracer",
   "description": "Transaction tracer settings related to APM applications. For more information about what these settings do and which ones are applicable for your application, please see https://docs.newrelic.com for more information about agent configuration for your language agent.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "captureMemcacheKeys",
     "description": "DEPRECATED: Please use capture_memcache_keys on parent type.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "enabled",
     "description": "If true, this enables the transaction tracer feature, enabling collection of transaction traces.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "explainEnabled",
     "description": "If true, enables the collection of explain plans in transaction traces. This setting will also apply to explain plans in slow SQL traces if slow_sql.explain_enabled is not set separately.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "explainThresholdType",
     "description": "Relevant only when explain_enabled is true. Can be set to automatic configuration (APDEX_F) or manual (see explainThresholdValue).",
     "type": {
      "name": "AgentApplicationSettingsThresholdTypeEnum",
      "kind": "ENUM"
     }
    },
    {
     "name": "explainThresholdValue",
     "description": "Threshold (in seconds) above which the agent will collect explain plans. Relevant only when explainEnabled is true and explainThresholdType is set to VALUE.",
     "type": {
      "name": "Seconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "logSql",
     "description": "Set to true to enable logging of queries to the agent log file instead of uploading to New Relic. Queries are logged using the record_sql mode.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "recordSql",
     "description": "Obfuscation level for SQL queries reported in transaction trace nodes.",
     "type": {
      "name": "AgentApplicationSettingsRecordSqlEnum",
      "kind": "ENUM"
     }
    },
    {
     "name": "stackTraceThreshold",
     "description": "Specify a threshold in seconds. The agent includes stack traces in transaction trace nodes when the stack trace duration exceeds this threshold.",
     "type": {
      "name": "Seconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "transactionThresholdType",
     "description": "Relevant only when TransactionTracer is enabled. Can be set to automatic configuration (APDEX_F) or manual (see TransactionThresholdValue).",
     "type": {
      "name": "AgentApplicationSettingsThresholdTypeEnum",
      "kind": "ENUM"
     }
    },
    {
     "name": "transactionThresholdValue",
     "description": "Threshold (in seconds) that transactions with a duration longer than this threshold are eligible for transaction traces.  Relevant only when transaction tracer is enabled and transaction_threshold_type is set to VALUE.",
     "type": {
      "name": "Seconds",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "ApmExternalServiceEntity",
   "description": "An external service seen by an APM Application.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "account",
     "type": {
      "name": "AccountOutline",
      "kind": "OBJECT"
     }
    },
    {
     "name": "accountId",
     "description": "The New Relic account ID associated with this entity.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "alertSeverity",
     "description": "The current alerting severity of the entity.",
     "type": {
      "name": "EntityAlertSeverity",
      "kind": "ENUM"
     }
    },
    {
     "name": "alertViolations",
     "description": "Violations on the entity that were open during the specified time window. This will return up to 500 violations - if there are more in the time window selected, you must narrow the time window or look at fewer entities.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityAlertViolation",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "endTime",
       "description": "End of time window for violations.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EpochMilliseconds",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "startTime",
       "description": "Start of time window for violations.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EpochMilliseconds",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "deploymentSearch",
     "description": "Retrieve the deployment event(s). Ordered by timestamp DESC.",
     "type": {
      "name": "ChangeTrackingDeploymentSearchResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "filter",
       "description": "Contains the set of filters to apply to the query.",
       "type": {
        "name": "ChangeTrackingSearchFilter",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "domain",
     "description": "The entity's domain",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "entityType",
     "description": "A value representing the combination of the entity's domain and type.",
     "type": {
      "name": "EntityType",
      "kind": "ENUM"
     }
    },
    {
     "name": "externalSummary",
     "type": {
      "name": "ApmExternalServiceSummaryData",
      "kind": "OBJECT"
     }
    },
    {
     "name": "firstIndexedAt",
     "description": "The date of last time the entity has updated any of its fields.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "goldenMetrics",
     "description": "The list of golden metrics for a specific entity",
     "type": {
      "name": "EntityGoldenContextScopedGoldenMetrics",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden metrics",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "timeWindow",
       "description": "Time range to apply to the golden metric NRQL query result field",
       "type": {
        "name": "EntityGoldenNrqlTimeWindowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "goldenTags",
     "description": "The list of golden tags for a specific entityType.",
     "type": {
      "name": "EntityGoldenContextScopedGoldenTags",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden tags",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "guid",
     "description": "A unique entity identifier.",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    },
    {
     "name": "host",
     "description": "The host of the external service.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "indexedAt",
     "description": "The time the entity was indexed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "lastReportingChangeAt",
     "description": "The last time the entity's reporting status changed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The name of this entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nerdStorage",
     "type": {
      "name": "NerdStorageEntityScope",
      "kind": "OBJECT"
     }
    },
    {
     "name": "nrdbQuery",
     "description": "Make an `Entity` scoped query to NRDB with a NRQL string.\n\nA relevant `WHERE` clause will be added to your query to scope data to the entity in question.\n\nSee the [NRQL Docs](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/nrql-resources/nrql-syntax-components-functions) for more information about generating a query string.",
     "type": {
      "name": "NrdbResultContainer",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "async",
       "description": "When true, the query will begin asynchronous resolution after the allotted `timeout`. Include `queryProgress` fields in your GraphQL query to receive the information you will need to poll the `nrdbQueryProgress` field for the results of your async NRQL query.\n\nSee [this page](https://docs.newrelic.com/docs/apis/nerdgraph/examples/async-queries-nrql-tutorial) for additional asynchronous query documentation.",
       "type": {
        "name": "Boolean",
        "kind": "SCALAR"
       },
       "defaultValue": "false"
      },
      {
       "name": "nrql",
       "description": "The [NRQL](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/nrql-resources/nrql-syntax-components-functions) query string.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Nrql",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "options",
       "description": "Additional options for NRQL queries.",
       "type": {
        "name": "NrqlQueryOptions",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "timeout",
       "description": "The timeout we will apply to the NRQL Query. The value will be clamped to between 5 and 120 seconds and defaults to 5 seconds.\n\nFor `async` queries, if the query is still incomplete after this amount of time, resolution will become asynchronous and return `queryProgress` data if requested.",
       "type": {
        "name": "Seconds",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "nrdbQueryProgress",
     "description": "Poll for the results of a previously-executed asychronous NRDB query.\n\nThe `queryId` is available in the `queryProgress` data returned by the original asynchronous query.\n\nSee [this page](https://docs.newrelic.com/docs/apis/nerdgraph/examples/async-queries-nrql-tutorial) for additional asynchronous query documentation.",
     "type": {
      "name": "NrdbResultContainer",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "queryId",
       "description": "A token for retrieving the results of a previously executed asynchronous query.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "permalink",
     "description": "The url to the entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "recentAlertViolations",
     "description": "Recent violations on the entity.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityAlertViolation",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "count",
       "description": "The desired number of alert violations to be returned.",
       "type": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "relatedEntities",
     "description": "Related entities result with optional filtering.",
     "type": {
      "name": "EntityRelationshipRelatedEntitiesResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "cursor",
       "description": "The cursor to fetch paginated results.",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "filter",
       "description": "Apply an optional filter to the related entities.",
       "type": {
        "name": "EntityRelationshipEdgeFilter",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "limit",
       "description": "A limit to apply to the number of relationships returned. Note: this option can only lower the default limits (2000 relationships).",
       "type": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "relationships",
     "description": "A list of the entities' relationships.\n\nFor more information, visit [our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/graphql-relationships-api-tutorial).",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityRelationship",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "endTime",
       "description": "Return relationships as they existed in the past. The duration of the time window queried is fixed at 75 minutes.",
       "type": {
        "name": "EpochMilliseconds",
        "kind": "SCALAR"
       }
      },
      {
       "name": "filter",
       "description": "Apply an optional filter to the relationships.",
       "type": {
        "name": "EntityRelationshipFilter",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "reporting",
     "description": "The reporting status of the entity. If New Relic is successfully collecting data from your application, this will be true.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "serviceLevel",
     "description": "The service level defined for the entity.",
     "type": {
      "name": "ServiceLevelDefinition",
      "kind": "OBJECT"
     }
    },
    {
     "name": "tags",
     "description": "The tags applied to the entity.\n\nFor details on tags, as well as query and mutation examples, visit [our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/graphql-tagging-api-tutorial).",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityTag",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "tagsWithMetadata",
     "description": "The tags applied to the entity with their metadata.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityTagWithMetadata",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "tracingSummary",
     "description": "Look up Distributed Tracing summary data for the selected `EntityGuid`",
     "type": {
      "name": "DistributedTracingEntityTracingSummary",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "timeWindow",
       "description": "The start and end of the tracing data. Defaults to the last 30 minutes",
       "type": {
        "name": "TimeWindowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "type",
     "description": "The entity's type",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ],
   "interfaces": [
    {
     "name": "AlertableEntity",
     "kind": "INTERFACE"
    },
    {
     "name": "Entity",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "WorkloadRegularRuleInput",
   "description": "The input object used to represent a rule.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "entityGuids",
     "description": "A list of entity GUIDs composing the rule.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "entitySearchQueries",
     "description": "A list of entity search queries used to retrieve the entities that compose the rule.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "WorkloadEntitySearchQueryInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    },
    {
     "name": "rollup",
     "description": "The input object used to represent a rollup strategy.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "WorkloadRollupInput",
       "kind": "INPUT_OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "AlertsNrqlConditionBaselineInput",
   "description": "Input for creating a baseline NRQL condition.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "baselineDirection",
     "description": "Direction in which the baseline is set on condition.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsNrqlBaselineDirection",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "description",
     "description": "The custom violation description.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "enabled",
     "description": "Whether the NRQL condition is enabled.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "expiration",
     "description": "Also known as **loss of signal**, these are settings for how violations are opened or closed when a signal expires.",
     "type": {
      "name": "AlertsNrqlConditionExpirationInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "name",
     "description": "The name of the NRQL condition.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "nrql",
     "description": "The NRQL query that defines the signal for the condition.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsNrqlConditionQueryInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "runbookUrl",
     "description": "Runbook URL.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "signal",
     "description": "Configuration that defines the signal that the NRQL condition will use to evaluate.",
     "type": {
      "name": "AlertsNrqlConditionSignalInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "terms",
     "description": "\"List of critical and warning terms for the condition.\n\nTerms are required in most cases. For conditions with a loss of signal threshold only, terms can be blank.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AlertsNrqlDynamicConditionTermsInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    },
    {
     "name": "titleTemplate",
     "description": "This field allows you to create a custom title to be used when incidents are opened by the condition. Setting this field will override the default title. Must be [Handlebars format](https://handlebarsjs.com/guide/).",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "violationTimeLimit",
     "description": "Deprecated - use violationTimeLimitSeconds for full range of values.\n\nDuration after which a violation automatically closes. Default is THIRTY_DAYS.",
     "type": {
      "name": "AlertsViolationTimeLimit",
      "kind": "ENUM"
     }
    },
    {
     "name": "violationTimeLimitSeconds",
     "description": "Duration after which a violation automatically closes in seconds.\nAccepts values between 300 seconds (5 minutes) and 2592000 seconds (30 days).\n\nDefault is 3 days (259200 seconds).",
     "type": {
      "name": "Seconds",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "CloudAzureExpressrouteIntegrationInput",
   "description": "Express Route",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "resourceGroups",
     "description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AiWorkflowsWorkflows",
   "description": "Workflows query response",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "entities",
     "description": "List of all workflows",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiWorkflowsWorkflow",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "nextCursor",
     "description": "Cursor to get the next batch of results",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "totalCount",
     "description": "Total count of all workflows",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "InstallationStatusErrorInput",
   "description": "An object that represents a status error whenever an recipe has failed to install.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "details",
     "description": "Error details, if any.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "message",
     "description": "The actual error message.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AiDecisionsIssuePriority",
   "description": "Priority of issue.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "CRITICAL",
     "description": "Issue priority of critical",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "HIGH",
     "description": "Issue priority of high",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "LOW",
     "description": "Issue priority of low",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "MEDIUM",
     "description": "Issue priority of medium",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "WorkloadStatusValue",
   "description": "The status of the workload, which is derived from the static and the automatic statuses configured. Any static status always overrides any other status values calculated automatically.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "DEGRADED",
     "description": "The status of the workload is degraded.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "DISRUPTED",
     "description": "The status of the workload is disrupted.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "OPERATIONAL",
     "description": "The status of the workload is operational.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "UNKNOWN",
     "description": "The status of the workload is unknown.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "EntityRelationshipType",
   "description": "The type of the relationship.\n\nFor details, visit [our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/graphql-relationships-api-tutorial).",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "BUILT_FROM",
     "description": "The source repository containing the code for the target",
     "isDeprecated": true,
     "deprecationReason": "`relationships` and its subfields are deprecated. Please use `relatedEntities`."
    },
    {
     "name": "CALLS",
     "description": "The source entity calls the target entity.",
     "isDeprecated": true,
     "deprecationReason": "`relationships` and its subfields are deprecated. Please use `relatedEntities`."
    },
    {
     "name": "CONNECTS_TO",
     "description": "The source establishes TCP connections to the target",
     "isDeprecated": true,
     "deprecationReason": "`relationships` and its subfields are deprecated. Please use `relatedEntities`."
    },
    {
     "name": "CONTAINS",
     "description": "The source entity contains the target entity",
     "isDeprecated": true,
     "deprecationReason": "`relationships` and its subfields are deprecated. Please use `relatedEntities`."
    },
    {
     "name": "HOSTS",
     "description": "The source entity hosts the target",
     "isDeprecated": true,
     "deprecationReason": "`relationships` and its subfields are deprecated. Please use `relatedEntities`."
    },
    {
     "name": "IS",
     "description": "The source and target entities are perspectives on the same thing",
     "isDeprecated": true,
     "deprecationReason": "`relationships` and its subfields are deprecated. Please use `relatedEntities`."
    },
    {
     "name": "SERVES",
     "description": "The source is an Application that serves the target Browser application",
     "isDeprecated": true,
     "deprecationReason": "`relationships` and its subfields are deprecated. Please use `relatedEntities`."
    },
    {
     "name": "UNKNOWN",
     "description": "Type not known",
     "isDeprecated": true,
     "deprecationReason": "`relationships` and its subfields are deprecated. Please use `relatedEntities`."
    }
   ]
  },
  {
   "name": "SyntheticsCreateCertCheckMonitorInput",
   "description": "The monitor input values needed to create a Cert Check monitor",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "apdexTarget",
     "description": "The monitor's Apdex target used to populate SLA reports",
     "type": {
      "name": "Float",
      "kind": "SCALAR"
     }
    },
    {
     "name": "domain",
     "description": "The domain of the host that will have its certificate checked",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "locations",
     "description": "The locations the monitor will run from",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SyntheticsLocationsInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "name",
     "description": "The human readable identifier for the monitor",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "numberDaysToFailBeforeCertExpires",
     "description": "The desired number of remaining days until the certificate expires to trigger a monitor failure",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "period",
     "description": "The interval at which the monitor runs in minutes",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SyntheticsMonitorPeriod",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "runtime",
     "description": "The runtime that the monitor will use to run jobs. The only accepted values are runtimeType: NODE_API \u0026 runtimeTypeVersion: 16.10",
     "type": {
      "name": "SyntheticsExtendedTypeMonitorRuntimeInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "status",
     "description": "The run state of the monitor",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SyntheticsMonitorStatus",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "tags",
     "description": "The tags that will be associated with the monitor",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "SyntheticsTag",
       "kind": "INPUT_OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "DataManagementAccountLimit",
   "description": "Account Limit",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "category",
     "description": "Category for the limit",
     "type": {
      "name": "DataManagementCategory",
      "kind": "ENUM"
     }
    },
    {
     "name": "description",
     "description": "Description of the uses for this limit",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "documentationLink",
     "description": "Link to documentation for this limit",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "limitReachedBehaviorDescription",
     "description": "What happens when the limit is reached?",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "Unique name for the limit",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "timeInterval",
     "description": "Time between limit resets",
     "type": {
      "name": "Nrql",
      "kind": "SCALAR"
     }
    },
    {
     "name": "type",
     "description": "Type of limit for aggregation and reporting",
     "type": {
      "name": "DataManagementType",
      "kind": "ENUM"
     }
    },
    {
     "name": "unit",
     "description": "Unit for the limit value",
     "type": {
      "name": "DataManagementUnit",
      "kind": "ENUM"
     }
    },
    {
     "name": "value",
     "description": "Value for the limit",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AccountManagementUpdateResponse",
   "description": "The return object for an update-account mutation.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "managedAccount",
     "description": "Information about an updated account",
     "type": {
      "name": "AccountManagementManagedAccount",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "ServiceLevelEventsQuerySelectFunction",
   "description": "The function to use in the SELECT clause.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "COUNT",
     "description": "Use on events and unaggregated data.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "GET_CDF_COUNT",
     "description": "Use on distribution metric types.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "GET_FIELD",
     "description": "Use in valid events combined with GET_CDF_COUNT.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SUM",
     "description": "Use on aggregated counts.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "ChartImageType",
   "description": "Represents all the visualization types available for static charts.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "APDEX",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AREA",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "BAR",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "BASELINE",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "BILLBOARD",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "BULLET",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "EVENT_FEED",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "FUNNEL",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "HEATMAP",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "HISTOGRAM",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "LINE",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "PIE",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SCATTER",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "STACKED_HORIZONTAL_BAR",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "TABLE",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "VERTICAL_BAR",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "Nr1CatalogInstallPlanOperatingSystem",
   "description": "Possible types for the install plan operating system",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "DARWIN",
     "description": "Mac operating system",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "LINUX",
     "description": "Linux operating system",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "WINDOWS",
     "description": "Windows operating system",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "UserManagementDeleteUserPayload",
   "description": "Autogenerated return type of DeleteUser.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "deletedUser",
     "description": "The user that was deleted",
     "type": {
      "name": "UserManagementDeletedUser",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "Nr1CatalogDashboardOutline",
   "description": "An outline of a created dashboard",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "dashboardGuid",
     "description": "The guid of the created dashboard",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EntityGuid",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "Nr1CatalogAlertPolicyTemplateMetadata",
   "description": "Metadata associated with the alert policy template",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "authors",
     "description": "A list of authors that created the alert policy template",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Nr1CatalogAuthor",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "categories",
     "description": "The list of categories for filtering, searching, and grouping associated with the alert policy template",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Nr1CatalogCategory",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "categoryTerms",
     "description": "The list of category terms associated with the alert policy template",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      }
     }
    },
    {
     "name": "conditions",
     "description": "The list of alert condition templates attached to the alert policy template",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Nr1CatalogAlertConditionTemplate",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "displayName",
     "description": "The human-readable name for the alert policy template",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "icon",
     "description": "The corresponding icon for the alert policy template",
     "type": {
      "name": "Nr1CatalogIcon",
      "kind": "OBJECT"
     }
    },
    {
     "name": "requiredDataSources",
     "description": "A list of required data sources needed to populate data in the alert policy.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Nr1CatalogDataSource",
         "kind": "OBJECT"
        }
       }
      }
     }
    }
   ]
  },
  {
   "name": "AiWorkflowsUpdateWorkflowInput",
   "description": "Update Workflow input object",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "destinationConfigurations",
     "description": "destinationConfigurations",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AiWorkflowsDestinationConfigurationInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    },
    {
     "name": "destinationsEnabled",
     "description": "destinationsEnabled",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "enrichments",
     "description": "enrichments",
     "type": {
      "name": "AiWorkflowsUpdateEnrichmentsInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "enrichmentsEnabled",
     "description": "enrichmentsEnabled",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "id",
     "description": "id",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "issuesFilter",
     "description": "issuesFilter",
     "type": {
      "name": "AiWorkflowsUpdatedFilterInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "mutingRulesHandling",
     "description": "mutingRulesHandling",
     "type": {
      "name": "AiWorkflowsMutingRulesHandling",
      "kind": "ENUM"
     }
    },
    {
     "name": "name",
     "description": "name",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "workflowEnabled",
     "description": "workflowEnabled",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AiWorkflowsUpdatedFilterInput",
   "description": "Update Filter input object",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "filterInput",
     "description": "filterInput",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiWorkflowsFilterInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "id",
     "description": "id",
     "type": {
      "name": "ID",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "SyntheticMonitorEntityOutline",
   "description": "A Synthetic Monitor entity outline.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "account",
     "type": {
      "name": "AccountOutline",
      "kind": "OBJECT"
     }
    },
    {
     "name": "accountId",
     "description": "The New Relic account ID associated with this entity.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "alertSeverity",
     "description": "The current alerting severity of the entity.",
     "type": {
      "name": "EntityAlertSeverity",
      "kind": "ENUM"
     }
    },
    {
     "name": "domain",
     "description": "The entity's domain",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "entityType",
     "description": "A value representing the combination of the entity's domain and type.",
     "type": {
      "name": "EntityType",
      "kind": "ENUM"
     }
    },
    {
     "name": "firstIndexedAt",
     "description": "The date of last time the entity has updated any of its fields.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "goldenMetrics",
     "description": "The list of golden metrics for a specific entity",
     "type": {
      "name": "EntityGoldenContextScopedGoldenMetrics",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden metrics",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "timeWindow",
       "description": "Time range to apply to the golden metric NRQL query result field",
       "type": {
        "name": "EntityGoldenNrqlTimeWindowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "goldenTags",
     "description": "The list of golden tags for a specific entityType.",
     "type": {
      "name": "EntityGoldenContextScopedGoldenTags",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden tags",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "guid",
     "description": "A unique entity identifier.",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    },
    {
     "name": "indexedAt",
     "description": "The time the entity was indexed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "lastReportingChangeAt",
     "description": "The last time the entity's reporting status changed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "monitorId",
     "description": "The Synthetic Monitor ID",
     "type": {
      "name": "ID",
      "kind": "SCALAR"
     }
    },
    {
     "name": "monitorSummary",
     "description": "Summary statistics for the Synthetic Monitor.",
     "type": {
      "name": "SyntheticMonitorSummaryData",
      "kind": "OBJECT"
     }
    },
    {
     "name": "monitorType",
     "description": "The Synthetic Monitor type",
     "type": {
      "name": "SyntheticMonitorType",
      "kind": "ENUM"
     }
    },
    {
     "name": "monitoredUrl",
     "description": "The URL being monitored by a `SIMPLE` or `BROWSER` monitor type.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The name of this entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "period",
     "description": "The duration in minutes between Synthetic Monitor runs.",
     "type": {
      "name": "Minutes",
      "kind": "SCALAR"
     }
    },
    {
     "name": "permalink",
     "description": "The url to the entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "reporting",
     "description": "The reporting status of the entity. If New Relic is successfully collecting data from your application, this will be true.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "serviceLevel",
     "description": "The service level defined for the entity.",
     "type": {
      "name": "ServiceLevelDefinition",
      "kind": "OBJECT"
     }
    },
    {
     "name": "tags",
     "description": "The tags applied to the entity.\n\nFor details on tags, as well as query and mutation examples, visit [our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/graphql-tagging-api-tutorial).",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityTag",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "type",
     "description": "The entity's type",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ],
   "interfaces": [
    {
     "name": "AlertableEntityOutline",
     "kind": "INTERFACE"
    },
    {
     "name": "EntityOutline",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "WorkloadRemainingEntitiesRuleRollupInput",
   "description": "The input object used to represent a rollup strategy.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "groupBy",
     "description": "The grouping to be applied to the remaining entities.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "WorkloadGroupRemainingEntitiesRuleBy",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "strategy",
     "description": "The rollup strategy that is applied to a group of entities.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "WorkloadRollupStrategy",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "thresholdType",
     "description": "Type of threshold defined for the rule. This is an optional field that only applies when strategy is WORST_STATUS_WINS. Use a threshold to roll up the worst status only after a certain amount of entities are not operational.",
     "type": {
      "name": "WorkloadRuleThresholdType",
      "kind": "ENUM"
     }
    },
    {
     "name": "thresholdValue",
     "description": "Threshold value defined for the rule. This optional field is used in combination with thresholdType. If the threshold type is null, the threshold value will be ignored.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "EntityGoldenMetricInput",
   "description": "Input type for the metrics.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "eventId",
     "description": "The field that is used identifies the entities. Default: entity.guid",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "facet",
     "description": "The field to FACET by. Default: entity.name",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "from",
     "description": "The FROM clause of the query. Default: Metric",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The name of the metric",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "select",
     "description": "The SELECT clause of the query.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "title",
     "description": "The title of the metric",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "where",
     "description": "If a complementary WHERE clause is given this field will contain it.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AiDecisionsSimulation",
   "description": "Simulation of a rule expression for a certain period of time.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "candidateIncidents",
     "description": "Example potential incident correlations.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "kind": "LIST",
         "ofType": {
          "kind": "NON_NULL",
          "ofType": {
           "name": "ID",
           "kind": "SCALAR"
          }
         }
        }
       }
      }
     }
    },
    {
     "name": "completedAt",
     "description": "Time simulation completed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "createdAt",
     "description": "Time simulation was created.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochMilliseconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "errorMessage",
     "description": "Error message if simulation failed.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "id",
     "description": "ID of simulation.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "incidentsApplicable",
     "description": "Applicability of ingested incidents to the expression.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiDecisionsSelectorApplicability",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "incidentsCorrelated",
     "description": "Number of incidents correlated by simulation.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "incidentsIngested",
     "description": "Number of incidents ingested by simulation.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "incidentsProcessed",
     "description": "Number of applicable incidents processed by simulation.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "progress",
     "description": "Percentage of current progress of simulation.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Float",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "updatedAt",
     "description": "Time simulation was last updated.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochMilliseconds",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AlertsSlackNotificationChannel",
   "description": "Slack notification channel.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "associatedPolicies",
     "description": "Policies associated with the channel.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsNotificationChannelPoliciesResultSet",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "config",
     "description": "Slack channel specific configuration.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsSlackNotificationChannelConfig",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "id",
     "description": "Channel ID.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "Channel name.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "type",
     "description": "Channel type.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsNotificationChannelType",
       "kind": "ENUM"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "AlertsNotificationChannel",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "ServiceLevelEventsCreateInput",
   "description": "The events that define the SLI.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "accountId",
     "description": "The New Relic account ID where the events are fetched from.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "badEvents",
     "description": "The definition of bad events.",
     "type": {
      "name": "ServiceLevelEventsQueryCreateInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "goodEvents",
     "description": "The definition of good events.",
     "type": {
      "name": "ServiceLevelEventsQueryCreateInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "validEvents",
     "description": "The definition of valid events.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ServiceLevelEventsQueryCreateInput",
       "kind": "INPUT_OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "OrganizationCreateSharedAccountResponse",
   "description": "The object that's returned from successfully creating a shared account.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "sharedAccount",
     "description": "The created shared account.",
     "type": {
      "name": "OrganizationSharedAccount",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "WorkloadValidAccounts",
   "description": "All the accounts that user has access to, from the same organization.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "accounts",
     "description": "List of accounts from the same organization.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AccountReference",
        "kind": "OBJECT"
       }
      }
     }
    }
   ]
  },
  {
   "name": "ApmApplicationDeployment",
   "description": "An APM application deployment marker",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "changelog",
     "description": "The changelog of the deployment",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "description",
     "description": "Description of the deployment",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "permalink",
     "description": "A link to view the deployment in the UI",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "revision",
     "description": "The revision of the app that was deployed",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "timestamp",
     "description": "The moment the deployment occured",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "user",
     "description": "The user who triggered the deployment",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "DashboardActorStitchedFields",
   "description": "Type defined so its fields will be merged directly into NerdGraph's Actor type.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "liveUrls",
     "description": "Fetch the list of live URLs created by the API user.",
     "type": {
      "name": "DashboardLiveUrlResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "filter",
       "description": "Filter the live URLs to fetch.",
       "type": {
        "name": "DashboardLiveUrlsFilterInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    }
   ]
  },
  {
   "name": "AgentApplicationDeleteResult",
   "description": "The result of deleting an application.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "success",
     "description": "Did the delete succeed?",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AlertsNrqlStaticCondition",
   "description": "A static NRQL condition is the simplest type of NRQL threshold. It allows you to create a condition based on a NRQL query that returns a numeric value.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "description",
     "description": "The custom violation description.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "enabled",
     "description": "Whether the condition is enabled.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "entity",
     "description": "The Entity associated with the NRQL Condition",
     "type": {
      "name": "EntityOutline",
      "kind": "INTERFACE"
     }
    },
    {
     "name": "entityGuid",
     "description": "The condition's entity GUID",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EntityGuid",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "expiration",
     "description": "Also known as **loss of signal**, these are settings for how violations are opened or closed when a signal expires.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsNrqlConditionExpiration",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "id",
     "description": "Condition ID.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "Name of the condition.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "nrql",
     "description": "The NRQL query that defines the signal for the condition.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsNrqlConditionQuery",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "policyId",
     "description": "Alerts policy ID.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "runbookUrl",
     "description": "Runbook URL.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "signal",
     "description": "Settings that determine how the NRQL results are evaluated",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsNrqlConditionSignal",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "terms",
     "description": "List of critical and warning terms for the condition.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AlertsNrqlConditionTerms",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "titleTemplate",
     "description": "This field allows you to create a custom title to be used when incidents are opened by the condition. Setting this field will override the default title. Must be [Handlebars format](https://handlebarsjs.com/guide/).",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "type",
     "description": "Type of NRQL condition.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsNrqlConditionType",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "updatedAt",
     "description": "The timestamp of the most recent update to the Condition",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "updatedBy",
     "description": "The actor for the most recent Condition update",
     "type": {
      "name": "UserReference",
      "kind": "OBJECT"
     }
    },
    {
     "name": "valueFunction",
     "description": "Deprecated - use `signal.slideBy` instead.\n\nFunction used to aggregate the NRQL query value(s) for comparison to the `terms.threshold`. When the result of this aggregate surpasses the `terms.threshold`, a violation is opened.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsNrqlStaticConditionValueFunction",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "violationTimeLimit",
     "description": "Deprecated - use violationTimeLimitSeconds for full range of values.\n\nDuration after which a violation automatically closes.",
     "type": {
      "name": "AlertsViolationTimeLimit",
      "kind": "ENUM"
     }
    },
    {
     "name": "violationTimeLimitSeconds",
     "description": "Duration after which a violation automatically closes in seconds.",
     "type": {
      "name": "Seconds",
      "kind": "SCALAR"
     }
    }
   ],
   "interfaces": [
    {
     "name": "AlertsNrqlCondition",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "ServiceLevelObjectiveRollingTimeWindowCreateInput",
   "description": "The rolling time window configuration of the SLO.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "count",
     "description": "The count of time units. Accepted values are 1, 7 and 28 days.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "unit",
     "description": "The time unit.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ServiceLevelObjectiveRollingTimeWindowUnit",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "AlertableEntityOutline",
   "kind": "INTERFACE",
   "fields": [
    {
     "name": "alertSeverity",
     "description": "The current alerting severity of the entity.",
     "type": {
      "name": "EntityAlertSeverity",
      "kind": "ENUM"
     }
    }
   ],
   "possibleTypes": [
    {
     "name": "ApmApplicationEntityOutline",
     "kind": "OBJECT"
    },
    {
     "name": "ApmDatabaseInstanceEntityOutline",
     "kind": "OBJECT"
    },
    {
     "name": "ApmExternalServiceEntityOutline",
     "kind": "OBJECT"
    },
    {
     "name": "BrowserApplicationEntityOutline",
     "kind": "OBJECT"
    },
    {
     "name": "DashboardEntityOutline",
     "kind": "OBJECT"
    },
    {
     "name": "ExternalEntityOutline",
     "kind": "OBJECT"
    },
    {
     "name": "GenericEntityOutline",
     "kind": "OBJECT"
    },
    {
     "name": "GenericInfrastructureEntityOutline",
     "kind": "OBJECT"
    },
    {
     "name": "InfrastructureAwsLambdaFunctionEntityOutline",
     "kind": "OBJECT"
    },
    {
     "name": "InfrastructureHostEntityOutline",
     "kind": "OBJECT"
    },
    {
     "name": "KeyTransactionEntityOutline",
     "kind": "OBJECT"
    },
    {
     "name": "MobileApplicationEntityOutline",
     "kind": "OBJECT"
    },
    {
     "name": "SecureCredentialEntityOutline",
     "kind": "OBJECT"
    },
    {
     "name": "SyntheticMonitorEntityOutline",
     "kind": "OBJECT"
    },
    {
     "name": "TeamEntityOutline",
     "kind": "OBJECT"
    },
    {
     "name": "ThirdPartyServiceEntityOutline",
     "kind": "OBJECT"
    },
    {
     "name": "UnavailableEntityOutline",
     "kind": "OBJECT"
    },
    {
     "name": "WorkloadEntityOutline",
     "kind": "OBJECT"
    }
   ]
  },
  {
   "name": "OrganizationProvisioningTypeEnum",
   "description": "Provides the available values for provisioning type",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "DISABLED",
     "description": "Provisioning not configured",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "MANUAL",
     "description": "Manual provisioning",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SCIM",
     "description": "SCIM automated provisioning",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "CloudAwsMediapackagevodIntegrationInput",
   "description": "MediaPackage VOD",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "ServiceLevelIndicatorResultQueries",
   "description": "The resulting NRQL queries that help consume the metrics of the SLI.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "goodEvents",
     "description": "The NRQL query that measures the good events.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ServiceLevelResultQuery",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "indicator",
     "description": "The NRQL query that measures the value of the SLI.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ServiceLevelResultQuery",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "validEvents",
     "description": "The NRQL query that measures the valid events.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ServiceLevelResultQuery",
       "kind": "OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "IncidentIntelligenceEnvironmentEnvironmentAlreadyExists",
   "description": "Environment already exists detailed result",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "accountId",
     "description": "The account id of the already exists environment",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "environment",
     "description": "The already exists environment",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "IncidentIntelligenceEnvironmentIncidentIntelligenceEnvironment",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "masterAccountId",
     "description": "The parent account id of the already exists environment",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "UserManagementRequestedTierName",
   "description": "Valid request types for user change requests",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "BASIC_USER_TIER",
     "description": "basic tier",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "CORE_USER_TIER",
     "description": "core tier",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "FULL_USER_TIER",
     "description": "full tier",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AlertsNotificationChannelDeleteError",
   "description": "The error for deleting a notification channel.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "description",
     "description": "Error description.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "errorType",
     "description": "Error type.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsNotificationChannelDeleteErrorType",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "notificationChannelId",
     "description": "Notification channel ID.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AiDecisionsRelativeHammingDistanceInput",
   "description": "Input type for RelativeHammingDistance expression",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "left",
     "description": "Left operand of comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsIncidentObjectInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "maxDistance",
     "description": "Maximum distance threshold.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "right",
     "description": "Right operand of comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsIncidentObjectInput",
       "kind": "INPUT_OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "NaiveDateTime",
   "description": "The `NaiveDateTime` scalar represents a date and time without a Time Zone. The `NaiveDateTime` appears as an ISO8601 formatted string.",
   "kind": "SCALAR"
  },
  {
   "name": "ChartFormatType",
   "description": "Represents all the format types available for static charts.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "PDF",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "PNG",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "LogConfigurationsLogDataPartitionName",
   "description": "The name of a log data partition. Has to start with 'Log_' prefix and can only contain alphanumeric characters and underscores.",
   "kind": "SCALAR"
  },
  {
   "name": "EntityCollectionScopeAccounts",
   "description": "The Accounts used to scope a collection.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "accountIds",
     "description": "The Account IDs that make up the account scoping.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AiDecisionsOpinionEntry",
   "description": "Represents a number of opinions.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "count",
     "description": "Number of this type of opinion.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "opinion",
     "description": "Type of opinion.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsOpinion",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "WorkloadEntitySearchQueryInput",
   "description": "The input object used to represent the entity search query to be created.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "query",
     "description": "The entity search query that is used to perform the search of a group of entities.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "ExternalEntityOutline",
   "description": "An External entity outline.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "account",
     "type": {
      "name": "AccountOutline",
      "kind": "OBJECT"
     }
    },
    {
     "name": "accountId",
     "description": "The New Relic account ID associated with this entity.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "alertSeverity",
     "description": "The current alerting severity of the entity.",
     "type": {
      "name": "EntityAlertSeverity",
      "kind": "ENUM"
     }
    },
    {
     "name": "domain",
     "description": "The entity's domain",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "entityType",
     "description": "A value representing the combination of the entity's domain and type.",
     "type": {
      "name": "EntityType",
      "kind": "ENUM"
     }
    },
    {
     "name": "firstIndexedAt",
     "description": "The date of last time the entity has updated any of its fields.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "goldenMetrics",
     "description": "The list of golden metrics for a specific entity",
     "type": {
      "name": "EntityGoldenContextScopedGoldenMetrics",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden metrics",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "timeWindow",
       "description": "Time range to apply to the golden metric NRQL query result field",
       "type": {
        "name": "EntityGoldenNrqlTimeWindowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "goldenTags",
     "description": "The list of golden tags for a specific entityType.",
     "type": {
      "name": "EntityGoldenContextScopedGoldenTags",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden tags",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "guid",
     "description": "A unique entity identifier.",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    },
    {
     "name": "indexedAt",
     "description": "The time the entity was indexed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "lastReportingChangeAt",
     "description": "The last time the entity's reporting status changed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The name of this entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "permalink",
     "description": "The url to the entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "reporting",
     "description": "The reporting status of the entity. If New Relic is successfully collecting data from your application, this will be true.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "serviceLevel",
     "description": "The service level defined for the entity.",
     "type": {
      "name": "ServiceLevelDefinition",
      "kind": "OBJECT"
     }
    },
    {
     "name": "tags",
     "description": "The tags applied to the entity.\n\nFor details on tags, as well as query and mutation examples, visit [our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/graphql-tagging-api-tutorial).",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityTag",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "type",
     "description": "The entity's type",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ],
   "interfaces": [
    {
     "name": "AlertableEntityOutline",
     "kind": "INTERFACE"
    },
    {
     "name": "EntityOutline",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "KeyTransactionCreateResult",
   "description": "The result of creating a key transaction.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "apdexTarget",
     "description": "The acceptable amount of time spent in the backend before customers get frustrated (Apdex target).",
     "type": {
      "name": "Float",
      "kind": "SCALAR"
     }
    },
    {
     "name": "application",
     "description": "The application associated with this key transaction",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "KeyTransactionApplication",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "browserApdexTarget",
     "description": "The acceptable amount of time for rendering a page in a browser before customers get frustrated (browser Apdex target).",
     "type": {
      "name": "Float",
      "kind": "SCALAR"
     }
    },
    {
     "name": "guid",
     "description": "The GUID for the new key transaction.",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    },
    {
     "name": "metricName",
     "description": "The name of the metric underlying this key transaction.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The name of the key transaction.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AiNotificationsDestinationFields",
   "description": "Destination fields",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "ACTIVE",
     "description": "active field",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "CREATED_AT",
     "description": "created_at field",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "DEFAULT",
     "description": "default field",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "LAST_SENT",
     "description": "last_sent field",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NAME",
     "description": "name field",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "STATUS",
     "description": "status field",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "TYPE",
     "description": "type field",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "UPDATED_AT",
     "description": "updated_at field",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "UPDATED_BY",
     "description": "updated_by field",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AuthorizationManagementRoleSearch",
   "description": "container for roles enabling cursor based pagination",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "nextCursor",
     "description": "an opaque cursor to supply with subsequent   requests to get the next page of results, null if there are no more pages",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "roles",
     "description": "control the access granted to groups",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AuthorizationManagementRole",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "totalCount",
     "description": "the total number of results",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "CloudIntegrationMutationError",
   "description": "Integration Mutation Error",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "integrationSlug",
     "description": "The passed integration slug.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The passed linked account identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "message",
     "description": "The error message.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "nrAccountId",
     "description": "The passed newrelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "type",
     "description": "The error status.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AlertsNrqlBaselineCondition",
   "description": "A baseline NRQL condition is a self-adjusting condition based on the past behavior of a monitored NRQL query.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "baselineDirection",
     "description": "Direction in which the baseline is set on condition.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsNrqlBaselineDirection",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "description",
     "description": "The custom violation description.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "enabled",
     "description": "Whether the condition is enabled.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "entity",
     "description": "The Entity associated with the NRQL Condition",
     "type": {
      "name": "EntityOutline",
      "kind": "INTERFACE"
     }
    },
    {
     "name": "entityGuid",
     "description": "The condition's entity GUID",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EntityGuid",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "expiration",
     "description": "Also known as **loss of signal**, these are settings for how violations are opened or closed when a signal expires.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsNrqlConditionExpiration",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "id",
     "description": "Condition ID.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "Name of the condition.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "nrql",
     "description": "The NRQL query that defines the signal for the condition.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsNrqlConditionQuery",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "policyId",
     "description": "Alerts policy ID.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "runbookUrl",
     "description": "Runbook URL.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "signal",
     "description": "Settings that determine how the NRQL results are evaluated",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsNrqlConditionSignal",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "terms",
     "description": "List of critical and warning terms for the condition.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AlertsNrqlConditionTerms",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "titleTemplate",
     "description": "This field allows you to create a custom title to be used when incidents are opened by the condition. Setting this field will override the default title. Must be [Handlebars format](https://handlebarsjs.com/guide/).",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "type",
     "description": "Type of NRQL condition.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsNrqlConditionType",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "updatedAt",
     "description": "The timestamp of the most recent update to the Condition",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "updatedBy",
     "description": "The actor for the most recent Condition update",
     "type": {
      "name": "UserReference",
      "kind": "OBJECT"
     }
    },
    {
     "name": "violationTimeLimit",
     "description": "Deprecated - use violationTimeLimitSeconds for full range of values.\n\nDuration after which a violation automatically closes.",
     "type": {
      "name": "AlertsViolationTimeLimit",
      "kind": "ENUM"
     }
    },
    {
     "name": "violationTimeLimitSeconds",
     "description": "Duration after which a violation automatically closes in seconds.",
     "type": {
      "name": "Seconds",
      "kind": "SCALAR"
     }
    }
   ],
   "interfaces": [
    {
     "name": "AlertsNrqlCondition",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "SyntheticsUpdateScriptApiMonitorInput",
   "description": "The monitor values that can be updated on a Script Api monitor",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "apdexTarget",
     "description": "The monitor's Apdex target used to populate SLA reports",
     "type": {
      "name": "Float",
      "kind": "SCALAR"
     }
    },
    {
     "name": "locations",
     "description": "The locations the monitor will run from",
     "type": {
      "name": "SyntheticsScriptedMonitorLocationsInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "name",
     "description": "The human readable identifier for the monitor",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "period",
     "description": "The interval at which the monitor runs in minutes",
     "type": {
      "name": "SyntheticsMonitorPeriod",
      "kind": "ENUM"
     }
    },
    {
     "name": "runtime",
     "description": "The runtime that the monitor will use to run jobs",
     "type": {
      "name": "SyntheticsRuntimeInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "script",
     "description": "The script that the monitor runs",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "status",
     "description": "The run state of the monitor",
     "type": {
      "name": "SyntheticsMonitorStatus",
      "kind": "ENUM"
     }
    },
    {
     "name": "tags",
     "description": "The tags that will be associated with the monitor",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "SyntheticsTag",
       "kind": "INPUT_OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "EntityGoldenMetric",
   "description": "An object that represents a golden metric.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "definition",
     "description": "The definition of the golden metric.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EntityGoldenMetricDefinition",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "metricName",
     "description": "The synthesised metric name. i.e: newrelic.goldenmetrics.apm.application.throughput",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "The name of the golden metric.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "originalDefinitions",
     "description": "The definitions of the golden metric as they are defined in the public repo https://github.com/newrelic/entity-definitions.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EntityGoldenOriginalDefinitionWithSelector",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "originalQueries",
     "description": "Original queries as they are defined in the public repo https://github.com/newrelic/entity-definitions.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EntityGoldenOriginalQueryWithSelector",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "query",
     "description": "The golden metric NRQL query.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "title",
     "description": "The title of the golden metric.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "unit",
     "description": "The unit used to represent the golden metric.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EntityGoldenMetricUnit",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "AiNotificationsChannelResponse",
   "description": "Response for all channel related mutations. Includes relevant channel and/or errors",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "channel",
     "description": "Successfully mutated channel",
     "type": {
      "name": "AiNotificationsChannel",
      "kind": "OBJECT"
     }
    },
    {
     "name": "error",
     "description": "Error in channel mutation",
     "type": {
      "name": "AiNotificationsError",
      "kind": "UNION"
     }
    },
    {
     "name": "errors",
     "description": "Deprecated list of errors",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiNotificationsError",
         "kind": "UNION"
        }
       }
      }
     }
    }
   ]
  },
  {
   "name": "UserManagementOrganizationStitchedFields",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "authenticationDomains",
     "description": "An \"authentication domain\" is a grouping of New Relic users governed by the same user management settings, like how they're provisioned (added and updated), how they're authenticated (logged in), session settings, and how user upgrades are managed.",
     "type": {
      "name": "UserManagementAuthenticationDomains",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "cursor",
       "description": "the cursor from the previous request, to get     the next page",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "id",
       "description": "a list of ids to filter returned objects by",
       "type": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "ID",
          "kind": "SCALAR"
         }
        }
       }
      }
     ]
    },
    {
     "name": "types",
     "description": "User Types available for this organization",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "UserManagementOrganizationUserType",
        "kind": "OBJECT"
       }
      }
     }
    }
   ]
  },
  {
   "name": "WorkloadEntity",
   "description": "A workload entity.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "account",
     "type": {
      "name": "AccountOutline",
      "kind": "OBJECT"
     }
    },
    {
     "name": "accountId",
     "description": "The New Relic account ID associated with this entity.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "alertSeverity",
     "description": "The current alerting severity of the entity.",
     "type": {
      "name": "EntityAlertSeverity",
      "kind": "ENUM"
     }
    },
    {
     "name": "alertViolations",
     "description": "Violations on the entity that were open during the specified time window. This will return up to 500 violations - if there are more in the time window selected, you must narrow the time window or look at fewer entities.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityAlertViolation",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "endTime",
       "description": "End of time window for violations.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EpochMilliseconds",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "startTime",
       "description": "Start of time window for violations.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EpochMilliseconds",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "collection",
     "type": {
      "name": "EntityCollection",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "name",
       "description": "The name of the collection to fetch.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "createdAt",
     "description": "When the workload was created.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "createdByUser",
     "description": "The user that created the workload.",
     "type": {
      "name": "UserReference",
      "kind": "OBJECT"
     }
    },
    {
     "name": "deploymentSearch",
     "description": "Retrieve the deployment event(s). Ordered by timestamp DESC.",
     "type": {
      "name": "ChangeTrackingDeploymentSearchResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "filter",
       "description": "Contains the set of filters to apply to the query.",
       "type": {
        "name": "ChangeTrackingSearchFilter",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "domain",
     "description": "The entity's domain",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "entityType",
     "description": "A value representing the combination of the entity's domain and type.",
     "type": {
      "name": "EntityType",
      "kind": "ENUM"
     }
    },
    {
     "name": "firstIndexedAt",
     "description": "The date of last time the entity has updated any of its fields.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "goldenMetrics",
     "description": "The list of golden metrics for a specific entity",
     "type": {
      "name": "EntityGoldenContextScopedGoldenMetrics",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden metrics",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "timeWindow",
       "description": "Time range to apply to the golden metric NRQL query result field",
       "type": {
        "name": "EntityGoldenNrqlTimeWindowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "goldenTags",
     "description": "The list of golden tags for a specific entityType.",
     "type": {
      "name": "EntityGoldenContextScopedGoldenTags",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden tags",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "guid",
     "description": "A unique entity identifier.",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    },
    {
     "name": "indexedAt",
     "description": "The time the entity was indexed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "lastReportingChangeAt",
     "description": "The last time the entity's reporting status changed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The name of this entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nerdStorage",
     "type": {
      "name": "NerdStorageEntityScope",
      "kind": "OBJECT"
     }
    },
    {
     "name": "nrdbQuery",
     "description": "Make an `Entity` scoped query to NRDB with a NRQL string.\n\nA relevant `WHERE` clause will be added to your query to scope data to the entity in question.\n\nSee the [NRQL Docs](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/nrql-resources/nrql-syntax-components-functions) for more information about generating a query string.",
     "type": {
      "name": "NrdbResultContainer",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "async",
       "description": "When true, the query will begin asynchronous resolution after the allotted `timeout`. Include `queryProgress` fields in your GraphQL query to receive the information you will need to poll the `nrdbQueryProgress` field for the results of your async NRQL query.\n\nSee [this page](https://docs.newrelic.com/docs/apis/nerdgraph/examples/async-queries-nrql-tutorial) for additional asynchronous query documentation.",
       "type": {
        "name": "Boolean",
        "kind": "SCALAR"
       },
       "defaultValue": "false"
      },
      {
       "name": "nrql",
       "description": "The [NRQL](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/nrql-resources/nrql-syntax-components-functions) query string.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Nrql",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "options",
       "description": "Additional options for NRQL queries.",
       "type": {
        "name": "NrqlQueryOptions",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "timeout",
       "description": "The timeout we will apply to the NRQL Query. The value will be clamped to between 5 and 120 seconds and defaults to 5 seconds.\n\nFor `async` queries, if the query is still incomplete after this amount of time, resolution will become asynchronous and return `queryProgress` data if requested.",
       "type": {
        "name": "Seconds",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "nrdbQueryProgress",
     "description": "Poll for the results of a previously-executed asychronous NRDB query.\n\nThe `queryId` is available in the `queryProgress` data returned by the original asynchronous query.\n\nSee [this page](https://docs.newrelic.com/docs/apis/nerdgraph/examples/async-queries-nrql-tutorial) for additional asynchronous query documentation.",
     "type": {
      "name": "NrdbResultContainer",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "queryId",
       "description": "A token for retrieving the results of a previously executed asynchronous query.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "permalink",
     "description": "The url to the entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "recentAlertViolations",
     "description": "Recent violations on the entity.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityAlertViolation",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "count",
       "description": "The desired number of alert violations to be returned.",
       "type": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "relatedEntities",
     "description": "Related entities result with optional filtering.",
     "type": {
      "name": "EntityRelationshipRelatedEntitiesResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "cursor",
       "description": "The cursor to fetch paginated results.",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "filter",
       "description": "Apply an optional filter to the related entities.",
       "type": {
        "name": "EntityRelationshipEdgeFilter",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "limit",
       "description": "A limit to apply to the number of relationships returned. Note: this option can only lower the default limits (2000 relationships).",
       "type": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "relationships",
     "description": "A list of the entities' relationships.\n\nFor more information, visit [our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/graphql-relationships-api-tutorial).",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityRelationship",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "endTime",
       "description": "Return relationships as they existed in the past. The duration of the time window queried is fixed at 75 minutes.",
       "type": {
        "name": "EpochMilliseconds",
        "kind": "SCALAR"
       }
      },
      {
       "name": "filter",
       "description": "Apply an optional filter to the relationships.",
       "type": {
        "name": "EntityRelationshipFilter",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "reporting",
     "description": "The reporting status of the entity. If New Relic is successfully collecting data from your application, this will be true.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "serviceLevel",
     "description": "The service level defined for the entity.",
     "type": {
      "name": "ServiceLevelDefinition",
      "kind": "OBJECT"
     }
    },
    {
     "name": "tags",
     "description": "The tags applied to the entity.\n\nFor details on tags, as well as query and mutation examples, visit [our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/graphql-tagging-api-tutorial).",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityTag",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "tagsWithMetadata",
     "description": "The tags applied to the entity with their metadata.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityTagWithMetadata",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "tracingSummary",
     "description": "Look up Distributed Tracing summary data for the selected `EntityGuid`",
     "type": {
      "name": "DistributedTracingEntityTracingSummary",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "timeWindow",
       "description": "The start and end of the tracing data. Defaults to the last 30 minutes",
       "type": {
        "name": "TimeWindowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "type",
     "description": "The entity's type",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "updatedAt",
     "description": "When the workload was last updated.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "workloadStatus",
     "description": "Status of the workload.",
     "type": {
      "name": "WorkloadStatus",
      "kind": "OBJECT"
     }
    }
   ],
   "interfaces": [
    {
     "name": "AlertableEntity",
     "kind": "INTERFACE"
    },
    {
     "name": "CollectionEntity",
     "kind": "INTERFACE"
    },
    {
     "name": "Entity",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "CloudS3IntegrationInput",
   "description": "Amazon Simple Storage Service (S3)",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "fetchExtendedInventory",
     "description": "Determine if extra inventory data be collected or not. May affect total data collection time and contribute to the Cloud provider API rate limit.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "fetchTags",
     "description": "Specify if tags should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "tagKey",
     "description": "Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "tagValue",
     "description": "Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "EdgeDataSourceStatusType",
   "description": "The status of whether data is being sent to the trace observer for a particular data source.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "ACTIVE",
     "description": "The data source telemetry is being sent to this trace observer.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "INACTIVE",
     "description": "The data source telemetry is *not* being sent to this trace observer.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "CloudGcpAppengineIntegrationInput",
   "description": "Google App Engine",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "Nr1CatalogSearchFacets",
   "description": "Information about facets from a search",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "categories",
     "description": "Facet counts for each category",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Nr1CatalogCategoryFacet",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "components",
     "description": "Facet counts for each component",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Nr1CatalogComponentFacet",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "featured",
     "description": "Count of the number of featured results",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "types",
     "description": "Facet counts for each search result type",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Nr1CatalogSearchResultTypeFacet",
         "kind": "OBJECT"
        }
       }
      }
     }
    }
   ]
  },
  {
   "name": "MetricNormalizationRule",
   "description": "An object that represents a metric rename rule.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "action",
     "description": "Rule action.",
     "type": {
      "name": "MetricNormalizationRuleAction",
      "kind": "ENUM"
     }
    },
    {
     "name": "applicationGuid",
     "description": "Application GUID",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    },
    {
     "name": "applicationName",
     "description": "Application Name",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "createdAt",
     "description": "Date of rule creation.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "enabled",
     "description": "Is rule enabled?",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "evalOrder",
     "description": "Rule evaluation order",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "id",
     "description": "Rule Id",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "matchExpression",
     "description": "Metric Match Expression.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "notes",
     "description": "Notes.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "replacement",
     "description": "Metric Replacement Expression.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "terminateChain",
     "description": "Whether it terminates the evaluation chain or not",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "MobilePushNotificationSendPushResult",
   "description": "Result from sending a test push notification.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "message",
     "description": "The success or failure message from the attempted test push.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "WhatsNewAnnouncementContent",
   "description": "Represents the details about an announcement.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "body",
     "description": "The body of the news.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "contentType",
     "description": "The type of the news.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "WhatsNewContentType",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "context",
     "description": "Contains information about the context of the announcement.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "docUrl",
     "description": "A link to the documentation.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "gettingStartedUrl",
     "description": "A link to a page to get started.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "id",
     "description": "The ID of the announcement.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "isFeatured",
     "description": "A boolean representing whether this content is Featured.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "learnMoreUrl",
     "description": "A link to a page to learn more about the announcement.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "publishDate",
     "description": "The date the announcement was published.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "requirements",
     "description": "Information about the requirements.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "summary",
     "description": "The summary of the announcement.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "title",
     "description": "The title of the announcement.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ],
   "interfaces": [
    {
     "name": "WhatsNewContent",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "NrqlDropRulesDeleteDropRuleSubmission",
   "description": "The rules that were attempted to be deleted.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "accountId",
     "description": "Account the rule was created on.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "ruleId",
     "description": "Id of the rule you want to delete.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "CloudKinesisIntegrationInput",
   "description": "Amazon Kinesis Data Streams",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "fetchShards",
     "description": "Specify if Shards should be monitored. May affect total data collection time and contribute to the Cloud provider API rate limit.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "fetchTags",
     "description": "Specify if tags should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "tagKey",
     "description": "Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "tagValue",
     "description": "Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "CloudAzureVmsIntegration",
   "description": "Virtual Machines Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "resourceGroups",
     "description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "CloudGcpBigtableIntegration",
   "description": "Bigtable Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "HistoricalDataExportAccountStitchedFields",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "export",
     "description": "Retrieve a single export by export id",
     "type": {
      "name": "HistoricalDataExportCustomerExportResponse",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "id",
       "description": "The unique identifier for the requested export",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "exports",
     "description": "Retrieve all exports for an account",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "HistoricalDataExportCustomerExportResponse",
        "kind": "OBJECT"
       }
      }
     }
    }
   ]
  },
  {
   "name": "EdgeDeleteSpanAttributeRuleResponse",
   "description": "Successfully deleted span attribute trace filter rule, or one or more error responses if there were issues.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "errors",
     "description": "Errors that may occur when deleting a `SpanAttributeRule`. Defaults to `null` in case of success.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EdgeDeleteSpanAttributeRuleResponseError",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "rule",
     "description": "The trace filter rule that was deleted. Defaults to `null` in case of failure.",
     "type": {
      "name": "EdgeSpanAttributeRule",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "Nr1CatalogScreenshot",
   "description": "Information about the publicly accessible screenshot",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "url",
     "description": "The publicly accessible URL for the screenshot",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "Nr1CatalogPreview",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "AiDecisionsApplicableIncidentSearch",
   "description": "A search for a subset of incidents that may be relevant for a given rule expression",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "completedAt",
     "description": "Time search operation completed",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "createdAt",
     "description": "Time search operation was created",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochMilliseconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "errorMessage",
     "description": "Error message if search operation failed",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "id",
     "description": "ID of search operation",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "incidentsScanned",
     "description": "Number of incidents scanned by the search operation",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "results",
     "description": "Listing of incident selectors and potential applicable incidents",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiDecisionsSelectorExamples",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "updatedAt",
     "description": "Time search operation was last updated",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochMilliseconds",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "DashboardUpdateResult",
   "description": "Result of update operation.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "entityResult",
     "description": "Dashboard update result.",
     "type": {
      "name": "DashboardEntityResult",
      "kind": "OBJECT"
     }
    },
    {
     "name": "errors",
     "description": "Expected errors while processing request.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "DashboardUpdateError",
       "kind": "OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "AlertsIncidentPreference",
   "description": "Determines how incidents are created for critical violations of the conditions contained in the policy.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "PER_CONDITION",
     "description": "A condition will create a condition-level incident when it violates its critical threshold.\nOther violating conditions will create their own incidents.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "PER_CONDITION_AND_TARGET",
     "description": "Each target of each condition will create an entity-level incident upon critical violation.\nOther violating targets will create their own incidents (even on the same condition).",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "PER_POLICY",
     "description": "A condition will create a policy-level incident when it violates its critical threshold.\nOther violating conditions will be grouped into this incident.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AiDecisionsFixedFuzzyWuzzyRatioInput",
   "description": "Input type for FixedFuzzyWuzzyRatio expression",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "incident",
     "description": "Incident selector to be used in comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsIncidentObjectInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "minSimilarity",
     "description": "Minimum similarity threshold.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Float",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "value",
     "description": "Value to be used in comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AiNotificationsConstraintError",
   "description": "Missing constraint error. Constraints can be retrieved using suggestion api",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "dependencies",
     "description": "Names of other constraints this constraint is dependent on",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      }
     }
    },
    {
     "name": "name",
     "description": "Name of the missing constraint",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "CloudVpcIntegration",
   "description": "VPC Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "fetchNatGateway",
     "description": "Specify if NAT gateway should be monitored. May affect total data collection time and contribute to the Cloud provider API rate limit.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "fetchVpn",
     "description": "Specify if VPN should be monitored. May affect total data collection time and contribute to the Cloud provider API rate limit.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "tagKey",
     "description": "Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "tagValue",
     "description": "Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "ServiceLevelEventsUpdateInput",
   "description": "The events that define the SLI.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "badEvents",
     "description": "The definition of bad events.",
     "type": {
      "name": "ServiceLevelEventsQueryUpdateInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "goodEvents",
     "description": "The definition of good events.",
     "type": {
      "name": "ServiceLevelEventsQueryUpdateInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "validEvents",
     "description": "The definition of valid events.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ServiceLevelEventsQueryUpdateInput",
       "kind": "INPUT_OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "Nr1CatalogInstallerType",
   "description": "Type of installer",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "INSTALL_PLAN",
     "description": "Install plan",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "ServiceLevelObjectiveUpdateInput",
   "description": "The input object that represents an objective definition.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "description",
     "description": "The description of the SLO.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The name of the SLO.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "target",
     "description": "The target percentage of the SLO. Maximum value is 100.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Float",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "timeWindow",
     "description": "The time window configuration of the SLO.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ServiceLevelObjectiveTimeWindowUpdateInput",
       "kind": "INPUT_OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "MetricNormalizationEditRuleInput",
   "description": "Input object used to represent the rule to be created",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "action",
     "description": "Rule action.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "MetricNormalizationCustomerRuleAction",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "enabled",
     "description": "Is rule enabled?",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "evalOrder",
     "description": "Rule evaluation order",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "id",
     "description": "Rule Id.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "matchExpression",
     "description": "Metric Match Expression.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "notes",
     "description": "Notes.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "replacement",
     "description": "Metric Replacement Expression.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "terminateChain",
     "description": "Whether it terminates the evaluation chain or not",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AiWorkflowsPredicateInput",
   "description": "PredicateInput input object",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "attribute",
     "description": "attribute",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "operator",
     "description": "operator",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiWorkflowsOperator",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "values",
     "description": "values",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      }
     }
    }
   ]
  },
  {
   "name": "AlertsUserNotificationChannel",
   "description": "User notification channel.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "associatedPolicies",
     "description": "Policies associated with the channel.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsNotificationChannelPoliciesResultSet",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "config",
     "description": "User channel specific configuration.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsUserNotificationChannelConfig",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "id",
     "description": "Channel ID.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "Channel name.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "type",
     "description": "Channel type.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsNotificationChannelType",
       "kind": "ENUM"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "AlertsNotificationChannel",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "StreamingExportAwsInput",
   "description": "AWS input parameters for a new streaming rule",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "awsAccountId",
     "description": "The AWS account to which the target firehose belongs",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "deliveryStreamName",
     "description": "The name of the delivery stream to write events to",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "region",
     "description": "The AWS region the delivery stream is located in",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "role",
     "description": "The role configured for New Relic to assume",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "OrganizationOrganizationCustomerIdInputFilter",
   "description": "Provides all the available filters on the customer id",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "eq",
     "description": "performs an equals operation",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "Nr1CatalogLauncherMetadata",
   "description": "Metadata information for a launcher",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "description",
     "description": "A short form description for the launcher.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "displayName",
     "description": "The human-readable name for the launcher.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "icon",
     "description": "The corresponding icon for the launcher.",
     "type": {
      "name": "Nr1CatalogIcon",
      "kind": "OBJECT"
     }
    },
    {
     "name": "previews",
     "description": "A list of previews for the launcher, such as screenshots.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Nr1CatalogPreview",
         "kind": "INTERFACE"
        }
       }
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "Nr1CatalogNerdpackItemMetadata",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "DataManagementAccountLimitInput",
   "description": "Input for a Limit",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "limit",
     "description": "Unique limit identifier",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "DataManagementLimitLookupInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "overrideReason",
     "description": "The reason for the override",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "overrideValue",
     "description": "The value which should be applied to the account",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "qualifier",
     "description": "Optional qualifier for limit override",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "EventDefinition",
   "description": "A human-readable definition of an NRDB Event Type",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "attributes",
     "description": "A list of attribute definitions for this event type",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EventAttributeDefinition",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "definition",
     "description": "A short description of this event",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "label",
     "description": "The human-friendly formatted name of the event",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The name of the event",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AlertsPolicyUpdateInput",
   "description": "Policy fields to be updated.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "incidentPreference",
     "description": "Determines how incidents are created for critical violations of the conditions contained in the policy.",
     "type": {
      "name": "AlertsIncidentPreference",
      "kind": "ENUM"
     }
    },
    {
     "name": "name",
     "description": "Description of the policy.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AiTopologyCollectorVertexClass",
   "description": "Class of vertex.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "APPLICATION",
     "description": "Vertex class is application",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "BROWSERAPPLICATION",
     "description": "Vertex class is browserapplication",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "CLOUDSERVICE",
     "description": "Vertex class is cloudservice",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "CLUSTER",
     "description": "Vertex class is cluster",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "DATASTORE",
     "description": "Vertex class is datastore",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "HOST",
     "description": "Vertex class is host",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "MONITOR",
     "description": "Vertex class is monitor",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "TEAM",
     "description": "Vertex class is team",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "CloudGcpVmsIntegration",
   "description": "Compute Engine Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "NerdpackTagVersionInput",
   "description": "Input data for nerdpack version tagging.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "tag",
     "description": "Tag to be added to the version.",
     "type": {
      "name": "NerdpackTagName",
      "kind": "SCALAR"
     }
    },
    {
     "name": "version",
     "description": "Nerdpack version.",
     "type": {
      "name": "SemVer",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "OrganizationAuthenticationDomain",
   "description": "A grouping of users governed by the same user management settings",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "authenticationType",
     "description": "Method of authenticating users",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "OrganizationAuthenticationTypeEnum",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "id",
     "description": "The authentication domain id",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "The authentication domain name",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "organizationId",
     "description": "The organization the authentication domain belongs to",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "provisioningType",
     "description": "Method of provisioning users",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "OrganizationProvisioningTypeEnum",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "CloudMetricCollectionMode",
   "description": "How metrics will be collected.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "PULL",
     "description": "Metrics will be pulled by NewRelic",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "PUSH",
     "description": "Metrics will be pushed by the provider",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "CloudAzureMysqlIntegration",
   "description": "Database for MySQL Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "resourceGroups",
     "description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "ErrorsInboxAssignErrorGroupInput",
   "description": "Input for assignment mutation.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "userEmail",
     "description": "Email address of the user that will be assigned.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "userId",
     "description": "Id of the user that will be assigned.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "EventsToMetricsRule",
   "description": "Information about an event-to-metric rule which creates metrics from events.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "accountId",
     "description": "Account with the event and where the metrics will be placed.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "createdAt",
     "description": "The time at which the rule was created",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "DateTime",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "description",
     "description": "Additional information about the rule.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "enabled",
     "description": "True means this rule is enabled. False means the rule is currently not creating metrics.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The id, uniquely identifying the rule.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "The name of the rule. This must be unique within an account.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "nrql",
     "description": "Explains how to create metrics from events.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "updatedAt",
     "description": "The time at which the rule was updated",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "DateTime",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "SyntheticsJobStatus",
   "description": "Enum of job status",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "FAILED",
     "description": "Indicates the job has failed",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "PENDING",
     "description": "Indicates an in-progress job",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SUCCESS",
     "description": "Indicates the job has succeeded",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "UNKNOWN",
     "description": "Indicates the job status was lost or unknown",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AiIssuesGracePeriodConfig",
   "description": "Grace period config per priority",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "period",
     "description": "Grace period for notification in seconds per priority",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Seconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "priority",
     "description": "Priority for which grace period is defined (MEDIUM/LOW/HIGH/CRITICAL)",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiIssuesPriority",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "UserManagementGroupUsers",
   "description": "container for users enabling cursor based pagination",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "nextCursor",
     "description": "an opaque cursor to supply with subsequent     requests to get the next page of results, null if there are no more pages",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "totalCount",
     "description": "the total number of results",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "users",
     "description": "container for users enabling cursor based pagination",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "UserManagementGroupUser",
         "kind": "OBJECT"
        }
       }
      }
     }
    }
   ]
  },
  {
   "name": "AiDecisionsSuggestionBlueprint",
   "description": "Blueprint for suggestion creation.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "correlationWindowLength",
     "description": "Length of the window in which incidents are compared.",
     "type": {
      "name": "Milliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "description",
     "description": "Description of suggestion.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "hash",
     "description": "Hash of suggestion.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "minCorrelationThreshold",
     "description": "Number of correlations within a window required to merge issues.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "Name of suggestion.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "overrideConfiguration",
     "description": "Configuration to allow rule to override issue properties.",
     "type": {
      "name": "AiDecisionsOverrideConfigurationInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "ruleExpression",
     "description": "Expression to use to compare incidents.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsRuleExpressionInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "suggester",
     "description": "Service/user that created this suggestion.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "support",
     "description": "Support for suggestion.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "CloudAzureVpngatewaysIntegration",
   "description": "VPN Gateways Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "resourceGroups",
     "description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "AiNotificationsTokenAuthInput",
   "description": "Token auth input object",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "prefix",
     "description": "prefix",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "token",
     "description": "token",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SecureValue",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AgentApplicationSettingsApmConfig",
   "description": "General settings related to APM applications.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "apdexTarget",
     "description": "The desired target for the APDEX measurement of this APM application.",
     "type": {
      "name": "Float",
      "kind": "SCALAR"
     }
    },
    {
     "name": "useServerSideConfig",
     "description": "Sets if agents for this APM application should get some of their configuration from the server.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "SuggestedHistoryBasedNrqlQuery",
   "description": "A query suggestion based on historical query patterns.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "nrql",
     "description": "The NRQL string to run for the suggested query",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "title",
     "description": "A human-readable title describing what the query shows",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "SuggestedNrqlQuery",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "CloudAwsMetadataIntegration",
   "description": "Fetch Metadata for AWS integrations Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "MultiTenantAuthorizationGrantScopeTypeInputFilter",
   "description": "Filters on the grants scope type",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "eq",
     "description": "Performs an equals operation",
     "type": {
      "name": "MultiTenantAuthorizationGrantScopeEnum",
      "kind": "ENUM"
     }
    }
   ]
  },
  {
   "name": "CloudEmrIntegrationInput",
   "description": "Amazon Elastic MapReduce (EMR)",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "fetchTags",
     "description": "Specify if tags and the extended inventory should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "tagKey",
     "description": "Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "tagValue",
     "description": "Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "ServiceLevelObjectiveRollingTimeWindowUpdateInput",
   "description": "The rolling time window configuration of the SLO.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "count",
     "description": "The count of time units. Accepted values are 1, 7 and 28 days.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "unit",
     "description": "The time unit.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ServiceLevelObjectiveRollingTimeWindowUnit",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "OrganizationCustomerOrganizationWrapper",
   "description": "A customer organization",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "items",
     "description": "Accessible customers",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "OrganizationCustomerOrganization",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "nextCursor",
     "description": "an opaque cursor to supply with subsequent requests to get the next page of results, null if there are no more pages",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "MultiTenantIdentityUser",
   "description": "A New Relic user",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "authenticationDomainId",
     "description": "The authentication domain the user belongs to.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "email",
     "description": "Email address of the user.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "emailVerificationState",
     "description": "One of: \"Not Verifiable\", \"Verified\", and \"Pending\".\n\nNot Verifiable: the user's email does not require verification.\n\nVerified: the user's email requires verification and has been.\n\nPending: the user's email requires verification and has not been.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "MultiTenantIdentityEmailVerificationState",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "groups",
     "description": "container for groups enabling cursor based pagination",
     "type": {
      "name": "MultiTenantIdentityUserGroups",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "cursor",
       "description": "the cursor from the previous request, to get     the next page",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "id",
     "description": "The user id.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "lastActive",
     "description": "The last active date of the user.",
     "type": {
      "name": "DateTime",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The full name of the user.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "pendingUpgradeRequest",
     "description": "The pending upgrade request for the user (if any).",
     "type": {
      "name": "MultiTenantIdentityPendingUpgradeRequest",
      "kind": "OBJECT"
     }
    },
    {
     "name": "timeZone",
     "description": "Time zone of the user in IANA Time Zone database format, also known as the \"Olson\" time zone database format (for exmaple, \"America/Los_Angeles\").",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "type",
     "description": "A \"user type\" is what determines the set of New Relic capabilities a user can theoretically access.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "MultiTenantIdentityUserType",
       "kind": "OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "DistributedTracingTrace",
   "description": "A collection of spans with context describing those spans.  The trace represents the complete processing of a request.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "backendDurationMs",
     "description": "The duration in milliseconds for the back-end part of this trace (not from a client such as a Browser application)",
     "type": {
      "name": "Milliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "durationMs",
     "description": "The total duration of this trace in milliseconds.",
     "type": {
      "name": "Milliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "entities",
     "description": "All entities that are part of this trace.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EntityOutline",
         "kind": "INTERFACE"
        }
       }
      }
     }
    },
    {
     "name": "entityCount",
     "description": "The number of entities that are part of this trace.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "Unique identifier for this trace.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "spanConnections",
     "description": "Parent/child IDs that represent all of the span relationships within this trace.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "name": "DistributedTracingSpanConnection",
        "kind": "OBJECT"
       }
      }
     }
    },
    {
     "name": "spans",
     "description": "Spans associated with this trace. The maximum number of spans returned is limited to 10_000. This could be less than the actual number of spans sent for the trace.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "DistributedTracingSpan",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "timestamp",
     "description": "Epoch milliseconds timestamp represents this trace's start time.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochMilliseconds",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "NerdStorageDeleteResult",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "deleted",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "NerdpackUnsubscribeAccountsInput",
   "description": "Data of accounts to be unsubscribed.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "accountIds",
     "description": "List of accounts to be unsubscribed.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      }
     }
    }
   ]
  },
  {
   "name": "AiWorkflowsTestEnrichmentsInput",
   "description": "Test Enrichment input object",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "nrql",
     "description": "nrql",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiWorkflowsNrqlTestEnrichmentInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     }
    }
   ]
  },
  {
   "name": "DashboardLineWidgetConfigurationInput",
   "description": "Configuration for visualization type 'viz.line'. Learn more about [line](https://docs.newrelic.com/docs/apis/nerdgraph/examples/create-widgets-dashboards-api/#line) widget.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "nrqlQueries",
     "description": "NRQL queries.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "DashboardWidgetNrqlQueryInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    }
   ]
  },
  {
   "name": "CloudAwsTagsGlobalIntegrationInput",
   "description": "Fetch tags for all integrations",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "LogConfigurationsPipelineConfiguration",
   "description": "The pipeline configuration for an account, with metadata.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "accountId",
     "description": "The account id.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "enrichmentDisabled",
     "description": "Whether or not enrichment is disabled.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "jsonParsingDisabled",
     "description": "Whether or not JSON parsing is disabled.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "obfuscationDisabled",
     "description": "Whether or not obfuscation is disabled.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "parsingDisabled",
     "description": "Whether or not parsing is disabled.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "patternsEnabled",
     "description": "Whether or not patterns are enabled.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "pluginAttributesCleanupEnabled",
     "description": "Whether or not plugin.* attributes should be dropped.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "recursiveJsonParsingDisabled",
     "description": "Whether or not recursive JSON parsing is disabled.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "transformationDisabled",
     "description": "Whether or not transformation is disabled.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "updatedAt",
     "description": "Identifies the date and time when the configuration was last updated, or null if this has never been changed from the defaults.",
     "type": {
      "name": "DateTime",
      "kind": "SCALAR"
     }
    },
    {
     "name": "updatedBy",
     "description": "Identifies the user who has updated the configuration, or null if this has never been changed from the defaults.",
     "type": {
      "name": "UserReference",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "NerdpackRemovedTagResponseType",
   "description": "Indicates if a tag has been removed for a nerdpack",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "NOTHING_TO_REMOVE",
     "description": "Indicates the tag has not been removed",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "REMOVED",
     "description": "Indicates the tag has been removed",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "CloudApigatewayIntegrationInput",
   "description": "Amazon API Gateway",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "stagePrefixes",
     "description": "Specify each name or prefix for the Stages that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "tagKey",
     "description": "Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "tagValue",
     "description": "Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AuthorizationManagementOrganizationStitchedFields",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "authenticationDomains",
     "description": "list of authentication domains",
     "type": {
      "name": "AuthorizationManagementAuthenticationDomainSearch",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "cursor",
       "description": "the cursor from the previous request, to get   the next page",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "id",
       "description": "an optional list of ids to filter by",
       "type": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "ID",
          "kind": "SCALAR"
         }
        }
       }
      }
     ]
    },
    {
     "name": "roles",
     "description": "list of roles",
     "type": {
      "name": "AuthorizationManagementRoleSearch",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "cursor",
       "description": "the cursor from the previous request, to get   the next page",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "id",
       "description": "an optional list of ids to filter by",
       "type": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "ID",
          "kind": "SCALAR"
         }
        }
       }
      }
     ]
    }
   ]
  },
  {
   "name": "MultiTenantIdentitySortDirection",
   "description": "Available directions for sorting",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "ASCENDING",
     "description": "Sort in ascending order",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "DESCENDING",
     "description": "Sort in descending order",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "OrganizationOrganizationNameInputFilter",
   "description": "Provides all the available filters on the organization name",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "contains",
     "description": "performs a contains operation",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "eq",
     "description": "performs an equals operation",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "NerdStorageEntityScope",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "collection",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "NerdStorageCollectionMember",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "collection",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "scopeByActor",
       "type": {
        "name": "Boolean",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "document",
     "type": {
      "name": "NerdStorageDocument",
      "kind": "SCALAR"
     },
     "args": [
      {
       "name": "collection",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "documentId",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "scopeByActor",
       "type": {
        "name": "Boolean",
        "kind": "SCALAR"
       }
      }
     ]
    }
   ]
  },
  {
   "name": "StackTraceMobileExceptionStackTraceFrame",
   "description": "An object representing a stack trace segment",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "filepath",
     "description": "Frame filepath",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "formatted",
     "description": "Formatted frame",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "line",
     "description": "Frame line number",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "Frame name",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "CloudRenameAccountsInput",
   "description": "Information required when operating on a Linked Account.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "The linked account new name.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AgentApplicationSettingsMobileSettingsInput",
   "description": "A configuration object to enable mobile log reporting",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "applicationExitInfo",
     "description": "Config data collection for application exits.",
     "type": {
      "name": "AgentApplicationSettingsApplicationExitInfoInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "networkSettings",
     "description": "Input arguments for network settings.",
     "type": {
      "name": "AgentApplicationSettingsNetworkSettingsInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "useCrashReports",
     "description": "Sets if application should use crash report or not for mobile settings.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "EntityRelationship",
   "description": "An entity relationship",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "source",
     "description": "The source entity of the relationship.",
     "type": {
      "name": "EntityRelationshipNode",
      "kind": "OBJECT"
     }
    },
    {
     "name": "target",
     "description": "The target entity of the relationship.",
     "type": {
      "name": "EntityRelationshipNode",
      "kind": "OBJECT"
     }
    },
    {
     "name": "type",
     "description": "The type of the relationship. For details, visit [our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/graphql-relationships-api-tutorial).",
     "type": {
      "name": "EntityRelationshipType",
      "kind": "ENUM"
     }
    }
   ]
  },
  {
   "name": "DistributedTracingSpan",
   "description": "The primary building block of a distributed trace.  An individual unit of work.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "attributes",
     "description": "All attributes for this span. This field is a map of string keys to attributes values.",
     "type": {
      "name": "DistributedTracingSpanAttributes",
      "kind": "SCALAR"
     }
    },
    {
     "name": "clientType",
     "description": "When the span represents a call to another entity, clientType indicates the type of the entity that was called.",
     "type": {
      "name": "DistributedTracingSpanClientType",
      "kind": "ENUM"
     }
    },
    {
     "name": "durationMs",
     "description": "The duration of this span in milliseconds.",
     "type": {
      "name": "Milliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "entityGuid",
     "description": "Unique identifier for the entity that created this span. This value has a corresponding entry in the entities field of the trace.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "id",
     "description": "Unique identifier for this span.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "The name of this span.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "parentId",
     "description": "The identifier of the caller of this span (null if this is the root span).",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "processBoundary",
     "description": "The position of a span with respect to the boundaries between processes in the trace.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "DistributedTracingSpanProcessBoundary",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "spanAnomalies",
     "description": "Anomalies detected for this span, compared to similar spans that occurred over the previous hours before this span occurred.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "DistributedTracingSpanAnomaly",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "timestamp",
     "description": "Epoch milliseconds timestamp represents this span's start time.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochMilliseconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "traceId",
     "description": "Unique identifier shared by all spans within a single trace.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "IncidentIntelligenceEnvironmentSupportedEnvironmentKind",
   "description": "Which environment kinds the request will provide",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "CROSS_ACCOUNT",
     "description": "Will return environments that are cross account (based on the parent-account and sub-account)",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SINGLE_AND_CROSS_ACCOUNT",
     "description": "Will return environments that are cross account (based on the parent-account and sub-account) and single accounts",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "UsersUserSearchScope",
   "description": "Different scopes that can be used to filter the returned users.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "email",
     "description": "Filter by string that will partially match a User's `email`.  Same as `name` it will partially match and case is ignored.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "Filter by string that will partially match a User's `name`. So argument `name='Ste'` will match `name='Steve'` and case is ignored so `name='Koester'` would also match.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "search",
     "description": "Will match both a User's `email` and `name`.  So argument `search='ple'`  will match `name='Johnny Appleseed'` and `email='mary@example.com'`.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "userIds",
     "description": "List of 1 or more userIds to filter by. Will only return data for users with ids that match the full ID, no partial matching. (so 2 ids provided will yield at most 2 users)",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    }
   ]
  },
  {
   "name": "SyntheticsScriptBrowserMonitor",
   "description": "A Script Browser monitor resulting from a Script Browser mutation",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "advancedOptions",
     "description": "The monitor advanced options",
     "type": {
      "name": "SyntheticsScriptBrowserMonitorAdvancedOptions",
      "kind": "OBJECT"
     }
    },
    {
     "name": "browsers",
     "description": "The browser(s) that the monitor will use to run jobs",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "SyntheticsBrowser",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "createdAt",
     "description": "The creation time of the monitor in millis",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "devices",
     "description": "The devices that the monitor will use to run jobs",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "SyntheticsDevice",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "guid",
     "description": "The unique client identifier for the Synthetics Monitor in New Relic",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    },
    {
     "name": "id",
     "description": "The unique identifier of the monitor within the Synthetics domain",
     "type": {
      "name": "ID",
      "kind": "SCALAR"
     }
    },
    {
     "name": "locations",
     "description": "The locations the monitor runs from",
     "type": {
      "name": "SyntheticsLocations",
      "kind": "OBJECT"
     }
    },
    {
     "name": "modifiedAt",
     "description": "The last modification time of the monitor in millis",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The human readable identifier for the monitor",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "period",
     "description": "The interval at which the monitor runs in minutes",
     "type": {
      "name": "SyntheticsMonitorPeriod",
      "kind": "ENUM"
     }
    },
    {
     "name": "runtime",
     "description": "The runtime that the monitor will use to run jobs",
     "type": {
      "name": "SyntheticsRuntime",
      "kind": "OBJECT"
     }
    },
    {
     "name": "status",
     "description": "The run state of the monitor",
     "type": {
      "name": "SyntheticsMonitorStatus",
      "kind": "ENUM"
     }
    }
   ]
  },
  {
   "name": "LogConfigurationsParsingRuleMutationErrorType",
   "description": "Expected default error types as result of mutating an existing parsing rule.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "INVALID_GROK",
     "description": "Invalid Grok",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "INVALID_ID",
     "description": "Number format error. ID should be convertible to int.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "INVALID_NRQL",
     "description": "Invalid NRQL",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NOT_FOUND",
     "description": "Couldn't find the specified parsing rule.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "WorkloadStatusSource",
   "description": "Indicates where the status value derives from.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "ROLLUP_RULE",
     "description": "Refers to the result of an automatic rule defined for a workload.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "STATIC",
     "description": "Refers to a static status defined for a workload.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "UNKNOWN",
     "description": "Refers to an undetermined status source.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "WORKLOAD",
     "description": "Refers to the override policy that is applied to a set of partial results within a workload. Any static status always overrides any other status values calculated automatically. Otherwise, the worst status of the partial results is rolled up.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "CloudAwsGlueIntegration",
   "description": "Glue Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "Nr1CatalogQuickstartComponentMetadata",
   "description": "Information related to the metadata attached to a quickstart component",
   "kind": "INTERFACE",
   "fields": [
    {
     "name": "description",
     "description": "A short form description for the quickstart component.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "displayName",
     "description": "The human-readable name for the quickstart component.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ],
   "possibleTypes": [
    {
     "name": "Nr1CatalogQuickstartAlertConditionMetadata",
     "kind": "OBJECT"
    },
    {
     "name": "Nr1CatalogQuickstartAlertMetadata",
     "kind": "OBJECT"
    },
    {
     "name": "Nr1CatalogQuickstartDashboardMetadata",
     "kind": "OBJECT"
    },
    {
     "name": "Nr1CatalogQuickstartDocumentationMetadata",
     "kind": "OBJECT"
    },
    {
     "name": "Nr1CatalogQuickstartInstallPlanMetadata",
     "kind": "OBJECT"
    }
   ]
  },
  {
   "name": "CloudKinesisIntegration",
   "description": "Kinesis Streams Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "fetchShards",
     "description": "Specify if Shards should be monitored. May affect total data collection time and contribute to the Cloud provider API rate limit.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "fetchTags",
     "description": "Specify if tags should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "tagKey",
     "description": "Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "tagValue",
     "description": "Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "DashboardVariableOptions",
   "description": "Options applied to the variable.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "ignoreTimeRange",
     "description": "Only applies to variables of type NRQL. With this turned on, the time range for the NRQL query will override the time picker on dashboards and other pages. Turn this off to use the time picker as normal.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AlertsNrqlConditionUpdateOutlierInput",
   "description": "Input for updating an outlier NRQL condition.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "description",
     "description": "The custom violation description.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "enabled",
     "description": "Whether the NRQL condition is enabled.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "expectedGroups",
     "description": "Number of groups expected in the returned values for the condition.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "expiration",
     "description": "Also known as **loss of signal**, these are settings for how violations are opened or closed when a signal expires.",
     "type": {
      "name": "AlertsNrqlConditionExpirationInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "name",
     "description": "Name of the NRQL condition.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrql",
     "description": "The NRQL query that defines the signal for the condition.",
     "type": {
      "name": "AlertsNrqlConditionUpdateQueryInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "openViolationOnGroupOverlap",
     "description": "Whether overlapping groups should produce a violation.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "runbookUrl",
     "description": "Runbook URL.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "signal",
     "description": "Configuration that defines the signal that the NRQL condition will use to evaluate.",
     "type": {
      "name": "AlertsNrqlConditionSignalInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "terms",
     "description": "List of critical and warning terms for the condition.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AlertsNrqlDynamicConditionTermsInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    },
    {
     "name": "titleTemplate",
     "description": "This field allows you to create a custom title to be used when incidents are opened by the condition. Setting this field will override the default title. Must be [Handlebars format](https://handlebarsjs.com/guide/).",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "violationTimeLimit",
     "description": "Deprecated - use violationTimeLimitSeconds for full range of values.\n\nDuration after which a violation automatically closes. Default is THIRTY_DAYS.",
     "type": {
      "name": "AlertsViolationTimeLimit",
      "kind": "ENUM"
     }
    },
    {
     "name": "violationTimeLimitSeconds",
     "description": "Duration after which a violation automatically closes in seconds.\nAccepts values between 300 seconds (5 minutes) and 2592000 seconds (30 days).\n\nDefault is 3 days (259200 seconds).",
     "type": {
      "name": "Seconds",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "TimeWindow",
   "description": "Represents a time window.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "endTime",
     "description": "The end time of the time window the number of milliseconds since the Unix epoch.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "startTime",
     "description": "The start time of the time window the number of milliseconds since the Unix epoch.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "SyntheticsCreateScriptApiMonitorInput",
   "description": "The monitor input values needed to create a Script Api monitor",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "apdexTarget",
     "description": "The monitor's Apdex target used to populate SLA reports",
     "type": {
      "name": "Float",
      "kind": "SCALAR"
     }
    },
    {
     "name": "locations",
     "description": "The locations the monitor will run from",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SyntheticsScriptedMonitorLocationsInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "name",
     "description": "The human readable identifier for the monitor",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "period",
     "description": "The interval at which the monitor runs in minutes",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SyntheticsMonitorPeriod",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "runtime",
     "description": "The runtime that the monitor will use to run jobs",
     "type": {
      "name": "SyntheticsRuntimeInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "script",
     "description": "The script that the monitor runs",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "status",
     "description": "The run state of the monitor",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SyntheticsMonitorStatus",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "tags",
     "description": "The tags that will be associated with the monitor",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "SyntheticsTag",
       "kind": "INPUT_OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "AlertsNotificationChannelCreateErrorType",
   "description": "The error type for creating a notification channel.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "BAD_USER_INPUT",
     "description": "Bad user input error.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "FORBIDDEN_ERROR",
     "description": "Forbidden error.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SERVER_ERROR",
     "description": "Server error.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "TOO_MANY_REQUESTS_ERROR",
     "description": "Too many requests error.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "EdgeRandomTraceFilterInput",
   "description": "Data required to change the random trace filter configuration.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "percentKept",
     "description": "The percentage of randomly selected traces to keep. Acceptable values are between 0.0001 and 100.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Float",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "CloudAzureAppserviceIntegration",
   "description": "App Service Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "resourceGroups",
     "description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "CloudAwsAppsyncIntegrationInput",
   "description": "AppSync",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "DashboardBillboardWidgetConfiguration",
   "description": "Configuration for visualization type 'viz.billboard'",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "nrqlQueries",
     "description": "NRQL queries.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "DashboardWidgetNrqlQuery",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "thresholds",
     "description": "Array of thresholds to categorize the results of the query in different groups.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "DashboardBillboardWidgetThreshold",
       "kind": "OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "ID",
   "description": "The `ID` scalar type represents a unique identifier, often used to\nrefetch an object or as key for a cache. The ID type appears in a JSON\nresponse as a String; however, it is not intended to be human-readable.\nWhen expected as an input type, any string (such as `\"4\"`) or integer\n(such as `4`) input value will be accepted as an ID.",
   "kind": "SCALAR"
  },
  {
   "name": "AlertsHipChatNotificationChannel",
   "description": "HipChat notification channel.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "associatedPolicies",
     "description": "Policies associated with the channel.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsNotificationChannelPoliciesResultSet",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "config",
     "description": "HipChat channel specific configuration.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsHipChatNotificationChannelConfig",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "id",
     "description": "Channel ID.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "Channel name.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "type",
     "description": "Channel type.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsNotificationChannelType",
       "kind": "ENUM"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "AlertsNotificationChannel",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "NrdbRawResults",
   "description": "This scalar represents the raw nrql query results as returned from NRDB. It is a `Map` of `String` keys to values.\n\nThe shape of these objects reflect the query used to generate them, the contents\nof the objects is not part of the GraphQL schema.",
   "kind": "SCALAR"
  },
  {
   "name": "NerdStorageVaultSecret",
   "description": "Secret key and value.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "key",
     "description": "The unique identifier of the secret.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "value",
     "description": "The value of the secret.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SecureValue",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AiDecisionsFixedGreaterThanInput",
   "description": "Input type for FixedGreaterThan expression",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "compared",
     "description": "Value to be used in comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Float",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "incident",
     "description": "Incident selector to be used in comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsIncidentObjectInput",
       "kind": "INPUT_OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "WorkloadRuleThresholdType",
   "description": "Represents the type of the threshold defined for a rule.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "FIXED",
     "description": "The worst status is rolled up only after a certain number of entities within the workload are not operational.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "PERCENTAGE",
     "description": "The worst status is rolled up only after a certain percentage of entities within the workload are not operational.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "ServiceLevelEventsQueryCreateInput",
   "description": "The query that represents the events to fetch.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "from",
     "description": "The NRDB event to fetch the data from.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Nrql",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "select",
     "description": "The NRQL SELECT clause to aggregate events. Default is COUNT(*).",
     "type": {
      "name": "ServiceLevelEventsQuerySelectCreateInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "where",
     "description": "The NRQL condition to filter the events.",
     "type": {
      "name": "Nrql",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "RegionScope",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "GLOBAL",
     "description": "Do not filter by region",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "IN_REGION",
     "description": "Filter by region",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "CloudAwsMetadataIntegrationInput",
   "description": "Fetch Metadata for AWS integrations",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AlertsPolicyInput",
   "description": "Container for conditions with associated notifications channels.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "incidentPreference",
     "description": "Determines how incidents are created for critical violations of the conditions contained in the policy.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsIncidentPreference",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "name",
     "description": "Description of the policy.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "StackTraceApmStackTraceFrame",
   "description": "An object representing a stack trace segment",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "filepath",
     "description": "Frame filepath",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "formatted",
     "description": "Formatted frame",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "line",
     "description": "Frame line number",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "Frame name",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AccountManagementOrganizationStitchedFields",
   "description": "The field type for stitching into the NerdGraph schema.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "managedAccounts",
     "description": "Admin-level info about the accounts in an organization.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AccountManagementManagedAccount",
        "kind": "OBJECT"
       }
      }
     },
     "args": [
      {
       "name": "isCanceled",
       "description": "Input for filtering by canceled status",
       "type": {
        "name": "Boolean",
        "kind": "SCALAR"
       }
      }
     ]
    }
   ]
  },
  {
   "name": "ApmBrowserApplicationSummaryData",
   "description": "Summary statistics about the Browser App injected by the APM Application.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "ajaxRequestThroughput",
     "description": "The number of AJAX requests per minute",
     "type": {
      "name": "Float",
      "kind": "SCALAR"
     }
    },
    {
     "name": "ajaxResponseTimeAverage",
     "description": "The average AJAX response time in seconds.",
     "type": {
      "name": "Seconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "jsErrorRate",
     "description": "The percentage of page views with a JS error.",
     "type": {
      "name": "Float",
      "kind": "SCALAR"
     }
    },
    {
     "name": "pageLoadThroughput",
     "description": "The number of page loads per minute",
     "type": {
      "name": "Float",
      "kind": "SCALAR"
     }
    },
    {
     "name": "pageLoadTimeAverage",
     "description": "The average page view time in seconds.",
     "type": {
      "name": "Float",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "CloudEmrIntegration",
   "description": "EMR Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "fetchTags",
     "description": "Specify if tags and the extended inventory should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "tagKey",
     "description": "Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "tagValue",
     "description": "Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "Nr1CatalogSearchFilter",
   "description": "Criteria for applying filters to a search",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "categories",
     "description": "Filter the search results that match any in a list of category terms",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "category",
     "description": "Filter the search results by a particular category",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "components",
     "description": "Filter the search results that contain a set of component types",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Nr1CatalogSearchComponentType",
        "kind": "ENUM"
       }
      }
     }
    },
    {
     "name": "keywords",
     "description": "Filter the search results to those that match all keywords in the list",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "recipeNames",
     "description": "Filter the search results by install recipe name. This will be applied in an OR fashion. Schema is defined in the Open Install Library's recipe spec: https://github.com/newrelic/open-install-library/blob/main/docs/recipe-spec/recipe-spec.md#schema-definition.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "types",
     "description": "Filter the search results that are of a specific type",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Nr1CatalogSearchResultType",
        "kind": "ENUM"
       }
      }
     }
    }
   ]
  },
  {
   "name": "AiWorkflowsCreateWorkflowResponse",
   "description": "Create workflow mutation response including errors",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "errors",
     "description": "A list of errors that occurred while performing the create workflow action",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiWorkflowsCreateResponseError",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "workflow",
     "description": "Successfully created workflow",
     "type": {
      "name": "AiWorkflowsWorkflow",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "AgentApplicationSettingsBrowserAjaxInput",
   "description": "Configuration settings related to how a browser agent handles Ajax requests.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "denyList",
     "description": "A list of host destinations that will not record AjaxRequest events when requested.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    }
   ]
  },
  {
   "name": "CloudUpdateAccountPayload",
   "description": "Autogenerated return type of UpdateAccount",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "linkedAccounts",
     "description": "The updated Linked accounts.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "CloudLinkedAccount",
         "kind": "OBJECT"
        }
       }
      }
     }
    }
   ]
  },
  {
   "name": "AgentApplicationCreateBrowserResult",
   "description": "The result of creating a browser application.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "guid",
     "description": "The GUID for the affected Entity.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EntityGuid",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "The name of the application.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "settings",
     "description": "Fields related to browser settings.",
     "type": {
      "name": "AgentApplicationBrowserSettings",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "CloudEc2IntegrationInput",
   "description": "Amazon Elastic Compute Cloud (EC2)",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "duplicateEc2Tags",
     "description": "Specify if the old legacy metadata and tag names have to be kept, it will consume more ingest data size",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "fetchIpAddresses",
     "description": "Specify if IP addresses of ec2 instance should be collected",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "tagKey",
     "description": "Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "tagValue",
     "description": "Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AgentApplicationSettingsBrowserPrivacyInput",
   "description": "Browser monitoring's page load timing feature can track sessions by using cookies that contain a simple session identifier.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "cookiesEnabled",
     "description": "If enabled, enables cookies.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "RequestContext",
   "description": "This object exposes contextual information about an API request.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "apiKey",
     "description": "The API key used to make this request",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "userId",
     "description": "The id of the user making this request",
     "type": {
      "name": "ID",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "DataManagementCustomizableRetention",
   "description": "Wrapper object for customizable retention namespaces",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "eventNamespaces",
     "description": "List of customizable event namespaces",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "DataManagementEventNamespaces",
       "kind": "OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "OrganizationAccountFilterInput",
   "description": "A filter for Accounts",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "id",
     "description": "Filter by account ID",
     "type": {
      "name": "OrganizationAccountIdFilterInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "name",
     "description": "Filter by Account Name",
     "type": {
      "name": "OrganizationAccountNameFilterInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "organizationId",
     "description": "Filter by organization ID",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "OrganizationAccountOrganizationIdFilterInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "sharingMode",
     "description": "Filter by Sharing Mode",
     "type": {
      "name": "OrganizationAccountSharingModeFilterInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "status",
     "description": "Filter by an account status. By default filters to active accounts.",
     "type": {
      "name": "OrganizationAccountStatusFilterInput",
      "kind": "INPUT_OBJECT"
     }
    }
   ]
  },
  {
   "name": "MultiTenantIdentityGroupCollection",
   "description": "List of groups representing named sets of New Relic users within an authentication domain",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "items",
     "description": "groups",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "MultiTenantIdentityGroup",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "nextCursor",
     "description": "an opaque cursor to supply with subsequent     requests to get the next page of results, null if there are no more pages",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "totalCount",
     "description": "the total number of results",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "MultiTenantAuthorizationGrant",
   "description": "A grant within the system",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "group",
     "description": "The group associated to the grant",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "MultiTenantAuthorizationGrantGroup",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "id",
     "description": "The id of the grant",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "role",
     "description": "The role associated to the grant",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "MultiTenantAuthorizationGrantRole",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "scope",
     "description": "The scope associated to the grant",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "MultiTenantAuthorizationGrantScope",
       "kind": "OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "OrganizationAccountCollection",
   "description": "Accounts",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "items",
     "description": "Accounts",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "OrganizationAccount",
        "kind": "OBJECT"
       }
      }
     }
    },
    {
     "name": "nextCursor",
     "description": "an opaque cursor to supply with subsequent requests to get the next page of results, null if there are no more pages",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "totalCount",
     "description": "the total number of results",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "LogConfigurationsCreateDataPartitionRuleError",
   "description": "Expected errors as a result of creating a new data partition rule.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "message",
     "description": "The message with the error cause.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "type",
     "description": "Type of error.",
     "type": {
      "name": "LogConfigurationsCreateDataPartitionRuleErrorType",
      "kind": "ENUM"
     }
    }
   ]
  },
  {
   "name": "AiIssuesFilterIssues",
   "description": "Filter issues",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "conditionIds",
     "description": "A list of condition ids associated with an issue.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "contains",
     "description": "A string to filter results that includes this string on key issue attributes (examples: condition, entity, ...). Case sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "entityGuids",
     "description": "Entity guids associated with an issue.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "entityTypes",
     "description": "Entity types associated with an issue.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "ids",
     "description": "A list of unique issue identifiers.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "isAcknowledged",
     "description": "For acknowledged issues",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "isCorrelated",
     "description": "For correlated issues",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "mutingStates",
     "description": "Filtering for muting states",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AiIssuesIssueMutingState",
        "kind": "ENUM"
       }
      }
     }
    },
    {
     "name": "policyIds",
     "description": "A list of policy ids associated with an issue.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "priority",
     "description": "A list of priorities associated with an issue. Can be: 'CRITICAL', 'HIGH', 'MEDIUM' or 'LOW'",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "sources",
     "description": "A list of sources associated with an issue.\nSources can be:\n- 'newrelic' (indicating data originating from the NewRelic platform)\n- 'rest' (indicating data originating from external sources via api)",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "states",
     "description": "A list of states associated with an issue.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AiIssuesIssueState",
        "kind": "ENUM"
       }
      }
     }
    }
   ]
  },
  {
   "name": "LogConfigurationsCreateDataPartitionRuleResponse",
   "description": "The result after creating a new data partition rule.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "errors",
     "description": "List of errors, if any.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "LogConfigurationsCreateDataPartitionRuleError",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "rule",
     "description": "The created data partition rule.",
     "type": {
      "name": "LogConfigurationsDataPartitionRule",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "ApiAccessValidateUserKeyResult",
   "description": "Data on whether the given key is valid.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "valid",
     "description": "The valid or invalid state of the key.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "SuggestedNrqlQuery",
   "description": "Interface type representing a query suggestion.",
   "kind": "INTERFACE",
   "fields": [
    {
     "name": "nrql",
     "description": "The NRQL string to run for the suggested query",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "title",
     "description": "A human-readable title describing what the query shows",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "possibleTypes": [
    {
     "name": "SuggestedAnomalyBasedNrqlQuery",
     "kind": "OBJECT"
    },
    {
     "name": "SuggestedHistoryBasedNrqlQuery",
     "kind": "OBJECT"
    }
   ]
  },
  {
   "name": "CloudIntegrationsInput",
   "description": "List of providers",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "aws",
     "description": "Aws provider",
     "type": {
      "name": "CloudAwsIntegrationsInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "awsGovcloud",
     "description": "AwsGovcloud provider",
     "type": {
      "name": "CloudAwsGovcloudIntegrationsInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "azure",
     "description": "Azure provider",
     "type": {
      "name": "CloudAzureIntegrationsInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "gcp",
     "description": "Gcp provider",
     "type": {
      "name": "CloudGcpIntegrationsInput",
      "kind": "INPUT_OBJECT"
     }
    }
   ]
  },
  {
   "name": "ErrorsInboxErrorEventInput",
   "description": "Input for error events.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "entityGuid",
     "description": "Guid of entity that generated the event.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EntityGuid",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "event",
     "description": "A set of attributes representing an event associated with an error",
     "type": {
      "name": "ErrorsInboxRawEvent",
      "kind": "SCALAR"
     }
    },
    {
     "name": "message",
     "description": "Error event message.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "Error event name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "source",
     "description": "Source of error event (ex: TransactionError, Span)",
     "type": {
      "name": "ErrorsInboxEventSource",
      "kind": "ENUM"
     }
    }
   ]
  },
  {
   "name": "NrdbResult",
   "description": "This scalar represents a NRDB Result. It is a `Map` of `String` keys to values.\n\nThe shape of these objects reflect the query used to generate them, the contents\nof the objects is not part of the GraphQL schema.",
   "kind": "SCALAR"
  },
  {
   "name": "EdgeDeleteTraceObserverResponse",
   "description": "Successfully deleted trace observers, or one or more error responses if there were issues.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "errors",
     "description": "Errors that may occur when deleting a `TraceObserver`. Defaults to `null` in case of success.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EdgeDeleteTraceObserverResponseError",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "traceObserver",
     "description": "The trace observer that was deleted. Defaults to `null` in case of failure.",
     "type": {
      "name": "EdgeTraceObserver",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "NerdStorageVaultActorStitchedFields",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "secret",
     "description": "Fetch a single secret by key.",
     "type": {
      "name": "NerdStorageVaultSecret",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "key",
       "description": "The unique identifier used to look up the secret value",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "secrets",
     "description": "List the keys and values of all secrets\nyou have access to for the current scope and nerdpack.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "NerdStorageVaultSecret",
         "kind": "OBJECT"
        }
       }
      }
     }
    }
   ]
  },
  {
   "name": "CloudAwsGovCloudMigrateToAssumeroleInput",
   "description": "Information required to migrate an existing AWS GovCloud account to use AssumeRole Authentication.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "arn",
     "description": "The AWS role ARN (used to fetch data).",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AiDecisionsRule",
   "description": "A correlation rule used to compare incidents and subsequently merge issues.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "annotations",
     "description": "Internal data associated with this rule.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiDecisionsAnnotationEntry",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "correlationWindowLength",
     "description": "Length of the window in which incidents are compared.",
     "type": {
      "name": "Milliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "createdAt",
     "description": "Time rule was created.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochMilliseconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "creator",
     "description": "Creator of rule.",
     "type": {
      "name": "UserReference",
      "kind": "OBJECT"
     }
    },
    {
     "name": "description",
     "description": "Description of rule.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "id",
     "description": "ID of rule.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metadata",
     "description": "External data associated with this rule.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsRuleMetadata",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "minCorrelationThreshold",
     "description": "Number of correlations within a window required to merge issues.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "Name of rule.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "overrideConfiguration",
     "description": "Configuration to allow rule to override issue properties.",
     "type": {
      "name": "AiDecisionsOverrideConfiguration",
      "kind": "OBJECT"
     }
    },
    {
     "name": "ruleExpression",
     "description": "Expression to use to compare incidents.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsRuleExpression",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "ruleType",
     "description": "Type of rule.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsRuleType",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "source",
     "description": "Creation source of rule.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsRuleSource",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "state",
     "description": "Current state of rule.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsRuleState",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "updatedAt",
     "description": "Time rule was last updated.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochMilliseconds",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AiNotificationsDynamicVariable",
   "description": "A list of dynamic variables used by the Channel",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "exampleValue",
     "description": "exampleValue",
     "type": {
      "name": "AiNotificationsExampleValue",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "name",
     "description": "name",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "IncidentIntelligenceEnvironmentCurrentEnvironmentResultReason",
   "description": "Current environment result reasoning",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "CURRENT_ACCOUNT_NOT_ENTITLED",
     "description": "The current account is not entitled for incident intelligence",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "ENVIRONMENT_FOUND",
     "description": "The user is attached to an environment",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "MULTIPLE_ENVIRONMENTS",
     "description": "The user is attached to more than one environment, hence the user is authorized to more then one parent account that has an environment. To get a list of possible environments, query authorizedEnvironment and select one of the accounts.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NO_ENVIRONMENT",
     "description": "The user is not attached to any environment",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "USER_NOT_AUTHORIZED_FOR_ACCOUNT",
     "description": "The user is not authorized to access environments from the current account",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "CloudIotIntegration",
   "description": "IoT Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "AlertsMutingRuleUpdateInput",
   "description": "Input for updating MutingRules for New Relic Alerts Violations.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "actionOnMutingRuleWindowEnded",
     "description": "The action when the muting rule window is ended or disabled.",
     "type": {
      "name": "AlertsActionOnMutingRuleWindowEnded",
      "kind": "ENUM"
     }
    },
    {
     "name": "condition",
     "description": "The condition that defines which violations to target.",
     "type": {
      "name": "AlertsMutingRuleConditionGroupInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "description",
     "description": "The description of the MutingRule.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "enabled",
     "description": "Whether the MutingRule is enabled",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The name of the MutingRule.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "schedule",
     "description": "The time window when the MutingRule should actively mute violations.",
     "type": {
      "name": "AlertsMutingRuleScheduleUpdateInput",
      "kind": "INPUT_OBJECT"
     }
    }
   ]
  },
  {
   "name": "AgentApplicationSettingsUpdateInput",
   "description": "The new settings to use - leave blank any settings you do not wish to modify.\n\nWhile all settings can be specified here, some may not affect your installed agents, depending on the language agent and the current version installed. Note: not all settings of your agent are available to be set server-side. \n\nPlease see docs.newrelic.com for more information about the capabilities of individual agents.\n\n[Go agent configuration](https://docs.newrelic.com/docs/agents/go-agent/configuration/go-agent-configuration/)\n\n[Java agent configuration](https://docs.newrelic.com/docs/agents/java-agent/configuration/java-agent-configuration-config-file/)\n\n[.Net agent configuration](https://docs.newrelic.com/docs/agents/net-agent/configuration/net-agent-configuration/)\n\n[nodejs agent configuration](https://docs.newrelic.com/docs/agents/nodejs-agent/installation-configuration/nodejs-agent-configuration/)\n\n[PHP agent configuration](https://docs.newrelic.com/docs/agents/php-agent/configuration/php-agent-configuration/)\n\n[Python agent configuration](https://docs.newrelic.com/docs/agents/python-agent/configuration/python-agent-configuration/)\n\n[Ruby agent configuration](https://docs.newrelic.com/docs/agents/ruby-agent/configuration/ruby-agent-configuration/)",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "alias",
     "description": "The new name for the application.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "apmConfig",
     "description": "Provides fields to set general APM application settings.",
     "type": {
      "name": "AgentApplicationSettingsApmConfigInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "browserConfig",
     "description": "Provides fields to set general browser application settings.",
     "type": {
      "name": "AgentApplicationSettingsBrowserConfigInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "browserMonitoring",
     "description": "Provides fields to set browser monitoring application settings.",
     "type": {
      "name": "AgentApplicationSettingsBrowserMonitoringInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "captureMemcacheKeys",
     "description": "Enable or disable the capture of memcache keys",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "errorCollector",
     "description": "Captures information about uncaught exceptions and sends them to New Relic for viewing.",
     "type": {
      "name": "AgentApplicationSettingsErrorCollectorInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "jfr",
     "description": "In the Java Agent (v8.0.0 or later), it can collect additional data with the Java Flight Recorder enabled.",
     "type": {
      "name": "AgentApplicationSettingsJfrInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "mobileSettings",
     "description": "Input object for mobile settings.",
     "type": {
      "name": "AgentApplicationSettingsMobileSettingsInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "name",
     "description": "DEPRECATED: Use `alias` to set a new name for the application.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "sessionReplay",
     "description": "Fields for session replay config",
     "type": {
      "name": "AgentApplicationSettingsSessionReplayInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "sessionTrace",
     "description": "Session Trace configuration.",
     "type": {
      "name": "AgentApplicationSettingsSessionTraceInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "slowSql",
     "description": "In APM, when transaction traces are collected, there may be additional Slow query data available.",
     "type": {
      "name": "AgentApplicationSettingsSlowSqlInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "threadProfiler",
     "description": "Settings for the thread profiler.",
     "type": {
      "name": "AgentApplicationSettingsThreadProfilerInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "tracerType",
     "description": "Input object for setting the type of tracing performed.",
     "type": {
      "name": "AgentApplicationSettingsTracerTypeInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "transactionTracer",
     "description": "Transaction tracer settings related to APM applications.",
     "type": {
      "name": "AgentApplicationSettingsTransactionTracerInput",
      "kind": "INPUT_OBJECT"
     }
    }
   ]
  },
  {
   "name": "UserManagementUpdateUser",
   "description": "The input object representing the user being updated",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "email",
     "description": "The new email address to be updated on the user",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "id",
     "description": "The ID of the user to be updated",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "The full name of the user to be updated",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "timeZone",
     "description": "The user time zone to be updated, in IANA zoneinfo format, e.g. 'America/Chicago'",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "userType",
     "description": "The new user type to be updated on the user",
     "type": {
      "name": "UserManagementRequestedTierName",
      "kind": "ENUM"
     }
    }
   ]
  },
  {
   "name": "OrganizationAccountStatusFilterInput",
   "description": "A filter for Account Status",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "eq",
     "description": "An account status",
     "type": {
      "name": "OrganizationAccountStatus",
      "kind": "ENUM"
     }
    }
   ]
  },
  {
   "name": "SyntheticsMonitorDowntimeDeleteResult",
   "description": "Monitor downtime object returned to the customer once a monitor downtime is deleted",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "guid",
     "description": "The entity guid of the deleted MonitorDowntime",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AlertsNrqlConditionTerms",
   "description": "NRQL condition terms determine when a violation will be opened.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "operator",
     "description": "Operator used to compare against the threshold.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsNrqlConditionTermsOperator",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "priority",
     "description": "Priority determines how much attention your incidents need. Your workflow settings then tell us when and where to send notifications for different priorities.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsNrqlConditionPriority",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "threshold",
     "description": "Value that triggers a violation.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Float",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "thresholdDuration",
     "description": "Duration, in seconds, that the condition must violate the threshold before creating a violation.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "thresholdOccurrences",
     "description": "How many data points must be in violation for the specified threshold duration.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsNrqlConditionThresholdOccurrences",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "AgentApplicationSettingsSessionTraceInput",
   "description": "Session Trace configuration",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "enabled",
     "description": "Session Trace enabled.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "errorSamplingRate",
     "description": "Percentage from 0-100 specifying how many of all user sessions that contain errors should be recorded.",
     "type": {
      "name": "Float",
      "kind": "SCALAR"
     }
    },
    {
     "name": "mode",
     "description": "Default (fixed_rate) or custom (probabilistic) option used to collect session traces.",
     "type": {
      "name": "AgentApplicationSettingsSessionTraceModeInput",
      "kind": "ENUM"
     }
    },
    {
     "name": "samplingRate",
     "description": "Percentage from 0-100 specifying how many of all user sessions should be recorded.",
     "type": {
      "name": "Float",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "CloudAzureVirtualnetworksIntegrationInput",
   "description": "Azure Virtual Network",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "resourceGroups",
     "description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "MetricNormalizationRuleMutationResponse",
   "description": "The result of a metric rename rule mutation",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "errors",
     "description": "An array containing errors, if any.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "MetricNormalizationRuleMutationError",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "rule",
     "description": "The created rule",
     "type": {
      "name": "MetricNormalizationRule",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "AiDecisionsResultType",
   "description": "Status of an operation.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "FAILURE",
     "description": "Failed operation",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SUCCESS",
     "description": "Successful operation",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AiWorkflowsCreateWorkflowInput",
   "description": "Workflow input object",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "destinationConfigurations",
     "description": "destinationConfigurations",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiWorkflowsDestinationConfigurationInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "destinationsEnabled",
     "description": "destinationsEnabled",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "enrichments",
     "description": "enrichments",
     "type": {
      "name": "AiWorkflowsEnrichmentsInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "enrichmentsEnabled",
     "description": "enrichmentsEnabled",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "issuesFilter",
     "description": "issuesFilter",
     "type": {
      "name": "AiWorkflowsFilterInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "mutingRulesHandling",
     "description": "mutingRulesHandling",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiWorkflowsMutingRulesHandling",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "name",
     "description": "name",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "workflowEnabled",
     "description": "workflowEnabled",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AiNotificationsVariableCategory",
   "description": "Category fields to group by",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "CONDITION",
     "description": "Condition category",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "ENTITIES",
     "description": "Entities category",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "INCIDENT",
     "description": "Incident category",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "ISSUE",
     "description": "Issue category",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "OTHER",
     "description": "Default category",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "POLICY",
     "description": "Policy category",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "TAGS",
     "description": "Tags category",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "WORKFLOW",
     "description": "Workflow category",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AlertsNotificationChannelUpdateConfiguration",
   "description": "The input configuration for updating a notification channel.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "email",
     "description": "The input configuration for updating an Email notification channel.",
     "type": {
      "name": "AlertsEmailNotificationChannelUpdateInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "opsGenie",
     "description": "The input configuration for updating an OpsGenie notification channel.",
     "type": {
      "name": "AlertsOpsGenieNotificationChannelUpdateInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "pagerDuty",
     "description": "The input configuration for updating a PagerDuty notification channel.",
     "type": {
      "name": "AlertsPagerDutyNotificationChannelUpdateInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "slack",
     "description": "The input configuration for updating a Slack notification channel.",
     "type": {
      "name": "AlertsSlackNotificationChannelUpdateInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "victorOps",
     "description": "The input configuration for updating a VictorOps notification channel.",
     "type": {
      "name": "AlertsVictorOpsNotificationChannelUpdateInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "webhook",
     "description": "The input configuration for updating a Webhook notification channel.",
     "type": {
      "name": "AlertsWebhookNotificationChannelUpdateInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "xMatters",
     "description": "The input configuration for updating an xMatters notification channel.",
     "type": {
      "name": "AlertsXMattersNotificationChannelUpdateInput",
      "kind": "INPUT_OBJECT"
     }
    }
   ]
  },
  {
   "name": "NerdpackUnsubscribeResult",
   "description": "Result of trying to remove the subscription.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "nerdpack",
     "description": "Nerdpack to be unsubscribed from.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "NerdpackData",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "resultsPerAccount",
     "description": "Unsubscribe result per account.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "NerdpackMutationResultPerAccount",
       "kind": "OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "AiNotificationsDestinationSorter",
   "description": "Sort object",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "direction",
     "description": "direction",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiNotificationsSortOrder",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "field",
     "description": "field",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiNotificationsDestinationFields",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "AgentApplicationSettingsIgnoredStatusCodeRuleInput",
   "description": "Input data that maps ignore status codes associated with different hosts.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "hosts",
     "description": "An array of hosts to apply the status code rule to.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      }
     }
    },
    {
     "name": "statusCodes",
     "description": "An array of status codes to be be ignored on these hosts.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      }
     }
    }
   ]
  },
  {
   "name": "AiIssuesIncidentUserActionResponse",
   "description": "User action for issue",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "accountId",
     "description": "account id",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "error",
     "description": "Error, if any",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "incidentId",
     "description": "Incident id",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "EdgeTraceObserverStatus",
   "description": "Status of the trace observer.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "CREATED",
     "description": "The trace observer has been created and is available for use.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "DELETED",
     "description": "The trace observer has been deleted and is no longer available for use.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AiWorkflowsNrqlConfigurationInput",
   "description": "NRQL type configuration input object",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "query",
     "description": "query",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "CloudAlbIntegration",
   "description": "ALB/NLB Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "fetchExtendedInventory",
     "description": "Determine if extra inventory data be collected or not. May affect total data collection time and contribute to the Cloud provider API rate limit.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "fetchTags",
     "description": "Specify if tags should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "loadBalancerPrefixes",
     "description": "Specify each name or prefix for the LBs that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "tagKey",
     "description": "Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "tagValue",
     "description": "Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "MultiTenantIdentityGroupUser",
   "description": "Active user within group",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "email",
     "description": "The email of the user.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "a value that uniquely identifies this object",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "The full name of the user.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "timeZone",
     "description": "The configured time zone of the user.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AlertsMutingRuleScheduleRepeat",
   "description": "Details about if or how frequently a MutingRule's schedule repeats.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "DAILY",
     "description": "Schedule repeats once per calendar day",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "MONTHLY",
     "description": "Schedule repeats once per calendar month",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "WEEKLY",
     "description": "Schedule repeats once per specified day per calendar week",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "EdgeCreateTraceObserverResponses",
   "description": "Array of responses, one for each trace observer creation request.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "responses",
     "description": "Array of trace observer creation responses, one for each `CreateTraceObserverInput`.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EdgeCreateTraceObserverResponse",
         "kind": "OBJECT"
        }
       }
      }
     }
    }
   ]
  },
  {
   "name": "UserManagementPendingUpgradeRequest",
   "description": "Exists only if a user has a pending upgrade request.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "id",
     "description": "a value that uniquely identifies this object",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "message",
     "description": "Requester message, why the user believes they require the upgrade.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "requestedUserType",
     "description": "Requested user type for the user.",
     "type": {
      "name": "UserManagementUserType",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "OrganizationCustomerContractWrapper",
   "description": "Accessible customers",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "items",
     "description": "Accessible customers",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "OrganizationCustomerContract",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "nextCursor",
     "description": "an opaque cursor to supply with subsequent requests to get the next page of results, null if there are no more pages",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "EntityInfrastructureIntegrationType",
   "description": "The type of Infrastructure Integration",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "APACHE_SERVER",
     "description": "APACHE_SERVER integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWSELASTICSEARCHNODE",
     "description": "AWSELASTICSEARCHNODE integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_ALB",
     "description": "AWS_ALB integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_ALB_LISTENER",
     "description": "AWS_ALB_LISTENER integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_ALB_LISTENER_RULE",
     "description": "AWS_ALB_LISTENER_RULE integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_ALB_TARGET_GROUP",
     "description": "AWS_ALB_TARGET_GROUP integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_API_GATEWAY_API",
     "description": "AWS_API_GATEWAY_API integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_API_GATEWAY_RESOURCE",
     "description": "AWS_API_GATEWAY_RESOURCE integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_API_GATEWAY_RESOURCE_WITH_METRICS",
     "description": "AWS_API_GATEWAY_RESOURCE_WITH_METRICS integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_API_GATEWAY_STAGE",
     "description": "AWS_API_GATEWAY_STAGE integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_AUTO_SCALING_GROUP",
     "description": "AWS_AUTO_SCALING_GROUP integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_AUTO_SCALING_INSTANCE",
     "description": "AWS_AUTO_SCALING_INSTANCE integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_AUTO_SCALING_LAUNCH_CONFIGURATION",
     "description": "AWS_AUTO_SCALING_LAUNCH_CONFIGURATION integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_AUTO_SCALING_POLICY",
     "description": "AWS_AUTO_SCALING_POLICY integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_AUTO_SCALING_REGION_LIMIT",
     "description": "AWS_AUTO_SCALING_REGION_LIMIT integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_BILLING_ACCOUNT_COST",
     "description": "AWS_BILLING_ACCOUNT_COST integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_BILLING_ACCOUNT_SERVICE_COST",
     "description": "AWS_BILLING_ACCOUNT_SERVICE_COST integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_BILLING_BUDGET",
     "description": "AWS_BILLING_BUDGET integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_BILLING_SERVICE_COST",
     "description": "AWS_BILLING_SERVICE_COST integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_CLOUD_FRONT_DISTRIBUTION",
     "description": "AWS_CLOUD_FRONT_DISTRIBUTION integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_CLOUD_TRAIL",
     "description": "AWS_CLOUD_TRAIL integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_DYNAMO_DB_GLOBAL_SECONDARY_INDEX",
     "description": "AWS_DYNAMO_DB_GLOBAL_SECONDARY_INDEX integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_DYNAMO_DB_REGION",
     "description": "AWS_DYNAMO_DB_REGION integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_DYNAMO_DB_TABLE",
     "description": "AWS_DYNAMO_DB_TABLE integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_EBS_VOLUME",
     "description": "AWS_EBS_VOLUME integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_ECS_CLUSTER",
     "description": "AWS_ECS_CLUSTER integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_ECS_SERVICE",
     "description": "AWS_ECS_SERVICE integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_EFS_FILE_SYSTEM",
     "description": "AWS_EFS_FILE_SYSTEM integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_ELASTICSEARCH_CLUSTER",
     "description": "AWS_ELASTICSEARCH_CLUSTER integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_ELASTICSEARCH_INSTANCE",
     "description": "AWS_ELASTICSEARCH_INSTANCE integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_ELASTIC_BEANSTALK_ENVIRONMENT",
     "description": "AWS_ELASTIC_BEANSTALK_ENVIRONMENT integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_ELASTIC_BEANSTALK_INSTANCE",
     "description": "AWS_ELASTIC_BEANSTALK_INSTANCE integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_ELASTIC_MAP_REDUCE_CLUSTER",
     "description": "AWS_ELASTIC_MAP_REDUCE_CLUSTER integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_ELASTIC_MAP_REDUCE_INSTANCE",
     "description": "AWS_ELASTIC_MAP_REDUCE_INSTANCE integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_ELASTIC_MAP_REDUCE_INSTANCE_FLEET",
     "description": "AWS_ELASTIC_MAP_REDUCE_INSTANCE_FLEET integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_ELASTIC_MAP_REDUCE_INSTANCE_GROUP",
     "description": "AWS_ELASTIC_MAP_REDUCE_INSTANCE_GROUP integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_ELASTI_CACHE_MEMCACHED_CLUSTER",
     "description": "AWS_ELASTI_CACHE_MEMCACHED_CLUSTER integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_ELASTI_CACHE_MEMCACHED_NODE",
     "description": "AWS_ELASTI_CACHE_MEMCACHED_NODE integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_ELASTI_CACHE_REDIS_CLUSTER",
     "description": "AWS_ELASTI_CACHE_REDIS_CLUSTER integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_ELASTI_CACHE_REDIS_NODE",
     "description": "AWS_ELASTI_CACHE_REDIS_NODE integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_ELB",
     "description": "AWS_ELB integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_HEALTH_ISSUE",
     "description": "AWS_HEALTH_ISSUE integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_HEALTH_NOTIFICATION",
     "description": "AWS_HEALTH_NOTIFICATION integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_HEALTH_SCHEDULED_CHANGE",
     "description": "AWS_HEALTH_SCHEDULED_CHANGE integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_HEALTH_UNKNOWN",
     "description": "AWS_HEALTH_UNKNOWN integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_IAM",
     "description": "AWS_IAM integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_IAM_GROUP",
     "description": "AWS_IAM_GROUP integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_IAM_OPEN_ID_PROVIDER",
     "description": "AWS_IAM_OPEN_ID_PROVIDER integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_IAM_POLICY",
     "description": "AWS_IAM_POLICY integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_IAM_ROLE",
     "description": "AWS_IAM_ROLE integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_IAM_SAML_PROVIDER",
     "description": "AWS_IAM_SAML_PROVIDER integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_IAM_SERVER_CERTIFICATE",
     "description": "AWS_IAM_SERVER_CERTIFICATE integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_IAM_USER",
     "description": "AWS_IAM_USER integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_IAM_VIRTUAL_MFA_DEVICE",
     "description": "AWS_IAM_VIRTUAL_MFA_DEVICE integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_IOT_BROKER",
     "description": "AWS_IOT_BROKER integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_IOT_RULE",
     "description": "AWS_IOT_RULE integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_IOT_RULE_ACTION",
     "description": "AWS_IOT_RULE_ACTION integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_KINESIS_DELIVERY_STREAM",
     "description": "AWS_KINESIS_DELIVERY_STREAM integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_KINESIS_STREAM",
     "description": "AWS_KINESIS_STREAM integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_KINESIS_STREAM_SHARD",
     "description": "AWS_KINESIS_STREAM_SHARD integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_LAMBDA_AGENT_TRANSACTION",
     "description": "AWS_LAMBDA_AGENT_TRANSACTION integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_LAMBDA_AGENT_TRANSACTION_ERROR",
     "description": "AWS_LAMBDA_AGENT_TRANSACTION_ERROR integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_LAMBDA_EDGE_FUNCTION",
     "description": "AWS_LAMBDA_EDGE_FUNCTION integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_LAMBDA_EVENT_SOURCE_MAPPING",
     "description": "AWS_LAMBDA_EVENT_SOURCE_MAPPING integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_LAMBDA_FUNCTION",
     "description": "AWS_LAMBDA_FUNCTION integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_LAMBDA_FUNCTION_ALIAS",
     "description": "AWS_LAMBDA_FUNCTION_ALIAS integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_LAMBDA_OPERATION",
     "description": "AWS_LAMBDA_OPERATION integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_LAMBDA_REGION",
     "description": "AWS_LAMBDA_REGION integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_LAMBDA_SPAN",
     "description": "AWS_LAMBDA_SPAN integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_LAMBDA_TRACE",
     "description": "AWS_LAMBDA_TRACE integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_RDS_DB_CLUSTER",
     "description": "AWS_RDS_DB_CLUSTER integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_RDS_DB_INSTANCE",
     "description": "AWS_RDS_DB_INSTANCE integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_REDSHIFT_CLUSTER",
     "description": "AWS_REDSHIFT_CLUSTER integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_REDSHIFT_NODE",
     "description": "AWS_REDSHIFT_NODE integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_ROUTE53_HEALTH_CHECK",
     "description": "AWS_ROUTE53_HEALTH_CHECK integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_ROUTE53_ZONE",
     "description": "AWS_ROUTE53_ZONE integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_ROUTE53_ZONE_RECORD_SET",
     "description": "AWS_ROUTE53_ZONE_RECORD_SET integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_S3_BUCKET",
     "description": "AWS_S3_BUCKET integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_S3_BUCKET_REQUESTS",
     "description": "AWS_S3_BUCKET_REQUESTS integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_SES_CONFIGURATION_SET",
     "description": "AWS_SES_CONFIGURATION_SET integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_SES_EVENT_DESTINATION",
     "description": "AWS_SES_EVENT_DESTINATION integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_SES_RECEIPT_FILTER",
     "description": "AWS_SES_RECEIPT_FILTER integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_SES_RECEIPT_RULE",
     "description": "AWS_SES_RECEIPT_RULE integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_SES_RECEIPT_RULE_SET",
     "description": "AWS_SES_RECEIPT_RULE_SET integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_SES_REGION",
     "description": "AWS_SES_REGION integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_SNS_SUBSCRIPTION",
     "description": "AWS_SNS_SUBSCRIPTION integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_SNS_TOPIC",
     "description": "AWS_SNS_TOPIC integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_SQS_QUEUE",
     "description": "AWS_SQS_QUEUE integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_VPC",
     "description": "AWS_VPC integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_VPC_ENDPOINT",
     "description": "AWS_VPC_ENDPOINT integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_VPC_INTERNET_GATEWAY",
     "description": "AWS_VPC_INTERNET_GATEWAY integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_VPC_NAT_GATEWAY",
     "description": "AWS_VPC_NAT_GATEWAY integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_VPC_NETWORK_ACL",
     "description": "AWS_VPC_NETWORK_ACL integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_VPC_NETWORK_INTERFACE",
     "description": "AWS_VPC_NETWORK_INTERFACE integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_VPC_PEERING_CONNECTION",
     "description": "AWS_VPC_PEERING_CONNECTION integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_VPC_ROUTE_TABLE",
     "description": "AWS_VPC_ROUTE_TABLE integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_VPC_SECURITY_GROUP",
     "description": "AWS_VPC_SECURITY_GROUP integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_VPC_SUBNET",
     "description": "AWS_VPC_SUBNET integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_VPC_VPN_CONNECTION",
     "description": "AWS_VPC_VPN_CONNECTION integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_VPC_VPN_TUNNEL",
     "description": "AWS_VPC_VPN_TUNNEL integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AZURE_APP_SERVICE_HOST_NAME",
     "description": "AZURE_APP_SERVICE_HOST_NAME integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AZURE_APP_SERVICE_WEB_APP",
     "description": "AZURE_APP_SERVICE_WEB_APP integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AZURE_COSMOS_DB_ACCOUNT",
     "description": "AZURE_COSMOS_DB_ACCOUNT integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AZURE_FUNCTIONS_APP",
     "description": "AZURE_FUNCTIONS_APP integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AZURE_LOAD_BALANCER",
     "description": "AZURE_LOAD_BALANCER integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AZURE_LOAD_BALANCER_BACKEND",
     "description": "AZURE_LOAD_BALANCER_BACKEND integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AZURE_LOAD_BALANCER_FRONTEND_IP",
     "description": "AZURE_LOAD_BALANCER_FRONTEND_IP integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AZURE_LOAD_BALANCER_INBOUND_NAT_POOL",
     "description": "AZURE_LOAD_BALANCER_INBOUND_NAT_POOL integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AZURE_LOAD_BALANCER_INBOUND_NAT_RULE",
     "description": "AZURE_LOAD_BALANCER_INBOUND_NAT_RULE integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AZURE_LOAD_BALANCER_PROBE",
     "description": "AZURE_LOAD_BALANCER_PROBE integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AZURE_LOAD_BALANCER_RULE",
     "description": "AZURE_LOAD_BALANCER_RULE integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AZURE_MARIADB_SERVER",
     "description": "AZURE_MARIADB_SERVER integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AZURE_MYSQL_SERVER",
     "description": "AZURE_MYSQL_SERVER integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AZURE_POSTGRESQL_SERVER",
     "description": "AZURE_POSTGRESQL_SERVER integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AZURE_REDIS_CACHE",
     "description": "AZURE_REDIS_CACHE integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AZURE_REDIS_CACHE_SHARD",
     "description": "AZURE_REDIS_CACHE_SHARD integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AZURE_SERVICE_BUS_NAMESPACE",
     "description": "AZURE_SERVICE_BUS_NAMESPACE integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AZURE_SERVICE_BUS_QUEUE",
     "description": "AZURE_SERVICE_BUS_QUEUE integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AZURE_SERVICE_BUS_SUBSCRIPTION",
     "description": "AZURE_SERVICE_BUS_SUBSCRIPTION integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AZURE_SERVICE_BUS_TOPIC",
     "description": "AZURE_SERVICE_BUS_TOPIC integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AZURE_SQL_DATABASE",
     "description": "AZURE_SQL_DATABASE integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AZURE_SQL_ELASTIC_POOL",
     "description": "AZURE_SQL_ELASTIC_POOL integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AZURE_SQL_FIREWALL",
     "description": "AZURE_SQL_FIREWALL integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AZURE_SQL_REPLICATION_LINK",
     "description": "AZURE_SQL_REPLICATION_LINK integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AZURE_SQL_RESTORE_POINT",
     "description": "AZURE_SQL_RESTORE_POINT integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AZURE_SQL_SERVER",
     "description": "AZURE_SQL_SERVER integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AZURE_STORAGE_ACCOUNT",
     "description": "AZURE_STORAGE_ACCOUNT integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AZURE_VIRTUAL_NETWORKS",
     "description": "AZURE_VIRTUAL_NETWORKS integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AZURE_VIRTUAL_NETWORKS_IP_CONFIGURATION",
     "description": "AZURE_VIRTUAL_NETWORKS_IP_CONFIGURATION integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AZURE_VIRTUAL_NETWORKS_NETWORK_INTERFACE",
     "description": "AZURE_VIRTUAL_NETWORKS_NETWORK_INTERFACE integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AZURE_VIRTUAL_NETWORKS_PEERING",
     "description": "AZURE_VIRTUAL_NETWORKS_PEERING integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AZURE_VIRTUAL_NETWORKS_PUBLIC_IP_ADDRESS",
     "description": "AZURE_VIRTUAL_NETWORKS_PUBLIC_IP_ADDRESS integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AZURE_VIRTUAL_NETWORKS_ROUTE",
     "description": "AZURE_VIRTUAL_NETWORKS_ROUTE integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AZURE_VIRTUAL_NETWORKS_ROUTE_TABLE",
     "description": "AZURE_VIRTUAL_NETWORKS_ROUTE_TABLE integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AZURE_VIRTUAL_NETWORKS_SECURITY_GROUP",
     "description": "AZURE_VIRTUAL_NETWORKS_SECURITY_GROUP integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AZURE_VIRTUAL_NETWORKS_SECURITY_RULE",
     "description": "AZURE_VIRTUAL_NETWORKS_SECURITY_RULE integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AZURE_VIRTUAL_NETWORKS_SUBNET",
     "description": "AZURE_VIRTUAL_NETWORKS_SUBNET integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "CASSANDRA_NODE",
     "description": "CASSANDRA_NODE integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "CONSUL_AGENT",
     "description": "CONSUL_AGENT integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "COUCHBASE_BUCKET",
     "description": "COUCHBASE_BUCKET integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "COUCHBASE_CLUSTER",
     "description": "COUCHBASE_CLUSTER integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "COUCHBASE_NODE",
     "description": "COUCHBASE_NODE integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "COUCHBASE_QUERY_ENGINE",
     "description": "COUCHBASE_QUERY_ENGINE integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "ELASTICSEARCH_NODE",
     "description": "ELASTICSEARCH_NODE integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "F5_NODE",
     "description": "F5_NODE integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "F5_POOL",
     "description": "F5_POOL integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "F5_POOL_MEMBER",
     "description": "F5_POOL_MEMBER integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "F5_SYSTEM",
     "description": "F5_SYSTEM integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "F5_VIRTUAL_SERVER",
     "description": "F5_VIRTUAL_SERVER integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "GCP_APP_ENGINE_SERVICE",
     "description": "GCP_APP_ENGINE_SERVICE integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "GCP_BIG_QUERY_DATA_SET",
     "description": "GCP_BIG_QUERY_DATA_SET integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "GCP_BIG_QUERY_PROJECT",
     "description": "GCP_BIG_QUERY_PROJECT integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "GCP_BIG_QUERY_TABLE",
     "description": "GCP_BIG_QUERY_TABLE integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "GCP_CLOUD_FUNCTION",
     "description": "GCP_CLOUD_FUNCTION integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "GCP_CLOUD_SQL",
     "description": "GCP_CLOUD_SQL integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "GCP_CLOUD_TASKS_QUEUE",
     "description": "GCP_CLOUD_TASKS_QUEUE integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "GCP_HTTP_LOAD_BALANCER",
     "description": "GCP_HTTP_LOAD_BALANCER integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "GCP_INTERNAL_LOAD_BALANCER",
     "description": "GCP_INTERNAL_LOAD_BALANCER integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "GCP_KUBERNETES_CONTAINER",
     "description": "GCP_KUBERNETES_CONTAINER integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "GCP_KUBERNETES_NODE",
     "description": "GCP_KUBERNETES_NODE integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "GCP_KUBERNETES_POD",
     "description": "GCP_KUBERNETES_POD integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "GCP_PUB_SUB_SUBSCRIPTION",
     "description": "GCP_PUB_SUB_SUBSCRIPTION integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "GCP_PUB_SUB_TOPIC",
     "description": "GCP_PUB_SUB_TOPIC integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "GCP_SPANNER_DATABASE",
     "description": "GCP_SPANNER_DATABASE integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "GCP_SPANNER_INSTANCE",
     "description": "GCP_SPANNER_INSTANCE integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "GCP_STORAGE_BUCKET",
     "description": "GCP_STORAGE_BUCKET integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "GCP_TCP_SSL_PROXY_LOAD_BALANCER",
     "description": "GCP_TCP_SSL_PROXY_LOAD_BALANCER integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "GCP_VIRTUAL_MACHINE_DISK",
     "description": "GCP_VIRTUAL_MACHINE_DISK integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "KAFKA_BROKER",
     "description": "KAFKA_BROKER integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "KAFKA_TOPIC",
     "description": "KAFKA_TOPIC integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "KUBERNETES_CLUSTER",
     "description": "KUBERNETES_CLUSTER integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "MEMCACHED_INSTANCE",
     "description": "MEMCACHED_INSTANCE integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "MSSQL_INSTANCE",
     "description": "MSSQL_INSTANCE integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "MYSQL_NODE",
     "description": "MYSQL_NODE integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NA",
     "description": "NA integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NGINX_SERVER",
     "description": "NGINX_SERVER integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "ORACLE_DB_INSTANCE",
     "description": "ORACLE_DB_INSTANCE integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "POSTGRE_SQL_INSTANCE",
     "description": "POSTGRE_SQL_INSTANCE integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "RABBIT_MQ_CLUSTER",
     "description": "RABBIT_MQ_CLUSTER integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "RABBIT_MQ_EXCHANGE",
     "description": "RABBIT_MQ_EXCHANGE integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "RABBIT_MQ_NODE",
     "description": "RABBIT_MQ_NODE integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "RABBIT_MQ_QUEUE",
     "description": "RABBIT_MQ_QUEUE integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "REDIS_INSTANCE",
     "description": "REDIS_INSTANCE integration",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "VARNISH_INSTANCE",
     "description": "VARNISH_INSTANCE integration",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "CloudAwsDisableIntegrationsInput",
   "description": "List of integrations",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "alb",
     "description": "ALB/NLB integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "apigateway",
     "description": "API Gateway integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "autoscaling",
     "description": "AutoScaling integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "awsAppsync",
     "description": "AppSync integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "awsAthena",
     "description": "Athena integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "awsCognito",
     "description": "Cognito integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "awsConnect",
     "description": "Connect integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "awsDirectconnect",
     "description": "Direct Connect integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "awsDocdb",
     "description": "DocumentDB integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "awsFsx",
     "description": "FSx integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "awsGlue",
     "description": "Glue integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "awsKinesisanalytics",
     "description": "Kinesis Data Analytics integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "awsMediaconvert",
     "description": "Elemental MediaConvert integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "awsMediapackagevod",
     "description": "MediaPackage VOD integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "awsMetadata",
     "description": "Fetch Metadata for AWS integrations integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "awsMq",
     "description": "MQ integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "awsMsElasticache",
     "description": "Fetch ElastiCache entities integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "awsMsk",
     "description": "Managed Kafka integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "awsNeptune",
     "description": "Neptune integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "awsQldb",
     "description": "QLDB integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "awsRoute53resolver",
     "description": "Route53 Resolver integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "awsStates",
     "description": "Step Functions integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "awsTagsGlobal",
     "description": "Fetch tags for all integrations integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "awsTransitgateway",
     "description": "Transit Gateway integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "awsWaf",
     "description": "WAF integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "awsWafv2",
     "description": "WAFV2 integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "awsXray",
     "description": "X-Ray integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "billing",
     "description": "Billing integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "cloudfront",
     "description": "CloudFront integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "cloudtrail",
     "description": "CloudTrail integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "dynamodb",
     "description": "DynamoDB integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "ebs",
     "description": "EBS integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "ec2",
     "description": "EC2 integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "ecs",
     "description": "ECS integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "efs",
     "description": "EFS integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "elasticache",
     "description": "ElastiCache integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "elasticbeanstalk",
     "description": "Elastic Beanstalk integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "elasticsearch",
     "description": "Elasticsearch Service integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "elb",
     "description": "ELB (Classic) integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "emr",
     "description": "EMR integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "health",
     "description": "Health integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "iam",
     "description": "IAM integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "iot",
     "description": "IoT integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "kinesis",
     "description": "Kinesis Streams integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "kinesisFirehose",
     "description": "Kinesis Firehose integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "lambda",
     "description": "Lambda integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "rds",
     "description": "RDS integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "redshift",
     "description": "Redshift integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "route53",
     "description": "Route 53 integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "s3",
     "description": "S3 integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "ses",
     "description": "SES integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "sns",
     "description": "SNS integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "sqs",
     "description": "SQS integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "trustedadvisor",
     "description": "Trusted Advisor integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "vpc",
     "description": "VPC integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "AgentApplicationSettingsSessionTrace",
   "description": "Session Trace configuration.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "enabled",
     "description": "Session Trace enabled.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "errorSamplingRate",
     "description": "Percentage from 0-100 specifying how many of all user sessions that contain errors should be recorded.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Float",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "mode",
     "description": "Default (fixed_rate) or custom (probabilistic) option used to collect session traces.",
     "type": {
      "name": "AgentApplicationSettingsSessionTraceMode",
      "kind": "ENUM"
     }
    },
    {
     "name": "samplingRate",
     "description": "Percentage from 0-100 specifying how many of all user sessions should be recorded.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Float",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "MultiTenantIdentityUserEmailInput",
   "description": "Filters by user email address",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "contains",
     "description": "Part of an email address",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "eq",
     "description": "An email address",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "ApiAccessUserKeyErrorType",
   "description": "The type of error.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "FORBIDDEN",
     "description": "Occurs when the user issuing the mutation does not have sufficient permissions to perform the action for a key.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "INVALID",
     "description": "Occurs when the action taken on a key did not successfully pass validation.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NOT_FOUND",
     "description": "Occurs when the requested key `id` was not found.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "ApmDatabaseInstanceEntityOutline",
   "description": "A database instance seen by an APM Application",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "account",
     "type": {
      "name": "AccountOutline",
      "kind": "OBJECT"
     }
    },
    {
     "name": "accountId",
     "description": "The New Relic account ID associated with this entity.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "alertSeverity",
     "description": "The current alerting severity of the entity.",
     "type": {
      "name": "EntityAlertSeverity",
      "kind": "ENUM"
     }
    },
    {
     "name": "domain",
     "description": "The entity's domain",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "entityType",
     "description": "A value representing the combination of the entity's domain and type.",
     "type": {
      "name": "EntityType",
      "kind": "ENUM"
     }
    },
    {
     "name": "firstIndexedAt",
     "description": "The date of last time the entity has updated any of its fields.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "goldenMetrics",
     "description": "The list of golden metrics for a specific entity",
     "type": {
      "name": "EntityGoldenContextScopedGoldenMetrics",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden metrics",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "timeWindow",
       "description": "Time range to apply to the golden metric NRQL query result field",
       "type": {
        "name": "EntityGoldenNrqlTimeWindowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "goldenTags",
     "description": "The list of golden tags for a specific entityType.",
     "type": {
      "name": "EntityGoldenContextScopedGoldenTags",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden tags",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "guid",
     "description": "A unique entity identifier.",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    },
    {
     "name": "host",
     "description": "The host the database instance is running on.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "indexedAt",
     "description": "The time the entity was indexed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "lastReportingChangeAt",
     "description": "The last time the entity's reporting status changed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The name of this entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "permalink",
     "description": "The url to the entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "portOrPath",
     "description": "The port or path the database instance is running on. ex: `3306` | `/tmp/mysql.sock`",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "reporting",
     "description": "The reporting status of the entity. If New Relic is successfully collecting data from your application, this will be true.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "serviceLevel",
     "description": "The service level defined for the entity.",
     "type": {
      "name": "ServiceLevelDefinition",
      "kind": "OBJECT"
     }
    },
    {
     "name": "tags",
     "description": "The tags applied to the entity.\n\nFor details on tags, as well as query and mutation examples, visit [our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/graphql-tagging-api-tutorial).",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityTag",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "type",
     "description": "The entity's type",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "vendor",
     "description": "The type of database. ex: `Postgres` | `Redis`",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ],
   "interfaces": [
    {
     "name": "AlertableEntityOutline",
     "kind": "INTERFACE"
    },
    {
     "name": "EntityOutline",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "AlertsSlackNotificationChannelUpdateInput",
   "description": "The input for updating an existing Slack notification channel.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "name",
     "description": "Notification channel name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "teamChannel",
     "description": "Slack channel name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "url",
     "description": "Slack channel URL.",
     "type": {
      "name": "SecureValue",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "OrganizationAccountOrganizationIdFilterInput",
   "description": "A filter for OrganizationID",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "eq",
     "description": "An Organization ID",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AiNotificationsChannelFields",
   "description": "Channel fields to filter by",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "ACTIVE",
     "description": "active field",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "CREATED_AT",
     "description": "created timestamp field",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "DEFAULT",
     "description": "default field",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "DESTINATION_ID",
     "description": "destination id field",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NAME",
     "description": "name field",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "PRODUCT",
     "description": "product field",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "STATUS",
     "description": "status field",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "TYPE",
     "description": "type field",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "UPDATED_AT",
     "description": "updated timestamp field",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "UPDATED_BY",
     "description": "updated_by field",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "CloudDisableAccountIntegrationInput",
   "description": "Information required to disable a cloud service integration from a linked account.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AiTopologyCollectorResultType",
   "description": "Status of an operation.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "FAILURE",
     "description": "Failed operation",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SUCCESS",
     "description": "Successful operation",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "UserManagementCreateUserPayload",
   "description": "Autogenerated return type of CreateUser.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdUser",
     "description": "The user that was created",
     "type": {
      "name": "UserManagementCreatedUser",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "Nr1CatalogSubmitMetadataErrorType",
   "description": "The type of error that occurred during the mutation when submitting metadata",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "NERDPACK_NOT_FOUND",
     "description": "The Nerdpack cannot be found",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SERVER_ERROR",
     "description": "Something went wrong in the service",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "UNAUTHORIZED",
     "description": "The user does not have permission to update the metadata for the Nerdpack",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "UNSUPPORTED_TYPE",
     "description": "The type of the Nerdpack is not supported in the New Relic One Catalog",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "VALIDATION_FAILED",
     "description": "The submitted metadata is not valid and needs to be corrected to be accepted",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AuthorizationManagementRole",
   "description": "a role grants access on an account or organization to groups of users",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "displayName",
     "description": "the name of the object",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "id",
     "description": "a value that uniquely identifies this object",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "the name of the object",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "scope",
     "description": "the scope of the role",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "type",
     "description": "the type of the role",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "DashboardBarWidgetConfiguration",
   "description": "Configuration for visualization type 'viz.bar'",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "nrqlQueries",
     "description": "NRQL queries.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "DashboardWidgetNrqlQuery",
       "kind": "OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "SyntheticsAutomatedTestStatus",
   "description": "Enum of automated test status",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "FAILED",
     "description": "At least one blocking job in the automated test has failed",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "IN_PROGRESS",
     "description": "Indicates jobs in the automated test are still running",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "PASSED",
     "description": "All blocking jobs in the automated test has passed",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "TIMEOUT",
     "description": "Some jobs in the automated test failed to provide a status within the timeout",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "Nr1CatalogQuickstartDashboard",
   "description": "Information about a dashboard in a quickstart",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "id",
     "description": "The unique identifier for the dashboard",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metadata",
     "description": "Metadata associated with the dashboard",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Nr1CatalogQuickstartDashboardMetadata",
       "kind": "OBJECT"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "Nr1CatalogQuickstartComponent",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "StackTraceApmStackTrace",
   "description": "A structured representation of a stack trace for an APM application.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "frames",
     "description": "Stack trace frames.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "StackTraceApmStackTraceFrame",
       "kind": "OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "Nr1CatalogAlertPolicyTemplate",
   "description": "Information about an alert policy template",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "id",
     "description": "The unique identifier for the alert policy template",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metadata",
     "description": "Metadata associated with the alert policy template",
     "type": {
      "name": "Nr1CatalogAlertPolicyTemplateMetadata",
      "kind": "OBJECT"
     }
    },
    {
     "name": "supportLevel",
     "description": "Level of support expected for the alert policy template",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Nr1CatalogSupportLevel",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "updatedAt",
     "description": "A timestamp that indicates when the alert policy template was last updated",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "DateTime",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "Nr1CatalogNerdletInstallPlanDirective",
   "description": "Information about a targeted install plan directive",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "mode",
     "description": "The mode of the install plan directive",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Nr1CatalogInstallPlanDirectiveMode",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "nerdletId",
     "description": "The nerdlet ID used to guide the user through installation",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "nerdletState",
     "description": "The nerdlet state used to intialize the nerdlet",
     "type": {
      "name": "Nr1CatalogRawNerdletState",
      "kind": "SCALAR"
     }
    }
   ],
   "interfaces": [
    {
     "name": "Nr1CatalogInstallPlanDirective",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "CloudGcpPubsubIntegration",
   "description": "Cloud Pub/Sub Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "fetchTags",
     "description": "Specify if labels and the extended inventory should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "OrganizationOrganizationCreateJobResultStatusEnum",
   "description": "The possible status values for job results",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "CREATED",
     "description": "Jobs that have been created but not yet started running",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "FAILED",
     "description": "Jobs that have failed and stopped running",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "RUNNING",
     "description": "Jobs that are still running",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SUCCEEDED",
     "description": "Jobs that completed successfully",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "SyntheticsCertCheckMonitorCreateMutationResult",
   "description": "The result of a Cert Check monitor create mutation",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "errors",
     "description": "Errors that occurred during Cert Check monitor create mutation",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "name": "SyntheticsMonitorCreateError",
        "kind": "OBJECT"
       }
      }
     }
    },
    {
     "name": "monitor",
     "description": "The resulting Cert Check monitor",
     "type": {
      "name": "SyntheticsCertCheckMonitor",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "Nr1CatalogRenderFormat",
   "description": "Supported rendering formats for data",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "MARKDOWN",
     "description": "Renders the output in Markdown",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "CloudCloudtrailIntegrationInput",
   "description": "AWS CloudTrail",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "CloudAzureFunctionsIntegrationInput",
   "description": "Azure Functions",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "resourceGroups",
     "description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "EntityRelationshipUserDefinedDeleteErrorType",
   "description": "The different error types for the entityRelationshipUserDefinedDelete mutation.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "NOT_AUTHORIZED",
     "description": "The user does not have permissions to perform the operation.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "OrganizationProvisioningUserError",
   "description": "A user-readable error",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "message",
     "description": "A description of the error",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "path",
     "description": "Which input value this error came from",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    }
   ]
  },
  {
   "name": "MultiTenantAuthorizationSortDirectionEnum",
   "description": "Provides the directions data can be sorted",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "ASCENDING",
     "description": "Sort in ascending order",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "DESCENDING",
     "description": "Sort in descending order",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AiNotificationsBasicAuthInput",
   "description": "Basic auth input object",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "password",
     "description": "password",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SecureValue",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "user",
     "description": "user",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "CloudAzureVmsIntegrationInput",
   "description": "Azure Virtual Machines",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "resourceGroups",
     "description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "SyntheticsBrokenLinksMonitor",
   "description": "A Broken Links monitor resulting from a Broken Links monitor mutation",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The creation time of the monitor in millis",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "guid",
     "description": "The unique client identifier for the Synthetics Monitor in New Relic",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    },
    {
     "name": "id",
     "description": "The unique identifier of the monitor within the Synthetics domain",
     "type": {
      "name": "ID",
      "kind": "SCALAR"
     }
    },
    {
     "name": "locations",
     "description": "The locations the monitor runs from",
     "type": {
      "name": "SyntheticsLocations",
      "kind": "OBJECT"
     }
    },
    {
     "name": "modifiedAt",
     "description": "The last modification time of the monitor in millis",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The human readable identifier for the monitor",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "period",
     "description": "The interval at which the monitor runs in minutes",
     "type": {
      "name": "SyntheticsMonitorPeriod",
      "kind": "ENUM"
     }
    },
    {
     "name": "runtime",
     "description": "The runtime that the monitor will use to run jobs",
     "type": {
      "name": "SyntheticsExtendedTypeMonitorRuntime",
      "kind": "OBJECT"
     }
    },
    {
     "name": "status",
     "description": "The run state of the monitor",
     "type": {
      "name": "SyntheticsMonitorStatus",
      "kind": "ENUM"
     }
    },
    {
     "name": "uri",
     "description": "The uri the monitor runs against",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "Nr1CatalogSubmitMetadataInput",
   "description": "Metadata associated with the Nerdpack that will be available in the New Relic One Catalog",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "additionalInfo",
     "description": "Additional information relevant for the Nerdpack",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "categoryTerms",
     "description": "A list of terms for category grouping when filtering and searching the Nerdpack",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "details",
     "description": "A long form description used in the catalog to detail the functionality of the Nerdpack",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "documentation",
     "description": "Additional documentation relevant for the Nerdpack",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "keywords",
     "description": "A list of keywords for filtering and searching the Nerdpack",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "repository",
     "description": "A URL that links to the repository where the source code for this Nerdpack can be found",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "support",
     "description": "Support channels where users can contact you to get support for the Nerdpack",
     "type": {
      "name": "Nr1CatalogSupportInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "tagline",
     "description": "A tagline for the Nerdpack",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "version",
     "description": "The version of the Nerdpack that will be associated with this metadata",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SemVer",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "whatsNew",
     "description": "A description of changes describing what changed for this version of the Nerdpack",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AlertsMutingRuleConditionGroup",
   "description": "A group of MutingRuleConditions combined by an operator.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "conditions",
     "description": "The individual MutingRuleConditions within the group.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AlertsMutingRuleCondition",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "operator",
     "description": "The operator used to combine all the MutingRuleConditions within the group.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsMutingRuleConditionGroupOperator",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "MultiTenantIdentityUserSortInput",
   "description": "Sort users",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "direction",
     "description": "Direction to sort in",
     "type": {
      "name": "MultiTenantIdentitySortDirection",
      "kind": "ENUM"
     }
    },
    {
     "name": "key",
     "description": "User attribute to sort on",
     "type": {
      "name": "MultiTenantIdentityUserSortKey",
      "kind": "ENUM"
     }
    }
   ]
  },
  {
   "name": "CloudDynamodbIntegration",
   "description": "DynamoDB Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "fetchExtendedInventory",
     "description": "Determine if extra inventory data be collected or not. May affect total data collection time and contribute to the Cloud provider API rate limit.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "fetchTags",
     "description": "Specify if tags should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "tagKey",
     "description": "Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "tagValue",
     "description": "Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "EntityRelationshipUserDefinedCreateOrReplaceResult",
   "description": "The result of the entityRelationshipUserDefinedCreateOrReplace mutation.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "errors",
     "description": "The list of errors that occurred when executing the mutation.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityRelationshipUserDefinedCreateOrReplaceResultError",
        "kind": "OBJECT"
       }
      }
     }
    }
   ]
  },
  {
   "name": "AiNotificationsUiComponent",
   "description": "UI component object",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "allowTemplateVariables",
     "description": "Should we allow variables rendering in this component",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "dataValidation",
     "description": "Which data validation is applied to this component",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiNotificationsUiComponentValidation",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "defaultValue",
     "description": "Default value of this component",
     "type": {
      "name": "AiNotificationsSuggestion",
      "kind": "OBJECT"
     }
    },
    {
     "name": "selectOptions",
     "description": "Additional options for SELECT type components",
     "type": {
      "name": "AiNotificationsSelectComponentOptions",
      "kind": "OBJECT"
     }
    },
    {
     "name": "type",
     "description": "Component type",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiNotificationsUiComponentType",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "visibleByDefault",
     "description": "Is this component a part of the default fields",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "CloudAwsLinkAccountInput",
   "description": "Information required to link a AWS account to a NewRelic account.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "arn",
     "description": "The AWS role ARN (used to fetch data).",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricCollectionMode",
     "description": "How metrics will be collected.",
     "type": {
      "name": "CloudMetricCollectionMode",
      "kind": "ENUM"
     }
    },
    {
     "name": "name",
     "description": "The linked account name.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AiDecisionsOneInput",
   "description": "Input type for One expression",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "children",
     "description": "Children expressions.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiDecisionsRuleExpressionInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     }
    }
   ]
  },
  {
   "name": "Nr1CatalogInstallPlanTargetType",
   "description": "Possible types for the install plan target",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "AGENT",
     "description": "Agent install",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "INTEGRATION",
     "description": "Integration install",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "ON_HOST_INTEGRATION",
     "description": "On host integration install",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "UNKNOWN",
     "description": "Unknown install - special case when the target where the install takes place is unknown (such as guided install)",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "EntitySearchQueryBuilderType",
   "description": "The type of entity",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "APPLICATION",
     "description": "An application",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "DASHBOARD",
     "description": "A dashboard",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "HOST",
     "description": "A host",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "MONITOR",
     "description": "A monitor",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "WORKLOAD",
     "description": "A workload",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "CloudGcpSpannerIntegration",
   "description": "Cloud Spanner Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "fetchTags",
     "description": "Specify if labels and the extended inventory should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "DashboardWidgetLayoutInput",
   "description": "Widget layout input.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "column",
     "description": "Column position of widget from top left, starting at 1.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "height",
     "description": "Height of the widget. Valid values are 1 to 12 inclusive. Defaults to 3.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "row",
     "description": "Row position of widget from top left, starting at 1.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "width",
     "description": "Width of the widget. Valid values are 1 to 12 inclusive. Defaults to 4.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "MultiTenantIdentityPendingUpgradeRequestInput",
   "description": "Available filtering types for pending upgrade requests",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "exists",
     "description": "Whether a request exists or not",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "DashboardWidgetVisualizationInput",
   "description": "Visualization configuration.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "id",
     "description": "This field can either have a known type like `viz.area` or `\u003cnerdpack-id\u003e.\u003cvisualization-id\u003e` in the case of [custom visualizations](https://developer.newrelic.com/explore-docs/custom-viz/build-visualization/). Check out [docs](https://docs.newrelic.com/docs/apis/nerdgraph/examples/create-widgets-dashboards-api/#widget-schema) for more info.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AiTopologyEdgeListing",
   "description": "Listing of edges in a graph.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "count",
     "description": "Number of edges returned by the query.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "cursor",
     "description": "Next cursor.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "edges",
     "description": "List of edges.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiTopologyEdge",
         "kind": "OBJECT"
        }
       }
      }
     }
    }
   ]
  },
  {
   "name": "SyntheticsDaysOfWeekOutput",
   "description": "Configuration options for a monthly monitor downtime that runs on days of the week",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "ordinalDayOfMonth",
     "description": "Which occurrence of the day selected within the month",
     "type": {
      "name": "SyntheticsMonitorDowntimeDayOfMonthOrdinal",
      "kind": "ENUM"
     }
    },
    {
     "name": "weekDay",
     "description": "Which day of the week the monitor downtime runs",
     "type": {
      "name": "SyntheticsMonitorDowntimeWeekDays",
      "kind": "ENUM"
     }
    }
   ]
  },
  {
   "name": "SyntheticsScriptedMonitorLocationsInput",
   "description": "The location(s) from which the scripted monitor runs.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "private",
     "description": "The private location(s) that the monitor will run jobs from",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "SyntheticsPrivateLocationInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    },
    {
     "name": "public",
     "description": "The public location(s) that the monitor will run jobs from",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    }
   ]
  },
  {
   "name": "AiDecisionsRuleExpressionInput",
   "description": "Rule expression input",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "all",
     "description": "Input type for All expression",
     "type": {
      "name": "AiDecisionsAllInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "and",
     "description": "Input type for And expression",
     "type": {
      "name": "AiDecisionsAndInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "attributeExists",
     "description": "Input type for AttributeExists expression",
     "type": {
      "name": "AiDecisionsAttributeExistsInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "categoricalClustering",
     "description": "Input type for CategoricalClustering expression",
     "type": {
      "name": "AiDecisionsCategoricalClusteringInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "fixedContains",
     "description": "Input type for FixedContains expression",
     "type": {
      "name": "AiDecisionsFixedContainsInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "fixedCosineDistance",
     "description": "Input type for FixedCosineDistance expression",
     "type": {
      "name": "AiDecisionsFixedCosineDistanceInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "fixedEndsWith",
     "description": "Input type for FixedEndsWith expression",
     "type": {
      "name": "AiDecisionsFixedEndsWithInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "fixedEqual",
     "description": "Input type for FixedEqual expression",
     "type": {
      "name": "AiDecisionsFixedEqualInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "fixedFuzzyScore",
     "description": "Input type for FixedFuzzyScore expression",
     "type": {
      "name": "AiDecisionsFixedFuzzyScoreInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "fixedFuzzyWuzzyAdaptiveRatio",
     "description": "Input type for FixedFuzzyWuzzyAdaptiveRatio expression",
     "type": {
      "name": "AiDecisionsFixedFuzzyWuzzyAdaptiveRatioInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "fixedFuzzyWuzzyPartialRatio",
     "description": "Input type for FixedFuzzyWuzzyPartialRatio expression",
     "type": {
      "name": "AiDecisionsFixedFuzzyWuzzyPartialRatioInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "fixedFuzzyWuzzyRatio",
     "description": "Input type for FixedFuzzyWuzzyRatio expression",
     "type": {
      "name": "AiDecisionsFixedFuzzyWuzzyRatioInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "fixedFuzzyWuzzyTokenSetRatio",
     "description": "Input type for FixedFuzzyWuzzyTokenSetRatio expression",
     "type": {
      "name": "AiDecisionsFixedFuzzyWuzzyTokenSetRatioInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "fixedGreaterThan",
     "description": "Input type for FixedGreaterThan expression",
     "type": {
      "name": "AiDecisionsFixedGreaterThanInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "fixedGreaterThanOrEqual",
     "description": "Input type for FixedGreaterThanOrEqual expression",
     "type": {
      "name": "AiDecisionsFixedGreaterThanOrEqualInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "fixedHammingDistance",
     "description": "Input type for FixedHammingDistance expression",
     "type": {
      "name": "AiDecisionsFixedHammingDistanceInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "fixedJaccardDistance",
     "description": "Input type for FixedJaccardDistance expression",
     "type": {
      "name": "AiDecisionsFixedJaccardDistanceInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "fixedJaroWinkler",
     "description": "Input type for FixedJaroWinkler expression",
     "type": {
      "name": "AiDecisionsFixedJaroWinklerInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "fixedLessThan",
     "description": "Input type for FixedLessThan expression",
     "type": {
      "name": "AiDecisionsFixedLessThanInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "fixedLessThanOrEqual",
     "description": "Input type for FixedLessThanOrEqual expression",
     "type": {
      "name": "AiDecisionsFixedLessThanOrEqualInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "fixedLevenshtein",
     "description": "Input type for FixedLevenshtein expression",
     "type": {
      "name": "AiDecisionsFixedLevenshteinInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "fixedLongestCommonSubsequenceDistance",
     "description": "Input type for FixedLongestCommonSubsequenceDistance expression",
     "type": {
      "name": "AiDecisionsFixedLongestCommonSubsequenceDistanceInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "fixedNumericalEqual",
     "description": "Input type for FixedNumericalEqual expression",
     "type": {
      "name": "AiDecisionsFixedNumericalEqualInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "fixedRegularExpression",
     "description": "Input type for FixedRegularExpression expression",
     "type": {
      "name": "AiDecisionsFixedRegularExpressionInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "fixedSoundEx",
     "description": "Input type for FixedSoundEx expression",
     "type": {
      "name": "AiDecisionsFixedSoundExInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "fixedStartsWith",
     "description": "Input type for FixedStartsWith expression",
     "type": {
      "name": "AiDecisionsFixedStartsWithInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "not",
     "description": "Input type for Not expression",
     "type": {
      "name": "AiDecisionsNotInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "one",
     "description": "Input type for One expression",
     "type": {
      "name": "AiDecisionsOneInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "or",
     "description": "Input type for Or expression",
     "type": {
      "name": "AiDecisionsOrInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "relativeCommonPrefix",
     "description": "Input type for RelativeCommonPrefix expression",
     "type": {
      "name": "AiDecisionsRelativeCommonPrefixInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "relativeContains",
     "description": "Input type for RelativeContains expression",
     "type": {
      "name": "AiDecisionsRelativeContainsInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "relativeCosineDistance",
     "description": "Input type for RelativeCosineDistance expression",
     "type": {
      "name": "AiDecisionsRelativeCosineDistanceInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "relativeEndsWith",
     "description": "Input type for RelativeEndsWith expression",
     "type": {
      "name": "AiDecisionsRelativeEndsWithInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "relativeEqual",
     "description": "Input type for RelativeEqual expression",
     "type": {
      "name": "AiDecisionsRelativeEqualInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "relativeFuzzyScore",
     "description": "Input type for RelativeFuzzyScore expression",
     "type": {
      "name": "AiDecisionsRelativeFuzzyScoreInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "relativeFuzzyWuzzyAdaptiveRatio",
     "description": "Input type for RelativeFuzzyWuzzyAdaptiveRatio expression",
     "type": {
      "name": "AiDecisionsRelativeFuzzyWuzzyAdaptiveRatioInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "relativeFuzzyWuzzyPartialRatio",
     "description": "Input type for RelativeFuzzyWuzzyPartialRatio expression",
     "type": {
      "name": "AiDecisionsRelativeFuzzyWuzzyPartialRatioInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "relativeFuzzyWuzzyRatio",
     "description": "Input type for RelativeFuzzyWuzzyRatio expression",
     "type": {
      "name": "AiDecisionsRelativeFuzzyWuzzyRatioInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "relativeFuzzyWuzzyTokenSetRatio",
     "description": "Input type for RelativeFuzzyWuzzyTokenSetRatio expression",
     "type": {
      "name": "AiDecisionsRelativeFuzzyWuzzyTokenSetRatioInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "relativeGreaterThan",
     "description": "Input type for RelativeGreaterThan expression",
     "type": {
      "name": "AiDecisionsRelativeGreaterThanInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "relativeGreaterThanOrEqual",
     "description": "Input type for RelativeGreaterThanOrEqual expression",
     "type": {
      "name": "AiDecisionsRelativeGreaterThanOrEqualInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "relativeHammingDistance",
     "description": "Input type for RelativeHammingDistance expression",
     "type": {
      "name": "AiDecisionsRelativeHammingDistanceInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "relativeJaccardDistance",
     "description": "Input type for RelativeJaccardDistance expression",
     "type": {
      "name": "AiDecisionsRelativeJaccardDistanceInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "relativeJaroWinkler",
     "description": "Input type for RelativeJaroWinkler expression",
     "type": {
      "name": "AiDecisionsRelativeJaroWinklerInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "relativeLessThan",
     "description": "Input type for RelativeLessThan expression",
     "type": {
      "name": "AiDecisionsRelativeLessThanInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "relativeLessThanOrEqual",
     "description": "Input type for RelativeLessThanOrEqual expression",
     "type": {
      "name": "AiDecisionsRelativeLessThanOrEqualInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "relativeLevenshtein",
     "description": "Input type for RelativeLevenshtein expression",
     "type": {
      "name": "AiDecisionsRelativeLevenshteinInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "relativeLongestCommonSubsequenceDistance",
     "description": "Input type for RelativeLongestCommonSubsequenceDistance expression",
     "type": {
      "name": "AiDecisionsRelativeLongestCommonSubsequenceDistanceInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "relativeNumericalEqual",
     "description": "Input type for RelativeNumericalEqual expression",
     "type": {
      "name": "AiDecisionsRelativeNumericalEqualInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "relativeRegularExpression",
     "description": "Input type for RelativeRegularExpression expression",
     "type": {
      "name": "AiDecisionsRelativeRegularExpressionInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "relativeSoundEx",
     "description": "Input type for RelativeSoundEx expression",
     "type": {
      "name": "AiDecisionsRelativeSoundExInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "relativeStartsWith",
     "description": "Input type for RelativeStartsWith expression",
     "type": {
      "name": "AiDecisionsRelativeStartsWithInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "relativeTopologicallyDependent",
     "description": "Input type for RelativeTopologicallyDependent expression",
     "type": {
      "name": "AiDecisionsRelativeTopologicallyDependentInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "wholeCosineDistance",
     "description": "Input type for WholeCosineDistance expression",
     "type": {
      "name": "AiDecisionsWholeCosineDistanceInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "wholeJaccardSimilarity",
     "description": "Input type for WholeJaccardSimilarity expression",
     "type": {
      "name": "AiDecisionsWholeJaccardSimilarityInput",
      "kind": "INPUT_OBJECT"
     }
    }
   ]
  },
  {
   "name": "OrganizationAccountShareSortKeyEnum",
   "description": "Provides the available values of possible fields that can be sorted",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "ACCOUNT_ID",
     "description": "Account id",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "TARGET_ORGANIZATION_NAME",
     "description": "Name of the target organization the account is shared with",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "LogConfigurationsDeleteParsingRuleResponse",
   "description": "The result after deleting a parsing rule.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "errors",
     "description": "List of errors, if any.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "LogConfigurationsParsingRuleMutationError",
       "kind": "OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "EntityGoldenMetricsDomainTypeScopedResponse",
   "description": "An object that represents the golden metrics scoped by domain and type mutation result",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "errors",
     "description": "The list of the errors",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGoldenGoldenMetricsError",
        "kind": "OBJECT"
       }
      }
     }
    },
    {
     "name": "metrics",
     "description": "The metrics results of the mutations",
     "type": {
      "name": "EntityGoldenMetricsDomainTypeScoped",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "SyntheticsBrokenLinksMonitorUpdateMutationResult",
   "description": "The result of a Broken Links monitor update mutation",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "errors",
     "description": "Errors that occurred during Broken Links monitor update mutation",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "name": "SyntheticsMonitorUpdateError",
        "kind": "OBJECT"
       }
      }
     }
    },
    {
     "name": "monitor",
     "description": "The resulting Broken Links monitor",
     "type": {
      "name": "SyntheticsBrokenLinksMonitor",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "AgentEnvironmentAccountApplicationLoadedModules",
   "description": "Data found for one application instance's loaded modules.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "applicationGuids",
     "description": "List of Guids of the APM Applications this instance belongs to.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EntityGuid",
         "kind": "SCALAR"
        }
       }
      }
     }
    },
    {
     "name": "details",
     "description": "Information of the application instance, such as host and language.",
     "type": {
      "name": "AgentEnvironmentApplicationInstanceDetails",
      "kind": "OBJECT"
     }
    },
    {
     "name": "loadedModules",
     "description": "A list of loaded modules of the application instance.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AgentEnvironmentApplicationLoadedModule",
        "kind": "OBJECT"
       }
      }
     }
    }
   ]
  },
  {
   "name": "SyntheticsCertCheckMonitorUpdateMutationResult",
   "description": "The result of a Cert Check monitor update mutation",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "errors",
     "description": "Errors that occurred during Cert Check monitor update mutation",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "name": "SyntheticsMonitorUpdateError",
        "kind": "OBJECT"
       }
      }
     }
    },
    {
     "name": "monitor",
     "description": "The resulting Cert Check monitor",
     "type": {
      "name": "SyntheticsCertCheckMonitor",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "CloudGcpFirebasestorageIntegration",
   "description": "Firebase Storage Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "DashboardLiveUrlError",
   "description": "Live URL error.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "description",
     "description": "Description of the error.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "type",
     "description": "Type of error.",
     "type": {
      "name": "DashboardLiveUrlErrorType",
      "kind": "ENUM"
     }
    }
   ]
  },
  {
   "name": "AlertsNotificationChannelMutation",
   "description": "Notification channel types that are available for create and update operations.",
   "kind": "UNION",
   "possibleTypes": [
    {
     "name": "AlertsEmailNotificationChannel",
     "kind": "OBJECT"
    },
    {
     "name": "AlertsOpsGenieNotificationChannel",
     "kind": "OBJECT"
    },
    {
     "name": "AlertsPagerDutyNotificationChannel",
     "kind": "OBJECT"
    },
    {
     "name": "AlertsSlackNotificationChannel",
     "kind": "OBJECT"
    },
    {
     "name": "AlertsVictorOpsNotificationChannel",
     "kind": "OBJECT"
    },
    {
     "name": "AlertsWebhookNotificationChannel",
     "kind": "OBJECT"
    },
    {
     "name": "AlertsXMattersNotificationChannel",
     "kind": "OBJECT"
    }
   ]
  },
  {
   "name": "Nr1CatalogNerdletInstallDirective",
   "description": "Information about a nerdlet install directive",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "nerdletId",
     "description": "The nerdlet ID used to guide the user through installation",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "nerdletState",
     "description": "The nerdlet state used to intialize the nerdlet",
     "type": {
      "name": "Nr1CatalogRawNerdletState",
      "kind": "SCALAR"
     }
    },
    {
     "name": "requiresAccount",
     "description": "Determines if an account selection needs to be made prior to installation",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "SyntheticMonitorType",
   "description": "The types of Synthetic Monitors.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "BROKEN_LINKS",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "BROWSER",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "CERT_CHECK",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SCRIPT_API",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SCRIPT_BROWSER",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SIMPLE",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "STEP_MONITOR",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "Nr1CatalogIcon",
   "description": "Information about an icon",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "url",
     "description": "The publicly accessible URL for the icon",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "Nr1CatalogInstallPlan",
   "description": "An installer that uses install plan steps",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "steps",
     "description": "The list of install plan steps necessary to execute the installation of the quickstart",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Nr1CatalogInstallPlanStep",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "type",
     "description": "The type of installer",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Nr1CatalogInstallerType",
       "kind": "ENUM"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "Nr1CatalogInstaller",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "AiNotificationsDestinationsResponse",
   "description": "Destinations result object",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "entities",
     "description": "Destination entities",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiNotificationsDestination",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "error",
     "description": "Error in destinations entities fetching",
     "type": {
      "name": "AiNotificationsResponseError",
      "kind": "OBJECT"
     }
    },
    {
     "name": "errors",
     "description": "Deprecated list of errors",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiNotificationsResponseError",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "nextCursor",
     "description": "Cursor to get the next batch of results",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "totalCount",
     "description": "Count of all destination entities",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AuthorizationManagementAuthenticationDomain",
   "description": "An \"authentication domain\" is a grouping of New Relic users governed by the same user management settings, like how they're provisioned (added and updated), how they're authenticated (logged in), session settings, and how user upgrades are managed.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "groups",
     "description": "container for groups enabling cursor based pagination",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AuthorizationManagementGroupSearch",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "cursor",
       "description": "the cursor from the previous request, to get   the next page",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "id",
       "description": "an optional list of ids to filter by",
       "type": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "ID",
          "kind": "SCALAR"
         }
        }
       }
      }
     ]
    },
    {
     "name": "id",
     "description": "a value that uniquely identifies this object",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "the name of the object",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AiIssuesKeyValues",
   "description": "Key to values type",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "key",
     "description": "key",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "value",
     "description": "A list of values",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      }
     }
    }
   ]
  },
  {
   "name": "DistributedTracingSpanClientType",
   "description": "Represents whether a span is a call to a datastore or an external service.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "DATASTORE",
     "description": "A span that represents a call to a datastore.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "EXTERNAL",
     "description": "A span that represents a call to an external service.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "EventsToMetricsErrorReason",
   "description": "General error categories.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "GENERAL",
     "description": "Other errors.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "INVALID_INPUT",
     "description": "Indicates some part of your submission was invalid.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "USER_NOT_AUTHORIZED",
     "description": "The user attempting to submit this rule is not authorized to do so.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "EdgeTracing",
   "description": "This field provides access to Tracing data.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "traceObservers",
     "description": "Lists the existing trace observers for this account family.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EdgeTraceObserver",
        "kind": "OBJECT"
       }
      }
     },
     "args": [
      {
       "name": "ids",
       "description": "Optional IDs of trace observers to return.",
       "type": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "Int",
          "kind": "SCALAR"
         }
        }
       }
      }
     ]
    }
   ]
  },
  {
   "name": "AiNotificationsSuggestionsResponse",
   "description": "Possible values for a field by its key",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "entities",
     "description": "List of Suggestion objects",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiNotificationsSuggestion",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "error",
     "description": "Error while fetching suggestions",
     "type": {
      "name": "AiNotificationsError",
      "kind": "UNION"
     }
    },
    {
     "name": "errors",
     "description": "Deprecated list of errors",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiNotificationsSuggestionError",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "nextCursor",
     "description": "Cursor to get the next batch of results",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "result",
     "description": "Suggestions request result",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiNotificationsResult",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "totalCount",
     "description": "Count of all suggestion entities, -1 if unavailable",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "CloudAzurePostgresqlflexibleIntegrationInput",
   "description": "PostgreSQL Flexible Server",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "resourceGroups",
     "description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "CloudAzureFirewallsIntegrationInput",
   "description": "Firewalls",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "resourceGroups",
     "description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "NerdStorageVaultResultStatus",
   "description": "Mutation result status.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "FAILURE",
     "description": "The mutation failed.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SUCCESS",
     "description": "The mutation succeeded.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "OrganizationRevokeSharedAccountResponse",
   "description": "The object that's returned from successfully revoking a shared account.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "sharedAccount",
     "description": "Information about the revoked shared account.",
     "type": {
      "name": "OrganizationSharedAccount",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "OrganizationAccountShareCollection",
   "description": "An organization's shared accounts, both given and received.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "items",
     "description": "An organization's shared accounts, both given and received.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "OrganizationAccountShare",
        "kind": "OBJECT"
       }
      }
     }
    },
    {
     "name": "nextCursor",
     "description": "an opaque cursor to supply with subsequent requests to get the next page of results, null if there are no more pages",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AlertsNrqlConditionSignal",
   "description": "Configuration that defines the signal that the NRQL condition will use to evaluate.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "aggregationDelay",
     "description": "How long we wait for data that belongs in each aggregation window. Depending\non your data, a longer delay may increase accuracy but delay notifications.\n\nUse `aggregationDelay` with the `EVENT_FLOW` and `CADENCE` methods. The maximum\ndelay is **1200 seconds** (20 minutes) when using `EVENT_FLOW` and **3600 seconds**\n(60 minutes) when using `CADENCE`. In both cases, the minimum delay is **0 seconds**\nand the default is **120 seconds**.",
     "type": {
      "name": "Seconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "aggregationMethod",
     "description": "The method that determines when we consider an aggregation window to be complete\nso that we can evaluate the signal for violations. Default is `EVENT_FLOW`.",
     "type": {
      "name": "AlertsSignalAggregationMethod",
      "kind": "ENUM"
     }
    },
    {
     "name": "aggregationTimer",
     "description": "How long we wait after each data point arrives to make sure we've processed\nthe whole batch.\n\nUse `aggregationTimer` with the `EVENT_TIMER` method. The timer value can range\nfrom **5 seconds** to **1200 seconds** (20 minutes); the default is **60 seconds**.",
     "type": {
      "name": "Seconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "aggregationWindow",
     "description": "Aggregation window controls the duration of the time window used to evaluate the NRQL query, in seconds.\nThe value must be at least 30 seconds, and no more than 15 minutes (900 seconds). Default is 60 seconds.",
     "type": {
      "name": "Seconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "evaluationDelay",
     "description": "How long we wait until the signal starts evaluating. The maximum delay is **7200 seconds** (120 minutes).",
     "type": {
      "name": "Seconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "evaluationOffset",
     "description": "Deprecated; superseded by `signal.aggregationMethod` with `signal.aggregationDelay` or `signal.aggregationTimer`.\n\nBy default, we evaluate the NRQL query in one-minute time windows. The start time depends on the value you select in the NRQL condition's `evaluationOffset`. Evaluation offset cannot be greater than 60 minutes.\n\nThis value is the number of time windows we look back at the aggregated data.\n\nExample: With an `evaluationOffset` of 3 and a 1 minute aggregation window, the NRQL time window applied to your query will be:\n\n`SINCE 3 minutes ago UNTIL 2 minutes ago`",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "fillOption",
     "description": "Option that determines the type of value that should be used to fill gaps (empty windows). Defaults to STATIC.\n\nOutlier NRQL conditions may only use NONE.",
     "type": {
      "name": "AlertsFillOption",
      "kind": "ENUM"
     }
    },
    {
     "name": "fillValue",
     "description": "If using the static fill option, this the value used for filling. Defaults to 0.",
     "type": {
      "name": "Float",
      "kind": "SCALAR"
     }
    },
    {
     "name": "slideBy",
     "description": "This setting gathers data in overlapping time windows to smooth the chart line, making it easier to spot trends.\n\nNot used for Outlier NRQL conditions.",
     "type": {
      "name": "Seconds",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "CloudGcpAlloydbIntegrationInput",
   "description": "AlloyDB",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "CloudKinesisFirehoseIntegration",
   "description": "Kinesis Firehose Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "MetricNormalizationRuleAction",
   "description": "The different rule actions.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "DENY_NEW_METRICS",
     "description": "Deny new metrics.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "IGNORE",
     "description": "Ignore matching metrics.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "REPLACE",
     "description": "Replace metrics.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AiDecisionsRelativeStartsWithInput",
   "description": "Input type for RelativeStartsWith expression",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "contained",
     "description": "Incident selector to be used in comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsIncidentObjectInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "container",
     "description": "Incident selector to be used in comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsIncidentObjectInput",
       "kind": "INPUT_OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "MultiTenantIdentityUserGroupIdInput",
   "description": "Filters by group id",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "eq",
     "description": "A group id",
     "type": {
      "name": "ID",
      "kind": "SCALAR"
     }
    },
    {
     "name": "in",
     "description": "A list of group IDs",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "not",
     "description": "Filter users not in group",
     "type": {
      "name": "MultiTenantIdentityUserNotGroupIdInput",
      "kind": "INPUT_OBJECT"
     }
    }
   ]
  },
  {
   "name": "NerdStorageVaultDeleteSecretResult",
   "description": "Result of a mutation.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "errors",
     "description": "Any errors that happend during the mutation.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "NerdStorageVaultResultError",
        "kind": "OBJECT"
       }
      }
     }
    },
    {
     "name": "status",
     "description": "The status of the mutation.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "NerdStorageVaultResultStatus",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "ApiAccessDeleteInput",
   "description": "The input to delete keys.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "ingestKeyIds",
     "description": "A list of the ingest key `id`s that you want to delete.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "userKeyIds",
     "description": "A list of the user key `id`s that you want to delete.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "Nr1CatalogQuickstart",
   "description": "Information about the quickstart",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "featured",
     "description": "Determines if this is a featured quickstart",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The unique identifier for the quickstart",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metadata",
     "description": "Metadata associated with the quickstart",
     "type": {
      "name": "Nr1CatalogQuickstartMetadata",
      "kind": "OBJECT"
     }
    },
    {
     "name": "sourceUrl",
     "description": "Specifies the URL where the source definition for the quickstart can be found",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "supportLevel",
     "description": "Level of support expected for the quickstart",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Nr1CatalogSupportLevel",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "EventsToMetricsCreateRuleFailure",
   "description": "Error details about the events to metrics rule that failed to be created and why.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "errors",
     "description": "Information about why the create failed.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EventsToMetricsError",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "submitted",
     "description": "Input information about a submitted rule that was unable to be created.",
     "type": {
      "name": "EventsToMetricsCreateRuleSubmission",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "UserManagementTypeInput",
   "description": "Available filtering types for user type",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "eq",
     "description": "A user type",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "UserManagementTypeEnum",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "OrganizationUpdateSharedAccountInput",
   "description": "Attributes for updating an account share.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "id",
     "description": "The id of the account share to be updated",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "limitingRoleId",
     "description": "The id of the limiting role to be updated",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "CloudS3Integration",
   "description": "S3 Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "fetchExtendedInventory",
     "description": "Determine if extra inventory data be collected or not. May affect total data collection time and contribute to the Cloud provider API rate limit.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "fetchTags",
     "description": "Specify if tags should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "tagKey",
     "description": "Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "tagValue",
     "description": "Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "EventsToMetricsCreateRuleInput",
   "description": "Details needed to create an events to metrics conversion rule.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "accountId",
     "description": "The account where the events exist and the metrics will be put.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "description",
     "description": "Provides additional information about the rule.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The name of the rule. This must be unique within a given account.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "nrql",
     "description": "Explains how to create one or more metrics from events.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "DashboardUpdatePageError",
   "description": "Expected errors that can be returned by updatePage operation.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "description",
     "description": "Error description.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "type",
     "description": "Error type.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "DashboardUpdatePageErrorType",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "CloudAwsMediapackagevodIntegration",
   "description": "MediaPackage VOD Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "CloudLambdaIntegrationInput",
   "description": "AWS Lambda",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "fetchTags",
     "description": "Specify if tags should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "tagKey",
     "description": "Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "tagValue",
     "description": "Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AiNotificationsDestinationUpdate",
   "description": "Destination update object",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "active",
     "description": "active",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "auth",
     "description": "auth",
     "type": {
      "name": "AiNotificationsCredentialsInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "disableAuth",
     "description": "disableAuth",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "name",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "properties",
     "description": "properties",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AiNotificationsPropertyInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    },
    {
     "name": "secureUrl",
     "description": "secureUrl",
     "type": {
      "name": "AiNotificationsSecureUrlUpdate",
      "kind": "INPUT_OBJECT"
     }
    }
   ]
  },
  {
   "name": "NerdpackAllowListInput",
   "description": "Input data for allow list handling.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "accountIds",
     "description": "List of accounts that will be allow to subscribe. They must belong to the user's authorized account list.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     }
    }
   ]
  },
  {
   "name": "CloudGcpInterconnectIntegration",
   "description": "Interconnect Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "SortBy",
   "description": "The `SortBy` enum is for designating sort order.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "ASC",
     "description": "Sort in ascending order.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "DESC",
     "description": "Sort in descending order.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "CloudAzureIntegrationsInput",
   "description": "List of integrations",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "azureApimanagement",
     "description": "Api Management integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudAzureApimanagementIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "azureAppgateway",
     "description": "App Gateway integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudAzureAppgatewayIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "azureAppservice",
     "description": "App Service integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudAzureAppserviceIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "azureContainers",
     "description": "Containers integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudAzureContainersIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "azureCosmosdb",
     "description": "Cosmos DB integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudAzureCosmosdbIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "azureCostmanagement",
     "description": "Cost Management integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudAzureCostmanagementIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "azureDatafactory",
     "description": "Data Factory integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudAzureDatafactoryIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "azureEventhub",
     "description": "Event Hub integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudAzureEventhubIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "azureExpressroute",
     "description": "Express Route integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudAzureExpressrouteIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "azureFirewalls",
     "description": "Firewalls integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudAzureFirewallsIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "azureFrontdoor",
     "description": "Front Door integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudAzureFrontdoorIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "azureFunctions",
     "description": "Functions integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudAzureFunctionsIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "azureKeyvault",
     "description": "Key Vault integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudAzureKeyvaultIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "azureLoadbalancer",
     "description": "Load Balancer integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudAzureLoadbalancerIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "azureLogicapps",
     "description": "Logic Apps integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudAzureLogicappsIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "azureMachinelearning",
     "description": "Machine Learning integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudAzureMachinelearningIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "azureMariadb",
     "description": "Database for MariaDB integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudAzureMariadbIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "azureMonitor",
     "description": "Azure Monitor metrics integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudAzureMonitorIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "azureMysql",
     "description": "Database for MySQL integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudAzureMysqlIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "azureMysqlflexible",
     "description": "MySQL Flexible Server integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudAzureMysqlflexibleIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "azurePostgresql",
     "description": "Database for PostgreSQL integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudAzurePostgresqlIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "azurePostgresqlflexible",
     "description": "PostgreSQL Flexible Server integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudAzurePostgresqlflexibleIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "azurePowerbidedicated",
     "description": "Power BI Dedicated integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudAzurePowerbidedicatedIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "azureRediscache",
     "description": "Redis Cache integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudAzureRediscacheIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "azureServicebus",
     "description": "Service Bus integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudAzureServicebusIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "azureSql",
     "description": "SQL Database integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudAzureSqlIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "azureSqlmanaged",
     "description": "SQL Managed Instances integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudAzureSqlmanagedIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "azureStorage",
     "description": "Storage integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudAzureStorageIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "azureVirtualmachine",
     "description": "Virtual machine scale sets integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudAzureVirtualmachineIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "azureVirtualnetworks",
     "description": "Virtual Network integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudAzureVirtualnetworksIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "azureVms",
     "description": "Virtual Machines integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudAzureVmsIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "azureVpngateways",
     "description": "VPN Gateways integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudAzureVpngatewaysIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "AgentEnvironmentAccountApplicationLoadedModulesResults",
   "description": "Results for loaded modules search. This list is paginated. Use the cursor to go through all the available results.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "nextCursor",
     "description": "If nextCursor is a String value, set it to the cursor input field while searching in order to get the next page of results.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "results",
     "description": "Results of the search.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AgentEnvironmentAccountApplicationLoadedModules",
        "kind": "OBJECT"
       }
      }
     }
    }
   ]
  },
  {
   "name": "ApiAccessKeySearchQuery",
   "description": "Parameters by which to filter the search.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "scope",
     "description": "Criteria by which to narrow the scope of keys to be returned.",
     "type": {
      "name": "ApiAccessKeySearchScope",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "types",
     "description": "A list of key types to be included in the search. If no types are provided, all types will be returned by default.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "name": "ApiAccessKeyType",
        "kind": "ENUM"
       }
      }
     }
    }
   ]
  },
  {
   "name": "MultiTenantAuthorizationGrantFilterInputExpression",
   "description": "Provides all the available filters on a grant",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "authenticationDomainId",
     "description": "The authentication domain id of the grant",
     "type": {
      "name": "MultiTenantAuthorizationGrantAuthenticationDomainIdInputFilter",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "groupId",
     "description": "The group id of the grant",
     "type": {
      "name": "MultiTenantAuthorizationGrantGroupIdInputFilter",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "id",
     "description": "The id of the grant",
     "type": {
      "name": "MultiTenantAuthorizationGrantIdInputFilter",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "organizationId",
     "description": "The organization id the grant belongs to",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "MultiTenantAuthorizationGrantOrganizationIdInputFilter",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "roleId",
     "description": "The role id of the grant",
     "type": {
      "name": "MultiTenantAuthorizationGrantRoleIdInputFilter",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "scopeId",
     "description": "the scope id of the grant",
     "type": {
      "name": "MultiTenantAuthorizationGrantScopeIdInputFilter",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "scopeType",
     "description": "The scope type of the grant",
     "type": {
      "name": "MultiTenantAuthorizationGrantScopeTypeInputFilter",
      "kind": "INPUT_OBJECT"
     }
    }
   ]
  },
  {
   "name": "AgentApplicationSettingsNetworkAlias",
   "description": "A configuration setting that maps hosts to alias names for grouping and identification purposes.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "alias",
     "description": "An alternative name that can be used to reference the hostnames.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "hosts",
     "description": "A list of hostnames to associate with an alias.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    }
   ]
  },
  {
   "name": "AlertsNotificationChannelCreateResponse",
   "description": "The response for creating a notification channel.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "error",
     "description": "Error.",
     "type": {
      "name": "AlertsNotificationChannelCreateError",
      "kind": "OBJECT"
     }
    },
    {
     "name": "notificationChannel",
     "description": "Notification channel.",
     "type": {
      "name": "AlertsNotificationChannelMutation",
      "kind": "UNION"
     }
    }
   ]
  },
  {
   "name": "CloudAzureVirtualmachineIntegrationInput",
   "description": "Virtual machine scale sets",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "resourceGroups",
     "description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "SuggestedAnomalyBasedNrqlQuery",
   "description": "A query suggestion based on analysis of events within a specific anomalous time\nrange vs. nearby events outside of that time range.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "anomaly",
     "description": "Information about the anomaly upon which this suggestion is based",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SuggestedNrqlQueryAnomaly",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "nrql",
     "description": "The NRQL string to run for the suggested query",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "title",
     "description": "A human-readable title describing what the query shows",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "SuggestedNrqlQuery",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "OrganizationOrganizationGroupWrapper",
   "description": "A customers organization groups",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "items",
     "description": "A customers organization groups",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "OrganizationOrganizationGroup",
        "kind": "OBJECT"
       }
      }
     }
    },
    {
     "name": "nextCursor",
     "description": "an opaque cursor to supply with subsequent requests to get the next page of results, null if there are no more pages",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "SyntheticsOnceMonitorDowntimeMutationResult",
   "description": "Monitor downtime object returned to the customer for a downtime run once",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "accountId",
     "description": "The account ID associated with the monitor downtime",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "endTime",
     "description": "The date and time in which the monitor downtime will end",
     "type": {
      "name": "NaiveDateTime",
      "kind": "SCALAR"
     }
    },
    {
     "name": "guid",
     "description": "The entity GUID associated with the monitor downtime",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    },
    {
     "name": "monitorGuids",
     "description": "The monitor GUIDs associated with the monitor downtime",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityGuid",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "The name of the monitor downtime",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "startTime",
     "description": "The date and time in which the monitor downtime will begin",
     "type": {
      "name": "NaiveDateTime",
      "kind": "SCALAR"
     }
    },
    {
     "name": "timezone",
     "description": "The timezone the time values will be in",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "InfrastructureHostSummaryData",
   "description": "Summary statistics about the Infra Host.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "cpuUtilizationPercent",
     "description": "Total CPU utilization as a percentage.",
     "type": {
      "name": "Float",
      "kind": "SCALAR"
     }
    },
    {
     "name": "diskUsedPercent",
     "description": "The cumulative disk fullness percentage.",
     "type": {
      "name": "Float",
      "kind": "SCALAR"
     }
    },
    {
     "name": "memoryUsedPercent",
     "description": "Total memory utilization as a percentage.",
     "type": {
      "name": "Float",
      "kind": "SCALAR"
     }
    },
    {
     "name": "networkReceiveRate",
     "description": "The number of bytes per second received during the sampling period.",
     "type": {
      "name": "Float",
      "kind": "SCALAR"
     }
    },
    {
     "name": "networkTransmitRate",
     "description": "The number of bytes sent per second during the sampling period.",
     "type": {
      "name": "Float",
      "kind": "SCALAR"
     }
    },
    {
     "name": "servicesCount",
     "description": "Number of services running on the host.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "SyntheticsSimpleMonitorUpdateMutationResult",
   "description": "The result of a Simple (ping) monitor update mutation",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "errors",
     "description": "Errors that occurred during Simple (ping) monitor update mutation",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "name": "SyntheticsMonitorUpdateError",
        "kind": "OBJECT"
       }
      }
     }
    },
    {
     "name": "monitor",
     "description": "The resulting Simple (ping) monitor",
     "type": {
      "name": "SyntheticsSimpleMonitor",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "DistributedTracingEntityTracingSummary",
   "description": "Details tracing summary data for the provided `EntityGuid` that occurred during the provided `startTime` and `endTime`",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "errorTraceCount",
     "description": "The number of traces where this entity produced an error",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "percentOfAllErrorTraces",
     "description": "The percentage of error traces produced by this entity compared to all error traces in the system",
     "type": {
      "name": "Float",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "CloudRdsIntegrationInput",
   "description": "Amazon Relation Database Service (RDS)",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "fetchTags",
     "description": "Specify if tags should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "tagKey",
     "description": "Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "tagValue",
     "description": "Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "CloudAwsXrayIntegration",
   "description": "X-Ray Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "AlertsMutingRuleStatus",
   "description": "The status of a MutingRule based on whether it is Enabled and has a Schedule",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "ACTIVE",
     "description": "Muting is enabled and active.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "ENDED",
     "description": "Muting is enabled, but no longer active (there's no future schedule).",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "INACTIVE",
     "description": "Muting is disabled.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SCHEDULED",
     "description": "Muting is enabled but not active yet (there's a future schedule).",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "ApmExternalServiceSummaryData",
   "description": "Summary statistics about an External Service called by an APM App.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "responseTimeAverage",
     "description": "The average response time for external service calls in seconds.",
     "type": {
      "name": "Seconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "throughput",
     "description": "The number of external service calls per minute.",
     "type": {
      "name": "Float",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "ApmDatabaseInstanceEntity",
   "description": "A database instance seen by an APM Application",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "account",
     "type": {
      "name": "AccountOutline",
      "kind": "OBJECT"
     }
    },
    {
     "name": "accountId",
     "description": "The New Relic account ID associated with this entity.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "alertSeverity",
     "description": "The current alerting severity of the entity.",
     "type": {
      "name": "EntityAlertSeverity",
      "kind": "ENUM"
     }
    },
    {
     "name": "alertViolations",
     "description": "Violations on the entity that were open during the specified time window. This will return up to 500 violations - if there are more in the time window selected, you must narrow the time window or look at fewer entities.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityAlertViolation",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "endTime",
       "description": "End of time window for violations.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EpochMilliseconds",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "startTime",
       "description": "Start of time window for violations.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EpochMilliseconds",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "deploymentSearch",
     "description": "Retrieve the deployment event(s). Ordered by timestamp DESC.",
     "type": {
      "name": "ChangeTrackingDeploymentSearchResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "filter",
       "description": "Contains the set of filters to apply to the query.",
       "type": {
        "name": "ChangeTrackingSearchFilter",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "domain",
     "description": "The entity's domain",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "entityType",
     "description": "A value representing the combination of the entity's domain and type.",
     "type": {
      "name": "EntityType",
      "kind": "ENUM"
     }
    },
    {
     "name": "firstIndexedAt",
     "description": "The date of last time the entity has updated any of its fields.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "goldenMetrics",
     "description": "The list of golden metrics for a specific entity",
     "type": {
      "name": "EntityGoldenContextScopedGoldenMetrics",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden metrics",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "timeWindow",
       "description": "Time range to apply to the golden metric NRQL query result field",
       "type": {
        "name": "EntityGoldenNrqlTimeWindowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "goldenTags",
     "description": "The list of golden tags for a specific entityType.",
     "type": {
      "name": "EntityGoldenContextScopedGoldenTags",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden tags",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "guid",
     "description": "A unique entity identifier.",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    },
    {
     "name": "host",
     "description": "The host the database instance is running on.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "indexedAt",
     "description": "The time the entity was indexed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "lastReportingChangeAt",
     "description": "The last time the entity's reporting status changed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The name of this entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nerdStorage",
     "type": {
      "name": "NerdStorageEntityScope",
      "kind": "OBJECT"
     }
    },
    {
     "name": "nrdbQuery",
     "description": "Make an `Entity` scoped query to NRDB with a NRQL string.\n\nA relevant `WHERE` clause will be added to your query to scope data to the entity in question.\n\nSee the [NRQL Docs](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/nrql-resources/nrql-syntax-components-functions) for more information about generating a query string.",
     "type": {
      "name": "NrdbResultContainer",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "async",
       "description": "When true, the query will begin asynchronous resolution after the allotted `timeout`. Include `queryProgress` fields in your GraphQL query to receive the information you will need to poll the `nrdbQueryProgress` field for the results of your async NRQL query.\n\nSee [this page](https://docs.newrelic.com/docs/apis/nerdgraph/examples/async-queries-nrql-tutorial) for additional asynchronous query documentation.",
       "type": {
        "name": "Boolean",
        "kind": "SCALAR"
       },
       "defaultValue": "false"
      },
      {
       "name": "nrql",
       "description": "The [NRQL](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/nrql-resources/nrql-syntax-components-functions) query string.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Nrql",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "options",
       "description": "Additional options for NRQL queries.",
       "type": {
        "name": "NrqlQueryOptions",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "timeout",
       "description": "The timeout we will apply to the NRQL Query. The value will be clamped to between 5 and 120 seconds and defaults to 5 seconds.\n\nFor `async` queries, if the query is still incomplete after this amount of time, resolution will become asynchronous and return `queryProgress` data if requested.",
       "type": {
        "name": "Seconds",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "nrdbQueryProgress",
     "description": "Poll for the results of a previously-executed asychronous NRDB query.\n\nThe `queryId` is available in the `queryProgress` data returned by the original asynchronous query.\n\nSee [this page](https://docs.newrelic.com/docs/apis/nerdgraph/examples/async-queries-nrql-tutorial) for additional asynchronous query documentation.",
     "type": {
      "name": "NrdbResultContainer",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "queryId",
       "description": "A token for retrieving the results of a previously executed asynchronous query.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "permalink",
     "description": "The url to the entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "portOrPath",
     "description": "The port or path the database instance is running on. ex: `3306` | `/tmp/mysql.sock`",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "recentAlertViolations",
     "description": "Recent violations on the entity.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityAlertViolation",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "count",
       "description": "The desired number of alert violations to be returned.",
       "type": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "relatedEntities",
     "description": "Related entities result with optional filtering.",
     "type": {
      "name": "EntityRelationshipRelatedEntitiesResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "cursor",
       "description": "The cursor to fetch paginated results.",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "filter",
       "description": "Apply an optional filter to the related entities.",
       "type": {
        "name": "EntityRelationshipEdgeFilter",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "limit",
       "description": "A limit to apply to the number of relationships returned. Note: this option can only lower the default limits (2000 relationships).",
       "type": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "relationships",
     "description": "A list of the entities' relationships.\n\nFor more information, visit [our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/graphql-relationships-api-tutorial).",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityRelationship",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "endTime",
       "description": "Return relationships as they existed in the past. The duration of the time window queried is fixed at 75 minutes.",
       "type": {
        "name": "EpochMilliseconds",
        "kind": "SCALAR"
       }
      },
      {
       "name": "filter",
       "description": "Apply an optional filter to the relationships.",
       "type": {
        "name": "EntityRelationshipFilter",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "reporting",
     "description": "The reporting status of the entity. If New Relic is successfully collecting data from your application, this will be true.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "serviceLevel",
     "description": "The service level defined for the entity.",
     "type": {
      "name": "ServiceLevelDefinition",
      "kind": "OBJECT"
     }
    },
    {
     "name": "tags",
     "description": "The tags applied to the entity.\n\nFor details on tags, as well as query and mutation examples, visit [our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/graphql-tagging-api-tutorial).",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityTag",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "tagsWithMetadata",
     "description": "The tags applied to the entity with their metadata.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityTagWithMetadata",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "tracingSummary",
     "description": "Look up Distributed Tracing summary data for the selected `EntityGuid`",
     "type": {
      "name": "DistributedTracingEntityTracingSummary",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "timeWindow",
       "description": "The start and end of the tracing data. Defaults to the last 30 minutes",
       "type": {
        "name": "TimeWindowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "type",
     "description": "The entity's type",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "vendor",
     "description": "The type of database. ex: `Postgres` | `Redis`",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ],
   "interfaces": [
    {
     "name": "AlertableEntity",
     "kind": "INTERFACE"
    },
    {
     "name": "Entity",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "WorkloadRemainingEntitiesRuleInput",
   "description": "The input object used to represent a remaining entities rule.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "rollup",
     "description": "The input object used to represent a rollup strategy.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "WorkloadRemainingEntitiesRuleRollupInput",
       "kind": "INPUT_OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "WorkloadRollupRuleStatusResult",
   "description": "A rollup rule that was involved in the calculation of the workload status.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "rollupRuleDetails",
     "description": "Represents the details of a rollup rule.",
     "type": {
      "name": "WorkloadRollupRuleDetails",
      "kind": "OBJECT"
     }
    },
    {
     "name": "source",
     "description": "Indicates where the status value derives from.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "WorkloadStatusSource",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "value",
     "description": "The status of a rollup rule.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "WorkloadStatusValue",
       "kind": "ENUM"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "WorkloadStatusResult",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "CloudGcpFunctionsIntegrationInput",
   "description": "Google Cloud Functions",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "SyntheticsSimpleBrowserMonitorAdvancedOptions",
   "description": "The advanced options available for a Simple Browser monitor",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "customHeaders",
     "description": "Custom headers to use in monitor job",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "SyntheticsCustomHeader",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "deviceEmulation",
     "description": "Emulate a device",
     "type": {
      "name": "SyntheticsDeviceEmulation",
      "kind": "OBJECT"
     }
    },
    {
     "name": "enableScreenshotOnFailureAndScript",
     "description": "Capture a screenshot during job execution",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "responseValidationText",
     "description": "Validation text for monitor to search for at given URI",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "useTlsValidation",
     "description": "Monitor should validate SSL certificate chain",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AiIssuesIssueMutingState",
   "description": "Issue muting state",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "FULLY_MUTED",
     "description": "Issue is muted",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NOT_MUTED",
     "description": "Issue is not muted",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "PARTIALLY_MUTED",
     "description": "Issue is partially muted",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AiWorkflowsNrqlUpdateEnrichmentInput",
   "description": "NRQL type update enrichment input object",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "configuration",
     "description": "configuration",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiWorkflowsNrqlConfigurationInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "id",
     "description": "id",
     "type": {
      "name": "ID",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "name",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AiNotificationsDestinationTestResponse",
   "description": "Result of a connection test",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "details",
     "description": "Extra details (if available)",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "error",
     "description": "Test response error",
     "type": {
      "name": "AiNotificationsError",
      "kind": "UNION"
     }
    },
    {
     "name": "errors",
     "description": "Deprecated list of errors",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiNotificationsError",
         "kind": "UNION"
        }
       }
      }
     }
    },
    {
     "name": "result",
     "description": "Test result - success or failure",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiNotificationsResult",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "AiWorkflowsUpdateErrorType",
   "description": "Type of update error",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "CHANNEL_NOT_FOUND",
     "description": "We couldn't find a channel with the given id",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "DUPLICATE",
     "description": "A workflow with this name already exists",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "INVALID_PARAMETER",
     "description": "One or more of the parameters you provided are incorrect",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "MISSING_ENTITLEMENT",
     "description": "This account is missing the required entitlement(s) to perform this action",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "UNAUTHORIZED_ACCOUNT",
     "description": "This account in not authorized to perform this action",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "UNSUPPORTED_CHANNEL_TYPE",
     "description": "The given channel id represents an unsupported channel type",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "VALIDATION_ERROR",
     "description": "The parameter provided does not have a valid form",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "CloudAwsTransitgatewayIntegrationInput",
   "description": "Transit Gateway",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AlertsViolationTimeLimit",
   "description": "Duration after which a violation will automatically close.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "EIGHT_HOURS",
     "description": "Violation will close after eight hours.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "FOUR_HOURS",
     "description": "Violation will close after four hours.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NON_MATCHABLE_LIMIT_VALUE",
     "description": "Time limit specified does not match available options.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "ONE_HOUR",
     "description": "Violation will close after one hour.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "THIRTY_DAYS",
     "description": "Violation will close after thirty days.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "TWELVE_HOURS",
     "description": "Violation will close after twelve hours.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "TWENTY_FOUR_HOURS",
     "description": "Violation will close after twenty four hours.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "TWO_HOURS",
     "description": "Violation will close after two hours.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "WorkloadEntitySearchQuery",
   "description": "An entity search query used to dynamically retrieve a group of entities.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The moment when the object was created, represented in milliseconds since the Unix epoch.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochMilliseconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "createdBy",
     "description": "The user who created the entity search query.",
     "type": {
      "name": "UserReference",
      "kind": "OBJECT"
     }
    },
    {
     "name": "id",
     "description": "The unique identifier of the entity search query.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "query",
     "description": "The entity search query that is used to perform the search of a group of entities.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "updatedAt",
     "description": "The moment when the object was last updated, represented in milliseconds since the Unix epoch.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "MultiTenantAuthorizationGrantScopeEnum",
   "description": "Provides the types of grant scopes available",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "ACCOUNT",
     "description": "Grant scoped to an account",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "GROUP",
     "description": "Grant scoped to a group",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "ORGANIZATION",
     "description": "Grant scoped to an organization",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "DashboardUpdateErrorType",
   "description": "Expected error types that can be returned by update operation.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "FORBIDDEN_OPERATION",
     "description": "User is not allowed to execute the operation.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "INVALID_INPUT",
     "description": "Invalid input error.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "SecureCredentialEntity",
   "description": "A secure credential entity.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "account",
     "type": {
      "name": "AccountOutline",
      "kind": "OBJECT"
     }
    },
    {
     "name": "accountId",
     "description": "The New Relic account ID associated with this entity.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "alertSeverity",
     "description": "The current alerting severity of the entity.",
     "type": {
      "name": "EntityAlertSeverity",
      "kind": "ENUM"
     }
    },
    {
     "name": "alertViolations",
     "description": "Violations on the entity that were open during the specified time window. This will return up to 500 violations - if there are more in the time window selected, you must narrow the time window or look at fewer entities.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityAlertViolation",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "endTime",
       "description": "End of time window for violations.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EpochMilliseconds",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "startTime",
       "description": "Start of time window for violations.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EpochMilliseconds",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "deploymentSearch",
     "description": "Retrieve the deployment event(s). Ordered by timestamp DESC.",
     "type": {
      "name": "ChangeTrackingDeploymentSearchResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "filter",
       "description": "Contains the set of filters to apply to the query.",
       "type": {
        "name": "ChangeTrackingSearchFilter",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "description",
     "description": "The description of the entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "domain",
     "description": "The entity's domain",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "entityType",
     "description": "A value representing the combination of the entity's domain and type.",
     "type": {
      "name": "EntityType",
      "kind": "ENUM"
     }
    },
    {
     "name": "firstIndexedAt",
     "description": "The date of last time the entity has updated any of its fields.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "goldenMetrics",
     "description": "The list of golden metrics for a specific entity",
     "type": {
      "name": "EntityGoldenContextScopedGoldenMetrics",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden metrics",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "timeWindow",
       "description": "Time range to apply to the golden metric NRQL query result field",
       "type": {
        "name": "EntityGoldenNrqlTimeWindowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "goldenTags",
     "description": "The list of golden tags for a specific entityType.",
     "type": {
      "name": "EntityGoldenContextScopedGoldenTags",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden tags",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "guid",
     "description": "A unique entity identifier.",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    },
    {
     "name": "indexedAt",
     "description": "The time the entity was indexed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "lastReportingChangeAt",
     "description": "The last time the entity's reporting status changed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The name of this entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nerdStorage",
     "type": {
      "name": "NerdStorageEntityScope",
      "kind": "OBJECT"
     }
    },
    {
     "name": "nrdbQuery",
     "description": "Make an `Entity` scoped query to NRDB with a NRQL string.\n\nA relevant `WHERE` clause will be added to your query to scope data to the entity in question.\n\nSee the [NRQL Docs](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/nrql-resources/nrql-syntax-components-functions) for more information about generating a query string.",
     "type": {
      "name": "NrdbResultContainer",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "async",
       "description": "When true, the query will begin asynchronous resolution after the allotted `timeout`. Include `queryProgress` fields in your GraphQL query to receive the information you will need to poll the `nrdbQueryProgress` field for the results of your async NRQL query.\n\nSee [this page](https://docs.newrelic.com/docs/apis/nerdgraph/examples/async-queries-nrql-tutorial) for additional asynchronous query documentation.",
       "type": {
        "name": "Boolean",
        "kind": "SCALAR"
       },
       "defaultValue": "false"
      },
      {
       "name": "nrql",
       "description": "The [NRQL](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/nrql-resources/nrql-syntax-components-functions) query string.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Nrql",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "options",
       "description": "Additional options for NRQL queries.",
       "type": {
        "name": "NrqlQueryOptions",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "timeout",
       "description": "The timeout we will apply to the NRQL Query. The value will be clamped to between 5 and 120 seconds and defaults to 5 seconds.\n\nFor `async` queries, if the query is still incomplete after this amount of time, resolution will become asynchronous and return `queryProgress` data if requested.",
       "type": {
        "name": "Seconds",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "nrdbQueryProgress",
     "description": "Poll for the results of a previously-executed asychronous NRDB query.\n\nThe `queryId` is available in the `queryProgress` data returned by the original asynchronous query.\n\nSee [this page](https://docs.newrelic.com/docs/apis/nerdgraph/examples/async-queries-nrql-tutorial) for additional asynchronous query documentation.",
     "type": {
      "name": "NrdbResultContainer",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "queryId",
       "description": "A token for retrieving the results of a previously executed asynchronous query.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "permalink",
     "description": "The url to the entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "recentAlertViolations",
     "description": "Recent violations on the entity.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityAlertViolation",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "count",
       "description": "The desired number of alert violations to be returned.",
       "type": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "relatedEntities",
     "description": "Related entities result with optional filtering.",
     "type": {
      "name": "EntityRelationshipRelatedEntitiesResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "cursor",
       "description": "The cursor to fetch paginated results.",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "filter",
       "description": "Apply an optional filter to the related entities.",
       "type": {
        "name": "EntityRelationshipEdgeFilter",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "limit",
       "description": "A limit to apply to the number of relationships returned. Note: this option can only lower the default limits (2000 relationships).",
       "type": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "relationships",
     "description": "A list of the entities' relationships.\n\nFor more information, visit [our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/graphql-relationships-api-tutorial).",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityRelationship",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "endTime",
       "description": "Return relationships as they existed in the past. The duration of the time window queried is fixed at 75 minutes.",
       "type": {
        "name": "EpochMilliseconds",
        "kind": "SCALAR"
       }
      },
      {
       "name": "filter",
       "description": "Apply an optional filter to the relationships.",
       "type": {
        "name": "EntityRelationshipFilter",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "reporting",
     "description": "The reporting status of the entity. If New Relic is successfully collecting data from your application, this will be true.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "secureCredentialId",
     "description": "The domain-specific identifier for the entity.",
     "type": {
      "name": "ID",
      "kind": "SCALAR"
     }
    },
    {
     "name": "secureCredentialSummary",
     "description": "Summary statistics for the Synthetic Monitor Secure Credential.",
     "type": {
      "name": "SecureCredentialSummaryData",
      "kind": "OBJECT"
     }
    },
    {
     "name": "serviceLevel",
     "description": "The service level defined for the entity.",
     "type": {
      "name": "ServiceLevelDefinition",
      "kind": "OBJECT"
     }
    },
    {
     "name": "tags",
     "description": "The tags applied to the entity.\n\nFor details on tags, as well as query and mutation examples, visit [our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/graphql-tagging-api-tutorial).",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityTag",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "tagsWithMetadata",
     "description": "The tags applied to the entity with their metadata.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityTagWithMetadata",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "tracingSummary",
     "description": "Look up Distributed Tracing summary data for the selected `EntityGuid`",
     "type": {
      "name": "DistributedTracingEntityTracingSummary",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "timeWindow",
       "description": "The start and end of the tracing data. Defaults to the last 30 minutes",
       "type": {
        "name": "TimeWindowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "type",
     "description": "The entity's type",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "updatedAt",
     "description": "The time at which the entity was last updated.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    }
   ],
   "interfaces": [
    {
     "name": "AlertableEntity",
     "kind": "INTERFACE"
    },
    {
     "name": "Entity",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "WorkloadUpdateRegularRuleInput",
   "description": "The input object used to represent a rule.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "entityGuids",
     "description": "A list of entity GUIDs composing the rule.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "entitySearchQueries",
     "description": "A list of entity search queries used to retrieve the groups of entities that compose the rule.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "WorkloadUpdateCollectionEntitySearchQueryInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    },
    {
     "name": "id",
     "description": "The unique identifier of the rule to be updated. If not provided, a new rule is created.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "rollup",
     "description": "The input object used to represent a roll-up strategy.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "WorkloadRollupInput",
       "kind": "INPUT_OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "AiDecisionsRelativeContainsInput",
   "description": "Input type for RelativeContains expression",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "contained",
     "description": "Incident selector to be used in comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsIncidentObjectInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "container",
     "description": "Incident selector to be used in comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsIncidentObjectInput",
       "kind": "INPUT_OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "CloudKinesisFirehoseIntegrationInput",
   "description": "Amazon Kinesis Data Firehose",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "EntityDeleteError",
   "description": "Type that wraps the errors from a entity delete operation.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "guid",
     "description": "Guid related to the error.",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    },
    {
     "name": "message",
     "description": "User-friendly message describing the error.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "type",
     "description": "Describes all potential error types that a delete operation might return.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EntityDeleteErrorType",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "NerdStorageVaultWriteSecretResult",
   "description": "Information about the result of the write secret mutation",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "errors",
     "description": "Any errors that happend during the mutation.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "NerdStorageVaultResultError",
        "kind": "OBJECT"
       }
      }
     }
    },
    {
     "name": "status",
     "description": "The status of the mutation.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "NerdStorageVaultResultStatus",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "UserManagementOrganizationUserType",
   "description": "A \"user type\" is what determines the set of New Relic capabilities a user can theoretically access.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "displayName",
     "description": "the name of the object",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "a value that uniquely identifies this object",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "MultiTenantAuthorizationGrantAuthenticationDomainIdInputFilter",
   "description": "Filters grants by authentication domain id",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "eq",
     "description": "Performs an equals operation",
     "type": {
      "name": "ID",
      "kind": "SCALAR"
     }
    },
    {
     "name": "in",
     "description": "Performs an in operation",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    }
   ]
  },
  {
   "name": "AiIssuesIncidentData",
   "description": "Incidents data",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "incidents",
     "description": "Incidents",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiIssuesIIncident",
         "kind": "INTERFACE"
        }
       }
      }
     }
    },
    {
     "name": "nextCursor",
     "description": "Cursor to get the next batch of results",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "MetricNormalizationAccountStitchedFields",
   "description": "Return type for queries given an account ID.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "metricNormalizationRule",
     "description": "Retrieves a rule.",
     "type": {
      "name": "MetricNormalizationRule",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "id",
       "description": "Rule Id",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "metricNormalizationRules",
     "description": "Retrieves the rules for the account.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "MetricNormalizationRule",
        "kind": "OBJECT"
       }
      }
     },
     "args": [
      {
       "name": "enabled",
       "description": "Rule enabled",
       "type": {
        "name": "Boolean",
        "kind": "SCALAR"
       }
      }
     ]
    }
   ]
  },
  {
   "name": "AiWorkflowsUpdateWorkflowResponse",
   "description": "Update workflow mutation response including errors",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "errors",
     "description": "A list of errors that occurred while performing the update workflow action",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiWorkflowsUpdateResponseError",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "workflow",
     "description": "Successfully updated workflow",
     "type": {
      "name": "AiWorkflowsWorkflow",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "SyntheticsUpdateStepMonitorInput",
   "description": "The monitor values that can be updated on a Step monitor",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "advancedOptions",
     "description": "The monitor advanced options",
     "type": {
      "name": "SyntheticsStepMonitorAdvancedOptionsInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "apdexTarget",
     "description": "The monitor's Apdex target used to populate SLA reports",
     "type": {
      "name": "Float",
      "kind": "SCALAR"
     }
    },
    {
     "name": "browsers",
     "description": "The browser(s) that the monitor will use to run jobs",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "SyntheticsBrowser",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "devices",
     "description": "The devices that the monitor will use to run jobs",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "SyntheticsDevice",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "locations",
     "description": "The locations the monitor will run from",
     "type": {
      "name": "SyntheticsScriptedMonitorLocationsInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "name",
     "description": "The human readable identifier for the monitor",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "period",
     "description": "The interval at which the monitor runs in minutes",
     "type": {
      "name": "SyntheticsMonitorPeriod",
      "kind": "ENUM"
     }
    },
    {
     "name": "runtime",
     "description": "The runtime that the monitor will use to run jobs. The only accepted values are runtimeType: CHROME_BROWSER \u0026 runtimeTypeVersion: 100",
     "type": {
      "name": "SyntheticsExtendedTypeMonitorRuntimeInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "status",
     "description": "The run state of the monitor",
     "type": {
      "name": "SyntheticsMonitorStatus",
      "kind": "ENUM"
     }
    },
    {
     "name": "steps",
     "description": "The steps that make up the script the monitor will run",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "SyntheticsStepInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "tags",
     "description": "The tags that will be associated with the monitor",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "SyntheticsTag",
       "kind": "INPUT_OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "AccountManagementManagedAccount",
   "description": "Account data view for administration tasks.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "id",
     "description": "The account ID.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "isCanceled",
     "description": "True if account is canceled",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "The name of the account.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "regionCode",
     "description": "The data center region for the account (US or EU).",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "ErrorsInboxDirection",
   "description": "Sort order direction",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "DESC",
     "description": "Descending sort order",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "TaggingMutationResult",
   "description": "The result of a tag mutation",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "errors",
     "description": "An array containing errors, if any. These are expected errors listed in TagMutationErrorType which a request should be capable of handling appropriately.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "TaggingMutationError",
       "kind": "OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "AgentApplicationCreateMobileResult",
   "description": "The result of creating a mobile application.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "accountId",
     "description": "The application's account ID.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "applicationToken",
     "description": "The mobile application's token.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SecureValue",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "entityOutline",
     "description": "Additional information about the mobile application.",
     "type": {
      "name": "EntityOutline",
      "kind": "INTERFACE"
     }
    },
    {
     "name": "guid",
     "description": "The new mobile application's GUID.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EntityGuid",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "The application's name.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "SyntheticsSimpleBrowserMonitorUpdateMutationResult",
   "description": "The result of a Simple Browser monitor update mutation",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "errors",
     "description": "Errors that occurred during Simple Browser monitor update mutation",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "name": "SyntheticsMonitorUpdateError",
        "kind": "OBJECT"
       }
      }
     }
    },
    {
     "name": "monitor",
     "description": "The resulting Simple Browser monitor",
     "type": {
      "name": "SyntheticsSimpleBrowserMonitor",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "AgentApplicationSegmentsListType",
   "description": "Allow lists have two different types. They are either internal lists or user lists.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "INTERNAL",
     "description": "INTERNAL refers to a list that has been generated by New Relic.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "USER",
     "description": "USER refers to a list that has been generated by the customer.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "NerdStorageVaultActorScope",
   "description": "NerdStorageVault data will only be visible to the User that created them.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "CURRENT_USER",
     "description": "Store and retrieve NerdStorageVault data for the current user.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AiNotificationsChannelSchemaResult",
   "description": "Channel schema object",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "error",
     "description": "Error while querying channelSchema",
     "type": {
      "name": "AiNotificationsError",
      "kind": "UNION"
     }
    },
    {
     "name": "errors",
     "description": "Deprecated list of errors",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiNotificationsError",
         "kind": "UNION"
        }
       }
      }
     }
    },
    {
     "name": "result",
     "description": "Result of channelSchema query",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiNotificationsResult",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "schema",
     "description": "Possible fields for the channel",
     "type": {
      "name": "AiNotificationsSchema",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "WorkloadStaticStatusInput",
   "description": "The input object used to represent the configuration of a static status.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "description",
     "description": "A description that provides additional details about the status of the workload.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "enabled",
     "description": "Whether the static status configuration is enabled or not.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "status",
     "description": "The status of the workload.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "WorkloadStatusValueInput",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "summary",
     "description": "A short description of the status of the workload.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "MultiTenantAuthorizationRoleFilterInputExpression",
   "description": "Provides all the available filters on a role",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "groupId",
     "description": "The group id the role has been granted to",
     "type": {
      "name": "MultiTenantAuthorizationRoleGroupIdInputFilter",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "id",
     "description": "The id of the role",
     "type": {
      "name": "MultiTenantAuthorizationRoleIdInputFilter",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "name",
     "description": "The name of the role",
     "type": {
      "name": "MultiTenantAuthorizationRoleNameInputFilter",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "organizationId",
     "description": "The organization id the role belongs to",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "MultiTenantAuthorizationRoleOrganizationIdInputFilter",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "scope",
     "description": "The scope of the role",
     "type": {
      "name": "MultiTenantAuthorizationRoleScopeInputFilter",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "type",
     "description": "The type of the role",
     "type": {
      "name": "MultiTenantAuthorizationRoleTypeInputFilter",
      "kind": "INPUT_OBJECT"
     }
    }
   ]
  },
  {
   "name": "ErrorsInboxActorStitchedFields",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "errorGroup",
     "description": "Retrieve metadata on a specific error group.",
     "type": {
      "name": "ErrorsInboxErrorGroup",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "errorEvent",
       "description": "Error event that will be encoded to a unique error group id.",
       "type": {
        "name": "ErrorsInboxErrorEventInput",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "id",
       "description": "The unique identifier of the group being fetched.",
       "type": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "errorGroupStateTypes",
     "description": "List of error group state values",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ErrorsInboxErrorGroupStateTypeResult",
        "kind": "OBJECT"
       }
      }
     }
    },
    {
     "name": "errorGroups",
     "description": "Search error groups.",
     "type": {
      "name": "ErrorsInboxErrorGroupsResponse",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "cursor",
       "description": "Current query cursor",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "entityGuids",
       "description": "Filter to specified entities.",
       "type": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "EntityGuid",
          "kind": "SCALAR"
         }
        }
       }
      },
      {
       "name": "filter",
       "description": "Set of filters to be applied to the search.",
       "type": {
        "name": "ErrorsInboxErrorGroupSearchFilterInput",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "query",
       "description": "Query string to filter the error groups by",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "sortBy",
       "description": "Sort order for results. (limit: 1)",
       "type": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "ErrorsInboxErrorGroupSortOrderInput",
          "kind": "INPUT_OBJECT"
         }
        }
       }
      },
      {
       "name": "timeWindow",
       "description": "Time Window for search",
       "type": {
        "name": "TimeWindowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    }
   ]
  },
  {
   "name": "LogConfigurationsParsingRuleConfiguration",
   "description": "A new parsing rule.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "attribute",
     "description": "The parsing rule will apply to value of this attribute. If field is not provided, value will default to message.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "description",
     "description": "A description of what this parsing rule represents.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "enabled",
     "description": "Whether or not this rule is enabled.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "grok",
     "description": "The Grok of what to parse.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "lucene",
     "description": "The Lucene to match events to the parsing rule.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "nrql",
     "description": "The NRQL to match events to the parsing rule.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Nrql",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "EdgeEndpointDetail",
   "description": "The information common to all endpoints.",
   "kind": "INTERFACE",
   "fields": [
    {
     "name": "host",
     "description": "Full host name that is used to connect to the endpoint.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "port",
     "description": "Port that is used to connect to the endpoint.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "possibleTypes": [
    {
     "name": "EdgeAgentEndpointDetail",
     "kind": "OBJECT"
    },
    {
     "name": "EdgeHttpsEndpointDetail",
     "kind": "OBJECT"
    }
   ]
  },
  {
   "name": "OrganizationTargetIdInput",
   "description": "Provides the operations available on the target id",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "eq",
     "description": "An organization id",
     "type": {
      "name": "ID",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "SyntheticsAutomatedTestStartResult",
   "description": "Results from starting automated test job",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "batchId",
     "description": "Job batch Id",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AiDecisionsFixedFuzzyWuzzyPartialRatioInput",
   "description": "Input type for FixedFuzzyWuzzyPartialRatio expression",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "incident",
     "description": "Incident selector to be used in comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsIncidentObjectInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "minSimilarity",
     "description": "Minimum similarity threshold.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Float",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "value",
     "description": "Value to be used in comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "Nr1CatalogLinkInstallDirective",
   "description": "Information about a link install directive",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "url",
     "description": "The URL of the external link used to guide the user through installation",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "UserManagementNameInput",
   "description": "Available filtering types for names",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "contains",
     "description": "Part of a user name",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "eq",
     "description": "A user name",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AgentApplicationSettingsBrowserConfigInput",
   "description": "Provides fields to set general browser application settings.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "apdexTarget",
     "description": "The desired target for the APDEX measurement of this application.",
     "type": {
      "name": "Float",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "ApiAccessKeyError",
   "description": "A key error. Each error maps to a single key input.",
   "kind": "INTERFACE",
   "fields": [
    {
     "name": "message",
     "description": "A message about why the key creation failed.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "type",
     "description": "The type of the key.",
     "type": {
      "name": "ApiAccessKeyType",
      "kind": "ENUM"
     }
    }
   ],
   "possibleTypes": [
    {
     "name": "ApiAccessIngestKeyError",
     "kind": "OBJECT"
    },
    {
     "name": "ApiAccessUserKeyError",
     "kind": "OBJECT"
    }
   ]
  },
  {
   "name": "CloudGcpVpcaccessIntegration",
   "description": "VPC Access Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "OrganizationAccountShare",
   "description": "An account share",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "accountId",
     "description": "The ID of the account being shared",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The account share ID",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "limitingRole",
     "description": "The limiting role",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "OrganizationAccountShareLimitingRoleWrapper",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "name",
     "description": "The name of the account share",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "source",
     "description": "The organization sending the account share.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "OrganizationAccountShareOrganizationWrapper",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "target",
     "description": "The organization receiving the account share.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "OrganizationAccountShareOrganizationWrapper",
       "kind": "OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "DashboardLiveUrl",
   "description": "Live URL.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "Creation date.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "createdBy",
     "description": "Information of the user that created the LiveUrl.",
     "type": {
      "name": "UserReference",
      "kind": "OBJECT"
     }
    },
    {
     "name": "expiresOn",
     "description": "Date when the Live Url will become unavailable",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "title",
     "description": "Title that describes the source entity that is accessible through the public live URL.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "type",
     "description": "Live URL type.",
     "type": {
      "name": "DashboardLiveUrlType",
      "kind": "ENUM"
     }
    },
    {
     "name": "url",
     "description": "Public URL.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "uuid",
     "description": "The unique identifier of the public live URL.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "EntityGoldenTagsDomainTypeScoped",
   "description": "An object that represents the golden tags scoped by domain and type",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "context",
     "description": "Context for the golden tags",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EntityGoldenContext",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "domainType",
     "description": "Domain type for the golden tags",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "DomainType",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "tags",
     "description": "Tags for the domain and type",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EntityGoldenTag",
         "kind": "OBJECT"
        }
       }
      }
     }
    }
   ]
  },
  {
   "name": "EdgeDataSourceGroupInput",
   "description": "Data required to change the data source group.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "guids",
     "description": "The entity guids representing the entities you would like to update.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "updateType",
     "description": "The type of update that should be performed with the supplied entity guids.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EdgeDataSourceGroupUpdateType",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "AiNotificationsSuggestionFilter",
   "description": "Suggestion filter object",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "type",
     "description": "type",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiNotificationsSuggestionFilterType",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "value",
     "description": "value",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "SyntheticsScriptDomainOverrideInput",
   "description": "Override a script url domain",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "domain",
     "description": "The target domain to override",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "override",
     "description": "The override value for the domain",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AlertsEmailNotificationChannelCreateInput",
   "description": "The input for creating a new Email notification channel.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "emails",
     "description": "List of email recipients.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      }
     }
    },
    {
     "name": "includeJson",
     "description": "Include details about the violation as a JSON attachment.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "Notification channel name.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AiNotificationsChannel",
   "description": "Channel object",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "accountId",
     "description": "The accountId of the creator of the channel",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "active",
     "description": "Is channel active",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "createdAt",
     "description": "Channel creation time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "DateTime",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "destinationId",
     "description": "Related destination type",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "Channel id",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "Channel name",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "product",
     "description": "Related product type",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiNotificationsProduct",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "properties",
     "description": "List of destination property types",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiNotificationsProperty",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "status",
     "description": "Channel Status",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiNotificationsChannelStatus",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "type",
     "description": "Channel type",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiNotificationsChannelType",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "updatedAt",
     "description": "Channel last update time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "DateTime",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "updatedBy",
     "description": "Message template creator userId",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "IncidentIntelligenceEnvironmentDeleteEnvironmentResult",
   "description": "Result options for environment deletion",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "ACCOUNT_NOT_ENTITLED",
     "description": "The account is not entitled to incident intelligence",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "DELETED",
     "description": "The environment was deleted successfully",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "DOES_NOT_EXIST",
     "description": "The environment does not exists and cannot be deleted",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "USER_NOT_AUTHORIZED",
     "description": "The user is not authorized to delete an environment",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "USER_NOT_AUTHORIZED_MISSING_CAPABILITY",
     "description": "The user is not authorized to delete the environment due to a missing capability",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "CloudGcpMemcacheIntegration",
   "description": "Memcache Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "SyntheticsMonitorUpdateError",
   "description": "Error object for Synthetics monitor update request",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "description",
     "description": "String description of error",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "type",
     "description": "Enum of error that was returned during monitor update",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SyntheticsMonitorUpdateErrorType",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "ApmApplicationSummaryData",
   "description": "Summary statistics about the APM App.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "apdexScore",
     "description": "The apdex score. For more details on the use of apdex, visit [our docs](https://docs.newrelic.com/docs/apm/new-relic-apm/apdex/apdex-measure-user-satisfaction).",
     "type": {
      "name": "Float",
      "kind": "SCALAR"
     }
    },
    {
     "name": "errorRate",
     "description": "The percentage of responses to all transactions with an error.",
     "type": {
      "name": "Float",
      "kind": "SCALAR"
     }
    },
    {
     "name": "hostCount",
     "description": "The number of hosts this application is running on.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "instanceCount",
     "description": "The number of instances of this application running.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nonWebResponseTimeAverage",
     "description": "The average response time for non-web transactions in seconds.",
     "type": {
      "name": "Seconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nonWebThroughput",
     "description": "The number of non-web transactions per minute.",
     "type": {
      "name": "Float",
      "kind": "SCALAR"
     }
    },
    {
     "name": "responseTimeAverage",
     "description": "The average response time for all transactions in seconds.",
     "type": {
      "name": "Seconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "throughput",
     "description": "The number of all transactions per minute.",
     "type": {
      "name": "Float",
      "kind": "SCALAR"
     }
    },
    {
     "name": "webResponseTimeAverage",
     "description": "The average response time for web transactions in seconds.",
     "type": {
      "name": "Seconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "webThroughput",
     "description": "The number of web transactions per minute.",
     "type": {
      "name": "Float",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AiNotificationsCustomHeadersAuth",
   "description": "Custom header based authentication",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "authType",
     "description": "Authentication type - Custom headers",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiNotificationsAuthType",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "customHeaders",
     "description": "List of custom headers",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiNotificationsCustomHeader",
         "kind": "OBJECT"
        }
       }
      }
     }
    }
   ]
  },
  {
   "name": "Nr1CatalogNerdpack",
   "description": "Information about the Nerdpack",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "id",
     "description": "The unique identifier for the Nerdpack",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metadata",
     "description": "Metadata associated with the Nerdpack that is available in the New Relic One Catalog",
     "type": {
      "name": "Nr1CatalogNerdpackMetadata",
      "kind": "OBJECT"
     }
    },
    {
     "name": "visibility",
     "description": "Indicates the visibility of the Nerdpack",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Nr1CatalogNerdpackVisibility",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "SyntheticsCertCheckMonitor",
   "description": "A Cert Check monitor resulting from a Cert Check monitor mutation",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The creation time of the monitor in millis",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "domain",
     "description": "The domain of the host that will have its certificate checked",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "guid",
     "description": "The unique client identifier for the Synthetics Monitor in New Relic",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    },
    {
     "name": "id",
     "description": "The unique identifier of the monitor within the Synthetics domain",
     "type": {
      "name": "ID",
      "kind": "SCALAR"
     }
    },
    {
     "name": "locations",
     "description": "The locations the monitor runs from",
     "type": {
      "name": "SyntheticsLocations",
      "kind": "OBJECT"
     }
    },
    {
     "name": "modifiedAt",
     "description": "The last modification time of the monitor in millis",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The human readable identifier for the monitor",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "numberDaysToFailBeforeCertExpires",
     "description": "The desired number of remaining days until the certificate expires to trigger a monitor failure",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "period",
     "description": "The interval at which the monitor runs in minutes",
     "type": {
      "name": "SyntheticsMonitorPeriod",
      "kind": "ENUM"
     }
    },
    {
     "name": "runtime",
     "description": "The runtime that the monitor will use to run jobs",
     "type": {
      "name": "SyntheticsExtendedTypeMonitorRuntime",
      "kind": "OBJECT"
     }
    },
    {
     "name": "status",
     "description": "The run state of the monitor",
     "type": {
      "name": "SyntheticsMonitorStatus",
      "kind": "ENUM"
     }
    }
   ]
  },
  {
   "name": "EntityGoldenOriginalDefinitionWithSelector",
   "description": "Represents a metric definition for a give metric selector value.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "definition",
     "description": "The definition of the golden metric.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EntityGoldenMetricDefinition",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "selectorValue",
     "description": "The value of the selector. Currently, this is the value of the instrumentation provider.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "CloudGcpIntegrationsInput",
   "description": "List of integrations",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "gcpAiplatform",
     "description": "Vertex AI integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudGcpAiplatformIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "gcpAlloydb",
     "description": "AlloyDB integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudGcpAlloydbIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "gcpAppengine",
     "description": "App Engine integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudGcpAppengineIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "gcpBigquery",
     "description": "BigQuery integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudGcpBigqueryIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "gcpBigtable",
     "description": "Bigtable integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudGcpBigtableIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "gcpComposer",
     "description": "Composer integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudGcpComposerIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "gcpDataflow",
     "description": "Dataflow integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudGcpDataflowIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "gcpDataproc",
     "description": "Dataproc integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudGcpDataprocIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "gcpDatastore",
     "description": "Datastore integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudGcpDatastoreIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "gcpFirebasedatabase",
     "description": "Firebase Database integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudGcpFirebasedatabaseIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "gcpFirebasehosting",
     "description": "Firebase Hosting integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudGcpFirebasehostingIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "gcpFirebasestorage",
     "description": "Firebase Storage integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudGcpFirebasestorageIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "gcpFirestore",
     "description": "Firestore integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudGcpFirestoreIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "gcpFunctions",
     "description": "Cloud Functions integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudGcpFunctionsIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "gcpInterconnect",
     "description": "Interconnect integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudGcpInterconnectIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "gcpKubernetes",
     "description": "Kubernetes Engine integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudGcpKubernetesIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "gcpLoadbalancing",
     "description": "Cloud Load Balancing integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudGcpLoadbalancingIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "gcpMemcache",
     "description": "Memcache integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudGcpMemcacheIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "gcpPubsub",
     "description": "Cloud Pub/Sub integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudGcpPubsubIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "gcpRedis",
     "description": "Redis integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudGcpRedisIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "gcpRouter",
     "description": "Router integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudGcpRouterIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "gcpRun",
     "description": "Run integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudGcpRunIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "gcpSpanner",
     "description": "Cloud Spanner integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudGcpSpannerIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "gcpSql",
     "description": "Cloud SQL integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudGcpSqlIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "gcpStorage",
     "description": "Cloud Storage integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudGcpStorageIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "gcpVms",
     "description": "Compute Engine integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudGcpVmsIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "gcpVpcaccess",
     "description": "VPC Access integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudGcpVpcaccessIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "AgentApplicationSettingsErrorCollector",
   "description": "The error collector captures information about uncaught exceptions and sends them to New Relic for viewing. For more information about what these settings do and which ones are applicable for your application, please see https://docs.newrelic.com for more information about agent configuration for your language agent.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "enabled",
     "description": "Enables error collector.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "expectedErrorClasses",
     "description": "Prevents specified exception classes from affecting error rate or Apdex score while still reporting the errors to APM.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "expectedErrorCodes",
     "description": "An array of individual HTTP status codes to be marked as expected and thus prevented from affecting error rate or Apdex score.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AgentApplicationSettingsErrorCollectorHttpStatus",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "ignoredErrorClasses",
     "description": "Specified exception class names will be ignored and will not affect error rate or Apdex score, or be reported to APM.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "ignoredErrorCodes",
     "description": "An array of individual HTTP status codes that should not be treated as errors.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AgentApplicationSettingsErrorCollectorHttpStatus",
        "kind": "SCALAR"
       }
      }
     }
    }
   ]
  },
  {
   "name": "DashboardWidgetLayout",
   "description": "Widget layout.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "column",
     "description": "Column position of widget from top left, starting at 1.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "height",
     "description": "Height of the widget. Valid values are 1 to 12 inclusive. Defaults to 3.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "row",
     "description": "Row position of widget from top left, starting at 1.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "width",
     "description": "Width of the widget. Valid values are 1 to 12 inclusive. Defaults to 4.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "KeyTransactionApplication",
   "description": "The application wrapper.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "entity",
     "description": "The application outline.",
     "type": {
      "name": "EntityOutline",
      "kind": "INTERFACE"
     }
    },
    {
     "name": "guid",
     "description": "The guid of the application.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EntityGuid",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AiNotificationsVariable",
   "description": "Variable object",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "active",
     "description": "Is variable active",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "category",
     "description": "Variable category",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiNotificationsVariableCategory",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "createdAt",
     "description": "Variable creation time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "DateTime",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "description",
     "description": "Variable description",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "example",
     "description": "Variable example",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "Variable id",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "key",
     "description": "Variable key",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "label",
     "description": "Variable label",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "Variable name",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "product",
     "description": "Related product type",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiNotificationsProduct",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "type",
     "description": "Variable type",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiNotificationsVariableType",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "updatedAt",
     "description": "Variable update time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "DateTime",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "updatedBy",
     "description": "Variable creator userId",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AiWorkflowsPredicate",
   "description": "Predicate Object",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "attribute",
     "description": "Field name in the issue event",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "operator",
     "description": "Type of operator used to match the values",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiWorkflowsOperator",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "values",
     "description": "Values to compare",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      }
     }
    }
   ]
  },
  {
   "name": "CloudAzureMariadbIntegrationInput",
   "description": "Database for MariaDB",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "resourceGroups",
     "description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "UserManagementDeleteUser",
   "description": "The input object representing the user being deleted",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "id",
     "description": "The ID of the user to be deleted",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "ServiceLevelDefinition",
   "description": "The service level defined for a specific entity.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "indicators",
     "description": "The SLIs attached to the entity.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ServiceLevelIndicator",
        "kind": "OBJECT"
       }
      }
     }
    }
   ]
  },
  {
   "name": "EntityTagWithMetadata",
   "description": "The tags with metadata of the entity.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "key",
     "description": "The tag's key.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "values",
     "description": "A list of tag values with metadata information.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityTagValueWithMetadata",
       "kind": "OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "CloudAwsTransitgatewayIntegration",
   "description": "Transit Gateway Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "AiIssuesIncidentState",
   "description": "Incident state",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "CLOSED",
     "description": "Incident is closed",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "CREATED",
     "description": "Incident is created",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AlertsMutingRuleConditionOperator",
   "description": "The list of operators to be used in a MutingRuleCondition. Each operator is limited to one value in the `values` list unless otherwise specified.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "ANY",
     "description": "Where attribute is any.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "CONTAINS",
     "description": "Where attribute contains value.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "ENDS_WITH",
     "description": "Where attribute ends with value.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "EQUALS",
     "description": "Where attribute equals value.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "IN",
     "description": "Where attribute in values. (Limit 500)",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "IS_BLANK",
     "description": "Where attribute is blank.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "IS_NOT_BLANK",
     "description": "Where attribute is not blank.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NOT_CONTAINS",
     "description": "Where attribute does not contain value.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NOT_ENDS_WITH",
     "description": "Where attribute does not end with value.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NOT_EQUALS",
     "description": "Where attribute does not equal value.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NOT_IN",
     "description": "Where attribute not in values. (Limit 500)",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NOT_STARTS_WITH",
     "description": "Where attribute does not start with value.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "STARTS_WITH",
     "description": "Where attribute starts with value.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AiDecisionsRelativeTopologicallyDependentInput",
   "description": "Input type for RelativeTopologicallyDependent expression",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "from",
     "description": "From Vertex Id.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     }
    },
    {
     "name": "graphId",
     "description": "Graph Id.",
     "type": {
      "name": "ID",
      "kind": "SCALAR"
     }
    },
    {
     "name": "maxHops",
     "description": "Maximum number of hops",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "requiredAttributes",
     "description": "Required Vertex Attributes",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      }
     }
    },
    {
     "name": "requiredClasses",
     "description": "Required Vertex Classes",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiDecisionsVertexClass",
         "kind": "ENUM"
        }
       }
      }
     }
    },
    {
     "name": "to",
     "description": "To Vertex Id.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     }
    }
   ]
  },
  {
   "name": "SyntheticsDeviceOrientation",
   "description": "enum of Orientations that the user can select for their emulated device",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "LANDSCAPE",
     "description": "This allows the screenshot to be taken in the landscape orientation",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NONE",
     "description": "This will disable device emulation",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "PORTRAIT",
     "description": "This allows the screenshot to be taken in the portrait orientation",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "CloudIamIntegration",
   "description": "IAM Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "tagKey",
     "description": "Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "tagValue",
     "description": "Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "SyntheticsSimpleBrowserMonitorAdvancedOptionsInput",
   "description": "The advanced options inputs available for a Simple Browser monitor",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "customHeaders",
     "description": "Custom headers to use in monitor job",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "SyntheticsCustomHeaderInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "deviceEmulation",
     "description": "Emulate a device",
     "type": {
      "name": "SyntheticsDeviceEmulationInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "enableScreenshotOnFailureAndScript",
     "description": "Capture a screenshot during job execution",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "responseValidationText",
     "description": "Validation text for monitor to search for at given URI",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "useTlsValidation",
     "description": "Monitor should validate SSL certificate chain",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "DashboardUpdateWidgetsInPageErrorType",
   "description": "Expected error types that can be returned by updateWidgetsInPage operation.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "FORBIDDEN_OPERATION",
     "description": "User is not allowed to execute the operation.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "INVALID_INPUT",
     "description": "Invalid input error.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "PAGE_NOT_FOUND",
     "description": "Page not found in the system.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "WIDGET_NOT_FOUND",
     "description": "Widget not found in the system.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "CloudAwsIntegrationsInput",
   "description": "List of integrations",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "alb",
     "description": "ALB/NLB integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudAlbIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "apigateway",
     "description": "API Gateway integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudApigatewayIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "autoscaling",
     "description": "AutoScaling integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudAutoscalingIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "awsAppsync",
     "description": "AppSync integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudAwsAppsyncIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "awsAthena",
     "description": "Athena integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudAwsAthenaIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "awsCognito",
     "description": "Cognito integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudAwsCognitoIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "awsConnect",
     "description": "Connect integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudAwsConnectIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "awsDirectconnect",
     "description": "Direct Connect integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudAwsDirectconnectIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "awsDocdb",
     "description": "DocumentDB integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudAwsDocdbIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "awsFsx",
     "description": "FSx integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudAwsFsxIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "awsGlue",
     "description": "Glue integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudAwsGlueIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "awsKinesisanalytics",
     "description": "Kinesis Data Analytics integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudAwsKinesisanalyticsIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "awsMediaconvert",
     "description": "Elemental MediaConvert integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudAwsMediaconvertIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "awsMediapackagevod",
     "description": "MediaPackage VOD integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudAwsMediapackagevodIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "awsMetadata",
     "description": "Fetch Metadata for AWS integrations integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudAwsMetadataIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "awsMq",
     "description": "MQ integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudAwsMqIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "awsMsElasticache",
     "description": "Fetch ElastiCache entities integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudAwsMsElasticacheIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "awsMsk",
     "description": "Managed Kafka integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudAwsMskIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "awsNeptune",
     "description": "Neptune integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudAwsNeptuneIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "awsQldb",
     "description": "QLDB integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudAwsQldbIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "awsRoute53resolver",
     "description": "Route53 Resolver integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudAwsRoute53resolverIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "awsStates",
     "description": "Step Functions integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudAwsStatesIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "awsTagsGlobal",
     "description": "Fetch tags for all integrations integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudAwsTagsGlobalIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "awsTransitgateway",
     "description": "Transit Gateway integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudAwsTransitgatewayIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "awsWaf",
     "description": "WAF integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudAwsWafIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "awsWafv2",
     "description": "WAFV2 integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudAwsWafv2IntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "awsXray",
     "description": "X-Ray integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudAwsXrayIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "billing",
     "description": "Billing integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudBillingIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "cloudfront",
     "description": "CloudFront integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudCloudfrontIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "cloudtrail",
     "description": "CloudTrail integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudCloudtrailIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "dynamodb",
     "description": "DynamoDB integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDynamodbIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "ebs",
     "description": "EBS integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudEbsIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "ec2",
     "description": "EC2 integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudEc2IntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "ecs",
     "description": "ECS integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudEcsIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "efs",
     "description": "EFS integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudEfsIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "elasticache",
     "description": "ElastiCache integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudElasticacheIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "elasticbeanstalk",
     "description": "Elastic Beanstalk integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudElasticbeanstalkIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "elasticsearch",
     "description": "Elasticsearch Service integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudElasticsearchIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "elb",
     "description": "ELB (Classic) integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudElbIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "emr",
     "description": "EMR integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudEmrIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "health",
     "description": "Health integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudHealthIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "iam",
     "description": "IAM integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudIamIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "iot",
     "description": "IoT integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudIotIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "kinesis",
     "description": "Kinesis Streams integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudKinesisIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "kinesisFirehose",
     "description": "Kinesis Firehose integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudKinesisFirehoseIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "lambda",
     "description": "Lambda integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudLambdaIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "rds",
     "description": "RDS integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudRdsIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "redshift",
     "description": "Redshift integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudRedshiftIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "route53",
     "description": "Route 53 integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudRoute53IntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "s3",
     "description": "S3 integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudS3IntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "ses",
     "description": "SES integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudSesIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "sns",
     "description": "SNS integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudSnsIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "sqs",
     "description": "SQS integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudSqsIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "trustedadvisor",
     "description": "Trusted Advisor integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudTrustedadvisorIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "vpc",
     "description": "VPC integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudVpcIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "AgentApplicationSettingsBrowserProperties",
   "description": "General Properties related to browser applications.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "jsConfig",
     "description": "The configuration required to run the npm version of the JS agent. This is the \"pure\" JSON configuration block without surrounding HTML \u003cscript\u003e tags.",
     "type": {
      "name": "AgentApplicationSettingsRawJsConfiguration",
      "kind": "SCALAR"
     }
    },
    {
     "name": "jsConfigScript",
     "description": "The configuration block required to run the npm version of the JS agent. This includes the HTML \u003cscript\u003e tags.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "jsLoaderScript",
     "description": "The snippet of JavaScript used to copy/paste into your JavaScript app if you aren’t using an auto-instrumentating agent on the backend.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "OrganizationSharingMode",
   "description": "Provides the types of sharing modes available",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "ALL",
     "description": "Accounts that are accessible to this organization",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "MANAGED",
     "description": "Accounts that are managed by this organization",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SHARED_WITH_OTHER_ORGANIZATIONS",
     "description": "Accounts managed by this organization that are currently shared with other organizations",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SHARED_WITH_THIS_ORGANIZATION",
     "description": "Accounts that are shared with this organization",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "DashboardUpdateWidgetsInPageResult",
   "description": "Result of updateWidgetsInPage operation.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "errors",
     "description": "Expected errors while processing request. No errors means successful request.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "DashboardUpdateWidgetsInPageError",
       "kind": "OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "AgentApplicationSettingsApmBase",
   "description": "Settings that are applicable to APM applications and their agents.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "alias",
     "description": "The name for the application",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "apmConfig",
     "description": "Access general settings for the application.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AgentApplicationSettingsApmConfig",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "captureMemcacheKeys",
     "description": "Enable or disable the capture of memcache keys.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "errorCollector",
     "description": "Access error collector settings for the application. The error collector captures information about uncaught exceptions and sends them to New Relic for viewing.",
     "type": {
      "name": "AgentApplicationSettingsErrorCollector",
      "kind": "OBJECT"
     }
    },
    {
     "name": "jfr",
     "description": "Access enabled state for the Java Flight Recorder. This is available only for the Java language agent version 8.0.0 or later.",
     "type": {
      "name": "AgentApplicationSettingsJfr",
      "kind": "OBJECT"
     }
    },
    {
     "name": "originalName",
     "description": "The name originally given to the application for reporting.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "slowSql",
     "description": "In APM, when transaction traces are collected, there may be additional Slow query data available.",
     "type": {
      "name": "AgentApplicationSettingsSlowSql",
      "kind": "OBJECT"
     }
    },
    {
     "name": "threadProfiler",
     "description": "Measures wall clock time, CPU time, and method call counts in your application's threads as they run.",
     "type": {
      "name": "AgentApplicationSettingsThreadProfiler",
      "kind": "OBJECT"
     }
    },
    {
     "name": "tracerType",
     "description": "Type of tracer used. APM's cross application tracing links transactions between APM apps in your service-oriented architecture (SOA).  Distributed tracing is an improvement on the cross application tracing feature, and is recommended for large, distributed systems.",
     "type": {
      "name": "AgentApplicationSettingsTracer",
      "kind": "ENUM"
     }
    },
    {
     "name": "transactionTracer",
     "description": "Access transaction tracer settings for the application.",
     "type": {
      "name": "AgentApplicationSettingsTransactionTracer",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "AiNotificationsChannelTestResponse",
   "description": "Result of a notification test",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "details",
     "description": "Extra details (if available)",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "error",
     "description": "Test response error",
     "type": {
      "name": "AiNotificationsError",
      "kind": "UNION"
     }
    },
    {
     "name": "errors",
     "description": "Deprecated list of errors",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiNotificationsError",
         "kind": "UNION"
        }
       }
      }
     }
    },
    {
     "name": "evidence",
     "description": "The evidence (url for example) of the channel being created.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "result",
     "description": "Test result - success or failure",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiNotificationsResult",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "DashboardAreaWidgetConfigurationInput",
   "description": "Configuration for visualization type 'viz.area'",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "nrqlQueries",
     "description": "NRQL queries.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "DashboardWidgetNrqlQueryInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    }
   ]
  },
  {
   "name": "CloudAwsQldbIntegrationInput",
   "description": "QLDB",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "UserManagementUpdateUserPayload",
   "description": "Autogenerated return type of UpdateUser.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "user",
     "description": "The user that was updated",
     "type": {
      "name": "UserManagementUser",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "AiNotificationsOAuth2AuthInput",
   "description": "OAuth2 auth input object",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "accessTokenUrl",
     "description": "accessTokenUrl",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "authorizationUrl",
     "description": "authorizationUrl",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "clientId",
     "description": "clientId",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "clientSecret",
     "description": "clientSecret",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SecureValue",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "prefix",
     "description": "prefix",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "refreshInterval",
     "description": "refreshInterval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "refreshToken",
     "description": "refreshToken",
     "type": {
      "name": "SecureValue",
      "kind": "SCALAR"
     }
    },
    {
     "name": "refreshable",
     "description": "refreshable",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "scope",
     "description": "scope",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "token",
     "description": "token",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SecureValue",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "DashboardInput",
   "description": "Dashboard input.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "description",
     "description": "Brief text describing the dashboard.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The name of the dashboard.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "pages",
     "description": "A nested block of all pages belonging to the dashboard.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "DashboardPageInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "permissions",
     "description": "Permissions to set level of visibility \u0026 editing.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "DashboardPermissions",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "variables",
     "description": "Dashboard-local variable definitions.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "DashboardVariableInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    }
   ]
  },
  {
   "name": "WorkloadUpdateInput",
   "description": "The input object used to identify the workload to be updated and the new values.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "description",
     "description": "Relevant information about the workload.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "entityGuids",
     "description": "A list of entity GUIDs composing the workload.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "entitySearchQueries",
     "description": "A list of entity search queries used to retrieve the groups of entities that compose the workload.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "WorkloadUpdateCollectionEntitySearchQueryInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    },
    {
     "name": "name",
     "description": "The name of the workload.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "scopeAccounts",
     "description": "Accounts that will be used to get entities from.",
     "type": {
      "name": "WorkloadScopeAccountsInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "statusConfig",
     "description": "The configuration that defines how the status of the workload is calculated.",
     "type": {
      "name": "WorkloadUpdateStatusConfigInput",
      "kind": "INPUT_OBJECT"
     }
    }
   ]
  },
  {
   "name": "ErrorsInboxErrorGroup",
   "description": "A grouping of similar error events with all fields.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "assignedUser",
     "description": "User assigned to the error group",
     "type": {
      "name": "UserReference",
      "kind": "OBJECT"
     }
    },
    {
     "name": "assignment",
     "description": "User assigned to the error group",
     "type": {
      "name": "ErrorsInboxAssignment",
      "kind": "OBJECT"
     }
    },
    {
     "name": "entityGuid",
     "description": "Source entity Guid",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    },
    {
     "name": "eventsQuery",
     "description": "NRQL formatted query for retrieving error events",
     "type": {
      "name": "Nrql",
      "kind": "SCALAR"
     }
    },
    {
     "name": "firstSeenAt",
     "description": "Time of first occurrence",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "firstSeenVersions",
     "description": "Versions running within 30 min after this error was first seen, ordered alphanumerically\nNote: This field requires additional queries that may slow down the response",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ErrorsInboxVersion",
        "kind": "OBJECT"
       }
      }
     }
    },
    {
     "name": "id",
     "description": "A unique identifier for the error group",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "isCustom",
     "description": "Indicates whether this error group was custom generated.\n- false = this is a system-generated error group\n- true = this is a custom error group, created and sent by the end user",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "lastSeenAt",
     "description": "Time of last occurrence",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "lastSeenVersions",
     "description": "Versions running within 30 min before this error was last seen, ordered alphanumerically\nNote: This field requires additional queries that may slow down the response",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ErrorsInboxVersion",
        "kind": "OBJECT"
       }
      }
     }
    },
    {
     "name": "message",
     "description": "Error group message",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "Error group name",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "occurrences",
     "description": "The occurrences of this error group.",
     "type": {
      "name": "ErrorsInboxOccurrences",
      "kind": "OBJECT"
     }
    },
    {
     "name": "regressedAt",
     "description": "Time of regression occurrence for regressed error groups",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "resources",
     "description": "List of resources associated with this error group",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ErrorsInboxResourcesResponse",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "cursor",
       "description": "Current query cursor",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "filter",
       "description": "Set of filters to be applied to the search.",
       "type": {
        "name": "ErrorsInboxResourceFilterInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "source",
     "description": "The source event of the error group.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "state",
     "description": "Value to indicate the current state of the group.",
     "type": {
      "name": "ErrorsInboxErrorGroupState",
      "kind": "ENUM"
     }
    },
    {
     "name": "url",
     "description": "The public URL of the error group detail view.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ],
   "interfaces": [
    {
     "name": "ErrorsInboxErrorGroupBase",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "Date",
   "description": "The `Date` scalar represents a date. The `Date` appears as an ISO8601 formatted string.",
   "kind": "SCALAR"
  },
  {
   "name": "AiNotificationsErrorType",
   "description": "Error types",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "CONNECTION_ERROR",
     "description": "Unable to connect to external service to perform this action",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "ENTITY_IN_USE",
     "description": "This operation could not be completed because the entity is in use",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "EXTERNAL_SERVER_ERROR",
     "description": "An external server error has occurred",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "FEATURE_FLAG_DISABLED",
     "description": "Targeted account does not have access to this feature",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "INVALID_CHANNEL_NAME",
     "description": "The channel name doesn't exist",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "INVALID_CREDENTIALS",
     "description": "The credentials provided were invalid, Please check them and try again",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "INVALID_KEY",
     "description": "Could not provide suggestions for this key",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "INVALID_PARAMETER",
     "description": "The parameter provided does not correspond to any valid entity",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "LIMIT_REACHED",
     "description": "Entities limit has been reached",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "MISSING_CAPABILITIES",
     "description": "User is missing capabilities",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "MISSING_CONSTRAINTS",
     "description": "This key requires additional constraints",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "MISSING_PARAMETERS",
     "description": "At least one parameter is required to complete this action",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "OAUTH_NOT_SUPPORTED",
     "description": "This destination does not support OAuth authentication",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SUGGESTIONS_UNAVAILABLE",
     "description": "This destination does not provide any suggestions",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "TIMEOUT_ERROR",
     "description": "Request did not finish within time limit",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "TYPE_EXAMPLE_MISMATCH",
     "description": "The variable type is different from the example type",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "UNAUTHORIZED_ACCOUNT",
     "description": "This account is not allowed to perform this action",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "UNEXPECTED_PARAMETER",
     "description": "Received one or more unexpected parameters",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "UNINSTALLED_DESTINATION",
     "description": "The New Relic application was removed",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "UNKNOWN_ERROR",
     "description": "An unknown error has occurred",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "CloudAzureKeyvaultIntegration",
   "description": "Key Vault Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "resourceGroups",
     "description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "AgentApplicationSettingsBrowserMonitoringInput",
   "description": "Set browser monitoring application settings.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "ajax",
     "description": "Configuration settings related to how a browser agent handles Ajax requests.",
     "type": {
      "name": "AgentApplicationSettingsBrowserAjaxInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "distributedTracing",
     "description": "Configure distributed traces from within browser apps.",
     "type": {
      "name": "AgentApplicationSettingsBrowserDistributedTracingInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "loader",
     "description": "Determines which browser loader will be configured.",
     "type": {
      "name": "AgentApplicationSettingsBrowserLoaderInput",
      "kind": "ENUM"
     }
    },
    {
     "name": "pinnedVersion",
     "description": "Specify the semantic version of the browser agent that you would like your app to use. Leave this blank to use the most recent version. Use 'x' in place of a numeric digit to represent the latest release within the version range. For example, '1.x.x'",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "privacy",
     "description": "Browser monitoring's page load timing feature can track sessions by using cookies that contain a simple session identifier.",
     "type": {
      "name": "AgentApplicationSettingsBrowserPrivacyInput",
      "kind": "INPUT_OBJECT"
     }
    }
   ]
  },
  {
   "name": "AiDecisionsDecision",
   "description": "A decision used to compare incidents and subsequently merge issues.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "annotations",
     "description": "Internal data associated with this decision.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiDecisionsAnnotationEntry",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "correlationWindowLength",
     "description": "Length of the window in which incidents are compared.",
     "type": {
      "name": "Milliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "createdAt",
     "description": "Time decision was created.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochMilliseconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "creator",
     "description": "Creator of decision.",
     "type": {
      "name": "UserReference",
      "kind": "OBJECT"
     }
    },
    {
     "name": "decisionExpression",
     "description": "Expression to use to compare incidents.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsRuleExpression",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "decisionType",
     "description": "Type of decision.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsDecisionType",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "description",
     "description": "Description of decision.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "id",
     "description": "ID of decision.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metadata",
     "description": "External data associated with this decision.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsRuleMetadata",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "minCorrelationThreshold",
     "description": "Number of correlations within a window required to merge issues.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "Name of decision.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "overrideConfiguration",
     "description": "Configuration to allow decision to override issue properties.",
     "type": {
      "name": "AiDecisionsOverrideConfiguration",
      "kind": "OBJECT"
     }
    },
    {
     "name": "source",
     "description": "Creation source of decision.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsRuleSource",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "state",
     "description": "Current state of decision.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsDecisionState",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "updatedAt",
     "description": "Time decision was last updated.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochMilliseconds",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "EntityGoldenGoldenMetricsErrorType",
   "description": "An object that represents a golden metrics error",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "INVALID_CONTEXT",
     "description": "The context defined in the request is not valid.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "INVALID_DOMAIN_TYPE",
     "description": "The domain type defined in the request is not valid.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "INVALID_QUERY_PARAMS",
     "description": "There is some parameter validation that has failed",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "LIMIT_EXCEEDED",
     "description": "Number of metrics defined in the requests exceeds the limit.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NOT_AUTHORIZED",
     "description": "The user does not have permissions to perform the operation.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AccountReference",
   "description": "The `AccountReference` object provides basic identifying information about the account.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "id",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "DashboardEntityResult",
   "description": "Public schema - `DashboardEntity` result representation for mutations. It's a subset of the `DashboardEntity` that inherits from the Entity type, but a complete different type.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "accountId",
     "description": "The New Relic account where the dashboard is created.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "createdAt",
     "description": "Dashboard creation timestamp.",
     "type": {
      "name": "DateTime",
      "kind": "SCALAR"
     }
    },
    {
     "name": "description",
     "description": "Brief text describing the dashboard.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "guid",
     "description": "Unique entity identifier.",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The name of the dashboard.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "owner",
     "description": "Information of the user that owns the dashboard.",
     "type": {
      "name": "DashboardOwnerInfo",
      "kind": "OBJECT"
     }
    },
    {
     "name": "pages",
     "description": "A nested block of all pages belonging to the dashboard.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "DashboardPage",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "permissions",
     "description": "Dashboard permissions configuration.",
     "type": {
      "name": "DashboardPermissions",
      "kind": "ENUM"
     }
    },
    {
     "name": "updatedAt",
     "description": "Dashboard update timestamp.",
     "type": {
      "name": "DateTime",
      "kind": "SCALAR"
     }
    },
    {
     "name": "variables",
     "description": "Dashboard-local variable definitions.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "DashboardVariable",
       "kind": "OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "UserManagementUserGroup",
   "description": "For users on our New Relic One user model, a \"group\" represents a group of users. Putting users in a group allows the managing of permissions for multiple users at the same time.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "displayName",
     "description": "the name of the object",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "a value that uniquely identifies this object",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AiNotificationsAccountStitchedFields",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "channelSchema",
     "description": "Fetch channel creation schema",
     "type": {
      "name": "AiNotificationsChannelSchemaResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "channelType",
       "description": "Query by channelType",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiNotificationsChannelType",
         "kind": "ENUM"
        }
       }
      },
      {
       "name": "constraints",
       "description": "Channel creation constraints",
       "type": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "AiNotificationsConstraint",
          "kind": "INPUT_OBJECT"
         }
        }
       }
      },
      {
       "name": "destinationId",
       "description": "Query by destinationId",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "product",
       "description": "Product type for schema personalization",
       "type": {
        "name": "AiNotificationsProduct",
        "kind": "ENUM"
       }
      }
     ]
    },
    {
     "name": "channelSuggestions",
     "description": "Fetch a field suggestions list for Channel creation",
     "type": {
      "name": "AiNotificationsSuggestionsResponse",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "channelType",
       "description": "Suggestions channel type",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiNotificationsChannelType",
         "kind": "ENUM"
        }
       }
      },
      {
       "name": "constraints",
       "description": "List of key/value pairs indicating field constraints",
       "type": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "AiNotificationsConstraint",
          "kind": "INPUT_OBJECT"
         }
        }
       }
      },
      {
       "name": "cursor",
       "description": "cursor to get the next batch of results",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "destinationId",
       "description": "Query by destinationId",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "filter",
       "description": "Filter for the suggestions results",
       "type": {
        "name": "AiNotificationsSuggestionFilter",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "key",
       "description": "The field name for which the suggestions are",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "channels",
     "description": "Fetch a Channel by product",
     "type": {
      "name": "AiNotificationsChannelsResponse",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "cursor",
       "description": "cursor to get the next batch of results",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "filters",
       "description": "Query filters",
       "type": {
        "name": "AiNotificationsChannelFilter",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "sorter",
       "description": "Sort object for results",
       "type": {
        "name": "AiNotificationsChannelSorter",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "destinationSuggestions",
     "description": "Fetch a field suggestions list for Destination creation",
     "type": {
      "name": "AiNotificationsSuggestionsResponse",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "constraints",
       "description": "List of key/value pairs indicating field constraints",
       "type": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "AiNotificationsConstraint",
          "kind": "INPUT_OBJECT"
         }
        }
       }
      },
      {
       "name": "cursor",
       "description": "cursor to get the next batch of results",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "destinationType",
       "description": "Suggestions destination type",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiNotificationsDestinationType",
         "kind": "ENUM"
        }
       }
      },
      {
       "name": "filter",
       "description": "Filter for the suggestions results",
       "type": {
        "name": "AiNotificationsSuggestionFilter",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "key",
       "description": "The field name for which the suggestions are",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "destinations",
     "description": "Fetch a Destinations by type",
     "type": {
      "name": "AiNotificationsDestinationsResponse",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "cursor",
       "description": "cursor to get the next batch of results",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "filters",
       "description": "Query filters",
       "type": {
        "name": "AiNotificationsDestinationFilter",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "sorter",
       "description": "Sort object for results",
       "type": {
        "name": "AiNotificationsDestinationSorter",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "oAuthUrl",
     "description": "Get an OAuth URL by destination type",
     "type": {
      "name": "AiNotificationsOAuthUrlResponse",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "redirectUrl",
       "description": "Redirection URL",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "type",
       "description": "Destination type",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiNotificationsDestinationType",
         "kind": "ENUM"
        }
       }
      }
     ]
    },
    {
     "name": "suggestions",
     "description": "Fetch a field suggestions list for Channel creation",
     "type": {
      "name": "AiNotificationsSuggestionsResponse",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "channelType",
       "description": "Suggestions channel type",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiNotificationsChannelType",
         "kind": "ENUM"
        }
       }
      },
      {
       "name": "constraints",
       "description": "List of key/value pairs indicating field constraints",
       "type": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "AiNotificationsConstraint",
          "kind": "INPUT_OBJECT"
         }
        }
       }
      },
      {
       "name": "cursor",
       "description": "cursor to get the next batch of results",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "destinationId",
       "description": "Query by destinationId",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "filter",
       "description": "Filter for the suggestions results",
       "type": {
        "name": "AiNotificationsSuggestionFilter",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "key",
       "description": "The field name for which the suggestions are",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "variables",
     "description": "Fetch a Variables by product",
     "type": {
      "name": "AiNotificationsVariableResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "cursor",
       "description": "cursor to get the next batch of results",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "filters",
       "description": "Query filters",
       "type": {
        "name": "AiNotificationsVariableFilter",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "sorter",
       "description": "Sort object for results",
       "type": {
        "name": "AiNotificationsVariableSorter",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    }
   ]
  },
  {
   "name": "AgentApplicationSettingsSessionTraceMode",
   "description": "Default (fixed_rate) or custom (probabilistic) option used to collect session traces.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "FIXED_RATE",
     "description": "Fixed Rate mode for Session Trace\n(Default) Session traces are randomly sampled and stored at a rate of 90/hour.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "PROBABILISTIC",
     "description": "Probabilistic mode for Session Trace\n(Custom) Opt to collect more session traces using percentage from 0-100.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "CloudAwsNeptuneIntegration",
   "description": "Neptune Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "MultiTenantAuthorizationPermission",
   "description": "An allowed action",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "category",
     "description": "The kind of access",
     "type": {
      "name": "MultiTenantAuthorizationPermissionCategoryEnum",
      "kind": "ENUM"
     }
    },
    {
     "name": "feature",
     "description": "The feature the permission controls access to",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "id",
     "description": "a value that uniquely identifies this object",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "Name of the permission if category is OTHER",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "product",
     "description": "The product the permission controls access to",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "MultiTenantAuthorizationGrantGroup",
   "description": "The group associated to the grant",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "id",
     "description": "The id of the group",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "Nr1CatalogSubmitMetadataError",
   "description": "Information about the error that occurred as a result of submitting metadata",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "description",
     "description": "A human-readable description of the error when submitting metadata",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "field",
     "description": "The field that caused the error when submitting metadata",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "type",
     "description": "The type of error that occurred when submitting metadata",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Nr1CatalogSubmitMetadataErrorType",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "AiNotificationsVariableFilter",
   "description": "Filter variable object",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "active",
     "description": "active",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "key",
     "description": "key",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "label",
     "description": "label",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "name",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "product",
     "description": "product",
     "type": {
      "name": "AiNotificationsProduct",
      "kind": "ENUM"
     }
    }
   ]
  },
  {
   "name": "AiWorkflowsFilters",
   "description": "Filter on the workflow objects",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "channelId",
     "description": "channelId",
     "type": {
      "name": "ID",
      "kind": "SCALAR"
     }
    },
    {
     "name": "destinationType",
     "description": "destinationType",
     "type": {
      "name": "AiWorkflowsDestinationType",
      "kind": "ENUM"
     }
    },
    {
     "name": "enrichmentId",
     "description": "enrichmentId",
     "type": {
      "name": "ID",
      "kind": "SCALAR"
     }
    },
    {
     "name": "filterId",
     "description": "filterId",
     "type": {
      "name": "ID",
      "kind": "SCALAR"
     }
    },
    {
     "name": "guid",
     "description": "guid",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    },
    {
     "name": "id",
     "description": "id",
     "type": {
      "name": "ID",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "name",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nameLike",
     "description": "nameLike",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "workflowEnabled",
     "description": "workflowEnabled",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "CloudAzureLinkAccountInput",
   "description": "Information required to link a Azure account to a NewRelic account.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "applicationId",
     "description": "The Azure account application identifier (used to fetch data).",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "clientSecret",
     "description": "The Azure account application secret key.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SecureValue",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "The linked account name.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "subscriptionId",
     "description": "The Azure account subscription identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "tenantId",
     "description": "The Azure account tenant identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "ServiceLevelObjectiveTimeWindow",
   "description": "The time window configuration of the SLO.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "rolling",
     "description": "The rolling time window configuration of the SLO.",
     "type": {
      "name": "ServiceLevelObjectiveRollingTimeWindow",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "EntityCollection",
   "description": "A collection of user defined Entities and Entity Search queries.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "account",
     "description": "The account the collection is part of",
     "type": {
      "name": "AccountReference",
      "kind": "OBJECT"
     }
    },
    {
     "name": "createdBy",
     "description": "The user who created the collection",
     "type": {
      "name": "UserReference",
      "kind": "OBJECT"
     }
    },
    {
     "name": "definition",
     "description": "The definition of the collection.",
     "type": {
      "name": "EntityCollectionDefinition",
      "kind": "OBJECT"
     }
    },
    {
     "name": "guid",
     "description": "The GUID of the Entity",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    },
    {
     "name": "members",
     "description": "The result of searching for the members of the collection.",
     "type": {
      "name": "EntitySearch",
      "kind": "OBJECT"
     }
    },
    {
     "name": "name",
     "description": "The name of the collection.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "type",
     "description": "The type of Collection",
     "type": {
      "name": "EntityCollectionType",
      "kind": "ENUM"
     }
    }
   ]
  },
  {
   "name": "ServiceLevelIndicator",
   "description": "The definition of the SLI.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The date when the SLI was created represented in the number of milliseconds since the Unix epoch.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochMilliseconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "createdBy",
     "description": "The user who created the SLI.",
     "type": {
      "name": "UserReference",
      "kind": "OBJECT"
     }
    },
    {
     "name": "description",
     "description": "The description of the SLI.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "entityGuid",
     "description": "The entity which the SLI is attached to.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EntityGuid",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "events",
     "description": "The events that define the SLI.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ServiceLevelEvents",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "guid",
     "description": "The unique entity identifier of the SLI.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EntityGuid",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The unique identifier of the SLI.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "The name of the SLI.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "objectives",
     "description": "A list of objective definitions.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ServiceLevelObjective",
        "kind": "OBJECT"
       }
      }
     }
    },
    {
     "name": "resultQueries",
     "description": "The resulting NRQL queries that help consume the metrics of the SLI.",
     "type": {
      "name": "ServiceLevelIndicatorResultQueries",
      "kind": "OBJECT"
     }
    },
    {
     "name": "slug",
     "description": "[DEPRECATED] The slug is deprecated and it will be removed from the schema as soon as possible.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "updatedAt",
     "description": "The date when the SLI was last updated represented in the number of milliseconds since the Unix epoch.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "updatedBy",
     "description": "The user who last update the SLI.",
     "type": {
      "name": "UserReference",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "SemVer",
   "description": "The `SemVer` scalar represents a version designation conforming to the SemVer specification.",
   "kind": "SCALAR"
  },
  {
   "name": "DashboardPage",
   "description": "Page in a dashboard entity.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "Page creation timestamp.",
     "type": {
      "name": "DateTime",
      "kind": "SCALAR"
     }
    },
    {
     "name": "description",
     "description": "Brief text describing the page.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "guid",
     "description": "Unique entity identifier.",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The name of the page.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "owner",
     "description": "Information of the user that owns the page.",
     "type": {
      "name": "DashboardOwnerInfo",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "Page update timestamp.",
     "type": {
      "name": "DateTime",
      "kind": "SCALAR"
     }
    },
    {
     "name": "widgets",
     "description": "A nested block of all widgets belonging to the page.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "DashboardWidget",
       "kind": "OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "AlertsNrqlConditionType",
   "description": "Types of NrqlConditions.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "BASELINE",
     "description": "Baseline NrqlCondition.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "OUTLIER",
     "description": "Outlier NrqlCondition.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "STATIC",
     "description": "Static NrqlCondition.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "DocumentationFields",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "agentFeatures",
     "description": "View a list of all features for a chosen Agent",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "AgentFeatures",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "agentName",
       "description": "The Agent to view data for",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AgentFeaturesFilter",
         "kind": "ENUM"
        }
       }
      }
     ]
    },
    {
     "name": "agentReleases",
     "description": "View a list of all releases for the provided Agent",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "AgentReleasesAgentRelease",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "agentName",
       "description": "The Agent to view data for",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AgentReleasesFilter",
         "kind": "ENUM"
        }
       }
      }
     ]
    },
    {
     "name": "currentAgentRelease",
     "description": "The current release of the provided Agent",
     "type": {
      "name": "AgentReleasesAgentRelease",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "agentName",
       "description": "Only show release notes for this agent",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AgentReleasesFilter",
         "kind": "ENUM"
        }
       }
      }
     ]
    },
    {
     "name": "dataDictionary",
     "description": "This field provides access to DataDictionary data.",
     "type": {
      "name": "DataDictionaryDocsStitchedFields",
      "kind": "OBJECT"
     }
    },
    {
     "name": "timeZones",
     "description": "A list of all the Time Zones from the IANA tz database",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "TimeZoneInfo",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "whatsNew",
     "description": "This field provides access to WhatsNew data.",
     "type": {
      "name": "WhatsNewDocsStitchedFields",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "Nr1CatalogNerdpackItem",
   "description": "Information about an item in a Nerdpack",
   "kind": "INTERFACE",
   "fields": [
    {
     "name": "id",
     "description": "The unique identifier for the Nerdpack item.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metadata",
     "description": "Metadata associated with the Nerdpack item",
     "type": {
      "name": "Nr1CatalogNerdpackItemMetadata",
      "kind": "INTERFACE"
     }
    }
   ],
   "possibleTypes": [
    {
     "name": "Nr1CatalogLauncher",
     "kind": "OBJECT"
    },
    {
     "name": "Nr1CatalogNerdlet",
     "kind": "OBJECT"
    },
    {
     "name": "Nr1CatalogVisualization",
     "kind": "OBJECT"
    }
   ]
  },
  {
   "name": "PixieLinkPixieProjectErrorType",
   "description": "The errors that can be returned when linking a New Relic account and Pixie project",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "ALREADY_LINKED",
     "description": "There is already a linked Pixie project for this New Relic account.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AUTO_CREATION_NOT_SUPPORTED",
     "description": "Automatic Pixie project creation not supported.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "INVALID_NEWRELIC_ACCOUNT",
     "description": "The provided account is not valid.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "INVALID_PIXIE_API_KEY",
     "description": "The provided Pixie API key is not valid.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "UNLINKING_NOT_SUPPORTED",
     "description": "Unlinking is not supported.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AgentApplicationEnableBrowserResult",
   "description": "The result of enabling browser monitoring for an APM-monitored application.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "name",
     "description": "The application's name",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "settings",
     "description": "Fields related to browser settings.",
     "type": {
      "name": "AgentApplicationApmBrowserSettings",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "DashboardAreaWidgetConfiguration",
   "description": "Configuration for visualization type 'viz.area'",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "nrqlQueries",
     "description": "NRQL queries.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "DashboardWidgetNrqlQuery",
       "kind": "OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "DashboardMarkdownWidgetConfigurationInput",
   "description": "Configuration for visualization type 'viz.markdown'. Learn more about [markdown](https://docs.newrelic.com/docs/apis/nerdgraph/examples/create-widgets-dashboards-api/#markdown) widget.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "text",
     "description": "Markdown content of the widget.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "DataSourceGapsGap",
   "description": "A single data source gap associated with an account. The data source gap may also include a specific entity, but not always.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "account",
     "description": "The account associated with the data source gap.",
     "type": {
      "name": "AccountReference",
      "kind": "OBJECT"
     }
    },
    {
     "name": "detectedAt",
     "description": "The time when the data source gap was first detected.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochMilliseconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "entity",
     "description": "The entity associated with the data source gap.",
     "type": {
      "name": "EntityOutline",
      "kind": "INTERFACE"
     }
    },
    {
     "name": "gapType",
     "description": "The type of the data source gap.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "DataSourceGapsGapType",
       "kind": "OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "NrdbResultContainer",
   "description": "A data structure that contains the results of the NRDB query along\nwith other capabilities that enhance those results.\n\nDirect query results are available through `results`, `totalResult` and\n`otherResult`. The query you made is accessible through `nrql`, along with\n`metadata` about the query itself. Enhanced capabilities include\n`eventDefinitions`, `suggestedFacets` and more.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "currentResults",
     "description": "In a `COMPARE WITH` query, the `currentResults` contain the results for the current comparison time window.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "NrdbResult",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "embeddedChartUrl",
     "description": "Generate a publicly sharable Embedded Chart URL for the NRQL query.\n\nFor more details, see [our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/query-nrql-through-new-relic-graphql-api#embeddable-charts).",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     },
     "args": [
      {
       "name": "chartType",
       "description": "The type of chart visualization you want rendered.\n\nWe will default to the best fit for the provided NRQL query if omitted.",
       "type": {
        "name": "EmbeddedChartType",
        "kind": "ENUM"
       }
      }
     ]
    },
    {
     "name": "eventDefinitions",
     "description": "Retrieve a list of event type definitions, providing descriptions\nof the event types returned by this query, as well as details\nof their attributes.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EventDefinition",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "metadata",
     "description": "Metadata about the query and result.",
     "type": {
      "name": "NrdbMetadata",
      "kind": "OBJECT"
     }
    },
    {
     "name": "nrql",
     "description": "The [NRQL](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/nrql-resources/nrql-syntax-components-functions) query that was executed to yield these results.",
     "type": {
      "name": "Nrql",
      "kind": "SCALAR"
     }
    },
    {
     "name": "otherResult",
     "description": "In a `FACET` query, the `otherResult` contains the aggregates representing the events _not_\ncontained in an individual `results` facet.",
     "type": {
      "name": "NrdbResult",
      "kind": "SCALAR"
     }
    },
    {
     "name": "previousResults",
     "description": "In a `COMPARE WITH` query, the `previousResults` contain the results for the previous comparison time window.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "NrdbResult",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "queryProgress",
     "description": "Metadata about the execution of an asynchronous NRQL query.",
     "type": {
      "name": "NrdbQueryProgress",
      "kind": "OBJECT"
     }
    },
    {
     "name": "rawResponse",
     "description": "The raw query results exactly as they are returned from NRDB. NerdGraph provides no additional transformation.",
     "type": {
      "name": "NrdbRawResults",
      "kind": "SCALAR"
     }
    },
    {
     "name": "results",
     "description": "The query results. This is a flat list of objects who's structure matches the query submitted.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "NrdbResult",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "staticChartUrl",
     "description": "Generate a publicly sharable static chart URL for the NRQL query.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     },
     "args": [
      {
       "name": "chartType",
       "description": "The type of static chart visualization you want rendered.\n\nWe will default to the best fit for the provided NRQL query if omitted.",
       "type": {
        "name": "ChartImageType",
        "kind": "ENUM"
       }
      },
      {
       "name": "format",
       "description": "The type of static chart format you want rendered.",
       "type": {
        "name": "ChartFormatType",
        "kind": "ENUM"
       },
       "defaultValue": "PNG"
      },
      {
       "name": "height",
       "description": "The height of static chart format you want rendered.",
       "type": {
        "name": "Int",
        "kind": "SCALAR"
       }
      },
      {
       "name": "width",
       "description": "The width of static chart format you want rendered.",
       "type": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "suggestedFacets",
     "description": "Retrieve a list of suggested NRQL facets for this NRDB query, to be used with\nthe `FACET` keyword in NRQL.\n\nResults are based on historical query behaviors.\n\nIf the query already has a `FACET` clause, it will be ignored for the purposes\nof suggesting facets.\n\nFor more details, see [our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/nerdgraph-graphiql-nrql-tutorial#suggest-facets).",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "NrqlFacetSuggestion",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "suggestedQueries",
     "description": "Suggested queries that could help explain an anomaly in your timeseries based on either statistical differences in the data or historical usage.\n\nIf no `anomalyTimeWindow` is supplied, we will attempt to detect a spike in the NRQL results. If no spike is found, the suggested query results will be empty.\n\nInput NRQL must be a TIMESERIES query and must have exactly one result.",
     "type": {
      "name": "SuggestedNrqlQueryResponse",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "anomalyTimeWindow",
       "description": "The time window of a specific anomaly in milliseconds since Epoch time.",
       "type": {
        "name": "TimeWindowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "totalResult",
     "description": "In a `FACET` query, the `totalResult` contains the aggregates representing _all_ the events,\nwhether or not they are contained in an individual `results` facet.",
     "type": {
      "name": "NrdbResult",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "EntityRelationshipUserDefinedDeleteResult",
   "description": "The result of the entityRelationshipUserDefinedDelete mutation.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "errors",
     "description": "The list of errors that occurred when executing the mutation.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityRelationshipUserDefinedDeleteResultError",
        "kind": "OBJECT"
       }
      }
     }
    }
   ]
  },
  {
   "name": "SyntheticsDaysOfWeek",
   "description": "Configuration options for a monthly monitor downtime that runs on days of the week",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "ordinalDayOfMonth",
     "description": "Which occurrence of the day selected within the month",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SyntheticsMonitorDowntimeDayOfMonthOrdinal",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "weekDay",
     "description": "Which day of the week the monitor downtime runs",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SyntheticsMonitorDowntimeWeekDays",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "CloudCloudtrailIntegration",
   "description": "CloudTrail Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "MultiTenantAuthorizationRoleTypeInputFilter",
   "description": "Provides all the available filters on the role type",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "eq",
     "description": "performs an equals operation",
     "type": {
      "name": "MultiTenantAuthorizationRoleTypeEnum",
      "kind": "ENUM"
     }
    }
   ]
  },
  {
   "name": "InfrastructureHostEntity",
   "description": "An Infrastructure Host entity.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "account",
     "type": {
      "name": "AccountOutline",
      "kind": "OBJECT"
     }
    },
    {
     "name": "accountId",
     "description": "The New Relic account ID associated with this entity.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "alertSeverity",
     "description": "The current alerting severity of the entity.",
     "type": {
      "name": "EntityAlertSeverity",
      "kind": "ENUM"
     }
    },
    {
     "name": "alertViolations",
     "description": "Violations on the entity that were open during the specified time window. This will return up to 500 violations - if there are more in the time window selected, you must narrow the time window or look at fewer entities.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityAlertViolation",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "endTime",
       "description": "End of time window for violations.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EpochMilliseconds",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "startTime",
       "description": "Start of time window for violations.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EpochMilliseconds",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "deploymentSearch",
     "description": "Retrieve the deployment event(s). Ordered by timestamp DESC.",
     "type": {
      "name": "ChangeTrackingDeploymentSearchResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "filter",
       "description": "Contains the set of filters to apply to the query.",
       "type": {
        "name": "ChangeTrackingSearchFilter",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "domain",
     "description": "The entity's domain",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "entityType",
     "description": "A value representing the combination of the entity's domain and type.",
     "type": {
      "name": "EntityType",
      "kind": "ENUM"
     }
    },
    {
     "name": "firstIndexedAt",
     "description": "The date of last time the entity has updated any of its fields.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "goldenMetrics",
     "description": "The list of golden metrics for a specific entity",
     "type": {
      "name": "EntityGoldenContextScopedGoldenMetrics",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden metrics",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "timeWindow",
       "description": "Time range to apply to the golden metric NRQL query result field",
       "type": {
        "name": "EntityGoldenNrqlTimeWindowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "goldenTags",
     "description": "The list of golden tags for a specific entityType.",
     "type": {
      "name": "EntityGoldenContextScopedGoldenTags",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden tags",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "guid",
     "description": "A unique entity identifier.",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    },
    {
     "name": "hostSummary",
     "type": {
      "name": "InfrastructureHostSummaryData",
      "kind": "OBJECT"
     }
    },
    {
     "name": "indexedAt",
     "description": "The time the entity was indexed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "lastReportingChangeAt",
     "description": "The last time the entity's reporting status changed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The name of this entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nerdStorage",
     "type": {
      "name": "NerdStorageEntityScope",
      "kind": "OBJECT"
     }
    },
    {
     "name": "nrdbQuery",
     "description": "Make an `Entity` scoped query to NRDB with a NRQL string.\n\nA relevant `WHERE` clause will be added to your query to scope data to the entity in question.\n\nSee the [NRQL Docs](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/nrql-resources/nrql-syntax-components-functions) for more information about generating a query string.",
     "type": {
      "name": "NrdbResultContainer",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "async",
       "description": "When true, the query will begin asynchronous resolution after the allotted `timeout`. Include `queryProgress` fields in your GraphQL query to receive the information you will need to poll the `nrdbQueryProgress` field for the results of your async NRQL query.\n\nSee [this page](https://docs.newrelic.com/docs/apis/nerdgraph/examples/async-queries-nrql-tutorial) for additional asynchronous query documentation.",
       "type": {
        "name": "Boolean",
        "kind": "SCALAR"
       },
       "defaultValue": "false"
      },
      {
       "name": "nrql",
       "description": "The [NRQL](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/nrql-resources/nrql-syntax-components-functions) query string.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Nrql",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "options",
       "description": "Additional options for NRQL queries.",
       "type": {
        "name": "NrqlQueryOptions",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "timeout",
       "description": "The timeout we will apply to the NRQL Query. The value will be clamped to between 5 and 120 seconds and defaults to 5 seconds.\n\nFor `async` queries, if the query is still incomplete after this amount of time, resolution will become asynchronous and return `queryProgress` data if requested.",
       "type": {
        "name": "Seconds",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "nrdbQueryProgress",
     "description": "Poll for the results of a previously-executed asychronous NRDB query.\n\nThe `queryId` is available in the `queryProgress` data returned by the original asynchronous query.\n\nSee [this page](https://docs.newrelic.com/docs/apis/nerdgraph/examples/async-queries-nrql-tutorial) for additional asynchronous query documentation.",
     "type": {
      "name": "NrdbResultContainer",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "queryId",
       "description": "A token for retrieving the results of a previously executed asynchronous query.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "permalink",
     "description": "The url to the entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "recentAlertViolations",
     "description": "Recent violations on the entity.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityAlertViolation",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "count",
       "description": "The desired number of alert violations to be returned.",
       "type": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "relatedEntities",
     "description": "Related entities result with optional filtering.",
     "type": {
      "name": "EntityRelationshipRelatedEntitiesResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "cursor",
       "description": "The cursor to fetch paginated results.",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "filter",
       "description": "Apply an optional filter to the related entities.",
       "type": {
        "name": "EntityRelationshipEdgeFilter",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "limit",
       "description": "A limit to apply to the number of relationships returned. Note: this option can only lower the default limits (2000 relationships).",
       "type": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "relationships",
     "description": "A list of the entities' relationships.\n\nFor more information, visit [our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/graphql-relationships-api-tutorial).",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityRelationship",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "endTime",
       "description": "Return relationships as they existed in the past. The duration of the time window queried is fixed at 75 minutes.",
       "type": {
        "name": "EpochMilliseconds",
        "kind": "SCALAR"
       }
      },
      {
       "name": "filter",
       "description": "Apply an optional filter to the relationships.",
       "type": {
        "name": "EntityRelationshipFilter",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "reporting",
     "description": "The reporting status of the entity. If New Relic is successfully collecting data from your application, this will be true.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "serviceLevel",
     "description": "The service level defined for the entity.",
     "type": {
      "name": "ServiceLevelDefinition",
      "kind": "OBJECT"
     }
    },
    {
     "name": "tags",
     "description": "The tags applied to the entity.\n\nFor details on tags, as well as query and mutation examples, visit [our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/graphql-tagging-api-tutorial).",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityTag",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "tagsWithMetadata",
     "description": "The tags applied to the entity with their metadata.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityTagWithMetadata",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "tracingSummary",
     "description": "Look up Distributed Tracing summary data for the selected `EntityGuid`",
     "type": {
      "name": "DistributedTracingEntityTracingSummary",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "timeWindow",
       "description": "The start and end of the tracing data. Defaults to the last 30 minutes",
       "type": {
        "name": "TimeWindowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "type",
     "description": "The entity's type",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ],
   "interfaces": [
    {
     "name": "AlertableEntity",
     "kind": "INTERFACE"
    },
    {
     "name": "Entity",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "AuthorizationManagementGroup",
   "description": "For users on our New Relic One user model, a \"group\" represents a group of users. Putting users in a group allows the managing of permissions for multiple users at the same time.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "displayName",
     "description": "the name of the object",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "a value that uniquely identifies this object",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "roles",
     "description": "container for roles enabling cursor based pagination",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AuthorizationManagementGrantedRoleSearch",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "cursor",
       "description": "the cursor from the previous request, to get   the next page",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "id",
       "description": "a list of ids to filter returned objects by",
       "type": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "ID",
          "kind": "SCALAR"
         }
        }
       }
      },
      {
       "name": "roleId",
       "description": "a list of ids to filter returned objects by",
       "type": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "ID",
          "kind": "SCALAR"
         }
        }
       }
      }
     ]
    }
   ]
  },
  {
   "name": "OrganizationCreateOrganizationResponse",
   "description": "The object that's returned from successfully creating an organization.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "jobId",
     "description": "The job id of the organization creation task; query this job id to get latest state",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AlertsPoliciesSearchCriteriaInput",
   "description": "Search criteria for returning specific policies.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "ids",
     "description": "The list of policy ids to return.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "name",
     "description": "Exact name of the policy.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nameLike",
     "description": "String to partially match a policy name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "EntityGoldenContextInput",
   "description": "Input type used to define the context for the golden metrics.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "account",
     "description": "Account context.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "guid",
     "description": "Collection guid context.",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "CloudAzureMonitorIntegrationInput",
   "description": "Azure Monitor metrics",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "enabled",
     "description": "Specify if integration is active",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "excludeTags",
     "description": "Specify resource tags (in 'key:value' form) associated with the resources that you want to exclude from monitoring. Exclusion takes precedence over inclusion.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "includeTags",
     "description": "Specify resource tags (in 'key:value' form) associated with the resources that you want to monitor. If empty, all resources will be monitored.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "The polling interval for metadata and tags, in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The polling interval for metrics, in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "resourceGroups",
     "description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "resourceTypes",
     "description": "Specify each Azure resource type that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "WorkloadCollectionWithoutStatus",
   "description": "A user defined group of entities without Status",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "account",
     "description": "The account the workload belongs to.",
     "type": {
      "name": "AccountReference",
      "kind": "OBJECT"
     }
    },
    {
     "name": "createdAt",
     "description": "The moment when the object was created, represented in milliseconds since the Unix epoch.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochMilliseconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "createdBy",
     "description": "The user who created the workload.",
     "type": {
      "name": "UserReference",
      "kind": "OBJECT"
     }
    },
    {
     "name": "description",
     "description": "Relevant information about the workload.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "entities",
     "description": "A list of entity GUIDs. These entities will belong to the collection as long as their accounts are included in the scope accounts of the collection.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "WorkloadEntityRef",
        "kind": "OBJECT"
       }
      }
     }
    },
    {
     "name": "entitySearchQueries",
     "description": "A list of entity search queries. The resulting entities will be limited to the scope accounts of the collection.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "WorkloadEntitySearchQuery",
        "kind": "OBJECT"
       }
      }
     }
    },
    {
     "name": "entitySearchQuery",
     "description": "The entity search query that returns the full collection of entities.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "guid",
     "description": "The unique entity identifier of the workload in New Relic.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EntityGuid",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The unique identifier of the workload.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "The workload's name.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "permalink",
     "description": "The URL of the workload.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "scopeAccounts",
     "description": "Accounts that will be used to get entities from.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "WorkloadScopeAccounts",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "statusConfig",
     "description": "The configuration that defines how the status of the workload is calculated.",
     "type": {
      "name": "WorkloadStatusConfig",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The moment when the object was last updated, represented in milliseconds since the Unix epoch.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "updatedBy",
     "description": "The user who last updated the workload.",
     "type": {
      "name": "UserReference",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "CloudAzureSqlIntegrationInput",
   "description": "Azure SQL Database",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "resourceGroups",
     "description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "StackTraceMobileCrashStackTrace",
   "description": "A structured representation of a stack trace of a crash in a mobile application.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "frames",
     "description": "Stack trace frames.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "StackTraceMobileCrashStackTraceFrame",
       "kind": "OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "OrganizationOrganizationCreateJobIdInput",
   "description": "The id of the job to retrieve",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "eq",
     "description": "An organization create job id",
     "type": {
      "name": "ID",
      "kind": "SCALAR"
     }
    },
    {
     "name": "in",
     "description": "A set of job ids to search for",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    }
   ]
  },
  {
   "name": "BrowserApplicationEntityOutline",
   "description": "A Browser Application entity outline.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "account",
     "type": {
      "name": "AccountOutline",
      "kind": "OBJECT"
     }
    },
    {
     "name": "accountId",
     "description": "The New Relic account ID associated with this entity.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "agentInstallType",
     "description": "The type of Browser agent installed for this application.",
     "type": {
      "name": "BrowserAgentInstallType",
      "kind": "ENUM"
     }
    },
    {
     "name": "alertSeverity",
     "description": "The current alerting severity of the entity.",
     "type": {
      "name": "EntityAlertSeverity",
      "kind": "ENUM"
     }
    },
    {
     "name": "applicationId",
     "description": "The ID of the Browser App.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "browserSummary",
     "description": "Summary statistics about the Browser App.",
     "type": {
      "name": "BrowserApplicationSummaryData",
      "kind": "OBJECT"
     }
    },
    {
     "name": "domain",
     "description": "The entity's domain",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "entityType",
     "description": "A value representing the combination of the entity's domain and type.",
     "type": {
      "name": "EntityType",
      "kind": "ENUM"
     }
    },
    {
     "name": "firstIndexedAt",
     "description": "The date of last time the entity has updated any of its fields.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "goldenMetrics",
     "description": "The list of golden metrics for a specific entity",
     "type": {
      "name": "EntityGoldenContextScopedGoldenMetrics",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden metrics",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "timeWindow",
       "description": "Time range to apply to the golden metric NRQL query result field",
       "type": {
        "name": "EntityGoldenNrqlTimeWindowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "goldenTags",
     "description": "The list of golden tags for a specific entityType.",
     "type": {
      "name": "EntityGoldenContextScopedGoldenTags",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden tags",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "guid",
     "description": "A unique entity identifier.",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    },
    {
     "name": "indexedAt",
     "description": "The time the entity was indexed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "lastReportingChangeAt",
     "description": "The last time the entity's reporting status changed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The name of this entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "permalink",
     "description": "The url to the entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "reporting",
     "description": "The reporting status of the entity. If New Relic is successfully collecting data from your application, this will be true.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "runningAgentVersions",
     "description": "The running versions of the agent in the Browser App.",
     "type": {
      "name": "BrowserApplicationRunningAgentVersions",
      "kind": "OBJECT"
     }
    },
    {
     "name": "serviceLevel",
     "description": "The service level defined for the entity.",
     "type": {
      "name": "ServiceLevelDefinition",
      "kind": "OBJECT"
     }
    },
    {
     "name": "servingApmApplicationId",
     "description": "The ID of the APM Application that serves this Browser App.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "settings",
     "description": "Configuration settings for the Browser App",
     "type": {
      "name": "BrowserApplicationSettings",
      "kind": "OBJECT"
     }
    },
    {
     "name": "tags",
     "description": "The tags applied to the entity.\n\nFor details on tags, as well as query and mutation examples, visit [our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/graphql-tagging-api-tutorial).",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityTag",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "type",
     "description": "The entity's type",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ],
   "interfaces": [
    {
     "name": "AlertableEntityOutline",
     "kind": "INTERFACE"
    },
    {
     "name": "EntityOutline",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "OrganizationAccountNameFilterInput",
   "description": "A filter for Account name",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "contains",
     "description": "Search text for an account name",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "Nr1CatalogTargetedInstallPlanDirective",
   "description": "Information about a targeted install plan directive",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "mode",
     "description": "The mode of the install plan directive",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Nr1CatalogInstallPlanDirectiveMode",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "recipeName",
     "description": "The name of the recipe used for the installation",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "Nr1CatalogInstallPlanDirective",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "AlertsOpsGenieNotificationChannelConfig",
   "description": "Configuration for OpsGenie notification channel.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "apiKey",
     "description": "API key.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SecureValue",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "dataCenterRegion",
     "description": "OpsGenie data center region.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsOpsGenieDataCenterRegion",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "recipients",
     "description": "List of email recipients.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "tags",
     "description": "Tags.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "teams",
     "description": "Teams.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    }
   ]
  },
  {
   "name": "SyntheticsUpdateScriptBrowserMonitorInput",
   "description": "The monitor values that can be updated on a Script Browser monitor",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "advancedOptions",
     "description": "The monitor advanced options",
     "type": {
      "name": "SyntheticsScriptBrowserMonitorAdvancedOptionsInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "apdexTarget",
     "description": "The monitor's Apdex target used to populate SLA reports",
     "type": {
      "name": "Float",
      "kind": "SCALAR"
     }
    },
    {
     "name": "browsers",
     "description": "The browser(s) that the monitor will use to run jobs",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "SyntheticsBrowser",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "devices",
     "description": "The device(s) that the monitor will use to run jobs",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "SyntheticsDevice",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "locations",
     "description": "The locations the monitor will run from",
     "type": {
      "name": "SyntheticsScriptedMonitorLocationsInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "name",
     "description": "The human readable identifier for the monitor",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "period",
     "description": "The interval at which the monitor runs in minutes",
     "type": {
      "name": "SyntheticsMonitorPeriod",
      "kind": "ENUM"
     }
    },
    {
     "name": "runtime",
     "description": "The runtime that the monitor will use to run jobs",
     "type": {
      "name": "SyntheticsRuntimeInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "script",
     "description": "The script that the monitor runs",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "status",
     "description": "The run state of the monitor",
     "type": {
      "name": "SyntheticsMonitorStatus",
      "kind": "ENUM"
     }
    },
    {
     "name": "tags",
     "description": "The tags that will be associated with the monitor",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "SyntheticsTag",
       "kind": "INPUT_OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "CloudIamIntegrationInput",
   "description": "AWS Identity and Access Management (IAM)",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "tagKey",
     "description": "Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "tagValue",
     "description": "Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AuthorizationManagementAccountAccessGrant",
   "description": "The Account and Role a Group should have access to",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "accountId",
     "description": "The Account ID the Role will grant access to",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "roleId",
     "description": "The Role ID that will define the access",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AiIssuesFilterIncidentsEvents",
   "description": "Filter incidents events",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "entityGuids",
     "description": "entityGuids",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "entityTypes",
     "description": "entityTypes",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "ids",
     "description": "ids",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    }
   ]
  },
  {
   "name": "DataSourceGapsGapsResult",
   "description": "A data structure that contains the detailed response of a query for data source gaps.\n\nThe direct query result is available through `results`.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "nextCursor",
     "description": "The cursor used to fetch the next set of paginated results.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "results",
     "description": "The list of data source gaps that match the provided query.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "DataSourceGapsGap",
        "kind": "OBJECT"
       }
      }
     }
    },
    {
     "name": "totalCount",
     "description": "The total number of data source gaps that match the provided query, regardless of pagination.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AiIssuesIssueUserAction",
   "description": "User operations with issue",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "ACK",
     "description": "Acknowledge issue",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "RESOLVE",
     "description": "Resolve issue",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "UNACK",
     "description": "Unacknowledge issue",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "DataManagementFeatureSetting",
   "description": "Feature Setting",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "enabled",
     "description": "Enabled state for the feature setting",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "key",
     "description": "Key to identify the feature setting",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "locked",
     "description": "Locked state for the feature setting",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "Unique name for the feature setting",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "MultiTenantIdentityUserNotGroupIdInput",
   "description": "Filters by group id",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "eq",
     "description": "A group id",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "DataManagementBulkCopyResult",
   "description": "Result for bulk retention copy to an account",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "failure",
     "description": "The failure destination accounts",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "success",
     "description": "The successful destination accounts",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "NerdStorageScope",
   "description": "The access level of the NerdStorage data.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "ACCOUNT",
     "description": "Account-level storage.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "ACTOR",
     "description": "Actor-level storage.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "ENTITY",
     "description": "Entity-level storage.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "CloudAzureAppgatewayIntegrationInput",
   "description": "App Gateway",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "resourceGroups",
     "description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "DashboardLiveUrlOptionsInput",
   "description": "Options to configure the live url",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "ttl",
     "description": "The amount of time (in seconds) until the Live Url becomes unavailable from the date on which the operation is executed. Min value of 300 (5 minutes). Max value of 631,152,000 (20 year). When it is not set, by default 2,592,000 (30 days) will be used.",
     "type": {
      "name": "Seconds",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "EntitySearchSortCriteria",
   "description": "Possible entity sorting criteria.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "ALERT_SEVERITY",
     "description": "Sort by alert severity.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "DOMAIN",
     "description": "Sort by entity domain.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "MOST_RELEVANT",
     "description": "Sort by relevance. Note that these results can't be paginated.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NAME",
     "description": "Sort by entity name.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "REPORTING",
     "description": "Sort by reporting state.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "TYPE",
     "description": "Sort by entity type.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AgentApplicationSettingsBrowserAjax",
   "description": "Enables ajax traces in the browser app.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "denyList",
     "description": "List of domains excluded from Ajax traces by the browser agent.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    }
   ]
  },
  {
   "name": "Nr1CatalogQuickstartAlertMetadata",
   "description": "Metadata associated with the alert in a quickstart",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "description",
     "description": "A short form description for the alert.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "displayName",
     "description": "The human-readable name for the alert.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ],
   "interfaces": [
    {
     "name": "Nr1CatalogQuickstartComponentMetadata",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "SyntheticsMonitorCreateError",
   "description": "Error object for Synthetics monitor creation request",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "description",
     "description": "String description of error",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "type",
     "description": "Enum of error that was returned during monitor creation",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SyntheticsMonitorCreateErrorType",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "CloudDynamodbIntegrationInput",
   "description": "Amazon DynamoDB",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "fetchExtendedInventory",
     "description": "Determine if extra inventory data be collected or not. May affect total data collection time and contribute to the Cloud provider API rate limit.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "fetchTags",
     "description": "Specify if tags should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "tagKey",
     "description": "Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "tagValue",
     "description": "Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "OrganizationOrganizationGroupFilterInput",
   "description": "A filter for organization groups",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "id",
     "description": "The id of the organization group",
     "type": {
      "name": "OrganizationOrganizationGroupIdInputFilter",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "name",
     "description": "The name of the organization group",
     "type": {
      "name": "OrganizationOrganizationGroupNameInputFilter",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "organizationId",
     "description": "The ID of the organization",
     "type": {
      "name": "OrganizationOrganizationGroupOrganizationIdInputFilter",
      "kind": "INPUT_OBJECT"
     }
    }
   ]
  },
  {
   "name": "AlertsPolicy",
   "description": "Container for conditions with associated notifications channels.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "accountId",
     "description": "Account ID of the policy.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "Primary key for policies.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "incidentPreference",
     "description": "Determines how incidents are created for critical violations of the conditions contained in the policy.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsIncidentPreference",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "name",
     "description": "Description of the policy.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "LogConfigurationsDataPartitionRuleMatchingCriteria",
   "description": "The data partition rule matching criteria.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "attributeName",
     "description": "The attribute name against which this matching condition will be evaluated.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "matchingExpression",
     "description": "The matching expression of the data partition rule definition.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "matchingOperator",
     "description": "The matching method of the data partition rule definition.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "LogConfigurationsDataPartitionRuleMatchingOperator",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "AlertsNrqlConditionQueryInput",
   "description": "Information for generating the condition NRQL query.\nThe output of data from this NRQL query will be compared to the condition terms to detect violations.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "dataAccountId",
     "description": "**BETA PREVIEW:** the `dataAccountId` field is in limited release and only enabled for preview on a per-account basis.\nThe New Relic account ID to use as the basis for the NRQL alert condition's `query`; will default to the condition's account ID if unspecified.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "evaluationOffset",
     "description": "Deprecated; superseded by `signal.aggregationMethod` with `signal.aggregationDelay` or `signal.aggregationTimer`.\n\nBy default, we evaluate the NRQL query in one-minute time windows. Start time depends on the value you select in the NRQL condition's `evaluationOffset`. Evaluation offset cannot be greater than 60 minutes.\n\nThis value is the number of time windows we look back at the aggregated.\n\nExample: With an `evaluationOffset` of 3, the NRQL time window applied to your query will be:\n\n`SINCE 3 minutes ago UNTIL 2 minutes ago`",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "query",
     "description": "NRQL syntax that defines the query.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Nrql",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "CloudAwsGlueIntegrationInput",
   "description": "Glue",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "NrqlDropRulesErrorReason",
   "description": "General error categories.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "FEATURE_FLAG_DISABLED",
     "description": "Targeted account does not have access to this feature.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "GENERAL",
     "description": "Other errors.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "INVALID_INPUT",
     "description": "Something about the request was invalid.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "INVALID_QUERY",
     "description": "The provided NRQL string was ill formed or used invalid features.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "RULE_NOT_FOUND",
     "description": "The drop rule being acted upon did not exist.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "USER_NOT_AUTHORIZED",
     "description": "The current user does not have authority to perform the given action.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "Consumption",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "customerId",
     "description": "The `Consumption` object provides consumption data about a user.",
     "type": {
      "name": "ID",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AiTopologyCollectorAttributeInput",
   "description": "A key-value entry.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "key",
     "description": "Key of entry.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "value",
     "description": "Value of entry.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AlertsNotificationChannelUpdateResponse",
   "description": "The response for updating a notification channel.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "error",
     "description": "Error.",
     "type": {
      "name": "AlertsNotificationChannelUpdateError",
      "kind": "OBJECT"
     }
    },
    {
     "name": "notificationChannel",
     "description": "Notification channel.",
     "type": {
      "name": "AlertsNotificationChannelMutation",
      "kind": "UNION"
     }
    }
   ]
  },
  {
   "name": "AlertsWebhookNotificationChannelCreateInput",
   "description": "The input for creating a new Webhook notification channel.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "baseUrl",
     "description": "Base URL.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "basicAuth",
     "description": "Basic auth.",
     "type": {
      "name": "AlertsWebhookBasicAuthMutationInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "customHttpHeaders",
     "description": "Custom HTTP headers.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AlertsWebhookCustomHeaderMutationInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    },
    {
     "name": "customPayloadBody",
     "description": "Custom payload body.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "customPayloadType",
     "description": "Custom payload type.",
     "type": {
      "name": "AlertsWebhookCustomPayloadType",
      "kind": "ENUM"
     }
    },
    {
     "name": "name",
     "description": "Notification channel name.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "CloudAwsQldbIntegration",
   "description": "QLDB Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "CloudAzureFirewallsIntegration",
   "description": "Firewalls Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "resourceGroups",
     "description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "CloudBaseProvider",
   "description": "Base Provider Object",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "icon",
     "description": "The cloud provider icon name.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud provider identifier in NewRelic.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "The cloud provider name.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "Get details of one cloud provider service.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "slug",
       "description": "The cloud provider short name.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "services",
     "description": "Get details of all the cloud provider services available for integration.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "CloudService",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "slug",
     "description": "The cloud provider short name.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "templateParams",
     "description": "Get template params of one cloud provider service.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "CloudTemplateParam",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudProvider",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "PixieAccountStitchedFields",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "linkedPixieProject",
     "description": "Details for the linked Pixie project",
     "type": {
      "name": "PixiePixieProject",
      "kind": "OBJECT"
     }
    },
    {
     "name": "pixieAccessToken",
     "description": "Get a Pixie access token",
     "type": {
      "name": "SecureValue",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AlertsXMattersNotificationChannelUpdateInput",
   "description": "The input for updating an existing xMatters notification channel.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "integrationUrl",
     "description": "Integration URL.",
     "type": {
      "name": "SecureValue",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "Notification channel name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AiNotificationsError",
   "description": "Error object",
   "kind": "UNION",
   "possibleTypes": [
    {
     "name": "AiNotificationsConstraintsError",
     "kind": "OBJECT"
    },
    {
     "name": "AiNotificationsDataValidationError",
     "kind": "OBJECT"
    },
    {
     "name": "AiNotificationsResponseError",
     "kind": "OBJECT"
    },
    {
     "name": "AiNotificationsSuggestionError",
     "kind": "OBJECT"
    }
   ]
  },
  {
   "name": "AiTopologyVertexClass",
   "description": "Class of vertex.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "APPLICATION",
     "description": "Vertex class is application",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "BROWSERAPPLICATION",
     "description": "Vertex class is browserapplication",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "CLOUDSERVICE",
     "description": "Vertex class is cloudservice",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "CLUSTER",
     "description": "Vertex class is cluster",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "DATASTORE",
     "description": "Vertex class is datastore",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "HOST",
     "description": "Vertex class is host",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "MONITOR",
     "description": "Vertex class is monitor",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "TEAM",
     "description": "Vertex class is team",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AiDecisionsOpinion",
   "description": "Types of opinions users can leave as feedback.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "DISLIKE",
     "description": "A dislike opinion",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "LIKE",
     "description": "A like opinion",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "QueryHistoryNrqlHistoryResult",
   "description": "Represents the result of the query history record.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "accountIds",
     "description": "List of cross accounts where the query is executed.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "createdAt",
     "description": "The time the query was created as an ISO8601 formatted string.",
     "type": {
      "name": "DateTime",
      "kind": "SCALAR"
     }
    },
    {
     "name": "query",
     "description": "Query executed.",
     "type": {
      "name": "Nrql",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "MultiTenantAuthorizationRoleSortInput",
   "description": "Provides the field and direction the result should be sorted",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "direction",
     "description": "The direction the field should be sorted",
     "type": {
      "name": "MultiTenantAuthorizationSortDirectionEnum",
      "kind": "ENUM"
     }
    },
    {
     "name": "key",
     "description": "The field which should be sorted",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "MultiTenantAuthorizationRoleSortEnum",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "MultiTenantIdentityGroupIdInput",
   "description": "The input object representing parameters for the ID input filter",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "eq",
     "description": "A group ID",
     "type": {
      "name": "ID",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "Nr1CatalogDashboardTemplate",
   "description": "Information about a dashboard template",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "id",
     "description": "The unique identifier for the dashboard template",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metadata",
     "description": "Metadata associated with the dashboard template",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Nr1CatalogDashboardTemplateMetadata",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "supportLevel",
     "description": "Level of support expected for the dashboard template",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Nr1CatalogSupportLevel",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "updatedAt",
     "description": "A timestamp that indicates when the dashboard template was last updated",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "DateTime",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AiNotificationsFieldError",
   "description": "Invalid field object",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "field",
     "description": "Field name",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "message",
     "description": "Validation error",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AgentApplicationSettingsUpdateResult",
   "description": "The result of updating application settings.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "alias",
     "description": "The name for the application.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "apmSettings",
     "description": "Access general settings for the application.",
     "type": {
      "name": "AgentApplicationSettingsApmBase",
      "kind": "OBJECT"
     }
    },
    {
     "name": "browserProperties",
     "description": "Access general properties for the application.",
     "type": {
      "name": "AgentApplicationSettingsBrowserProperties",
      "kind": "OBJECT"
     }
    },
    {
     "name": "browserSettings",
     "description": "Access general settings for the browser application.",
     "type": {
      "name": "AgentApplicationSettingsBrowserBase",
      "kind": "OBJECT"
     }
    },
    {
     "name": "errors",
     "description": "Information about any errors encountered while updating values.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "AgentApplicationSettingsUpdateError",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "guid",
     "description": "The GUID for the affected Entity.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EntityGuid",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "mobileSettings",
     "description": "Access mobile settings for the application.",
     "type": {
      "name": "AgentApplicationSettingsMobileBase",
      "kind": "OBJECT"
     }
    },
    {
     "name": "name",
     "description": "The name for the application.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "CloudTemplateParam",
   "description": "Provider template form params",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "autocomplete",
     "description": "The provider template param autocomplete.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "immutable",
     "description": "The provider template param immutable.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "label",
     "description": "The provider template param label.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The provider template param name.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "placeholder",
     "description": "The provider template param placeholder.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "type",
     "description": "The provider template param type.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AgentApplicationSettingsMaskInputOptionsInput",
   "description": "Mask specific kinds of input options as *.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "color",
     "description": "Mask 'color' input type.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "date",
     "description": "Mask 'date' input type.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "datetimeLocal",
     "description": "Mask 'datetime_local' input type.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "email",
     "description": "Mask 'email' input type.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "month",
     "description": "Mask 'month' input type.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "number",
     "description": "Mask 'number' input type.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "range",
     "description": "Mask 'range' input type.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "search",
     "description": "Mask 'search' input type.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "select",
     "description": "Mask 'select' input type.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "tel",
     "description": "Mask 'tel' input type.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "text",
     "description": "Mask 'text' input type.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "textArea",
     "description": "Mask 'textarea' input type.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "time",
     "description": "Mask 'time' input type.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "url",
     "description": "Mask 'url' input type.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "week",
     "description": "Mask 'week' input type.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "SyntheticsExtendedTypeMonitorRuntime",
   "description": "The runtime that a step monitor runs",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "runtimeType",
     "description": "The runtime type that the monitor will run",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "runtimeTypeVersion",
     "description": "The specific version of the runtime type selected",
     "type": {
      "name": "SemVer",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "DistributedTracingActorStitchedFields",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "trace",
     "description": "Look up the details of a trace based upon the traceId and optional start time.",
     "type": {
      "name": "DistributedTracingTrace",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "timestamp",
       "description": "The start time of the trace. This will default to 1 hour ago and will look for traces within that window. If you are looking for a preserved trace then it is required to pass in a timestamp.",
       "type": {
        "name": "EpochMilliseconds",
        "kind": "SCALAR"
       }
      },
      {
       "name": "traceId",
       "description": "Unique identifier shared by all spans within a single trace.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      }
     ]
    }
   ]
  },
  {
   "name": "SyntheticsError",
   "description": "Error object for Synthetics mutations",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "description",
     "description": "Description explaining the cause of the error",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "SyntheticsAutomatedTestJobResult",
   "description": "Information on a job that was apart of a batch of automated test jobs",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "automatedTestMonitorConfig",
     "description": "Test overrides",
     "type": {
      "name": "SyntheticsAutomatedTestMonitorConfig",
      "kind": "OBJECT"
     }
    },
    {
     "name": "batchId",
     "description": "Job batch Id",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "duration",
     "description": "Job duration",
     "type": {
      "name": "Milliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "error",
     "description": "Job error if any",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "id",
     "description": "Job Id",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "location",
     "description": "Job location",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "locationLabel",
     "description": "Job location label",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "monitorGuid",
     "description": "Monitor nr1 entity guid",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    },
    {
     "name": "monitorId",
     "description": "Job monitor Id",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "monitorName",
     "description": "Job monitor name",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "result",
     "description": "Job result",
     "type": {
      "name": "SyntheticsJobStatus",
      "kind": "ENUM"
     }
    },
    {
     "name": "resultsUrl",
     "description": "Link to job results",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "type",
     "description": "Job type",
     "type": {
      "name": "SyntheticsMonitorType",
      "kind": "ENUM"
     }
    },
    {
     "name": "typeLabel",
     "description": "Job type label",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "CloudAzureMysqlIntegrationInput",
   "description": "Database for MySQL",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "resourceGroups",
     "description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AiDecisionsFixedHammingDistanceInput",
   "description": "Input type for FixedHammingDistance expression",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "incident",
     "description": "Incident selector to be used in comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsIncidentObjectInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "maxDistance",
     "description": "Maximum distance threshold.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "value",
     "description": "Value to be used in comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "DashboardVariableNrqlQuery",
   "description": "Configuration for variables of type NRQL.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "accountIds",
     "description": "New Relic account ID(s) to issue the query against.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "query",
     "description": "NRQL formatted query.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Nrql",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "CloudGcpMemcacheIntegrationInput",
   "description": "Memcache",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "SyntheticsScriptBrowserMonitorUpdateMutationResult",
   "description": "The result of a Script Browser monitor update mutation",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "errors",
     "description": "Errors that occurred during Script Browser monitor update mutation",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "name": "SyntheticsMonitorUpdateError",
        "kind": "OBJECT"
       }
      }
     }
    },
    {
     "name": "monitor",
     "description": "The resulting script browser monitor",
     "type": {
      "name": "SyntheticsScriptBrowserMonitor",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "EdgeTraceFilterAction",
   "description": "Type of action to perform when a `TraceFilter` match occurs",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "DISCARD",
     "description": "Discards traces that match the filter",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "KEEP",
     "description": "Keeps traces that match the filter",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AiIssuesAnomalyIncident",
   "description": "Anomaly incident",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "account",
     "description": "account",
     "type": {
      "name": "AccountReference",
      "kind": "OBJECT"
     }
    },
    {
     "name": "accountIds",
     "description": "An account id this incident is stored in",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "anomalyId",
     "description": "The anomaly id",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "closedAt",
     "description": "The time the incident was closed",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "createdAt",
     "description": "The time the incident was created",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochMilliseconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "description",
     "description": "The description provided through API",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      }
     }
    },
    {
     "name": "entityGuids",
     "description": "A list of unique entity identifiers",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    },
    {
     "name": "entityNames",
     "description": "A list of entity names",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "entityTypes",
     "description": "A list of entity types",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "environmentId",
     "description": "See our documentation to learn about environments",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "incidentId",
     "description": "Incident identifier",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "priority",
     "description": "Incident priority",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiIssuesPriority",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "state",
     "description": "Incident state",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiIssuesIncidentState",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "timestamp",
     "description": "Incident event timestamp",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochMilliseconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "title",
     "description": "The description the user gave the condition if provided. Otherwise the incident description",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "updatedAt",
     "description": "The time the incident was last updated",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochMilliseconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "AiIssuesIIncident",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "AiDecisionsRelativeGreaterThanOrEqualInput",
   "description": "Input type for RelativeGreaterThanOrEqual expression",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "left",
     "description": "Left operand of comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsIncidentObjectInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "right",
     "description": "Right operand of comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsIncidentObjectInput",
       "kind": "INPUT_OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "AgentApplicationSettingsUpdateError",
   "description": "Information about any errors encountered while updating values.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "description",
     "description": "A 'human readable' description of the error.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "errorClass",
     "description": "The category of the error.",
     "type": {
      "name": "AgentApplicationSettingsUpdateErrorClass",
      "kind": "ENUM"
     }
    },
    {
     "name": "field",
     "description": "The field that was being updated when the error was encountered.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "CloudSesIntegrationInput",
   "description": "Amazon Simple Email Service (SES)",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "MultiTenantIdentityOrganizationIdInput",
   "description": "The input object representing parameters for the organization ID filter",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "eq",
     "description": "An organization ID",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AiDecisionsFixedFuzzyWuzzyAdaptiveRatioInput",
   "description": "Input type for FixedFuzzyWuzzyAdaptiveRatio expression",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "incident",
     "description": "Incident selector to be used in comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsIncidentObjectInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "minSimilarity",
     "description": "Minimum similarity threshold.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Float",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "value",
     "description": "Value to be used in comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "WorkloadRemainingEntitiesRuleRollup",
   "description": "The rollup strategy.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "groupBy",
     "description": "The grouping to be applied to the remaining entities.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "WorkloadGroupRemainingEntitiesRuleBy",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "strategy",
     "description": "The rollup strategy that is applied to a group of entities.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "WorkloadRollupStrategy",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "thresholdType",
     "description": "Type of threshold defined for the rule. This is an optional field that only applies when strategy is WORST_STATUS_WINS. Use a threshold to roll up the worst status only after a certain amount of entities are not operational.",
     "type": {
      "name": "WorkloadRuleThresholdType",
      "kind": "ENUM"
     }
    },
    {
     "name": "thresholdValue",
     "description": "Threshold value defined for the rule. This optional field is used in combination with thresholdType. If the threshold type is null, the threshold value will be ignored.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "EntityGoldenMetricsDomainTypeScoped",
   "description": "An object that represents the golden metrics scoped by domain and type",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "context",
     "description": "Context for the golden metric",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EntityGoldenContext",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "domainType",
     "description": "Domain type for the golden metrics",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "DomainType",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "metrics",
     "description": "Metrics for the domain and type",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EntityGoldenMetric",
         "kind": "OBJECT"
        }
       }
      }
     }
    }
   ]
  },
  {
   "name": "MultiTenantAuthorizationRoleScopeInputFilter",
   "description": "Provides all the available filters on the role scope",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "eq",
     "description": "performs an equals operation",
     "type": {
      "name": "MultiTenantAuthorizationRoleScopeEnum",
      "kind": "ENUM"
     }
    }
   ]
  },
  {
   "name": "ApiAccessUpdateUserKeyInput",
   "description": "The `id` and data to update one or more keys.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "keyId",
     "description": "The `id` of the key you want to update.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "The name you want to assign to the key.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "notes",
     "description": "The notes you want to assign to the key.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AiTopologyCollectorOperationResult",
   "description": "Result of an operation.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "result",
     "description": "Status of the operation.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiTopologyCollectorResultType",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "AiNotificationsTokenAuth",
   "description": "Token based authentication",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "authType",
     "description": "Authentication Type - Token or Oauth2",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiNotificationsAuthType",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "prefix",
     "description": "Token Prefix",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AgentApplicationSettingsThreadProfiler",
   "description": "Measures wall clock time, CPU time, and method call counts in your application's threads as they run.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "enabled",
     "description": "Whether or not the Thread Profiler is enabled for your application.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "CloudAwsAthenaIntegrationInput",
   "description": "Athena",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AiDecisionsRuleType",
   "description": "Type of rule",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "EXPLICIT",
     "description": "Rule type is explicit",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "GLOBAL",
     "description": "Rule type is global",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "IMPLICIT",
     "description": "Rule type is implicit",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "MultiTenantAuthorizationGrantIdInputFilter",
   "description": "Fitlers on grants id",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "eq",
     "description": "Performs an equals operation",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "CloudCloudfrontIntegrationInput",
   "description": "Amazon CloudFront",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "fetchLambdasAtEdge",
     "description": "Specify if Lambdas@Edge should be monitored. May affect total data collection time and contribute to the Cloud provider API rate limit.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "fetchTags",
     "description": "Specify if tags should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "tagKey",
     "description": "Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "tagValue",
     "description": "Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "WorkloadScopeAccounts",
   "description": "Accounts that will be used to get entities from.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "accountIds",
     "description": "A list of accounts that will be used to get entities from.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      }
     }
    }
   ]
  },
  {
   "name": "CloudAzureDisableIntegrationsInput",
   "description": "List of integrations",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "azureApimanagement",
     "description": "Api Management integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "azureAppgateway",
     "description": "App Gateway integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "azureAppservice",
     "description": "App Service integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "azureContainers",
     "description": "Containers integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "azureCosmosdb",
     "description": "Cosmos DB integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "azureCostmanagement",
     "description": "Cost Management integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "azureDatafactory",
     "description": "Data Factory integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "azureEventhub",
     "description": "Event Hub integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "azureExpressroute",
     "description": "Express Route integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "azureFirewalls",
     "description": "Firewalls integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "azureFrontdoor",
     "description": "Front Door integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "azureFunctions",
     "description": "Functions integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "azureKeyvault",
     "description": "Key Vault integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "azureLoadbalancer",
     "description": "Load Balancer integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "azureLogicapps",
     "description": "Logic Apps integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "azureMachinelearning",
     "description": "Machine Learning integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "azureMariadb",
     "description": "Database for MariaDB integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "azureMonitor",
     "description": "Azure Monitor metrics integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "azureMysql",
     "description": "Database for MySQL integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "azureMysqlflexible",
     "description": "MySQL Flexible Server integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "azurePostgresql",
     "description": "Database for PostgreSQL integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "azurePostgresqlflexible",
     "description": "PostgreSQL Flexible Server integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "azurePowerbidedicated",
     "description": "Power BI Dedicated integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "azureRediscache",
     "description": "Redis Cache integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "azureServicebus",
     "description": "Service Bus integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "azureSql",
     "description": "SQL Database integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "azureSqlmanaged",
     "description": "SQL Managed Instances integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "azureStorage",
     "description": "Storage integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "azureVirtualmachine",
     "description": "Virtual machine scale sets integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "azureVirtualnetworks",
     "description": "Virtual Network integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "azureVms",
     "description": "Virtual Machines integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "azureVpngateways",
     "description": "VPN Gateways integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "DashboardEntityOwnerInfo",
   "description": "Dashboard owner",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "email",
     "description": "The email of the dashboard owner",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "userId",
     "description": "The user ID of the dashboard owner",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "OrganizationOrganizationCreateAsyncResultCollection",
   "description": "Organization create async result collection",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "items",
     "description": "Organization create async results",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "OrganizationOrganizationCreateAsyncResult",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "nextCursor",
     "description": "an opaque cursor to supply with subsequent requests to get the next page of results, null if there are no more pages",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "MultiTenantIdentityEmailVerificationStateInput",
   "description": "Available filtering types for email verification states",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "pending",
     "description": "An email verification state",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "EntityTagValueWithMetadata",
   "description": "The value and metadata of a single entity tag.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "mutable",
     "description": "Whether or not the tag can be mutated by the user.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "value",
     "description": "The tag value.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "ApiAccessActorStitchedFields",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "key",
     "description": "Fetch a single key by ID and type.",
     "type": {
      "name": "ApiAccessKey",
      "kind": "INTERFACE"
     },
     "args": [
      {
       "name": "id",
       "description": "The `id` of the key. This can be used to identify a key without revealing the key itself (used to update and delete).",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "keyType",
       "description": "The type of key.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ApiAccessKeyType",
         "kind": "ENUM"
        }
       }
      }
     ]
    },
    {
     "name": "keySearch",
     "description": "A list of keys scoped to the current actor and filter arguments. You can read more about managing keys on [this documentation page](https://docs.newrelic.com/docs/apis/nerdgraph/examples/use-nerdgraph-manage-license-keys-personal-api-keys).",
     "type": {
      "name": "ApiAccessKeySearchResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "cursor",
       "description": "The cursor.",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "query",
       "description": "The criteria for the key search.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ApiAccessKeySearchQuery",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    }
   ]
  },
  {
   "name": "EventsToMetricsUpdateRuleSubmission",
   "description": "The details that were submitted when updating an events to metrics conversion rule.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "accountId",
     "description": "A submitted account id.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "enabled",
     "description": "Changes the state of the rule as being enabled or disabled.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "ruleId",
     "description": "A submitted rule id.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "BrowserApplicationEntity",
   "description": "A Browser Application entity.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "account",
     "type": {
      "name": "AccountOutline",
      "kind": "OBJECT"
     }
    },
    {
     "name": "accountId",
     "description": "The New Relic account ID associated with this entity.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "agentInstallType",
     "description": "The type of Browser agent installed for this application.",
     "type": {
      "name": "BrowserAgentInstallType",
      "kind": "ENUM"
     }
    },
    {
     "name": "alertSeverity",
     "description": "The current alerting severity of the entity.",
     "type": {
      "name": "EntityAlertSeverity",
      "kind": "ENUM"
     }
    },
    {
     "name": "alertViolations",
     "description": "Violations on the entity that were open during the specified time window. This will return up to 500 violations - if there are more in the time window selected, you must narrow the time window or look at fewer entities.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityAlertViolation",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "endTime",
       "description": "End of time window for violations.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EpochMilliseconds",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "startTime",
       "description": "Start of time window for violations.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EpochMilliseconds",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "applicationId",
     "description": "The ID of the Browser App.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "browserProperties",
     "description": "Access general properties for the application.",
     "type": {
      "name": "AgentApplicationSettingsBrowserProperties",
      "kind": "OBJECT"
     }
    },
    {
     "name": "browserSettings",
     "description": "Settings that are common across browser applications.",
     "type": {
      "name": "AgentApplicationSettingsBrowserBase",
      "kind": "OBJECT"
     }
    },
    {
     "name": "browserSummary",
     "description": "Summary statistics about the Browser App.",
     "type": {
      "name": "BrowserApplicationSummaryData",
      "kind": "OBJECT"
     }
    },
    {
     "name": "deploymentSearch",
     "description": "Retrieve the deployment event(s). Ordered by timestamp DESC.",
     "type": {
      "name": "ChangeTrackingDeploymentSearchResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "filter",
       "description": "Contains the set of filters to apply to the query.",
       "type": {
        "name": "ChangeTrackingSearchFilter",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "domain",
     "description": "The entity's domain",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "entityType",
     "description": "A value representing the combination of the entity's domain and type.",
     "type": {
      "name": "EntityType",
      "kind": "ENUM"
     }
    },
    {
     "name": "exception",
     "description": "An Exception that occurred in your Browser Application.",
     "type": {
      "name": "StackTraceBrowserException",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "fingerprint",
       "description": "A unique exception identifier.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "timeWindow",
       "description": "The time window (60 minutes maximum) in which to search for the browser exception. Defaults to standard NRQL query window.",
       "type": {
        "name": "TimeWindowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "firstIndexedAt",
     "description": "The date of last time the entity has updated any of its fields.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "goldenMetrics",
     "description": "The list of golden metrics for a specific entity",
     "type": {
      "name": "EntityGoldenContextScopedGoldenMetrics",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden metrics",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "timeWindow",
       "description": "Time range to apply to the golden metric NRQL query result field",
       "type": {
        "name": "EntityGoldenNrqlTimeWindowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "goldenTags",
     "description": "The list of golden tags for a specific entityType.",
     "type": {
      "name": "EntityGoldenContextScopedGoldenTags",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden tags",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "guid",
     "description": "A unique entity identifier.",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    },
    {
     "name": "indexedAt",
     "description": "The time the entity was indexed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "lastReportingChangeAt",
     "description": "The last time the entity's reporting status changed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "metricGroupingIssues",
     "description": "Retrieves the entity metric grouping issues.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "MetricNormalizationRuleMetricGroupingIssue",
        "kind": "OBJECT"
       }
      }
     },
     "args": [
      {
       "name": "endTime",
       "description": "End time.",
       "type": {
        "name": "EpochMilliseconds",
        "kind": "SCALAR"
       }
      },
      {
       "name": "metricNormalizationRuleIds",
       "description": "Metric normalization rule ids",
       "type": {
        "kind": "LIST",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "startTime",
       "description": "Start time.",
       "type": {
        "name": "EpochMilliseconds",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "metricNormalizationRule",
     "description": "Retrieves a rule",
     "type": {
      "name": "MetricNormalizationRule",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "id",
       "description": "Rule Id",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "metricNormalizationRules",
     "description": "Retrieves the rules for the application.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "MetricNormalizationRule",
        "kind": "OBJECT"
       }
      }
     },
     "args": [
      {
       "name": "enabled",
       "description": "Rule enabled",
       "type": {
        "name": "Boolean",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "name",
     "description": "The name of this entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nerdStorage",
     "type": {
      "name": "NerdStorageEntityScope",
      "kind": "OBJECT"
     }
    },
    {
     "name": "nrdbQuery",
     "description": "Make an `Entity` scoped query to NRDB with a NRQL string.\n\nA relevant `WHERE` clause will be added to your query to scope data to the entity in question.\n\nSee the [NRQL Docs](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/nrql-resources/nrql-syntax-components-functions) for more information about generating a query string.",
     "type": {
      "name": "NrdbResultContainer",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "async",
       "description": "When true, the query will begin asynchronous resolution after the allotted `timeout`. Include `queryProgress` fields in your GraphQL query to receive the information you will need to poll the `nrdbQueryProgress` field for the results of your async NRQL query.\n\nSee [this page](https://docs.newrelic.com/docs/apis/nerdgraph/examples/async-queries-nrql-tutorial) for additional asynchronous query documentation.",
       "type": {
        "name": "Boolean",
        "kind": "SCALAR"
       },
       "defaultValue": "false"
      },
      {
       "name": "nrql",
       "description": "The [NRQL](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/nrql-resources/nrql-syntax-components-functions) query string.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Nrql",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "options",
       "description": "Additional options for NRQL queries.",
       "type": {
        "name": "NrqlQueryOptions",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "timeout",
       "description": "The timeout we will apply to the NRQL Query. The value will be clamped to between 5 and 120 seconds and defaults to 5 seconds.\n\nFor `async` queries, if the query is still incomplete after this amount of time, resolution will become asynchronous and return `queryProgress` data if requested.",
       "type": {
        "name": "Seconds",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "nrdbQueryProgress",
     "description": "Poll for the results of a previously-executed asychronous NRDB query.\n\nThe `queryId` is available in the `queryProgress` data returned by the original asynchronous query.\n\nSee [this page](https://docs.newrelic.com/docs/apis/nerdgraph/examples/async-queries-nrql-tutorial) for additional asynchronous query documentation.",
     "type": {
      "name": "NrdbResultContainer",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "queryId",
       "description": "A token for retrieving the results of a previously executed asynchronous query.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "permalink",
     "description": "The url to the entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "recentAlertViolations",
     "description": "Recent violations on the entity.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityAlertViolation",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "count",
       "description": "The desired number of alert violations to be returned.",
       "type": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "relatedEntities",
     "description": "Related entities result with optional filtering.",
     "type": {
      "name": "EntityRelationshipRelatedEntitiesResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "cursor",
       "description": "The cursor to fetch paginated results.",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "filter",
       "description": "Apply an optional filter to the related entities.",
       "type": {
        "name": "EntityRelationshipEdgeFilter",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "limit",
       "description": "A limit to apply to the number of relationships returned. Note: this option can only lower the default limits (2000 relationships).",
       "type": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "relationships",
     "description": "A list of the entities' relationships.\n\nFor more information, visit [our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/graphql-relationships-api-tutorial).",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityRelationship",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "endTime",
       "description": "Return relationships as they existed in the past. The duration of the time window queried is fixed at 75 minutes.",
       "type": {
        "name": "EpochMilliseconds",
        "kind": "SCALAR"
       }
      },
      {
       "name": "filter",
       "description": "Apply an optional filter to the relationships.",
       "type": {
        "name": "EntityRelationshipFilter",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "reporting",
     "description": "The reporting status of the entity. If New Relic is successfully collecting data from your application, this will be true.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "runningAgentVersions",
     "description": "The running versions of the agent in the Browser App.",
     "type": {
      "name": "BrowserApplicationRunningAgentVersions",
      "kind": "OBJECT"
     }
    },
    {
     "name": "segmentAllowListAggregate",
     "description": "The allow list for browser applications that contains a set of allowed url segments that will appear in groupings on the Page views and AJAX pages.",
     "type": {
      "name": "AgentApplicationSegmentsBrowserSegmentAllowList",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "filters",
       "description": "Filter the lists that you would want to see",
       "type": {
        "name": "AgentApplicationSegmentsSegmentAllowListFilters",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "serviceLevel",
     "description": "The service level defined for the entity.",
     "type": {
      "name": "ServiceLevelDefinition",
      "kind": "OBJECT"
     }
    },
    {
     "name": "servingApmApplicationId",
     "description": "The ID of the APM Application that serves this Browser App.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "settings",
     "description": "Configuration settings for the Browser App",
     "type": {
      "name": "BrowserApplicationSettings",
      "kind": "OBJECT"
     }
    },
    {
     "name": "tags",
     "description": "The tags applied to the entity.\n\nFor details on tags, as well as query and mutation examples, visit [our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/graphql-tagging-api-tutorial).",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityTag",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "tagsWithMetadata",
     "description": "The tags applied to the entity with their metadata.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityTagWithMetadata",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "tracingSummary",
     "description": "Look up Distributed Tracing summary data for the selected `EntityGuid`",
     "type": {
      "name": "DistributedTracingEntityTracingSummary",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "timeWindow",
       "description": "The start and end of the tracing data. Defaults to the last 30 minutes",
       "type": {
        "name": "TimeWindowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "type",
     "description": "The entity's type",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ],
   "interfaces": [
    {
     "name": "AlertableEntity",
     "kind": "INTERFACE"
    },
    {
     "name": "Entity",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "MultiTenantIdentityUserType",
   "description": "A \"user type\" is what determines the set of New Relic capabilities a user can theoretically access.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "id",
     "description": "The id of the user type.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "The name of the user type.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AlertsNrqlConditionExpirationInput",
   "description": "Also known as **loss of signal**, these are settings for how violations are opened or closed when a signal expires.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "closeViolationsOnExpiration",
     "description": "Whether to close all open violations when the signal expires. Defaults to true.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "expirationDuration",
     "description": "The amount of time (in seconds) to wait before considering if the signal has been lost. Max value of 172800 (48 hours).",
     "type": {
      "name": "Seconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "ignoreOnExpectedTermination",
     "description": "Indicates whether an alert condition should ignore expected termination of a signal when considering whether to create a loss of signal incident. Defaults to false.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "openViolationOnExpiration",
     "description": "Whether to create a new \"lost signal\" violation to capture that the signal expired. Defaults to false.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "CloudCloudfrontIntegration",
   "description": "CloudFront Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "fetchLambdasAtEdge",
     "description": "Specify if Lambdas@Edge should be monitored. May affect total data collection time and contribute to the Cloud provider API rate limit.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "fetchTags",
     "description": "Specify if tags should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "tagKey",
     "description": "Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "tagValue",
     "description": "Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "CloudGcpProvider",
   "description": "The Google Cloud Platform cloud provider",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "icon",
     "description": "The cloud provider icon name.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud provider identifier in NewRelic.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "The cloud provider name.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "Get details of one cloud provider service.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "slug",
       "description": "The cloud provider short name.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "serviceAccountId",
     "description": "The service account identifier used to link the GCP project to NewRelic.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "services",
     "description": "Get details of all the cloud provider services available for integration.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "CloudService",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "slug",
     "description": "The cloud provider short name.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "templateParams",
     "description": "Get template params of one cloud provider service.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "CloudTemplateParam",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudProvider",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "AiDecisionsWholeJaccardSimilarityInput",
   "description": "Input type for WholeJaccardSimilarity expression",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "threshold",
     "description": "Threshold for comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Float",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "EntityRelationshipEdgeDirection",
   "description": "Values for relationship direction filter.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "BOTH",
     "description": "Traverse both inbound and outbound connections.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "INBOUND",
     "description": "Traverse inbound connections to the source of the relationship.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "OUTBOUND",
     "description": "Traverse outbound connections to the target of the relationship.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "KeyTransactionDeleteResult",
   "description": "The result of deleting a key transaction.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "success",
     "description": "If the delete request succeeded.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "EventsToMetricsUpdateRuleFailure",
   "description": "Error details about the events to metrics rule that failed to be updated and why.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "errors",
     "description": "Information about why the update failed.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EventsToMetricsError",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "submitted",
     "description": "Input information about a failed update.",
     "type": {
      "name": "EventsToMetricsUpdateRuleSubmission",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "Nrql",
   "description": "This scalar represents a NRQL query string.\n\nSee the [NRQL Docs](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/nrql-resources/nrql-syntax-components-functions) for more information about NRQL syntax.",
   "kind": "SCALAR"
  },
  {
   "name": "AiNotificationsDestinationResponse",
   "description": "Response for all destinations related mutation. Includes relevant destination and/or errors",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "destination",
     "description": "Successfully mutated destination",
     "type": {
      "name": "AiNotificationsDestination",
      "kind": "OBJECT"
     }
    },
    {
     "name": "error",
     "description": "Error in destination mutation",
     "type": {
      "name": "AiNotificationsError",
      "kind": "UNION"
     }
    },
    {
     "name": "errors",
     "description": "Deprecated list of errors",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiNotificationsError",
         "kind": "UNION"
        }
       }
      }
     }
    }
   ]
  },
  {
   "name": "Nr1CatalogSupportInput",
   "description": "A container specifying the various types support channels",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "community",
     "description": "A support channel where users can get support via the community",
     "type": {
      "name": "Nr1CatalogCommunityContactChannelInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "email",
     "description": "A support channel where users can get support via email",
     "type": {
      "name": "Nr1CatalogEmailContactChannelInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "issues",
     "description": "A support channel where users can get support via issues",
     "type": {
      "name": "Nr1CatalogIssuesContactChannelInput",
      "kind": "INPUT_OBJECT"
     }
    }
   ]
  },
  {
   "name": "EdgeEndpointStatus",
   "description": "Status of the endpoint.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "CREATED",
     "description": "The endpoint has been created and is available for use.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "DELETED",
     "description": "The endpoint has been deleted and is no longer available for use.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "StackTraceApmException",
   "description": "A structured representation of an exception for an APM application.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "message",
     "description": "The top level message associated with the exception.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "stackTrace",
     "description": "The stack trace associated with the exception.",
     "type": {
      "name": "StackTraceApmStackTrace",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "SyntheticsStepMonitor",
   "description": "A Step monitor resulting from a Step monitor mutation",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "advancedOptions",
     "description": "The monitor advanced options",
     "type": {
      "name": "SyntheticsStepMonitorAdvancedOptions",
      "kind": "OBJECT"
     }
    },
    {
     "name": "browsers",
     "description": "The browser(s) that the monitor will use to run jobs",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "SyntheticsBrowser",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "createdAt",
     "description": "The creation time of the monitor in millis",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "devices",
     "description": "The devices that the monitor will use to run jobs",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "SyntheticsDevice",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "guid",
     "description": "The unique client identifier for the Synthetics Monitor in New Relic",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    },
    {
     "name": "id",
     "description": "The unique identifier of the monitor within the Synthetics domain",
     "type": {
      "name": "ID",
      "kind": "SCALAR"
     }
    },
    {
     "name": "locations",
     "description": "The locations the monitor runs from",
     "type": {
      "name": "SyntheticsLocations",
      "kind": "OBJECT"
     }
    },
    {
     "name": "modifiedAt",
     "description": "The last modification time of the monitor in millis",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The human readable identifier for the monitor",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "period",
     "description": "The interval at which the monitor runs in minutes",
     "type": {
      "name": "SyntheticsMonitorPeriod",
      "kind": "ENUM"
     }
    },
    {
     "name": "runtime",
     "description": "The runtime that the monitor will use to run jobs",
     "type": {
      "name": "SyntheticsExtendedTypeMonitorRuntime",
      "kind": "OBJECT"
     }
    },
    {
     "name": "status",
     "description": "The run state of the monitor",
     "type": {
      "name": "SyntheticsMonitorStatus",
      "kind": "ENUM"
     }
    },
    {
     "name": "steps",
     "description": "The steps that make up the script the monitor will run",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "SyntheticsStep",
       "kind": "OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "LogConfigurationsUpdateObfuscationActionInput",
   "description": "Input for creating an obfuscation action on a rule being updated.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "attributes",
     "description": "Attribute names for action. An empty list applies the action to all the attributes.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      }
     }
    },
    {
     "name": "expressionId",
     "description": "Expression Id for action.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "method",
     "description": "Obfuscation method to use.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "LogConfigurationsObfuscationMethod",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "EdgeDataSource",
   "description": "A data source (i.e., New Relic entity) that is associated with this trace observer. Currently, we support adding Browser, Lambda, and Mobile entities as data sources.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "entity",
     "description": "The entity representing this data source.",
     "type": {
      "name": "EntityOutline",
      "kind": "INTERFACE"
     }
    },
    {
     "name": "status",
     "description": "The status of whether data is being sent to this trace observer for this data source.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EdgeDataSourceStatusType",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "DashboardWidgetInput",
   "description": "Widget input.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "configuration",
     "description": "Typed widgets are area, bar, billboard, line, markdown, pie, and table. Check our [docs](https://docs.newrelic.com/docs/apis/nerdgraph/examples/create-widgets-dashboards-api/#widget-typed) for more info.",
     "type": {
      "name": "DashboardWidgetConfigurationInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "id",
     "description": "ID of the widget. If null, a new widget will be created and added to a dashboard.",
     "type": {
      "name": "ID",
      "kind": "SCALAR"
     }
    },
    {
     "name": "layout",
     "description": "The widget's position and size in the dashboard.",
     "type": {
      "name": "DashboardWidgetLayoutInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "linkedEntityGuids",
     "description": "Entities related to the widget. Currently only supports one Dashboard entity guid, but may allow other cases in the future.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "rawConfiguration",
     "description": "Untyped widgets are all other widgets, such as bullet, histogram, inventory, etc. Check our [docs](https://docs.newrelic.com/docs/apis/nerdgraph/examples/create-widgets-dashboards-api/#widget-untyped) for more info.",
     "type": {
      "name": "DashboardWidgetRawConfiguration",
      "kind": "SCALAR"
     }
    },
    {
     "name": "title",
     "description": "A title for the widget.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "visualization",
     "description": "Specifies how this widget will be visualized. If null, the WidgetConfigurationInput will be used to determine the visualization.",
     "type": {
      "name": "DashboardWidgetVisualizationInput",
      "kind": "INPUT_OBJECT"
     }
    }
   ]
  },
  {
   "name": "Nr1CatalogIssuesContactChannelInput",
   "description": "Details about the contact channel where users can get support via the repository issues page",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "url",
     "description": "The URL linking the repository issues page where users can get support",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "Nr1CatalogCategoryFacet",
   "description": "Information about a facet count on a category",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "count",
     "description": "The count of results for this category",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "displayName",
     "description": "The category's display name",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "CloudGcpDataflowIntegrationInput",
   "description": "Dataflow",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AiWorkflowsTestWorkflowResponse",
   "description": "Test workflow mutation response including errors",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "errors",
     "description": "A list of errors that occurred while performing the test workflow action",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AiWorkflowsTestResponseError",
        "kind": "OBJECT"
       }
      }
     }
    },
    {
     "name": "notificationResponses",
     "description": "List of responses by channel id",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AiWorkflowsTestNotificationResponse",
        "kind": "OBJECT"
       }
      }
     }
    },
    {
     "name": "status",
     "description": "Whether the test was a success or not",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiWorkflowsTestResponseStatus",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "CloudGcpComposerIntegration",
   "description": "Composer Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "AiWorkflowsTestNotificationResponse",
   "description": "Notification response according to channel id",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "channelId",
     "description": "The id of the tested channel",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "evidence",
     "description": "Evidence for a successful test notification",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "status",
     "description": "Whether the test notification succeeded",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiWorkflowsTestNotificationResponseStatus",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "ApmApplicationEntity",
   "description": "An APM Application entity.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "account",
     "type": {
      "name": "AccountOutline",
      "kind": "OBJECT"
     }
    },
    {
     "name": "accountId",
     "description": "The New Relic account ID associated with this entity.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "alertSeverity",
     "description": "The current alerting severity of the entity.",
     "type": {
      "name": "EntityAlertSeverity",
      "kind": "ENUM"
     }
    },
    {
     "name": "alertViolations",
     "description": "Violations on the entity that were open during the specified time window. This will return up to 500 violations - if there are more in the time window selected, you must narrow the time window or look at fewer entities.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityAlertViolation",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "endTime",
       "description": "End of time window for violations.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EpochMilliseconds",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "startTime",
       "description": "Start of time window for violations.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EpochMilliseconds",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "apmBrowserSummary",
     "description": "Summary statistics about the Browser App injected by an APM Application.",
     "type": {
      "name": "ApmBrowserApplicationSummaryData",
      "kind": "OBJECT"
     }
    },
    {
     "name": "apmSettings",
     "description": "Settings that are common across APM applications.",
     "type": {
      "name": "AgentApplicationSettingsApmBase",
      "kind": "OBJECT"
     }
    },
    {
     "name": "apmSummary",
     "description": "Summary statistics about the APM App.",
     "type": {
      "name": "ApmApplicationSummaryData",
      "kind": "OBJECT"
     }
    },
    {
     "name": "applicationId",
     "description": "The ID of the APM Application.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "applicationInstances",
     "description": "List of APM application instances.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AgentEnvironmentApplicationInstance",
        "kind": "OBJECT"
       }
      }
     },
     "args": [
      {
       "name": "endTime",
       "description": "Time window start time in milliseconds since the unix epoch on which the agent reported data. Defaults to current time.",
       "type": {
        "name": "EpochMilliseconds",
        "kind": "SCALAR"
       }
      },
      {
       "name": "host",
       "description": "Use this field to filter application instances by host name.",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "startTime",
       "description": "Time window start time in milliseconds since the unix epoch on which the agent reported data. Defaults to 10 minutes before the current time.",
       "type": {
        "name": "EpochMilliseconds",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "applicationInstancesV2",
     "description": "Paginated list of APM application instances.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AgentEnvironmentApplicationInstancesResult",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "cursor",
       "description": "Use this field for application instance pagination",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "deploymentSearch",
     "description": "Retrieve the deployment event(s). Ordered by timestamp DESC.",
     "type": {
      "name": "ChangeTrackingDeploymentSearchResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "filter",
       "description": "Contains the set of filters to apply to the query.",
       "type": {
        "name": "ChangeTrackingSearchFilter",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "deployments",
     "description": "Deployments of the APM Application.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "ApmApplicationDeployment",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "timeWindow",
       "description": "Time range to fetch deployments for. Defaults to the last day.",
       "type": {
        "name": "TimeWindowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "domain",
     "description": "The entity's domain",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "entityType",
     "description": "A value representing the combination of the entity's domain and type.",
     "type": {
      "name": "EntityType",
      "kind": "ENUM"
     }
    },
    {
     "name": "exception",
     "description": "An Exception that occurred in your Application.",
     "type": {
      "name": "StackTraceApmException",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "occurrenceId",
       "description": "A unique exception identifier.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "firstIndexedAt",
     "description": "The date of last time the entity has updated any of its fields.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "flamegraph",
     "description": "Retrieves a flamegraph for the specific entity over the time period specified.",
     "type": {
      "name": "JavaFlightRecorderFlamegraph",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "hostName",
       "description": "The JVM host to get flamegraph stack trace events for",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "timeWindow",
       "description": "The start and end of the flamegraph events. Defaults to last 30 minutes",
       "type": {
        "name": "TimeWindowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "goldenMetrics",
     "description": "The list of golden metrics for a specific entity",
     "type": {
      "name": "EntityGoldenContextScopedGoldenMetrics",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden metrics",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "timeWindow",
       "description": "Time range to apply to the golden metric NRQL query result field",
       "type": {
        "name": "EntityGoldenNrqlTimeWindowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "goldenTags",
     "description": "The list of golden tags for a specific entityType.",
     "type": {
      "name": "EntityGoldenContextScopedGoldenTags",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden tags",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "guid",
     "description": "A unique entity identifier.",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    },
    {
     "name": "indexedAt",
     "description": "The time the entity was indexed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "language",
     "description": "The programming language of the APM Application.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "lastReportingChangeAt",
     "description": "The last time the entity's reporting status changed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "metricGroupingIssues",
     "description": "Retrieves the entity metric grouping issues.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "MetricNormalizationRuleMetricGroupingIssue",
        "kind": "OBJECT"
       }
      }
     },
     "args": [
      {
       "name": "endTime",
       "description": "End time.",
       "type": {
        "name": "EpochMilliseconds",
        "kind": "SCALAR"
       }
      },
      {
       "name": "metricNormalizationRuleIds",
       "description": "Metric normalization rule ids",
       "type": {
        "kind": "LIST",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "startTime",
       "description": "Start time.",
       "type": {
        "name": "EpochMilliseconds",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "metricNormalizationRule",
     "description": "Retrieves a rule.",
     "type": {
      "name": "MetricNormalizationRule",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "id",
       "description": "Rule Id",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "metricNormalizationRules",
     "description": "Retrieves the rules for the application.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "MetricNormalizationRule",
        "kind": "OBJECT"
       }
      }
     },
     "args": [
      {
       "name": "enabled",
       "description": "Rule enabled",
       "type": {
        "name": "Boolean",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "name",
     "description": "The name of this entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nerdStorage",
     "type": {
      "name": "NerdStorageEntityScope",
      "kind": "OBJECT"
     }
    },
    {
     "name": "nrdbQuery",
     "description": "Make an `Entity` scoped query to NRDB with a NRQL string.\n\nA relevant `WHERE` clause will be added to your query to scope data to the entity in question.\n\nSee the [NRQL Docs](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/nrql-resources/nrql-syntax-components-functions) for more information about generating a query string.",
     "type": {
      "name": "NrdbResultContainer",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "async",
       "description": "When true, the query will begin asynchronous resolution after the allotted `timeout`. Include `queryProgress` fields in your GraphQL query to receive the information you will need to poll the `nrdbQueryProgress` field for the results of your async NRQL query.\n\nSee [this page](https://docs.newrelic.com/docs/apis/nerdgraph/examples/async-queries-nrql-tutorial) for additional asynchronous query documentation.",
       "type": {
        "name": "Boolean",
        "kind": "SCALAR"
       },
       "defaultValue": "false"
      },
      {
       "name": "nrql",
       "description": "The [NRQL](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/nrql-resources/nrql-syntax-components-functions) query string.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Nrql",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "options",
       "description": "Additional options for NRQL queries.",
       "type": {
        "name": "NrqlQueryOptions",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "timeout",
       "description": "The timeout we will apply to the NRQL Query. The value will be clamped to between 5 and 120 seconds and defaults to 5 seconds.\n\nFor `async` queries, if the query is still incomplete after this amount of time, resolution will become asynchronous and return `queryProgress` data if requested.",
       "type": {
        "name": "Seconds",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "nrdbQueryProgress",
     "description": "Poll for the results of a previously-executed asychronous NRDB query.\n\nThe `queryId` is available in the `queryProgress` data returned by the original asynchronous query.\n\nSee [this page](https://docs.newrelic.com/docs/apis/nerdgraph/examples/async-queries-nrql-tutorial) for additional asynchronous query documentation.",
     "type": {
      "name": "NrdbResultContainer",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "queryId",
       "description": "A token for retrieving the results of a previously executed asynchronous query.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "permalink",
     "description": "The url to the entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "recentAlertViolations",
     "description": "Recent violations on the entity.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityAlertViolation",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "count",
       "description": "The desired number of alert violations to be returned.",
       "type": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "relatedEntities",
     "description": "Related entities result with optional filtering.",
     "type": {
      "name": "EntityRelationshipRelatedEntitiesResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "cursor",
       "description": "The cursor to fetch paginated results.",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "filter",
       "description": "Apply an optional filter to the related entities.",
       "type": {
        "name": "EntityRelationshipEdgeFilter",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "limit",
       "description": "A limit to apply to the number of relationships returned. Note: this option can only lower the default limits (2000 relationships).",
       "type": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "relationships",
     "description": "A list of the entities' relationships.\n\nFor more information, visit [our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/graphql-relationships-api-tutorial).",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityRelationship",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "endTime",
       "description": "Return relationships as they existed in the past. The duration of the time window queried is fixed at 75 minutes.",
       "type": {
        "name": "EpochMilliseconds",
        "kind": "SCALAR"
       }
      },
      {
       "name": "filter",
       "description": "Apply an optional filter to the relationships.",
       "type": {
        "name": "EntityRelationshipFilter",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "reporting",
     "description": "The reporting status of the entity. If New Relic is successfully collecting data from your application, this will be true.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "runningAgentVersions",
     "description": "The running versions of the language agent in the APM Application.",
     "type": {
      "name": "ApmApplicationRunningAgentVersions",
      "kind": "OBJECT"
     }
    },
    {
     "name": "serviceLevel",
     "description": "The service level defined for the entity.",
     "type": {
      "name": "ServiceLevelDefinition",
      "kind": "OBJECT"
     }
    },
    {
     "name": "settings",
     "description": "Configuration settings for the APM Application",
     "type": {
      "name": "ApmApplicationSettings",
      "kind": "OBJECT"
     }
    },
    {
     "name": "tags",
     "description": "The tags applied to the entity.\n\nFor details on tags, as well as query and mutation examples, visit [our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/graphql-tagging-api-tutorial).",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityTag",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "tagsWithMetadata",
     "description": "The tags applied to the entity with their metadata.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityTagWithMetadata",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "tracingSummary",
     "description": "Look up Distributed Tracing summary data for the selected `EntityGuid`",
     "type": {
      "name": "DistributedTracingEntityTracingSummary",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "timeWindow",
       "description": "The start and end of the tracing data. Defaults to the last 30 minutes",
       "type": {
        "name": "TimeWindowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "type",
     "description": "The entity's type",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ],
   "interfaces": [
    {
     "name": "AlertableEntity",
     "kind": "INTERFACE"
    },
    {
     "name": "ApmBrowserApplicationEntity",
     "kind": "INTERFACE"
    },
    {
     "name": "Entity",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "Nr1CatalogDataSourceMetadata",
   "description": "Metadata associated with a data source",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "autoInstallAlertPolicyTemplates",
     "description": "A list of alert policy templates that are auto installed upon data source installation",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Nr1CatalogAlertPolicyTemplate",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "autoInstallDashboardTemplates",
     "description": "A list of dashboard templates that are auto installed upon data source installation",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Nr1CatalogDashboardTemplate",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "categories",
     "description": "The categories for the data source",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Nr1CatalogCategory",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "description",
     "description": "A short form description for the data source",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "displayName",
     "description": "The human-readable name for the data source",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "icon",
     "description": "The corresponding icon for the data source",
     "type": {
      "name": "Nr1CatalogIcon",
      "kind": "OBJECT"
     }
    },
    {
     "name": "install",
     "description": "Install information for the data source",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Nr1CatalogDataSourceInstall",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "keywords",
     "description": "A list of keywords for filtering and searching",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      }
     }
    }
   ]
  },
  {
   "name": "EntityRelationshipUserDefinedEdge",
   "description": "An entity user-defined relationship.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The time the relationship was created.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochMilliseconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "createdByUser",
     "description": "The user that created the relationship.",
     "type": {
      "name": "UserReference",
      "kind": "OBJECT"
     }
    },
    {
     "name": "source",
     "description": "The source entity of the relationship.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EntityRelationshipVertex",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "target",
     "description": "The target entity of the relationship.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EntityRelationshipVertex",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "type",
     "description": "The type of the relationship.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EntityRelationshipEdgeType",
       "kind": "ENUM"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "EntityRelationshipEdge",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "Nr1CatalogAuthor",
   "description": "Information about an author",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "name",
     "description": "The name of the author",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AlertsMutingRuleScheduleUpdateInput",
   "description": "The time window when the MutingRule should actively mute violations.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "endRepeat",
     "description": "The datetime stamp when the MutingRule schedule should stop repeating.\nThis is in local ISO 8601 format without an offset.\n\nExample: `'2020-07-10T15:00:00'`\n\nNote: Either `endRepeat` or `repeatCount` should be used to end a MutingRule schedule.\nBoth fields should not be provided together.",
     "type": {
      "name": "NaiveDateTime",
      "kind": "SCALAR"
     }
    },
    {
     "name": "endTime",
     "description": "The datetime stamp representing when the MutingRule should end.\nThis is in local ISO 8601 format without an offset.\n\nExample: `'2020-07-10T15:00:00'`",
     "type": {
      "name": "NaiveDateTime",
      "kind": "SCALAR"
     }
    },
    {
     "name": "repeat",
     "description": "The frequency the MutingRule schedule repeats.\nIf the MutingRule repeats `WEEKLY`, be sure to set `weeklyRepeatDays`.\nIf the MutingRule does not repeat, use `null`.\n\nExample: `DAILY`",
     "type": {
      "name": "AlertsMutingRuleScheduleRepeat",
      "kind": "ENUM"
     }
    },
    {
     "name": "repeatCount",
     "description": "The number of times the MutingRule schedule should repeat.\n\nNote: Either `repeatCount` or `endRepeat` should be used to end a MutingRule schedule.\nBoth fields should not be provided together.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "startTime",
     "description": "The datetime stamp representing when the MutingRule should start.\nThis is in local ISO 8601 format without an offset.\n\nExample: `'2020-07-08T14:30:00'`",
     "type": {
      "name": "NaiveDateTime",
      "kind": "SCALAR"
     }
    },
    {
     "name": "timeZone",
     "description": "The time zone that applies to the MutingRule schedule.\n\nExample: `'America/Los_Angeles'`\n\nSee https://en.wikipedia.org/wiki/List_of_tz_database_time_zones.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "weeklyRepeatDays",
     "description": "The day(s) of the week that a MutingRule should repeat when the repeat field is set to `WEEKLY`.\n\nExample: `[MONDAY, WEDNESDAY]`",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AlertsDayOfWeek",
        "kind": "ENUM"
       }
      }
     }
    }
   ]
  },
  {
   "name": "ErrorsInboxOccurrences",
   "description": "The occurrences of an error group",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "expectedCount",
     "description": "Total number of expected occurrences in the given time window.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "firstSeenAt",
     "description": "Time of first occurrence in the given time window.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "lastSeenAt",
     "description": "Time of last occurrence in the given time window.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "totalCount",
     "description": "Total number of occurrences in the given time window.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "ApiAccessNrPlatformStitchedFields",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "validateUserKey",
     "description": "Validate a single user api key.",
     "type": {
      "name": "ApiAccessValidateUserKeyResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "keyId",
       "description": "The key ID.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    }
   ]
  },
  {
   "name": "CloudGcpLoadbalancingIntegration",
   "description": "Cloud Load Balancing Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "MultiTenantIdentityAuthenticationDomainIdInput",
   "description": "The input object representing parameters for the authentication domain ID filter",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "eq",
     "description": "An authentication domain ID",
     "type": {
      "name": "ID",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "UserManagementCreatedUser",
   "description": "A newly created user of New Relic scoped to an authentication domain.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "authenticationDomainId",
     "description": "Authentication domain of the created user.",
     "type": {
      "name": "ID",
      "kind": "SCALAR"
     }
    },
    {
     "name": "email",
     "description": "Email address of the created user.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The ID of the created user.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "The full name of the created user.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "type",
     "description": "A \"user type\" is what determines the set of New Relic capabilities a user can theoretically access.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "UserManagementUserType",
       "kind": "OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "AiDecisionsFixedFuzzyWuzzyTokenSetRatioInput",
   "description": "Input type for FixedFuzzyWuzzyTokenSetRatio expression",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "incident",
     "description": "Incident selector to be used in comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsIncidentObjectInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "minSimilarity",
     "description": "Minimum similarity threshold.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Float",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "value",
     "description": "Value to be used in comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AlertsNrqlBaselineDirection",
   "description": "Direction for a baseline NRQL condition.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "LOWER_ONLY",
     "description": "Only lower direction.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "UPPER_AND_LOWER",
     "description": "Both upper and lower direction.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "UPPER_ONLY",
     "description": "Only upper direction.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "NerdpackAllowedAccount",
   "description": "Information about an account present on the allow-list",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "accountId",
     "description": "Allowed account id",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "Nr1CatalogAlertConditionTemplateMetadata",
   "description": "Metadata associated with the alert condition template",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "description",
     "description": "A short form description for the alert condition template",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "displayName",
     "description": "The human-readable name for the alert condition template",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "type",
     "description": "Determines the type of alert condition template that will be created",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Nr1CatalogAlertConditionType",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "CloudEbsIntegration",
   "description": "EBS Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "fetchExtendedInventory",
     "description": "Determine if extra inventory data be collected or not. May affect total data collection time and contribute to the Cloud provider API rate limit.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "tagKey",
     "description": "Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "tagValue",
     "description": "Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "EdgeCreateTraceObserverResponseErrorType",
   "description": "Known error codes and messages for `CreateTraceObserverResponseError`.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "ALREADY_EXISTS",
     "description": "A trace observer already exists for this account family and provider region.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NO_AVAILABILITY_IN_REGION",
     "description": "Trace observers aren’t available in provider region.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AlertsPagerDutyNotificationChannelUpdateInput",
   "description": "The input for updating an existing PagerDuty notification channel.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "apiKey",
     "description": "API key.",
     "type": {
      "name": "SecureValue",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "Notification channel name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "MultiTenantAuthorizationRole",
   "description": "Describes a role within the system",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "id",
     "description": "a value that uniquely identifies this object",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "the name of the object",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "scope",
     "description": "The scope the role applies to",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "type",
     "description": "The type of role",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "DashboardEntityPermissions",
   "description": "Permisions that represent visibility \u0026 editability",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "PRIVATE",
     "description": "Private",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "PUBLIC_READ_ONLY",
     "description": "Public read only",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "PUBLIC_READ_WRITE",
     "description": "Public read \u0026 write",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "EntityRelationshipEdgeFilter",
   "description": "EntityRelationship edge filter.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "direction",
     "description": "Filter by direction of relationship.",
     "type": {
      "name": "EntityRelationshipEdgeDirection",
      "kind": "ENUM"
     }
    },
    {
     "name": "entityDomainTypes",
     "description": "Filter on entity domain-types.",
     "type": {
      "name": "EntityRelationshipEntityDomainTypeFilter",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "relationshipTypes",
     "description": "Filter on relationship types.",
     "type": {
      "name": "EntityRelationshipEdgeTypeFilter",
      "kind": "INPUT_OBJECT"
     }
    }
   ]
  },
  {
   "name": "SyntheticsScriptApiMonitorUpdateMutationResult",
   "description": "The result of a Script Api monitor update mutation",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "errors",
     "description": "Errors that occurred during Script Api monitor update mutation",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "name": "SyntheticsMonitorUpdateError",
        "kind": "OBJECT"
       }
      }
     }
    },
    {
     "name": "monitor",
     "description": "The resulting Script Api monitor",
     "type": {
      "name": "SyntheticsScriptApiMonitor",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "CloudDisableIntegrationsInput",
   "description": "List of providers",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "aws",
     "description": "Aws provider",
     "type": {
      "name": "CloudAwsDisableIntegrationsInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "awsGovcloud",
     "description": "AwsGovcloud provider",
     "type": {
      "name": "CloudAwsGovcloudDisableIntegrationsInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "azure",
     "description": "Azure provider",
     "type": {
      "name": "CloudAzureDisableIntegrationsInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "gcp",
     "description": "Gcp provider",
     "type": {
      "name": "CloudGcpDisableIntegrationsInput",
      "kind": "INPUT_OBJECT"
     }
    }
   ]
  },
  {
   "name": "AiWorkflowsNrqlEnrichmentInput",
   "description": "NRQL type enrichment input object",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "configuration",
     "description": "configuration",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiWorkflowsNrqlConfigurationInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "name",
     "description": "name",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AiNotificationsChannelUpdate",
   "description": "Channel update object",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "active",
     "description": "active",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "name",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "properties",
     "description": "properties",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AiNotificationsPropertyInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    }
   ]
  },
  {
   "name": "CloudElasticbeanstalkIntegration",
   "description": "Elastic Beanstalk Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "fetchExtendedInventory",
     "description": "Determine if extra inventory data be collected or not. May affect total data collection time and contribute to the Cloud provider API rate limit.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "fetchTags",
     "description": "Specify if tags should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "tagKey",
     "description": "Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "tagValue",
     "description": "Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "OrganizationAuthenticationDomainSortInput",
   "description": "Sort key and direction for authentication domains",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "direction",
     "description": "Direction to sort in",
     "type": {
      "name": "OrganizationSortDirectionEnum",
      "kind": "ENUM"
     }
    },
    {
     "name": "key",
     "description": "Authentication domain attribute to sort on",
     "type": {
      "name": "OrganizationSortKeyEnum",
      "kind": "ENUM"
     }
    }
   ]
  },
  {
   "name": "DashboardUpdateError",
   "description": "Expected errors that can be returned by update operation.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "description",
     "description": "Error description.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "type",
     "description": "Error type.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "DashboardUpdateErrorType",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "EdgeDeleteTraceObserverInput",
   "description": "Data required to delete a trace observer.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "id",
     "description": "Globally unique identifier of the trace observer being deleted.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "CloudBillingIntegrationInput",
   "description": "AWS Billing",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AlertsOpsGenieNotificationChannelUpdateInput",
   "description": "The input for updating an existing OpsGenie notification channel.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "apiKey",
     "description": "API key.",
     "type": {
      "name": "SecureValue",
      "kind": "SCALAR"
     }
    },
    {
     "name": "dataCenterRegion",
     "description": "OpsGenie data center region.",
     "type": {
      "name": "AlertsOpsGenieDataCenterRegion",
      "kind": "ENUM"
     }
    },
    {
     "name": "name",
     "description": "Notification channel name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "recipients",
     "description": "List of email recipients.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "tags",
     "description": "Tags.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "teams",
     "description": "Teams.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    }
   ]
  },
  {
   "name": "UserManagementDeletedUser",
   "description": "A user of New Relic to be deleted.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "id",
     "description": "The id of the deleted user",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "StreamingExportPayloadCompression",
   "description": "Whether Compression is enabled for the export rule, and what compression format is used",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "DISABLED",
     "description": "Do not compress payloads for this export rule",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "GZIP",
     "description": "Compress payloads for this export rule using the GZIP compression format",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "SyntheticsPrivateLocationInput",
   "description": "Information realating to a private location",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "guid",
     "description": "The unique identifier for the Synthetics private location in New Relic",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "vsePassword",
     "description": "The location's Verified Script Execution password (Only necessary if Verified Script Execution is enabled for the location)",
     "type": {
      "name": "SecureValue",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "Nr1CatalogCategory",
   "description": "A thematic grouping for catalog items",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "displayName",
     "description": "The human readable name of the category",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "slug",
     "description": "The url friendly name of the category",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "terms",
     "description": "A list of terms that match catalog items to this category",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      }
     }
    }
   ]
  },
  {
   "name": "Nr1CatalogSearchResponse",
   "description": "Information about results returned from a search",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "facets",
     "description": "Get count information about the filters",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Nr1CatalogSearchFacets",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "nextCursor",
     "description": "Cursor used to fetch the next set of results",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "results",
     "description": "The list of search results",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Nr1CatalogSearchResult",
         "kind": "UNION"
        }
       }
      }
     }
    },
    {
     "name": "totalCount",
     "description": "The total number of results that match the search",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AlertsNrqlConditionTermsInput",
   "description": "NRQL condition terms determine when a violation will be opened.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "operator",
     "description": "Operator used to compare against the threshold.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsNrqlConditionTermsOperator",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "priority",
     "description": "Priority determines how much attention your incidents need. Your workflow settings then tell us when and where to send notifications for different priorities.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsNrqlConditionPriority",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "threshold",
     "description": "Value that triggers a violation.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Float",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "thresholdDuration",
     "description": "The duration, in seconds, that the threshold must violate for in order to create a violation.\nThis value must be within 60-86400 seconds and must be a multiple of the aggregation window.\n(Default aggregation window duration is 60 seconds.)",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "thresholdOccurrences",
     "description": "How many data points must be in violation for the specified thresholdDuration.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsNrqlConditionThresholdOccurrences",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "CloudGcpAlloydbIntegration",
   "description": "AlloyDB Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "SyntheticsMonitorDowntimeMonthlyFrequency",
   "description": "Configuration options for when a monthly monitor downtime should run",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "daysOfMonth",
     "description": "Which dates a monitor downtime is run (only 1 of these can be selected)",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "daysOfWeek",
     "description": "Which weekdays in the month the monitor downtime will run (only 1 of these can be selected)",
     "type": {
      "name": "SyntheticsDaysOfWeek",
      "kind": "INPUT_OBJECT"
     }
    }
   ]
  },
  {
   "name": "NerdpackMutationResultPerAccount",
   "description": "Mutation result for the given acccount.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "accountId",
     "description": "Given account ID.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "reason",
     "description": "Error type if mutation failed.",
     "type": {
      "name": "NerdpackMutationErrorType",
      "kind": "ENUM"
     }
    },
    {
     "name": "result",
     "description": "Mutation result for the given acccount.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "NerdpackMutationResult",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "ApmBrowserApplicationEntityOutline",
   "description": "The `ApmBrowserApplicationEntityOutline` interface provides detailed information for the Browser App injected by an APM Application.",
   "kind": "INTERFACE",
   "fields": [
    {
     "name": "apmBrowserSummary",
     "type": {
      "name": "ApmBrowserApplicationSummaryData",
      "kind": "OBJECT"
     }
    }
   ],
   "possibleTypes": [
    {
     "name": "ApmApplicationEntityOutline",
     "kind": "OBJECT"
    }
   ]
  },
  {
   "name": "Nr1CatalogQuickstartsListing",
   "description": "Paginated information about Quickstarts",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "nextCursor",
     "description": "Cursor used to fetch the next set of results",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "results",
     "description": "The list of quickstart results",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Nr1CatalogQuickstart",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "totalCount",
     "description": "The total number of quickstart results",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AlertsWebhookCustomHeaderMutationInput",
   "description": "Webhook header",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "name",
     "description": "Header name",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "value",
     "description": "Header value",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SecureValue",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AiDecisionsFixedLessThanOrEqualInput",
   "description": "Input type for FixedLessThanOrEqual expression",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "compared",
     "description": "Value to be used in comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Float",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "incident",
     "description": "Incident selector to be used in comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsIncidentObjectInput",
       "kind": "INPUT_OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "AiNotificationsVariableType",
   "description": "Variable types",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "BOOLEAN",
     "description": "Boolean variable type",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "LIST",
     "description": "List variable type",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NUMBER",
     "description": "number variable type",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "OBJECT",
     "description": "Object variable type",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "STRING",
     "description": "String variable type",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AiNotificationsChannelSorter",
   "description": "Sort object",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "direction",
     "description": "direction",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiNotificationsSortOrder",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "field",
     "description": "field",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiNotificationsChannelFields",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "AiNotificationsUiComponentValidation",
   "description": "Type of Validation required for this component",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "DATE",
     "description": "Data should be a valid DATE ISO-8601 format",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "DATETIME",
     "description": "Data should be a valid DATETIME ISO-8601 format",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "EMAIL",
     "description": "Data should be a valid email",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "JSON",
     "description": "Data should be a valid JSON",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NONE",
     "description": "No validation",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NUMBER",
     "description": "Data should be a valid number",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "URL",
     "description": "Data should be a valid URL",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AlertsNotificationChannelsAddToPolicyResponse",
   "description": "The response for associating notification channels with a policy.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "errors",
     "description": "Errors.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AlertsNotificationChannelsAddToPolicyError",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "notificationChannels",
     "description": "Notification channels.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AlertsNotificationChannelId",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "policyId",
     "description": "Policy ID.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AlertsNotificationChannelUpdateError",
   "description": "The error for updating a notification channel.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "description",
     "description": "Error description.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "errorType",
     "description": "Error type.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsNotificationChannelUpdateErrorType",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "notificationChannelId",
     "description": "Notification channel ID.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "CloudAzureCosmosdbIntegration",
   "description": "Cosmos DB Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "resourceGroups",
     "description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "MultiTenantIdentityUserIdInput",
   "description": "Filters by user id",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "eq",
     "description": "A user id",
     "type": {
      "name": "ID",
      "kind": "SCALAR"
     }
    },
    {
     "name": "in",
     "description": "A list of user IDs",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    }
   ]
  },
  {
   "name": "WorkloadStatusConfig",
   "description": "The configuration that defines how the status of the workload is calculated.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "automatic",
     "description": "An automatic status configuration.",
     "type": {
      "name": "WorkloadAutomaticStatus",
      "kind": "OBJECT"
     }
    },
    {
     "name": "static",
     "description": "A list of static status configurations.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "WorkloadStaticStatus",
        "kind": "OBJECT"
       }
      }
     }
    }
   ]
  },
  {
   "name": "EntityGoldenContextScopedGoldenMetrics",
   "description": "An object that represents the golden metrics scoped by context",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "context",
     "description": "Context for the golden metric",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EntityGoldenContext",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "metrics",
     "description": "Metrics for the domain and type",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EntityGoldenMetric",
         "kind": "OBJECT"
        }
       }
      }
     }
    }
   ]
  },
  {
   "name": "NerdpackRemovedTagResponse",
   "description": "Removed Tag response",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "removedTagInfo",
     "description": "Optional removed tag information",
     "type": {
      "name": "NerdpackRemovedTagInfo",
      "kind": "OBJECT"
     }
    },
    {
     "name": "status",
     "description": "The status of the response. Tells is the tag was deleted or not",
     "type": {
      "name": "NerdpackRemovedTagResponseType",
      "kind": "ENUM"
     }
    }
   ]
  },
  {
   "name": "ApmApplicationSettings",
   "description": "Configuration settings for the APM Application",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "apdexTarget",
     "description": "The current Apdex target setting",
     "type": {
      "name": "Float",
      "kind": "SCALAR"
     }
    },
    {
     "name": "serverSideConfig",
     "description": "State of server-side configuration setting",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "NrqlDropRulesCreateDropRuleSubmission",
   "description": "The details that were submitted when creating a drop rule.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "accountId",
     "description": "The account the targeted data report to.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "action",
     "description": "The type of drop rule you want. This changes the way your NRQL string is interpreted.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "NrqlDropRulesAction",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "description",
     "description": "Additional information about the rule.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrql",
     "description": "The NRQL string used to match data you want to take the specified action on.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "SuggestedNrqlQueryResponse",
   "description": "A result type encapsulating suggested queries",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "suggestions",
     "description": "List of suggested queries.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "SuggestedNrqlQuery",
        "kind": "INTERFACE"
       }
      }
     }
    }
   ]
  },
  {
   "name": "DashboardBillboardWidgetConfigurationInput",
   "description": "Configuration for visualization type 'viz.billboard'. Learn more about [billboard](https://docs.newrelic.com/docs/apis/nerdgraph/examples/create-widgets-dashboards-api/#billboard) widget.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "nrqlQueries",
     "description": "NRQL queries.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "DashboardWidgetNrqlQueryInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    },
    {
     "name": "thresholds",
     "description": "Array of thresholds to categorize the results of the query in different groups.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "DashboardBillboardWidgetThresholdInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    }
   ]
  },
  {
   "name": "MultiTenantAuthorizationRoleCollection",
   "description": "An iterable collection of roles",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "items",
     "description": "collection of roles",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "MultiTenantAuthorizationRole",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "nextCursor",
     "description": "an opaque cursor to supply with subsequent   requests to get the next page of results, null if there are no more pages",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "totalCount",
     "description": "the total number of results",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "CloudAwsUpdateAccountInput",
   "description": "Information required to update a AWS account to a NewRelic account.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "arn",
     "description": "The AWS role ARN (used to fetch data).",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "disabled",
     "description": "Disable the linked account.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "The linked account new name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "CloudAwsGovCloudProvider",
   "description": "The Amazon Web Services cloud provider (GovCloud)",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "awsAccountId",
     "description": "The AWS Account ID",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "icon",
     "description": "The cloud provider icon name.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud provider identifier in NewRelic.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "The cloud provider name.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "Get details of one cloud provider service.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "slug",
       "description": "The cloud provider short name.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "services",
     "description": "Get details of all the cloud provider services available for integration.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "CloudService",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "slug",
     "description": "The cloud provider short name.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "templateParams",
     "description": "Get template params of one cloud provider service.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "CloudTemplateParam",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudProvider",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "EdgeTraceFilters",
   "description": "A container for all trace filter rule types",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "randomTraceFilter",
     "description": "Random trace filter configuration applied to the trace observer.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EdgeRandomTraceFilter",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "spanAttributesTraceFilter",
     "description": "Span attribute trace filter configuration applied to the trace observer.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EdgeSpanAttributesTraceFilter",
       "kind": "OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "AiDecisionsOverrideConfigurationInput",
   "description": "Configuration for overriding properties of issues created by merges.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "description",
     "description": "Description merged issues should take.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "priority",
     "description": "Priority merged issues should take.",
     "type": {
      "name": "AiDecisionsIssuePriority",
      "kind": "ENUM"
     }
    },
    {
     "name": "title",
     "description": "Title merged issues should take.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "OrganizationAccountIdInput",
   "description": "Provides the operations available on the account id",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "eq",
     "description": "An account id",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "Nr1CatalogActorStitchedFields",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "alertPolicyTemplate",
     "description": "Information related to a alert policy template",
     "type": {
      "name": "Nr1CatalogAlertPolicyTemplate",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "id",
       "description": "The ID associated with the alert policy template",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "categories",
     "description": "List of available categories for filtering and searching",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Nr1CatalogCategory",
        "kind": "OBJECT"
       }
      }
     }
    },
    {
     "name": "dashboardTemplate",
     "description": "Information related to a dashboard template",
     "type": {
      "name": "Nr1CatalogDashboardTemplate",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "id",
       "description": "The ID associated with the dashboard template",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "dataSource",
     "description": "Information related to a data source",
     "type": {
      "name": "Nr1CatalogDataSource",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "id",
       "description": "The ID associated with the data source",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "nerdpack",
     "description": "Information related to a deployed Nerdpack",
     "type": {
      "name": "Nr1CatalogNerdpack",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "id",
       "description": "The ID associated with the Nerdpack",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "nerdpacks",
     "description": "List of nerdpacks available in the catalog",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Nr1CatalogNerdpack",
        "kind": "OBJECT"
       }
      }
     }
    },
    {
     "name": "quickstart",
     "description": "Catalog information related to a quickstart",
     "type": {
      "name": "Nr1CatalogQuickstart",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "id",
       "description": "The ID associated with the quickstart",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "quickstarts",
     "description": "List of Quickstarts available in New Relic I/O",
     "type": {
      "name": "Nr1CatalogQuickstartsListing",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "cursor",
       "description": "Cursor for pagination. Supplied by a previous Quickstarts query.",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "search",
     "description": "Search for items in the catalog",
     "type": {
      "name": "Nr1CatalogSearchResponse",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "cursor",
       "description": "Cursor for pagination. Supplied by a previous search.",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "filter",
       "description": "Set of filters to apply to the search",
       "type": {
        "name": "Nr1CatalogSearchFilter",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "query",
       "description": "Search query string",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "sortBy",
       "description": "Method used to sort the search results",
       "type": {
        "name": "Nr1CatalogSearchSortOption",
        "kind": "ENUM"
       },
       "defaultValue": "ALPHABETICAL"
      }
     ]
    }
   ]
  },
  {
   "name": "StreamingExportGcpInput",
   "description": "GCP input parameters for a new streaming rule",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "gcpProjectId",
     "description": "gcp project id",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "pubsubTopicId",
     "description": "pub sub topic id",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "CloudGcpFunctionsIntegration",
   "description": "Cloud Functions Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "AlertsMutingRuleConditionGroupInput",
   "description": "A group of MutingRuleConditions combined by an operator.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "conditions",
     "description": "The individual MutingRuleConditions within the group.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AlertsMutingRuleConditionInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "operator",
     "description": "The operator used to combine all the MutingRuleConditions within the group.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsMutingRuleConditionGroupOperator",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "StreamingExportRule",
   "description": "Details about a streaming rule",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "account",
     "description": "The account associated to this streaming rule",
     "type": {
      "name": "AccountReference",
      "kind": "OBJECT"
     }
    },
    {
     "name": "aws",
     "description": "The AWS information configured for the streaming rule",
     "type": {
      "name": "StreamingExportAwsDetails",
      "kind": "OBJECT"
     }
    },
    {
     "name": "azure",
     "description": "The Azure information configured for the streaming rule",
     "type": {
      "name": "StreamingExportAzureDetails",
      "kind": "OBJECT"
     }
    },
    {
     "name": "createdAt",
     "description": "The time at which the process of creating the streaming rule began",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochMilliseconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "description",
     "description": "Additional information about the streaming rule",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "gcp",
     "description": "The GCP information configured for the streaming rule",
     "type": {
      "name": "StreamingExportGcpDetails",
      "kind": "OBJECT"
     }
    },
    {
     "name": "id",
     "description": "The rule ID for this streaming rule",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "message",
     "description": "A message returned by the latest API call",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The name of this streaming rule",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "nrql",
     "description": "NRQL used to select data to be exported",
     "type": {
      "name": "Nrql",
      "kind": "SCALAR"
     }
    },
    {
     "name": "payloadCompression",
     "description": "Whether or not to compress payloads before exporting them, and what compression format to use if so",
     "type": {
      "name": "StreamingExportPayloadCompression",
      "kind": "ENUM"
     }
    },
    {
     "name": "status",
     "description": "The state of this streaming rule",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "StreamingExportStatus",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "updatedAt",
     "description": "The last time the status of the streaming rule was updated",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochMilliseconds",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AgentFeatures",
   "description": "Features of the Agent",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "minVersion",
     "description": "The minimum version available for the Agent on this entity",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The name of the feature",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "UserManagementUpdateGroup",
   "description": "The input object representing the group being updated",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "displayName",
     "description": "The name of the group",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The id of the group to update",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "NerdpackRemovedTagInfo",
   "description": "Information about removed tag",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "nerdpackId",
     "description": "UUID of the nerdpack",
     "type": {
      "name": "ID",
      "kind": "SCALAR"
     }
    },
    {
     "name": "tagName",
     "description": "Tag removed",
     "type": {
      "name": "NerdpackTagName",
      "kind": "SCALAR"
     }
    },
    {
     "name": "version",
     "description": "Version affected",
     "type": {
      "name": "SemVer",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "CloudEcsIntegration",
   "description": "ECS Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "fetchTags",
     "description": "Specify if tags should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "tagKey",
     "description": "Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "tagValue",
     "description": "Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "NerdpackTagName",
   "description": "A string representing a nerdpack tag.",
   "kind": "SCALAR"
  },
  {
   "name": "AlertsNrqlConditionUpdateQueryInput",
   "description": "Information for generating the condition NRQL query.\nOutput from this NRQL query will be compared to the condition terms to detect violations.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "dataAccountId",
     "description": "**BETA PREVIEW:** the `dataAccountId` field is in limited release and only enabled for preview on a per-account basis.\nThe New Relic account ID to use as the basis for the NRQL alert condition's `query`; will default to the condition's account ID if unspecified.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "evaluationOffset",
     "description": "Deprecated; superseded by `signal.aggregationMethod` with `signal.aggregationDelay` or `signal.aggregationTimer`.\n\nBy default, we evaluate the NRQL query in one-minute time windows. Start time depends on the value you select in the NRQL condition's `evaluationOffset`. Evaluation offset cannot be greater than 60 minutes.\n\nThis value is the number of time windows we look back at the aggregated data.\n\nExample: With an `evaluationOffset` of 3, the NRQL time window applied to your query will be:\n\n`SINCE 3 minutes ago UNTIL 2 minutes ago`",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "query",
     "description": "NRQL syntax that defines the query.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "OrganizationAccountShares",
   "description": "An organization's shared accounts, both given and received.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "sharedAccounts",
     "description": "An organization's shared accounts, both given and received.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "OrganizationSharedAccount",
        "kind": "OBJECT"
       }
      }
     }
    }
   ]
  },
  {
   "name": "LogConfigurationsUpdateObfuscationRuleInput",
   "description": "Input for updating an obfuscation rule.\nNull fields are left untouched by mutation.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "actions",
     "description": "Actions for the rule. When non-null, this list of actions is used to replace\nthe existing list of actions of the rule. The actions will be applied in the\norder specified by this list.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "LogConfigurationsUpdateObfuscationActionInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    },
    {
     "name": "description",
     "description": "Description of rule.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "enabled",
     "description": "Whether the rule should be applied or not to incoming data.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "filter",
     "description": "NRQL for determining whether a given log record should have obfuscation actions applied.",
     "type": {
      "name": "Nrql",
      "kind": "SCALAR"
     }
    },
    {
     "name": "id",
     "description": "Rule Id.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "Name of rule.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "OrganizationRegionCodeEnum",
   "description": "Enums for region codes",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "EU01",
     "description": "Region code for EU",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "US01",
     "description": "Region code for US",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "InstallationRecipeEventResult",
   "description": "A wrapper object that contains paginated recipe events along with counts and a pagination cursor",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "cursor",
     "description": "Cursor for fetching next page of results.  Results are ordered by descending timestamp (most recent first)",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "recipeEvents",
     "description": "List of RecipeEvent objects",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "InstallationRecipeEvent",
        "kind": "OBJECT"
       }
      }
     }
    },
    {
     "name": "totalCount",
     "description": "Total number of RecipeEvent results across all pages for a given query",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AlertsNotificationChannelsRemoveFromPolicyErrorType",
   "description": "The error type for dissociating notification channels from a policy.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "BAD_USER_INPUT",
     "description": "Bad user input error.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "FORBIDDEN_ERROR",
     "description": "Forbidden error.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NOT_FOUND_ERROR",
     "description": "Not found error.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SERVER_ERROR",
     "description": "Server error.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "TOO_MANY_REQUESTS_ERROR",
     "description": "Too many requests error.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AiDecisionsRuleExpression",
   "description": "Expression used for comparing incidents as part of a correlation.",
   "kind": "SCALAR"
  },
  {
   "name": "Nr1CatalogCommunityContactChannel",
   "description": "A contact channel where users can get support via the community",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "url",
     "description": "The URL linking to a website for support",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "LogConfigurationsObfuscationExpression",
   "description": "Reusable obfuscation expression.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "Identifies the date and time when the expression was created.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "DateTime",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "createdBy",
     "description": "Identifies the user who has created the expression.",
     "type": {
      "name": "UserReference",
      "kind": "OBJECT"
     }
    },
    {
     "name": "description",
     "description": "Description of the expression.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "id",
     "description": "The id of the obfuscation expression.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "Name of the expression.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "regex",
     "description": "Regular expression for this obfuscation expression. Capture groups will be obscured on matching.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "updatedAt",
     "description": "Identifies the date and time when the expression was last updated.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "DateTime",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "updatedBy",
     "description": "Identifies the user who has last updated the expression.",
     "type": {
      "name": "UserReference",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "CloudAwsAppsyncIntegration",
   "description": "AppSync Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "AgentApplicationSettingsRawJsConfiguration",
   "description": "The \"raw\" configuration values for configuring the javascript client.",
   "kind": "SCALAR"
  },
  {
   "name": "EdgeProviderRegion",
   "description": "Provider and region where the trace observer is located. Currently, only AWS regions are supported.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "AWS_AP_SOUTHEAST_1",
     "description": "Provider: `AWS`, Region: `ap-southeast-1`",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_AP_SOUTHEAST_2",
     "description": "Provider: `AWS`, Region: `ap-southeast-2`",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_EU_CENTRAL_1",
     "description": "Provider: `AWS`, Region: `eu-central-1`",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_EU_WEST_1",
     "description": "Provider: `AWS`, Region: `eu-west-1`",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_US_EAST_1",
     "description": "Provider: `AWS`, Region: `us-east-1`",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_US_EAST_2",
     "description": "Provider: `AWS`, Region: `us-east-2`",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AWS_US_WEST_2",
     "description": "Provider: `AWS`, Region: `us-west-2`",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AiDecisionsRelativeEndsWithInput",
   "description": "Input type for RelativeEndsWith expression",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "contained",
     "description": "Incident selector to be used in comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsIncidentObjectInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "container",
     "description": "Incident selector to be used in comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsIncidentObjectInput",
       "kind": "INPUT_OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "OrganizationNewManagedAccountInput",
   "description": "Attributes for creating a new managed account.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "name",
     "description": "The name of the new account to be created.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "regionCode",
     "description": "The region-code for the account to be created.",
     "type": {
      "name": "OrganizationRegionCodeEnum",
      "kind": "ENUM"
     }
    }
   ]
  },
  {
   "name": "OrganizationCustomerContractFilterInput",
   "description": "A filter for customer contracts",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "customerId",
     "description": "The id of the customer",
     "type": {
      "name": "OrganizationContractCustomerIdInputFilter",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "organizationId",
     "description": "The id of the organization",
     "type": {
      "name": "OrganizationContractOrganizationIdInputFilter",
      "kind": "INPUT_OBJECT"
     }
    }
   ]
  },
  {
   "name": "AiDecisionsRelativeLevenshteinInput",
   "description": "Input type for RelativeLevenshtein expression",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "left",
     "description": "Left operand of comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsIncidentObjectInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "maxDistance",
     "description": "Maximum distance threshold.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "right",
     "description": "Right operand of comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsIncidentObjectInput",
       "kind": "INPUT_OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "Nr1CatalogSpecificSupportedEntityTypes",
   "description": "Specifies the supported entity types to be a specific subset of entity types",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "entityTypes",
     "description": "The list of support entity types.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "DomainType",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "mode",
     "description": "The level of support entity types. Always set to SPECIFIC",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Nr1CatalogSupportedEntityTypesMode",
       "kind": "ENUM"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "Nr1CatalogSupportedEntityTypes",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "DataManagementType",
   "description": "Type of a limit",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "GAUGE",
     "description": "Report usage as a gauge type",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "RATE",
     "description": "Aggregate and report usage as a rate type",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "Boolean",
   "description": "The `Boolean` scalar type represents `true` or `false`.",
   "kind": "SCALAR"
  },
  {
   "name": "OrganizationAccount",
   "description": "The account type contains the properties of an account",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The creation time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "DateTime",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The account id",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "The account name",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "parentId",
     "description": "The parent ID",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "partnershipId",
     "description": "The partnership ID",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "partnershipName",
     "description": "The partnership Name",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "payMethod",
     "description": "The pay method",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "regionCode",
     "description": "The account region code",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "status",
     "description": "The status",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AiDecisionsFixedCosineDistanceInput",
   "description": "Input type for FixedCosineDistance expression",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "incident",
     "description": "Incident selector to be used in comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsIncidentObjectInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "maxDistance",
     "description": "Maximum distance threshold.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Float",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "value",
     "description": "Value to be used in comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "Seconds",
   "description": "The `Seconds` scalar represents a duration in seconds",
   "kind": "SCALAR"
  },
  {
   "name": "SyntheticsStepType",
   "description": "enum of of script step types",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "ASSERT_ELEMENT",
     "description": "Assert on element accessed by ID, CSS, or x-path",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "ASSERT_MODAL",
     "description": "Assert on modal exists",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "ASSERT_TEXT",
     "description": "Assert on text accessed by ID, CSS, or x-path",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "ASSERT_TITLE",
     "description": "Assert on title of page",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "CLICK_ELEMENT",
     "description": "Click on an element by ID, CSS, or x-path",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "DISMISS_MODAL",
     "description": "Preform actions on a modal to dismiss",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "DOUBLE_CLICK_ELEMENT",
     "description": "Double click on an element by ID, CSS, or x-path",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "HOVER_ELEMENT",
     "description": "Hover over an element by x-path",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NAVIGATE",
     "description": "Navigate to the specified url",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SECURE_TEXT_ENTRY",
     "description": "Input secure credential into element accessed by ID, CSS, or x-path",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SELECT_ELEMENT",
     "description": "Select a dropdown element by value, text, ID, CSS, or x-path",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "TEXT_ENTRY",
     "description": "Input text into element accessed by ID, CSS, or x-path",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AiWorkflowsEnrichmentType",
   "description": "Type of Enrichment",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "NRQL",
     "description": "NRQL Enrichment type",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "CloudGcpBigqueryIntegration",
   "description": "BigQuery Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "fetchTableMetrics",
     "description": "Fetch BigQuery Table metrics, disabled by default",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "fetchTags",
     "description": "Specify if labels and the extended inventory should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "AlertsOpsGenieNotificationChannelCreateInput",
   "description": "The input for creating a new OpsGenie notification channel.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "apiKey",
     "description": "API key.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SecureValue",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "dataCenterRegion",
     "description": "OpsGenie data center region.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsOpsGenieDataCenterRegion",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "name",
     "description": "Notification channel name.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "recipients",
     "description": "List of email recipients.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "tags",
     "description": "Tags.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "teams",
     "description": "Teams.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    }
   ]
  },
  {
   "name": "WorkloadUpdateStaticStatusInput",
   "description": "The input object used to represent the configuration of a static status.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "description",
     "description": "A description that provides additional details about the status of the workload.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "enabled",
     "description": "Whether the static status configuration is enabled or not.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The unique identifier of the static status to be updated. If not provided, a new static status is created.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "status",
     "description": "The status of the workload.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "WorkloadStatusValueInput",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "summary",
     "description": "A short description of the static status.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "LogConfigurationsUpsertPipelineConfigurationResponse",
   "description": "The result after upserting pipeline configuration for an account.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "pipelineConfiguration",
     "description": "The updated pipeline configuration.",
     "type": {
      "name": "LogConfigurationsPipelineConfiguration",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "DashboardVariableDefaultItemInput",
   "description": "Represents a possible default value item.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "value",
     "description": "The value of this default item.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "DashboardVariableDefaultValueInput",
       "kind": "INPUT_OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "CloudAwsXrayIntegrationInput",
   "description": "X-Ray",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "EntityGoldenContextScopedGoldenTags",
   "description": "An object that represents the golden tags scoped by context",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "context",
     "description": "Context for the golden tags",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EntityGoldenContext",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "tags",
     "description": "Tags for the domain and type",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EntityGoldenTag",
         "kind": "OBJECT"
        }
       }
      }
     }
    }
   ]
  },
  {
   "name": "DashboardMarkdownWidgetConfiguration",
   "description": "Configuration for visualization type 'viz.markdown'",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "text",
     "description": "Markdown content of the widget.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "SyntheticsStepMonitorCreateMutationResult",
   "description": "The result of a Step monitor create mutation",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "errors",
     "description": "Errors that occurred during Step monitor create mutation",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "name": "SyntheticsMonitorCreateError",
        "kind": "OBJECT"
       }
      }
     }
    },
    {
     "name": "monitor",
     "description": "The resulting Step monitor",
     "type": {
      "name": "SyntheticsStepMonitor",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "AiWorkflowsDeleteResponseError",
   "description": "Delete error description",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "description",
     "description": "The error description",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "type",
     "description": "The error type",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiWorkflowsDeleteErrorType",
       "kind": "ENUM"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "AiWorkflowsResponseError",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "AgentEnvironmentAccountEnvironmentAttributesResults",
   "description": "Results for environment attributes search. This list is paginated. Use the cursor to go through all the available results.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "nextCursor",
     "description": "If nextCursor is a String value, set it to the cursor input field while searching in order to get the next page of results.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "results",
     "description": "Results of the search.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AgentEnvironmentApplicationEnvironmentAttributes",
        "kind": "OBJECT"
       }
      }
     }
    }
   ]
  },
  {
   "name": "NerdpackSubscribeAccountsInput",
   "description": "New subscriptions input.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "accountIds",
     "description": "List of accounts to be subscribed.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      }
     }
    },
    {
     "name": "tag",
     "description": "Tag of the Nerdpack version to be subscribed to.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "NerdpackTagName",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AgentApplicationSettingsThresholdTypeEnum",
   "description": "Determines whether a threshold is statically configured or dynamically configured.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "APDEX_F",
     "description": "Configures the threshold to be 4 times the value of APDEX_T.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "VALUE",
     "description": "Threshold will be statically configured via the corresponding \"value\" field.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "EdgeDeleteTraceObserverResponseError",
   "description": "Description of errors that may occur while attempting to delete a trace observer.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "message",
     "description": "Error message, with further detail to help resolve the issue.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "type",
     "description": "Error that may occur while attempting to delete a trace observer.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EdgeDeleteTraceObserverResponseErrorType",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "AiIssuesIssueData",
   "description": "Issues data",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "issues",
     "description": "Issues",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiIssuesIssue",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "nextCursor",
     "description": "Cursor to get the next batch of results",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AiIssuesPriority",
   "description": "Issue priority",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "CRITICAL",
     "description": "Critical priority",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "HIGH",
     "description": "High priority",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "LOW",
     "description": "Low priority",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "MEDIUM",
     "description": "Medium priority",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "Nr1CatalogPreview",
   "description": "Specifies fields required for types that implement the ability to display a media preview in the New Relic One Catalog",
   "kind": "INTERFACE",
   "fields": [
    {
     "name": "url",
     "description": "The publicly accessible URL for the preview",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "possibleTypes": [
    {
     "name": "Nr1CatalogScreenshot",
     "kind": "OBJECT"
    }
   ]
  },
  {
   "name": "CloudAwsRoute53resolverIntegration",
   "description": "Route53 Resolver Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "StackTraceMobileExceptionStackTrace",
   "description": "A structured representation of a handled exception in a mobile application.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "frames",
     "description": "Stack trace frames.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "StackTraceMobileExceptionStackTraceFrame",
       "kind": "OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "Nr1CatalogNerdpackItemMetadata",
   "description": "Metadata information for an item in a Nerdpack",
   "kind": "INTERFACE",
   "fields": [
    {
     "name": "description",
     "description": "A short form description for the Nerdpack item.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "displayName",
     "description": "The human-readable name for the Nerdpack item.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "previews",
     "description": "A list of previews for the Nerdpack item, such as screenshots.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Nr1CatalogPreview",
         "kind": "INTERFACE"
        }
       }
      }
     }
    }
   ],
   "possibleTypes": [
    {
     "name": "Nr1CatalogLauncherMetadata",
     "kind": "OBJECT"
    },
    {
     "name": "Nr1CatalogNerdletMetadata",
     "kind": "OBJECT"
    },
    {
     "name": "Nr1CatalogVisualizationMetadata",
     "kind": "OBJECT"
    }
   ]
  },
  {
   "name": "KeyTransactionUpdateResult",
   "description": "The result of updating a key transaction.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "apdexTarget",
     "description": "The acceptable amount of time spent in the backend before customers get frustrated (Apdex target).",
     "type": {
      "name": "Float",
      "kind": "SCALAR"
     }
    },
    {
     "name": "application",
     "description": "The application associated with this key transaction",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "KeyTransactionApplication",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "browserApdexTarget",
     "description": "The acceptable amount of time for rendering a page in a browser before customers get frustrated (browser Apdex target).",
     "type": {
      "name": "Float",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The name of the key transaction.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "DataManagementNamespaceLevelRetention",
   "description": "Namespace level retention",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "retentionInDays",
     "description": "Length of time data will be retained (in days)",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "CloudElasticbeanstalkIntegrationInput",
   "description": "AWS Elastic Beanstalk",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "fetchExtendedInventory",
     "description": "Determine if extra inventory data be collected or not. May affect total data collection time and contribute to the Cloud provider API rate limit.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "fetchTags",
     "description": "Specify if tags should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "tagKey",
     "description": "Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "tagValue",
     "description": "Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AlertsNrqlConditionsSearchResultSet",
   "description": "A collection of NRQL conditions with pagination information.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "nextCursor",
     "description": "Cursor pointing to the end of the current page of NrqlCondition records. Null if final page.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrqlConditions",
     "description": "A set of `NrqlConditions` for the supplied cursor and criteria.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AlertsNrqlCondition",
         "kind": "INTERFACE"
        }
       }
      }
     }
    },
    {
     "name": "totalCount",
     "description": "Total number of `NrqlConditions` for the given search criteria.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "InstallationAccountStitchedFields",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "installStatus",
     "description": "Look up the install event for a given account.\n- An install event is a representation for when the newrelic-cli has attempted an installation.\"",
     "type": {
      "name": "InstallationInstallStatus",
      "kind": "OBJECT"
     }
    },
    {
     "name": "recipeEvents",
     "description": "Look up all recipe events for a given account.\n- Recipe events are stored in our cache for any given account.\n- Recipe events are used in the nr1-install-newrelic nerdlet to provide an overview of all the attempted installation statuses.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "InstallationRecipeEvent",
        "kind": "OBJECT"
       }
      }
     }
    },
    {
     "name": "recipes",
     "description": "Look up recipe events for a given account by installId.",
     "type": {
      "name": "InstallationRecipeEventResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "cursor",
       "description": "used to fetch next page of results.  If not present, most recent events (first page) will be returned",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "installId",
       "description": "installId associated to recipe events.  If not present, all recipe events will be returned for the email provided from the service gateway email header",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "statuses",
     "description": "Look up install statuses for a given account by installId.",
     "type": {
      "name": "InstallationInstallStatusResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "cursor",
       "description": "used to fetch next page of results.  If not present, most recent install statuses (first page) will be returned",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "installId",
       "description": "installId associated to recipe events.  If not present, all install statuses will be returned for the email provided from the service gateway email header",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     ]
    }
   ]
  },
  {
   "name": "PixieLinkedPixieProject",
   "description": "Pixie Project with the New Relic account",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "accountId",
     "description": "The New Relic account id",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "pixieProject",
     "description": "The linked Pixie Project",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "PixiePixieProject",
       "kind": "OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "AiNotificationsCustomHeader",
   "description": "Custom header based authentication",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "key",
     "description": "Authentication Header Key",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "StreamingExportAzureInput",
   "description": "Azure input parameters for a new streaming rule",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "eventHubConnectionString",
     "description": "Connection string that has access to the specific Event Hub",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "eventHubName",
     "description": "The name of Event Hub to write events to",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "WorkloadStatusValueInput",
   "description": "The status value. Any static status always overrides any other status values calculated automatically.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "DEGRADED",
     "description": "The status of the workload is degraded.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "DISRUPTED",
     "description": "The status of the workload is disrupted.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "OPERATIONAL",
     "description": "The status of the workload is operational.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "DataManagementAccountFeatureSettingInput",
   "description": "Input object to add and change a feature setting toggle for an account",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "enabled",
     "description": "Enabled state for the feature setting",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "featureSetting",
     "description": "Feature setting lookup",
     "type": {
      "name": "DataManagementFeatureSettingLookup",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "locked",
     "description": "When locked is true, children inherit parent's enabled state",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "DashboardUpdateWidgetsInPageError",
   "description": "Expected errors that can be returned by updateWidgetsInPage operation.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "description",
     "description": "Error description.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "type",
     "description": "Error type.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "DashboardUpdateWidgetsInPageErrorType",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "SyntheticsSyntheticMonitorAsset",
   "description": "Asset produced during the execution of the check",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "type",
     "description": "MIME type of asset",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "url",
     "description": "Temporary url at which the asset is available for download",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "MultiTenantAuthorizationRoleTypeEnum",
   "description": "Enumerations of role types",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "CUSTOM",
     "description": "Custom role",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "STANDARD",
     "description": "Standard role",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AgentApplicationSegmentsSegmentAllowListFilters",
   "description": "Filter the allow lists by fields specified in this object.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "listType",
     "description": "INTERNAL or USER. Defaults to USER",
     "type": {
      "name": "AgentApplicationSegmentsListType",
      "kind": "ENUM"
     }
    }
   ]
  },
  {
   "name": "CloudLinkCloudAccountsInput",
   "description": "Specific Cloud provider information required to link the Cloud provider account to a NewRelic account.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "aws",
     "description": "Aws provider",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "CloudAwsLinkAccountInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    },
    {
     "name": "awsGovcloud",
     "description": "AwsGovCloud provider",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "CloudAwsGovCloudLinkAccountInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    },
    {
     "name": "azure",
     "description": "Azure provider",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "CloudAzureLinkAccountInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    },
    {
     "name": "gcp",
     "description": "Gcp provider",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "CloudGcpLinkAccountInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    }
   ]
  },
  {
   "name": "TaggingTagInput",
   "description": "An object that represents a tag key-values pair.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "key",
     "description": "The tag key.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "values",
     "description": "The tag values.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "ReferenceEntityCreateRepositoryInput",
   "description": "Information needed to create a repository entity.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "accountId",
     "description": "The account id this repository will live under.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "The name of the repository.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "url",
     "description": "The url of the repository.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "OrganizationAccountShareSortInput",
   "description": "Sort key and direction for account shares",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "direction",
     "description": "Direction to sort in",
     "type": {
      "name": "OrganizationAccountShareSortDirectionEnum",
      "kind": "ENUM"
     }
    },
    {
     "name": "key",
     "description": "Account share attribute to sort on",
     "type": {
      "name": "OrganizationAccountShareSortKeyEnum",
      "kind": "ENUM"
     }
    }
   ]
  },
  {
   "name": "PixieRecordPixieTosAcceptanceError",
   "description": "An error object for recording the Pixie terms of service acceptance",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "message",
     "description": "A message explaining what the error is about.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "type",
     "description": "The type of error.",
     "type": {
      "name": "PixieRecordPixieTosAcceptanceErrorType",
      "kind": "ENUM"
     }
    }
   ]
  },
  {
   "name": "MultiTenantAuthorizationGrantRoleIdInputFilter",
   "description": "Filters on the grants role id",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "eq",
     "description": "Performs an equals operation",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "in",
     "description": "Performs an in operation",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     }
    }
   ]
  },
  {
   "name": "CloudMigrateAwsGovCloudToAssumeRolePayload",
   "description": "Autogenerated return type of MigrateAwsGovCloudToAssumeRole",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "errors",
     "description": "The list of errors.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "CloudAccountMutationError",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "linkedAccounts",
     "description": "The updated linked accounts.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "CloudLinkedAccount",
         "kind": "OBJECT"
        }
       }
      }
     }
    }
   ]
  },
  {
   "name": "ErrorsInboxResourcesResponse",
   "description": "Response for error group resources.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "nextCursor",
     "description": "Cursor used to fetch the next set of results",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "results",
     "description": "The list of search results",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ErrorsInboxResource",
         "kind": "INTERFACE"
        }
       }
      }
     }
    },
    {
     "name": "totalCount",
     "description": "The total number of results that match the search",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "NerdpackOverrideVersionRules",
   "description": "Attributes to match a specific nerdpack versions.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "nerdpackId",
     "description": "Nerdpack uuid.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "tag",
     "description": "Nerdpack version tag.",
     "type": {
      "name": "NerdpackTagName",
      "kind": "SCALAR"
     }
    },
    {
     "name": "version",
     "description": "Semver-compliant Nerdpack version.",
     "type": {
      "name": "SemVer",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AiWorkflowsTestResponseError",
   "description": "Test error description",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "description",
     "description": "The error description",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "type",
     "description": "The error type",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiWorkflowsTestErrorType",
       "kind": "ENUM"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "AiWorkflowsResponseError",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "AlertsNrqlConditionQuery",
   "description": "Information for generating the condition NRQL query.\nOutput from the evaluated NRQL query will be compared to the condition terms to detect violations.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "dataAccountId",
     "description": "**BETA PREVIEW:** the `dataAccountId` field is in limited release and only enabled for preview on a per-account basis.\nThe New Relic account ID to use as the basis for the NRQL alert condition's `query`; will default to the condition's account ID if unspecified.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "evaluationOffset",
     "description": "Deprecated; superseded by `signal.aggregationMethod` with `signal.aggregationDelay` or `signal.aggregationTimer`.\n\nBy default, we evaluate the NRQL query in one-minute time windows. The start time depends on the value you select in the NRQL condition's `evaluationOffset`. Evaluation offset cannot be greater than 60 minutes.\n\nThis value is the number of time windows we look back at the aggregated data.\n\nExample: With an `evaluationOffset` of 3, the NRQL time window applied to your query will be:\n\n`SINCE 3 minutes ago UNTIL 2 minutes ago`",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "query",
     "description": "NRQL syntax that defines the query.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Nrql",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "DataManagementLimitLookupInput",
   "description": "Input to look up a Limit",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "name",
     "description": "Limit name",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "WorkloadDuplicateInput",
   "description": "The input object used to represent the workload duplicate.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "name",
     "description": "The name of the workload duplicate. If the name isn't specified, the name + ' copy' of the source workload is used to compose the new name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "DashboardBillboardWidgetThresholdInput",
   "description": "Billboard widget threshold input.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "alertSeverity",
     "description": "Severity of the alert.",
     "type": {
      "name": "DashboardAlertSeverity",
      "kind": "ENUM"
     }
    },
    {
     "name": "value",
     "description": "Value of the alert.",
     "type": {
      "name": "Float",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "CloudLambdaIntegration",
   "description": "Lambda Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "fetchTags",
     "description": "Specify if tags should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "tagKey",
     "description": "Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "tagValue",
     "description": "Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "UsersUserSearchResult",
   "description": "The result object for UserSearch.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "nextCursor",
     "description": "The cursor for the next page.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "totalCount",
     "description": "The total number of users found.\n Note: Not necessarily the same as number of users returned, due to pagination.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "users",
     "description": "Set of all users returned from the query.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "UsersUserSearch",
         "kind": "OBJECT"
        }
       }
      }
     }
    }
   ]
  },
  {
   "name": "ApiAccessKeySearchResult",
   "description": "A list of all keys scoped to the current actor.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "count",
     "description": "The total number of keys found in scope, irrespective of pagination.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "keys",
     "description": "A list of all keys scoped to the current actor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "ApiAccessKey",
       "kind": "INTERFACE"
      }
     }
    },
    {
     "name": "nextCursor",
     "description": "The next cursor, used for pagination. If a cursor is present, it means more keys can be fetched.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "MultiTenantIdentityUserCollection",
   "description": "A collection of New Relic users",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "items",
     "description": "Users",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "MultiTenantIdentityUser",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "nextCursor",
     "description": "an opaque cursor to supply with subsequent     requests to get the next page of results, null if there are no more pages",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "totalCount",
     "description": "The total number of users found.\n Note: Not necessarily the same as number of users returned, due to pagination.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "CloudGcpSqlIntegration",
   "description": "Cloud SQL Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "AgentEnvironmentApplicationLoadedModule",
   "description": "Represents a module loaded by the apm application.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "attributes",
     "description": "Extra module attributes.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "name": "AgentEnvironmentLoadedModuleAttribute",
        "kind": "OBJECT"
       }
      }
     }
    },
    {
     "name": "name",
     "description": "Module name.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "version",
     "description": "Module version.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "OrganizationOrganizationGroupIdInputFilter",
   "description": "Provides all the available filters on the organization group id",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "eq",
     "description": "performs an equals operation",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "StreamingExportRuleInput",
   "description": "The input parameters for a new streaming rule",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "description",
     "description": "Additional information about the rule",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The name of this export rule",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "nrql",
     "description": "NRQL to select the telemetry data to export",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Nrql",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "payloadCompression",
     "description": "Whether to compress payloads before sending them out, and what compression format to use if enabled",
     "type": {
      "name": "StreamingExportPayloadCompression",
      "kind": "ENUM"
     }
    }
   ]
  },
  {
   "name": "UserManagementTypeEnum",
   "description": "Available values for Type",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "BASIC",
     "description": "Basic type",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "CORE",
     "description": "Core type",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "FULL_PLATFORM",
     "description": "Full type",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AlertsMutingRuleSchedule",
   "description": "The time window when the MutingRule should actively mute violations.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "endRepeat",
     "description": "The datetime stamp when the MutingRule schedule should stop repeating.\nThis is in ISO 8601 format with offset.\n\nExample: `'2020-07-10T15:00:00-07:00'`\n\nNote: Either `endRepeat` or `repeatCount` should be used to end a MutingRule schedule.\nBoth fields should not be provided together.",
     "type": {
      "name": "DateTime",
      "kind": "SCALAR"
     }
    },
    {
     "name": "endTime",
     "description": "The datetime stamp representing when the MutingRule should end.\nThis is in ISO 8601 format with offset.\n\nExample: `'2020-07-10T15:00:00-07:00'`",
     "type": {
      "name": "DateTime",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nextEndTime",
     "description": "The datetime stamp representing the next scheduled end of a recurring MutingRule.\nThis is in ISO 8601 format with offset.\n\nExample: `'2020-07-08T14:30:00-07:00'`\n\nNote: If a MutingRule is not set to recur, this will match the `endTime` field.",
     "type": {
      "name": "DateTime",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nextStartTime",
     "description": "The datetime stamp representing the next scheduled start of a recurring MutingRule.\nThis is in ISO 8601 format with offset.\n\nExample: `'2020-07-08T14:30:00-07:00'`\n\nNote: If a MutingRule is not set to recur, this will match the `startTime` field.",
     "type": {
      "name": "DateTime",
      "kind": "SCALAR"
     }
    },
    {
     "name": "repeat",
     "description": "The frequency the MutingRule schedule repeats.\nIf the MutingRule repeats `WEEKLY`, be sure to set `weeklyRepeatDays`.\nIf the MutingRule does not repeat, use `null`.\n\nExample: `DAILY`",
     "type": {
      "name": "AlertsMutingRuleScheduleRepeat",
      "kind": "ENUM"
     }
    },
    {
     "name": "repeatCount",
     "description": "The number of times the MutingRule schedule should repeat.\n\nNote: Either `repeatCount` or `endRepeat` should be used to end a MutingRule schedule.\nBoth fields should not be provided together.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "startTime",
     "description": "The datetime stamp representing when the MutingRule should start.\nThis is in ISO 8601 format with offset.\n\nExample: `'2020-07-08T14:30:00-07:00'`",
     "type": {
      "name": "DateTime",
      "kind": "SCALAR"
     }
    },
    {
     "name": "timeZone",
     "description": "The time zone that applies to the MutingRule schedule.\n\nExample: `'America/Los_Angeles'`\n\nSee https://en.wikipedia.org/wiki/List_of_tz_database_time_zones.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "weeklyRepeatDays",
     "description": "The day(s) of the week that a MutingRule should repeat when the repeat field is set to `WEEKLY`.\n\nExample: `[MONDAY, WEDNESDAY]`",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AlertsDayOfWeek",
        "kind": "ENUM"
       }
      }
     }
    }
   ]
  },
  {
   "name": "OrganizationOrganizationCreateJobStatusEnum",
   "description": "The list of valid job statuses to search for",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "ALL",
     "description": "All jobs regardless of status",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "CREATED",
     "description": "Jobs that have been created but not yet started running",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "FAILED",
     "description": "Jobs that have failed and stopped running",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "RUNNING",
     "description": "Jobs that are still running",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SUCCEEDED",
     "description": "Jobs that completed successfully",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AiTopologyAccountStitchedFields",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "edges",
     "description": "Returns a list of edges.",
     "type": {
      "name": "AiTopologyEdgeListing",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "cursor",
       "description": "The cursor to fetch paginated results.",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "edgeIds",
       "description": "List of edge IDs.",
       "type": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "ID",
          "kind": "SCALAR"
         }
        }
       }
      }
     ]
    },
    {
     "name": "graph",
     "description": "Returns a graph.",
     "type": {
      "name": "AiTopologyGraph",
      "kind": "OBJECT"
     }
    },
    {
     "name": "vertices",
     "description": "Returns a paginated list of vertices.",
     "type": {
      "name": "AiTopologyVertexListing",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "cursor",
       "description": "The cursor to fetch paginated results.",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "vertexClasses",
       "description": "List of classes.",
       "type": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "AiTopologyVertexClass",
          "kind": "ENUM"
         }
        }
       }
      },
      {
       "name": "vertexIds",
       "description": "List of vertex IDs.",
       "type": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "ID",
          "kind": "SCALAR"
         }
        }
       }
      }
     ]
    }
   ]
  },
  {
   "name": "CloudAwsMediaconvertIntegrationInput",
   "description": "Elemental MediaConvert",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "IncidentIntelligenceEnvironmentCreateEnvironmentResult",
   "description": "Result options for environment creation",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "ACCOUNT_NOT_CONSENTED",
     "description": "The account is not marked with consent for environment creation",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "ACCOUNT_NOT_ENTITLED",
     "description": "The account is not entitled to incident intelligence",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "ACCOUNTS_ALREADY_ASSOCIATED",
     "description": "The specified associated accounts are already associated to other environments",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "ACTION_UNAUTHORIZED",
     "description": "Action not allowed, please contact support",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "ALREADY_EXISTS",
     "description": "The environment already exists and cannot be created again for the same parent account id tree",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "ASSOCIATED_ACCOUNTS_NOT_AUTHORIZED",
     "description": "The specified associated accounts are not authorized to the user",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "CREATED",
     "description": "The environment was created successfully",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "USER_NOT_AUTHORIZED",
     "description": "The user is not authorized to create an environment",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "USER_NOT_AUTHORIZED_MISSING_CAPABILITY",
     "description": "The user is not authorized to create the environment due to a missing capability",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "DistributedTracingSpanProcessBoundary",
   "description": "The position of a span with respect to the boundaries between processes in the trace.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "ENTRY",
     "description": "The first span in a process.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "EXIT",
     "description": "A span that is the parent of an ENTRY span, or has an attribute name prefixed with either `db.` or `http.`, such as `db.statement` or `http.url`. If a span is both the first span in its process and has a `db.` or `http.`, its processBoundary value will be ENTRY.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "IN_PROCESS",
     "description": "A span that is neither an ENTRY nor EXIT span. In-process spans are operations within each process, like internal method calls and functions.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AiIssuesGracePeriodConfigurationInput",
   "description": "Grace periods for issue to be activated per priority",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "critical",
     "description": "critical",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Seconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "high",
     "description": "high",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Seconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "low",
     "description": "low",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Seconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "medium",
     "description": "medium",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Seconds",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "CloudApigatewayIntegration",
   "description": "API Gateway Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "stagePrefixes",
     "description": "Specify each name or prefix for the Stages that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "tagKey",
     "description": "Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "tagValue",
     "description": "Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "AiWorkflowsFilterInput",
   "description": "Filter input object",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "name",
     "description": "name",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "predicates",
     "description": "predicates",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiWorkflowsPredicateInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "type",
     "description": "type",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiWorkflowsFilterType",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "NerdpackVersionFilterFallback",
   "description": "Fallback version to return if no version matches with the given filters.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "LATEST_SEMVER",
     "description": "Latest version (semver).",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "DataSourceGapsActorStitchedFields",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "gaps",
     "description": "Retrieve data source gaps that match the provided query.\n\nIf no query is provided, data source gaps from all authorized accounts will be included.",
     "type": {
      "name": "DataSourceGapsGapsResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "cursor",
       "description": "The cursor used to fetch paginated results.",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "query",
       "description": "The query parameters used to filter data source gaps.",
       "type": {
        "name": "DataSourceGapsGapsQuery",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    }
   ]
  },
  {
   "name": "SyntheticsAutomatedTestOverrides",
   "description": "Automated test monitor overrides",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "domain",
     "description": "Override a domain throughout a scripted monitor",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "SyntheticsScriptDomainOverride",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "location",
     "description": "Override monitor to use a specific location",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "secureCredential",
     "description": "Override a script secure credential with another credential value",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "SyntheticsSecureCredentialOverride",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "startingUrl",
     "description": "Override a browser monitor starting url",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "LogConfigurationsDataPartitionRuleMatchingCriteriaInput",
   "description": "The data partition rule matching criteria.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "attributeName",
     "description": "The attribute name against which this matching condition will be evaluated.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "matchingExpression",
     "description": "The matching expression of the data partition rule definition.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "matchingMethod",
     "description": "The matching method of the data partition rule definition.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "LogConfigurationsDataPartitionRuleMatchingOperator",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "DashboardTableWidgetConfiguration",
   "description": "Configuration for visualization type 'viz.table'",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "nrqlQueries",
     "description": "NRQL queries.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "DashboardWidgetNrqlQuery",
       "kind": "OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "CloudAzureRediscacheIntegrationInput",
   "description": "Azure Redis Cache",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "resourceGroups",
     "description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AiDecisionsDecisionListing",
   "description": "Windowed view of an account's decisions.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "count",
     "description": "Number of decisions in this window.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "decisions",
     "description": "List of decisions in this window.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiDecisionsDecision",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "nextCursor",
     "description": "Cursor used to fetch next page.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "prevCursor",
     "description": "Cursor used to fetch previous page.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "Nr1CatalogAlertConditionTemplate",
   "description": "Information about an alert condition template",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "id",
     "description": "The unique identifier for the alert condition template",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metadata",
     "description": "Metadata associated with the alert condition template",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Nr1CatalogAlertConditionTemplateMetadata",
       "kind": "OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "WorkloadRollupStrategy",
   "description": "Represents the rollup strategy that is applied to a group of entities.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "BEST_STATUS_WINS",
     "description": "The group status matches the less critical status of all belonging entities.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "WORST_STATUS_WINS",
     "description": "The group status matches the most critical status of all belonging entities.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AiIssuesIssue",
   "description": "Issue",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "account",
     "description": "account",
     "type": {
      "name": "AccountReference",
      "kind": "OBJECT"
     }
    },
    {
     "name": "accountIds",
     "description": "A list of account Ids. As an issue could be correlated with others from other accounts.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      }
     }
    },
    {
     "name": "acknowledgedAt",
     "description": "The time the issue was acknowledged",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "acknowledgedBy",
     "description": "The user that acknowledged the issue",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "activatedAt",
     "description": "The time the issue was activated",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "closedAt",
     "description": "The time the issue was closed",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "closedBy",
     "description": "The user that manually closed the issue",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "conditionFamilyId",
     "description": "A list of condition ids associated with this issue",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "conditionName",
     "description": "A list of condition text descriptions associated with this issue",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "conditionProduct",
     "description": "A list of New Relic products connected to the conditions associated with this issue",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "correlationRuleDescriptions",
     "description": "A list of correlation rule descriptions applied to correlate this issue to other issues",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "correlationRuleIds",
     "description": "A list of correlation rule ids applied to correlate this issue to other issues",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "correlationRuleNames",
     "description": "A list of correlation rule names applied to correlate this issue to other issues",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "createdAt",
     "description": "The time the issue was created",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochMilliseconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "dataMlModules",
     "description": "A list of ML data associated with this issue",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AiIssuesKeyValues",
        "kind": "OBJECT"
       }
      }
     }
    },
    {
     "name": "deepLinkUrl",
     "description": "A list of urls into New Relic product page, scoped to this issue",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "description",
     "description": "A list of incident descriptions",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      }
     }
    },
    {
     "name": "entityGuids",
     "description": "A list of unique entity identifiers",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "entityNames",
     "description": "A list of entity names",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "entityTypes",
     "description": "A list of entity types",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "environmentId",
     "description": "See our documentation to learn about environments",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "eventType",
     "description": "An issue event that could be INCIDENT_ADDED, USER_ACTION, INCIDENT_CLOSED,...",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "incidentIds",
     "description": "A list of incident IDs in this issue. Notice, in some cases there may be thousands of incidents in an issue",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "isCorrelated",
     "description": "True means that other issues were correlated to this one",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "isIdle",
     "description": "See our documentation to learn about idle issues",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "issueId",
     "description": "Issue identifier",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "mergeReason",
     "description": "The reason this issue was merged",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "mutingState",
     "description": "The issue muting state (supress notifications)",
     "type": {
      "name": "AiIssuesIssueMutingState",
      "kind": "ENUM"
     }
    },
    {
     "name": "origins",
     "description": "A list of origins of the incidents (violations, anomalies, external)",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      }
     }
    },
    {
     "name": "parentMergeId",
     "description": "The merge id if this issue is part of the merge or null otherwise",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "policyIds",
     "description": "A list of policy ids associated with this issue",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "policyName",
     "description": "A list of policy names associated with this issue",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "priority",
     "description": "The issue priority",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiIssuesPriority",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "sources",
     "description": "A list of sources of the incidents (newrelic or external)",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      }
     }
    },
    {
     "name": "state",
     "description": "The issue state",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiIssuesIssueState",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "title",
     "description": "A list of underlying incident titles",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      }
     }
    },
    {
     "name": "totalIncidents",
     "description": "The count of underlying incidents",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "unAcknowledgedAt",
     "description": "The time the issue was unacknowledged",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "unAcknowledgedBy",
     "description": "The user that unacknowledged the issue",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "updatedAt",
     "description": "The time the issue was last updated",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochMilliseconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "wildcard",
     "description": "A list of wildcard expressions used for wildcard metrics associated with this issue",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    }
   ]
  },
  {
   "name": "Nr1CatalogQuickstartComponent",
   "description": "Information about a component in a quickstart",
   "kind": "INTERFACE",
   "fields": [
    {
     "name": "metadata",
     "description": "Metadata associated with the quickstart component",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Nr1CatalogQuickstartComponentMetadata",
       "kind": "INTERFACE"
      }
     }
    }
   ],
   "possibleTypes": [
    {
     "name": "Nr1CatalogQuickstartAlert",
     "kind": "OBJECT"
    },
    {
     "name": "Nr1CatalogQuickstartAlertCondition",
     "kind": "OBJECT"
    },
    {
     "name": "Nr1CatalogQuickstartDashboard",
     "kind": "OBJECT"
    },
    {
     "name": "Nr1CatalogQuickstartDocumentation",
     "kind": "OBJECT"
    },
    {
     "name": "Nr1CatalogQuickstartInstallPlan",
     "kind": "OBJECT"
    }
   ]
  },
  {
   "name": "ErrorsInboxAssignment",
   "description": "User assigned to an error group.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "email",
     "description": "Email address of the user.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "userInfo",
     "description": "Additional user data for New Relic users.",
     "type": {
      "name": "UserReference",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "TaggingMutationError",
   "description": "An error object for tag mutations.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "message",
     "description": "A message explaining what the errors is about.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "type",
     "description": "The type of error.",
     "type": {
      "name": "TaggingMutationErrorType",
      "kind": "ENUM"
     }
    }
   ]
  },
  {
   "name": "CloudAzureAppserviceIntegrationInput",
   "description": "Azure App Service",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "resourceGroups",
     "description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "Nr1CatalogQuickstartDocumentation",
   "description": "Information about a documentation component in a quickstart",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "metadata",
     "description": "Metadata associated with the dashboard",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Nr1CatalogQuickstartDocumentationMetadata",
       "kind": "OBJECT"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "Nr1CatalogQuickstartComponent",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "AlertsNotificationChannelCreateError",
   "description": "The error for creating a notification channel.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "description",
     "description": "Error description.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "errorType",
     "description": "Error type.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsNotificationChannelCreateErrorType",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "AgentApplicationSettingsJfrInput",
   "description": "In the Java agent (v8.0.0 or later), the Java Flight Recorder can be turned on to collect additional information about the application. This setting cannot be updated for non-java agents.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "enabled",
     "description": "Whether or not JFR is enabled.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "SyntheticsAutomatedTestMonitorConfig",
   "description": "Monitor specific test config",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "isBlocking",
     "description": "Specifies whether a failure of this monitor should fail the entire automated test",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "overrides",
     "description": "Specific overrides for the given monitor",
     "type": {
      "name": "SyntheticsAutomatedTestOverrides",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "UserManagementGroupSortKey",
   "description": "Available keys for sorting groups",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "DISPLAY_NAME",
     "description": "Sort by display name",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "ID",
     "description": "Sort by ID",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AlertsMutingRule",
   "description": "A MutingRule for New Relic Alerts Violations.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "accountId",
     "description": "The account id of the MutingRule.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "actionOnMutingRuleWindowEnded",
     "description": "The action when the muting rule window is ended or disabled.",
     "type": {
      "name": "AlertsActionOnMutingRuleWindowEnded",
      "kind": "ENUM"
     }
    },
    {
     "name": "condition",
     "description": "The condition that defines which violations to target.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsMutingRuleConditionGroup",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "createdAt",
     "description": "The timestamp of when the MutingRule was created.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "DateTime",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "createdBy",
     "description": "The user id that created the MutingRule.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "createdByUser",
     "description": "The user information that created the MutingRule.",
     "type": {
      "name": "UserReference",
      "kind": "OBJECT"
     }
    },
    {
     "name": "description",
     "description": "The description of the MutingRule.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "enabled",
     "description": "Whether the MutingRule is enabled",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The unique identifier for the MutingRule.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "mutingRuleLifecycleEventPublishedAt",
     "description": "The timestamp of when the MutingRule lifecycle event was last published.",
     "type": {
      "name": "DateTime",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The name of the MutingRule.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "schedule",
     "description": "The time window when the MutingRule should actively mute violations.",
     "type": {
      "name": "AlertsMutingRuleSchedule",
      "kind": "OBJECT"
     }
    },
    {
     "name": "status",
     "description": "The status of a MutingRule based on whether it is Enabled and has a Schedule.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsMutingRuleStatus",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "updatedAt",
     "description": "The timestamp of when the MutingRule was last modified.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "DateTime",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "updatedBy",
     "description": "The user id that last modified the MutingRule.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "updatedByUser",
     "description": "The user information that last modified the MutingRule.",
     "type": {
      "name": "UserReference",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "ApiAccessIngestKeyError",
   "description": "An ingest key error. Each error maps to a single key input.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "accountId",
     "description": "The account ID of the key.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "errorType",
     "description": "The error type of the error.",
     "type": {
      "name": "ApiAccessIngestKeyErrorType",
      "kind": "ENUM"
     }
    },
    {
     "name": "id",
     "description": "The `id` of the key being updated.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "ingestType",
     "description": "The ingest type of the key.",
     "type": {
      "name": "ApiAccessIngestKeyType",
      "kind": "ENUM"
     }
    },
    {
     "name": "message",
     "description": "A message about why the key creation failed.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "type",
     "description": "The type of the key.",
     "type": {
      "name": "ApiAccessKeyType",
      "kind": "ENUM"
     }
    }
   ],
   "interfaces": [
    {
     "name": "ApiAccessKeyError",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "IncidentIntelligenceEnvironmentEnvironmentCreated",
   "description": "Environment created detailed result",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "environment",
     "description": "The created environment",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "IncidentIntelligenceEnvironmentIncidentIntelligenceEnvironment",
       "kind": "OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "AgentApplicationSettingsApplicationExitInfoInput",
   "description": "Config data collection for application exits.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "enabled",
     "description": "Enables collection of application exit info.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "OrganizationCustomerContract",
   "description": "A customer",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "billingStructure",
     "description": "The customer contract''s billing structure",
     "type": {
      "name": "OrganizationBillingStructure",
      "kind": "ENUM"
     }
    },
    {
     "name": "customerId",
     "description": "The customers id",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The customer contracts ID",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "organizationGroups",
     "description": "The customer contracts organization groups",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "OrganizationOrganizationGroupWrapper",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "cursor",
       "description": "the cursor from the previous request, to get the next page",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "filter",
       "description": "The filter",
       "type": {
        "name": "OrganizationOrganizationGroupFilterInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "telemetryId",
     "description": "The customer contracts''s telemetry id",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "BrowserApplicationSettings",
   "description": "Configuration settings for the Browser App",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "apdexTarget",
     "description": "The current Apdex target setting",
     "type": {
      "name": "Float",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "PixieLinkPixieProjectError",
   "description": "An error object for linking a Pixie project.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "message",
     "description": "A message explaining what the error is about.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "type",
     "description": "The type of error.",
     "type": {
      "name": "PixieLinkPixieProjectErrorType",
      "kind": "ENUM"
     }
    }
   ]
  },
  {
   "name": "CloudAzureFrontdoorIntegrationInput",
   "description": "Front Door",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "resourceGroups",
     "description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "MultiTenantAuthorizationGrantSortInput",
   "description": "Provides the sorting options for grants",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "direction",
     "description": "The direction which the field should be sorted",
     "type": {
      "name": "MultiTenantAuthorizationSortDirectionEnum",
      "kind": "ENUM"
     }
    },
    {
     "name": "key",
     "description": "The field to be sorted",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "MultiTenantAuthorizationGrantSortEnum",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "EdgeEndpoint",
   "description": "An `Endpoint` describes access to an endpoint pointing to a trace observer. Currently, only one endpoint per trace observer is supported.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "agent",
     "description": "Connection information related to the agent configuration.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EdgeAgentEndpointDetail",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "endpointType",
     "description": "Type of the endpoint.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EdgeEndpointType",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "https",
     "description": "Connection information related to the Infinite Tracing Trace API (HTTP 1.1) configuration.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EdgeHttpsEndpointDetail",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "status",
     "description": "Status of the endpoint.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EdgeEndpointStatus",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "WorkloadStaticStatus",
   "description": "The static status configuration.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "description",
     "description": "A description that provides additional details about the status of the workload.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "enabled",
     "description": "Whether the static status configuration is enabled or not. Note that only one static status can be enabled at a given time.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The unique identifier of the static status.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "status",
     "description": "The status of the workload.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "WorkloadStatusValue",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "summary",
     "description": "A short description of the status of the workload.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "DashboardPieWidgetConfiguration",
   "description": "Configuration for visualization type 'viz.pie'",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "nrqlQueries",
     "description": "NRQL queries.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "DashboardWidgetNrqlQuery",
       "kind": "OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "CloudRoute53Integration",
   "description": "Route 53 Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "fetchExtendedInventory",
     "description": "Determine if extra inventory data be collected or not. May affect total data collection time and contribute to the Cloud provider API rate limit.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "AiNotificationsChannelType",
   "description": "Channel type",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "EMAIL",
     "description": "Email channel type",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "EVENT_BRIDGE",
     "description": "Event Bridge channel type",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "JIRA_CLASSIC",
     "description": "Jira Classic channel type",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "JIRA_NEXTGEN",
     "description": "Jira Nextgen channel type",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "MOBILE_PUSH",
     "description": "Mobile push channel type",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "PAGERDUTY_ACCOUNT_INTEGRATION",
     "description": "PagerDuty channel type",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "PAGERDUTY_SERVICE_INTEGRATION",
     "description": "Pager Duty channel type",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SERVICE_NOW_APP",
     "description": "ServiceNow app channel type",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SERVICENOW_EVENTS",
     "description": "Servicenow events channel type",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SERVICENOW_INCIDENTS",
     "description": "Servicenow incidents channel type",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SLACK",
     "description": "Slack channel type",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SLACK_COLLABORATION",
     "description": "Slack Collaboration channel type",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SLACK_LEGACY",
     "description": "Legacy Slack channel type based on Incoming Webhooks",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "WEBHOOK",
     "description": "Webhook channel type",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "UserManagementGroupUser",
   "description": "User information returned within Groups",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "email",
     "description": "The email of the user.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "a value that uniquely identifies this object",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "The full name of the user.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "timeZone",
     "description": "The configured time zone of the user.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AgentApplicationSettingsMobileNetworkSettings",
   "description": "Network settings associated with the mobile application.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "aliases",
     "description": "A list of configuration settings that map host to alias names for grouping and identification purposes.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AgentApplicationSettingsNetworkAlias",
        "kind": "OBJECT"
       }
      }
     }
    },
    {
     "name": "filterMode",
     "description": "Configuration setting to apply either the show or hide strategy for network filtering.",
     "type": {
      "name": "AgentApplicationSettingsNetworkFilterMode",
      "kind": "ENUM"
     }
    },
    {
     "name": "hideList",
     "description": "A list of hostnames that would be applied to our filter settings when the filterMode is 'HIDE.'",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "ignoredStatusCodeRules",
     "description": "A list of rules to ignore status codes associated with different hosts.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AgentApplicationSettingsIgnoredStatusCodeRule",
        "kind": "OBJECT"
       }
      }
     }
    },
    {
     "name": "showList",
     "description": "A list of hostnames that would be applied to our filter settings when the filterMode is 'SHOW.'",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    }
   ]
  },
  {
   "name": "MultiTenantIdentityGroupUsers",
   "description": "List of active users belonging to a group",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "items",
     "description": "Active users within group",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "MultiTenantIdentityGroupUser",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "nextCursor",
     "description": "an opaque cursor to supply with subsequent     requests to get the next page of results, null if there are no more pages",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "totalCount",
     "description": "the total number of results",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "CloudAzureStorageIntegrationInput",
   "description": "Azure Storage",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "resourceGroups",
     "description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AgentApplicationApmBrowserSettings",
   "description": "The settings of a browser application.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "cookiesEnabled",
     "description": "Configure cookies. The default is enabled: true.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "distributedTracingEnabled",
     "description": "Configure distributed tracing in browser apps. The default is enabled: true.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "loaderType",
     "description": "Determines which browser loader will be configured. The default is \"SPA\".",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AgentApplicationBrowserLoader",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "AlertsPagerDutyNotificationChannelCreateInput",
   "description": "The input for creating a new PagerDuty notification channel.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "apiKey",
     "description": "API key.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SecureValue",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "Notification channel name.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "CloudElasticsearchIntegrationInput",
   "description": "Amazon Elasticsearch Service",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "fetchNodes",
     "description": "Specify if metrics should be collected for nodes. Turning it on will increase the number of API calls made to CloudWatch.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "tagKey",
     "description": "Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "tagValue",
     "description": "Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "CloudAzureSqlmanagedIntegrationInput",
   "description": "SQL Managed Instances",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "resourceGroups",
     "description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "SyntheticsLocationsInput",
   "description": "The location(s) from which a non-scripted monitor runs",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "private",
     "description": "Existing private location(s) in which the monitor will run",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "public",
     "description": "Publicly available location(s) in which the monitor will run. For formatting tips, see [this link](https://docs.newrelic.com/docs/apis/nerdgraph/examples/nerdgraph-synthetics-tutorial/#location-field)",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "MultiTenantIdentityUserGroups",
   "description": "List of groups representing named sets of New Relic users within an authentication domain",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "items",
     "description": "User groups",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "MultiTenantIdentityUserGroup",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "nextCursor",
     "description": "an opaque cursor to supply with subsequent     requests to get the next page of results, null if there are no more pages",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "totalCount",
     "description": "the total number of results",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "UserManagementUserType",
   "description": "A \"user type\" is what determines the set of New Relic capabilities a user can theoretically access.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "displayName",
     "description": "the name of the object",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "a value that uniquely identifies this object",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "DashboardDeleteError",
   "description": "Expected error types that can be returned by delete operation.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "description",
     "description": "Error description.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "type",
     "description": "Error type.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "DashboardDeleteErrorType",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "LogConfigurationsUpdateObfuscationExpressionInput",
   "description": "Input for updating an obfuscation expression.\nNull fields are left untouched by mutation.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "description",
     "description": "Description of expression.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "id",
     "description": "Expression Id.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "Name of expression.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "regex",
     "description": "Regex of expression.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "UserManagementUserFilterInput",
   "description": "The input object representing the filter parameters for users",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "email",
     "description": "Filter users by email address",
     "type": {
      "name": "UserManagementEmailInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "emailVerificationState",
     "description": "Filter users by email verification state",
     "type": {
      "name": "UserManagementEmailVerificationStateInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "id",
     "description": "Filter users by user ID",
     "type": {
      "name": "UserManagementUserIdInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "name",
     "description": "Filter users by name",
     "type": {
      "name": "UserManagementNameInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "pendingUpgradeRequest",
     "description": "Filter users by pending upgrade request",
     "type": {
      "name": "UserManagementPendingUpgradeRequestInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "type",
     "description": "Filter users by type",
     "type": {
      "name": "UserManagementTypeInput",
      "kind": "INPUT_OBJECT"
     }
    }
   ]
  },
  {
   "name": "ApiAccessKeySearchScope",
   "description": "The scope of keys to be returned. Note that some filters only apply to certain key types.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "accountIds",
     "description": "A list of key account IDs.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "ingestTypes",
     "description": "The ingest type of the key. Only applies to ingest keys, and does not affect user key filtering.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "ApiAccessIngestKeyType",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "userIds",
     "description": "A list of key user ids. Only applies to user keys, and does not affect ingest key filtering.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "OrganizationNameInput",
   "description": "Provides the operations available on the name",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "contains",
     "description": "Part of an authentication domain name",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "eq",
     "description": "An authentication domain name",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AiWorkflowsMutingRulesHandling",
   "description": "The wanted behavior for muted issues in the workflow",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "DONT_NOTIFY_FULLY_MUTED_ISSUES",
     "description": "Notify only about partially muted and unmuted issues",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "DONT_NOTIFY_FULLY_OR_PARTIALLY_MUTED_ISSUES",
     "description": "Notify only about unmuted issues",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NOTIFY_ALL_ISSUES",
     "description": "Notify about all issues",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AlertsNrqlConditionsSearchCriteriaInput",
   "description": "Search criteria for returning specific NRQL conditions.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "name",
     "description": "Exact name of the NRQL condition.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nameLike",
     "description": "String to partially match a NRQL condition name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "policyId",
     "description": "Policy ID associated with the NRQL condition.",
     "type": {
      "name": "ID",
      "kind": "SCALAR"
     }
    },
    {
     "name": "query",
     "description": "Exact NRQL query used in the NRQL condition.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "queryLike",
     "description": "String to partially match the NRQL query used in the NRQL condition.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "termsOperator",
     "description": "Terms operator to match while searching for NRQL conditions.",
     "type": {
      "name": "AlertsNrqlConditionTermsOperator",
      "kind": "ENUM"
     }
    }
   ]
  },
  {
   "name": "AgentApplicationSettingsBrowserConfig",
   "description": "General settings related to APM applications.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "apdexTarget",
     "description": "The desired target for the APDEX measurement of this browser application.",
     "type": {
      "name": "Float",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "DateTime",
   "description": "The `DateTime` scalar represents a date and time. The `DateTime` appears as an ISO8601 formatted string.",
   "kind": "SCALAR"
  },
  {
   "name": "Nr1CatalogQuickstartAlert",
   "description": "Information about an alert in a quickstart",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "id",
     "description": "The unique identifier for the alert",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metadata",
     "description": "Metadata associated with the alert",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Nr1CatalogQuickstartAlertMetadata",
       "kind": "OBJECT"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "Nr1CatalogQuickstartComponent",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "HistoricalDataExportStatus",
   "description": "Customer-facing status of an export",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "CANCELED",
     "description": "Export Canceled",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "COMPLETE_FAILED",
     "description": "Export Failed",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "COMPLETE_SUCCESS",
     "description": "Export Successful",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "IN_PROGRESS",
     "description": "Export in progress",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "UNKNOWN",
     "description": "Unknown Status of this Export",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "WAITING",
     "description": "Export waiting to start",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "NerdpackVersion",
   "description": "Contains files and information associated with a specific version of a Nerdpack.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "assets",
     "description": "List of assets present on this Nerdpack version.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "NerdpackAssetInfo",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "cliVersion",
     "description": "Version of the CLI used to generate the Nerdpack.",
     "type": {
      "name": "SemVer",
      "kind": "SCALAR"
     }
    },
    {
     "name": "createdAt",
     "description": "Timestamp for the creation on the Nerdpack version.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "DateTime",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "createdByUser",
     "description": "Unique identifier of the user who created the version.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "description",
     "description": "A brief description of the artifact.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "displayName",
     "description": "Human-readable Nerdpack's name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "icon",
     "description": "Icon URL of Package",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nerdpackId",
     "description": "Unique uuid V5 that identifies the Nerdpack.",
     "type": {
      "name": "ID",
      "kind": "SCALAR"
     }
    },
    {
     "name": "repositoryUrl",
     "description": "URL to the repository with the Nerdpack source code.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "sdkVersion",
     "description": "Version of the SDK used to generate the Nerdpack.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "subscriptionModel",
     "description": "Nerdpack subscription model to filter.",
     "type": {
      "name": "NerdpackSubscriptionModel",
      "kind": "ENUM"
     }
    },
    {
     "name": "tags",
     "description": "List of tags associated with the Nerdpack version.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "name": "NerdpackTagName",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "version",
     "description": "Semver-compliant Nerdpack version.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SemVer",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AlertsPagerDutyNotificationChannelConfig",
   "description": "Configuration for PagerDuty notification channel.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "apiKey",
     "description": "API key.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SecureValue",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "WorkloadGroupRemainingEntitiesRuleBy",
   "description": "Indicates by which field the remaining entities rule should be grouped.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "ENTITY_TYPE",
     "description": "Group the remaining entities rule by entity type.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NONE",
     "description": "Do not apply any grouping to the remaining entities rule.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AlertsMutingRuleInput",
   "description": "Input for creating MutingRules for New Relic Alerts Violations.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "actionOnMutingRuleWindowEnded",
     "description": "The action when the muting rule window is ended or disabled.",
     "type": {
      "name": "AlertsActionOnMutingRuleWindowEnded",
      "kind": "ENUM"
     }
    },
    {
     "name": "condition",
     "description": "The condition that defines which violations to target.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsMutingRuleConditionGroupInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "description",
     "description": "The description of the MutingRule.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "enabled",
     "description": "Whether the MutingRule is enabled",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "The name of the MutingRule.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "schedule",
     "description": "The time window when the MutingRule should actively mute violations.",
     "type": {
      "name": "AlertsMutingRuleScheduleInput",
      "kind": "INPUT_OBJECT"
     }
    }
   ]
  },
  {
   "name": "AiDecisionsOperationResult",
   "description": "Result of an operation.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "result",
     "description": "Status of the operation.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsResultType",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "DashboardWidgetConfiguration",
   "description": "Typed configuration for known visualizations. Only one (at most) will be populated for a given widget.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "area",
     "description": "Configuration for visualization type 'viz.area'",
     "type": {
      "name": "DashboardAreaWidgetConfiguration",
      "kind": "OBJECT"
     }
    },
    {
     "name": "bar",
     "description": "Configuration for visualization type 'viz.bar'",
     "type": {
      "name": "DashboardBarWidgetConfiguration",
      "kind": "OBJECT"
     }
    },
    {
     "name": "billboard",
     "description": "Configuration for visualization type 'viz.billboard'",
     "type": {
      "name": "DashboardBillboardWidgetConfiguration",
      "kind": "OBJECT"
     }
    },
    {
     "name": "line",
     "description": "Configuration for visualization type 'viz.line'",
     "type": {
      "name": "DashboardLineWidgetConfiguration",
      "kind": "OBJECT"
     }
    },
    {
     "name": "markdown",
     "description": "Configuration for visualization type 'viz.markdown'",
     "type": {
      "name": "DashboardMarkdownWidgetConfiguration",
      "kind": "OBJECT"
     }
    },
    {
     "name": "pie",
     "description": "Configuration for visualization type 'viz.pie'",
     "type": {
      "name": "DashboardPieWidgetConfiguration",
      "kind": "OBJECT"
     }
    },
    {
     "name": "table",
     "description": "Configuration for visualization type 'viz.table'",
     "type": {
      "name": "DashboardTableWidgetConfiguration",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "CloudAwsMskIntegration",
   "description": "Managed Kafka Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "AiNotificationsDestinationFilter",
   "description": "Filter destination object",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "active",
     "description": "active",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "authType",
     "description": "authType",
     "type": {
      "name": "AiNotificationsAuthType",
      "kind": "ENUM"
     }
    },
    {
     "name": "exactName",
     "description": "exactName",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "id",
     "description": "id",
     "type": {
      "name": "ID",
      "kind": "SCALAR"
     }
    },
    {
     "name": "ids",
     "description": "ids",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "name",
     "description": "name",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "property",
     "description": "property",
     "type": {
      "name": "AiNotificationsPropertyFilter",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "type",
     "description": "type",
     "type": {
      "name": "AiNotificationsDestinationType",
      "kind": "ENUM"
     }
    },
    {
     "name": "updatedAt",
     "description": "updatedAt",
     "type": {
      "name": "DateTime",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AlertsNrqlCondition",
   "description": "A New Relic Alerts condition that uses a NRQL query to determine violations.",
   "kind": "INTERFACE",
   "fields": [
    {
     "name": "description",
     "description": "The custom violation description.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "enabled",
     "description": "Whether the condition is enabled.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "entity",
     "description": "The Entity associated with the NRQL Condition",
     "type": {
      "name": "EntityOutline",
      "kind": "INTERFACE"
     }
    },
    {
     "name": "entityGuid",
     "description": "The condition's entity GUID",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EntityGuid",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "expiration",
     "description": "Also known as **loss of signal**, these are settings for how violations are opened or closed when a signal expires.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsNrqlConditionExpiration",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "id",
     "description": "Condition ID.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "Name of the condition.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "nrql",
     "description": "The NRQL query that defines the signal for the condition.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsNrqlConditionQuery",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "policyId",
     "description": "Alerts policy ID.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "runbookUrl",
     "description": "Runbook URL.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "signal",
     "description": "Configuration that defines the signal that the NRQL condition will use to evaluate.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsNrqlConditionSignal",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "terms",
     "description": "List of critical and warning terms for the condition.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AlertsNrqlConditionTerms",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "titleTemplate",
     "description": "This field allows you to create a custom title to be used when incidents are opened by the condition. Setting this field will override the default title. Must be [Handlebars format](https://handlebarsjs.com/guide/).",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "type",
     "description": "Type of NRQL condition.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsNrqlConditionType",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "updatedAt",
     "description": "The timestamp of the most recent update to the Condition",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "updatedBy",
     "description": "The actor for the most recent Condition update",
     "type": {
      "name": "UserReference",
      "kind": "OBJECT"
     }
    },
    {
     "name": "violationTimeLimit",
     "description": "Deprecated - use violationTimeLimitSeconds for full range of values.\n\nDuration after which a violation automatically closes.",
     "type": {
      "name": "AlertsViolationTimeLimit",
      "kind": "ENUM"
     }
    },
    {
     "name": "violationTimeLimitSeconds",
     "description": "Duration after which a violation automatically closes in seconds.",
     "type": {
      "name": "Seconds",
      "kind": "SCALAR"
     }
    }
   ],
   "possibleTypes": [
    {
     "name": "AlertsNrqlBaselineCondition",
     "kind": "OBJECT"
    },
    {
     "name": "AlertsNrqlOutlierCondition",
     "kind": "OBJECT"
    },
    {
     "name": "AlertsNrqlStaticCondition",
     "kind": "OBJECT"
    }
   ]
  },
  {
   "name": "StreamingExportGcpDetails",
   "description": "GCP details parameters for a new streaming rule",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "gcpProjectId",
     "description": "gcp project id",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "pubsubTopicId",
     "description": "pub sub topic id",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AiWorkflowsTestWorkflowInput",
   "description": "Test Workflow input object",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "destinationConfigurations",
     "description": "destinationConfigurations",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiWorkflowsDestinationConfigurationInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "enrichments",
     "description": "enrichments",
     "type": {
      "name": "AiWorkflowsTestEnrichmentsInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "issuesFilter",
     "description": "issuesFilter",
     "type": {
      "name": "AiWorkflowsFilterInput",
      "kind": "INPUT_OBJECT"
     }
    }
   ]
  },
  {
   "name": "AlertsMutingRuleConditionGroupOperator",
   "description": "An operator used to combine MutingRuleConditions within a MutingRuleConditionGroup.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "AND",
     "description": "Match conditions by AND",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "OR",
     "description": "Match conditions by OR",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "Nr1CatalogNerdpackMetadata",
   "description": "Metadata associated with the Nerdpack that is available in the New Relic One Catalog",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "additionalInfo",
     "description": "Additional information about the Nerdpack",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     },
     "args": [
      {
       "name": "format",
       "description": "The output format for the additional information",
       "type": {
        "name": "Nr1CatalogRenderFormat",
        "kind": "ENUM"
       },
       "defaultValue": "MARKDOWN"
      }
     ]
    },
    {
     "name": "categories",
     "description": "The list of categories for filtering, searching, and grouping associated with the Nerdpack",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Nr1CatalogCategory",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "categoryTerms",
     "description": "The list of category terms associated with the Nerdpack",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      }
     }
    },
    {
     "name": "description",
     "description": "A short form description for the New Relic One Nerdpack. Used throughout the platform when displaying the Nerdpack.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "details",
     "description": "The long form description used in the catalog to detail the functionality of the Nerdpack",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "displayName",
     "description": "The human-readable name for the Nerdpack. Used throughout the New Relic One platform when displaying the Nerdpack.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "documentation",
     "description": "Additional documentation for the Nerdpack",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     },
     "args": [
      {
       "name": "format",
       "description": "The output format for the documentation",
       "type": {
        "name": "Nr1CatalogRenderFormat",
        "kind": "ENUM"
       },
       "defaultValue": "MARKDOWN"
      }
     ]
    },
    {
     "name": "icon",
     "description": "The corresponding icon for the Nerdpack",
     "type": {
      "name": "Nr1CatalogIcon",
      "kind": "OBJECT"
     }
    },
    {
     "name": "includedArtifactTypes",
     "description": "The types of artifacts (e.g. nerdlet, launcher, etc) contained in the nerdpack",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "keywords",
     "description": "The list of keywords for filtering and searching",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      }
     }
    },
    {
     "name": "nerdpackItems",
     "description": "Information related to items in the nerdpack",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Nr1CatalogNerdpackItem",
         "kind": "INTERFACE"
        }
       }
      }
     }
    },
    {
     "name": "previews",
     "description": "A list of previews for the Nerdpack, such as screenshots.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Nr1CatalogPreview",
         "kind": "INTERFACE"
        }
       }
      }
     }
    },
    {
     "name": "publishDate",
     "description": "The date the Nerdpack was published",
     "type": {
      "name": "DateTime",
      "kind": "SCALAR"
     }
    },
    {
     "name": "releaseDate",
     "description": "The date the Nerdpack was deployed",
     "type": {
      "name": "DateTime",
      "kind": "SCALAR"
     }
    },
    {
     "name": "repository",
     "description": "The URL to the repository where the source code for the Nerdpack can be found.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "support",
     "description": "Contact information to get support for the Nerdpack",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Nr1CatalogSupportChannels",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "tagline",
     "description": "A tagline for the Nerdpack",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "version",
     "description": "The nerdpack version the metadata corresponds with",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SemVer",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "whatsNew",
     "description": "A description of changes for this version of the Nerdpack",
     "type": {
      "name": "Nr1CatalogReleaseNote",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "Nr1CatalogDashboardTemplateMetadata",
   "description": "Metadata associated with a dashboard template",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "authors",
     "description": "A list of authors that created the dashboard template",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Nr1CatalogAuthor",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "categories",
     "description": "The list of categories for filtering, searching, and grouping associated with the dashboard template",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Nr1CatalogCategory",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "categoryTerms",
     "description": "The list of category terms associated with the dashboard template",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      }
     }
    },
    {
     "name": "description",
     "description": "A short form description for a dashboard template.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "displayName",
     "description": "The human-readable name for a dashboard template.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "previews",
     "description": "A list of previews for a dashboard template, such as screenshots.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Nr1CatalogPreview",
         "kind": "INTERFACE"
        }
       }
      }
     }
    },
    {
     "name": "requiredDataSources",
     "description": "A list of required data sources needed to populate data in the dashboard.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Nr1CatalogDataSource",
         "kind": "OBJECT"
        }
       }
      }
     }
    }
   ]
  },
  {
   "name": "CloudGcpAppengineIntegration",
   "description": "App Engine Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "CloudGcpVmsIntegrationInput",
   "description": "Google Compute Engine",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "CloudGcpSqlIntegrationInput",
   "description": "Google Cloud SQL",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AiDecisionsSuggestionState",
   "description": "State of suggestion",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "ACCEPTED",
     "description": "Suggestion is accepted",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "DECLINED",
     "description": "Suggestion is declined",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "POSTPONED",
     "description": "Suggestion is postponed",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "UNDECIDED",
     "description": "Suggestion is undecided",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "CloudAzureLoadbalancerIntegration",
   "description": "Load Balancer Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "resourceGroups",
     "description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "AiNotificationsResponseError",
   "description": "Response error object",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "description",
     "description": "Error description",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "details",
     "description": "Error details",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "type",
     "description": "Error type",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiNotificationsErrorType",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "EdgeUpdateTraceObserverResponses",
   "description": "Array of responses, one for each trace observer update request.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "responses",
     "description": "Array of trace observer update responses, one for each `UpdateTraceObserverInput`.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EdgeUpdateTraceObserverResponse",
         "kind": "OBJECT"
        }
       }
      }
     }
    }
   ]
  },
  {
   "name": "NrqlFacetSuggestion",
   "description": "A suggested NRQL facet. Facet suggestions may be either a single attribute, or\na list of attributes in the case of multi-attribute facet suggestions.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "attributes",
     "description": "A list of attribute names comprising the suggested facet.\n\nRaw attribute names will be returned here. Attribute names may need to be\nbacktick-quoted before inclusion in a NRQL query.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "nrql",
     "description": "A modified version of the input NRQL, with a `FACET ...` clause appended.\nIf the original NRQL had a `FACET` clause already, it will be replaced.",
     "type": {
      "name": "Nrql",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "OrganizationOrganizationCreateJobCustomerIdInput",
   "description": "The customer id search for jobs",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "eq",
     "description": "A customer id to search for jobs in",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "IncidentIntelligenceEnvironmentAccountStitchedFields",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "currentEnvironment",
     "description": "Retrieves the incident intelligence environment based on the user's authentication and product entitlement",
     "type": {
      "name": "IncidentIntelligenceEnvironmentCurrentEnvironmentResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "kind",
       "description": "Which environment kind to support when evaluating the query",
       "type": {
        "name": "IncidentIntelligenceEnvironmentSupportedEnvironmentKind",
        "kind": "ENUM"
       }
      }
     ]
    }
   ]
  },
  {
   "name": "SyntheticsMonitorStatus",
   "description": "Run state of the monitor",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "DISABLED",
     "description": "Monitor disabled runs status of a monitor",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "ENABLED",
     "description": "Enabled status of a monitor",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "MUTED",
     "description": "Alerts muted status of a monitor",
     "isDeprecated": true,
     "deprecationReason": "The muted monitor status will be removed on February 29. Please use enabled status and monitor downtimes or muting rules instead."
    }
   ]
  },
  {
   "name": "ErrorsInboxErrorGroupState",
   "description": "Current state of the error group.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "IGNORED",
     "description": "Error group is ignored.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "RESOLVED",
     "description": "Error group is resolved.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "UNRESOLVED",
     "description": "Error group is unresolved.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AiWorkflowsTestErrorType",
   "description": "Type of test error",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "CHANNEL_NOT_FOUND",
     "description": "We couldn't find a channel with the given id",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "FAILED_RUNNING_TEST",
     "description": "Failed running test workflow",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "MISSING_ENTITLEMENT",
     "description": "This account is missing the required entitlement(s) to perform this action",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "UNAUTHORIZED_ACCOUNT",
     "description": "This account is not allowed to preform this action",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "UNSUPPORTED_CHANNEL_TYPE",
     "description": "The given channel id represents an unsupported channel type",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "VALIDATION_ERROR",
     "description": "The parameter provided does not have a valid form",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "WARNING_FAILED_SENDING_NOTIFICATION",
     "description": "Failed to send a notification to the channel",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "WARNING_NO_FILTERED_ISSUE_FOUND",
     "description": "There are no issues that match this filter",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "WARNING_NO_MATCHING_DYNAMIC_VARIABLES_FOUND",
     "description": "There are no issues that match these dynamic variables",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AgentApplicationSegmentsBrowserSegmentAllowList",
   "description": "The allow list object for browser applications.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "segments",
     "description": "The url segments that are allowed.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "CloudGcpFirebasedatabaseIntegration",
   "description": "Firebase Database Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "CloudLinkAccountPayload",
   "description": "Autogenerated return type of LinkAccount",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "errors",
     "description": "The list of errors.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "CloudAccountMutationError",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "linkedAccounts",
     "description": "The created Linked accounts.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "CloudLinkedAccount",
         "kind": "OBJECT"
        }
       }
      }
     }
    }
   ]
  },
  {
   "name": "EntityRelationshipUserDefinedCreateOrReplaceErrorType",
   "description": "The different error types for the entityRelationshipUserDefinedCreateOrReplace mutation.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "LIMIT_EXCEEDED",
     "description": "Number of user-defined relationships for a given entity has exceeded the limit (2000 relationships).",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NOT_ALLOWED",
     "description": "The operation is not allowed.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NOT_AUTHORIZED",
     "description": "The user does not have permissions to perform the operation.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AiDecisionsRelativeJaroWinklerInput",
   "description": "Input type for RelativeJaroWinkler expression",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "left",
     "description": "Left operand of comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsIncidentObjectInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "minDistance",
     "description": "Minimum distance threshold.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Float",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "right",
     "description": "Right operand of comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsIncidentObjectInput",
       "kind": "INPUT_OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "AiNotificationsSuggestion",
   "description": "Suggestion object",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "displayValue",
     "description": "Suggestion label",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "icon",
     "description": "Should suggestion be the default selection",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "value",
     "description": "Suggestion key",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AiNotificationsVariableSorter",
   "description": "Sort object",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "direction",
     "description": "direction",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiNotificationsSortOrder",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "field",
     "description": "field",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiNotificationsVariableFields",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "DashboardLineWidgetConfiguration",
   "description": "Configuration for visualization type 'viz.line'",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "nrqlQueries",
     "description": "NRQL queries.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "DashboardWidgetNrqlQuery",
       "kind": "OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "DashboardRevokeLiveUrlResult",
   "description": "Revoke live URL result.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "errors",
     "description": "The list of errors, if any.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "DashboardLiveUrlError",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "uuid",
     "description": "The unique identifier of the public live URL if revoked successfully, null otherwise.",
     "type": {
      "name": "ID",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AccountManagementUpdateInput",
   "description": "The attributes for updating an account.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "id",
     "description": "The ID for the account being updated.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "The new account name.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "InstallationRecipeEvent",
   "description": "An object that contains an installation event created from within the newrelic-cli.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "cliVersion",
     "description": "The version of the newrelic-cli that was used for a given recipe.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SemVer",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "complete",
     "description": "Whether or not the recipe has been installed and all steps have been completed.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "displayName",
     "description": "The display name for a given recipe.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "entityGuid",
     "description": "The entity Guid for a given recipe.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EntityGuid",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "error",
     "description": "The error returned for a given recipe.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "InstallationStatusError",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "hostName",
     "description": "The host name of the customer's machine.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "installId",
     "description": "The unique ID that corresponds to an install event.",
     "type": {
      "name": "ID",
      "kind": "SCALAR"
     }
    },
    {
     "name": "installLibraryVersion",
     "description": "The version of the open-install-library that is being used.",
     "type": {
      "name": "SemVer",
      "kind": "SCALAR"
     }
    },
    {
     "name": "kernelArch",
     "description": "The kernel architecture of the customer's machine.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "kernelVersion",
     "description": "The kernel version of the customer's machine.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SemVer",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "logFilePath",
     "description": "The path to the log file on the customer's host.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metadata",
     "description": "Additional key:value data related to the environment where the installation occurred.",
     "type": {
      "name": "InstallationRawMetadata",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The unique name for a given recipe.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "os",
     "description": "The OS of the customer's machine.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "platform",
     "description": "The platform name provided by the open-install-library.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "platformFamily",
     "description": "The platform family name provided by the open-install-library.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "platformVersion",
     "description": "The platform version provided by the open-install-library.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SemVer",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "redirectUrl",
     "description": "The redirect URL created by the CLI used for redirecting to a particular entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "status",
     "description": "The status for a given recipe.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "InstallationRecipeStatusType",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "targetedInstall",
     "description": "Whether or not the recipe being installed is a targeted install.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "taskPath",
     "description": "The path to the installation task as defined in the open-install-library.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "timestamp",
     "description": "The timestamp for when the recipe event occurred.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "validationDurationMilliseconds",
     "description": "The number of milliseconds it took to validate the recipe.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochMilliseconds",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AiIssuesKeyValue",
   "description": "Key value type",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "key",
     "description": "key",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "value",
     "description": "value",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "EntityGoldenEventObjectId",
   "description": "Types of references for the default WHERE clause.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "DOMAIN_IDS",
     "description": "The WHERE clause will be done against a domainId.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "ENTITY_GUIDS",
     "description": "The WHERE clause will be done against a GUID.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "ENTITY_NAMES",
     "description": "The WHERE clause will be done against the name of the entity.",
     "isDeprecated": true,
     "deprecationReason": "This use case will be removed in future versions."
    }
   ]
  },
  {
   "name": "AiDecisionsFixedLessThanInput",
   "description": "Input type for FixedLessThan expression",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "compared",
     "description": "Value to be used in comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Float",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "incident",
     "description": "Incident selector to be used in comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsIncidentObjectInput",
       "kind": "INPUT_OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "AiIssuesIssueState",
   "description": "Issue state",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "ACTIVATED",
     "description": "Issue is activated",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "CLOSED",
     "description": "Issue is closed",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "CREATED",
     "description": "Issue is created",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "DEACTIVATED",
     "description": "Issue is deactivated",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "CloudAzureStorageIntegration",
   "description": "Storage Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "resourceGroups",
     "description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "CloudProvider",
   "description": "A cloud services provider.",
   "kind": "INTERFACE",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "icon",
     "description": "The cloud provider icon name.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud provider identifier in NewRelic.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "The cloud provider name.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "Get details of one cloud provider service.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "slug",
       "description": "The cloud provider short name.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "services",
     "description": "Get details of all the cloud provider services available for integration.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "CloudService",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "slug",
     "description": "The cloud provider short name.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "templateParams",
     "description": "Get template params of one cloud provider service.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "CloudTemplateParam",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "possibleTypes": [
    {
     "name": "CloudAwsGovCloudProvider",
     "kind": "OBJECT"
    },
    {
     "name": "CloudAwsProvider",
     "kind": "OBJECT"
    },
    {
     "name": "CloudBaseProvider",
     "kind": "OBJECT"
    },
    {
     "name": "CloudGcpProvider",
     "kind": "OBJECT"
    }
   ]
  },
  {
   "name": "CloudAzureUpdateAccountInput",
   "description": "Information required to update a Azure account to a NewRelic account.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "applicationId",
     "description": "The Azure account application identifier (used to fetch data).",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "clientSecret",
     "description": "The Azure account application secret key.",
     "type": {
      "name": "SecureValue",
      "kind": "SCALAR"
     }
    },
    {
     "name": "disabled",
     "description": "Disable the linked account.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "The linked account new name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "subscriptionId",
     "description": "The Azure account subscription identifier.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "tenantId",
     "description": "The Azure account tenant identifier.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "IncidentIntelligenceEnvironmentConsentAccountsResult",
   "description": "Result options for account consent marking",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "ALREADY_CONSENTED",
     "description": "All of the accounts have been already marked with consent",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "CONSENTED",
     "description": "Accounts were consented",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "USER_NOT_AUTHORIZED_MISSING_CAPABILITY",
     "description": "The user is not authorized to consent due to a missing capability",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AiNotificationsCustomHeadersAuthInput",
   "description": "Custom headers auth input object",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "customHeaders",
     "description": "customHeaders",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiNotificationsCustomHeaderInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     }
    }
   ]
  },
  {
   "name": "ErrorsInboxErrorGroupBase",
   "description": "A base set of fields for a grouping of similar error events.",
   "kind": "INTERFACE",
   "fields": [
    {
     "name": "assignedUser",
     "description": "User assigned to the error group",
     "type": {
      "name": "UserReference",
      "kind": "OBJECT"
     }
    },
    {
     "name": "assignment",
     "description": "User assigned to the error group",
     "type": {
      "name": "ErrorsInboxAssignment",
      "kind": "OBJECT"
     }
    },
    {
     "name": "entityGuid",
     "description": "Source entity Guid",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    },
    {
     "name": "eventsQuery",
     "description": "NRQL formatted query for retrieving error events",
     "type": {
      "name": "Nrql",
      "kind": "SCALAR"
     }
    },
    {
     "name": "firstSeenAt",
     "description": "Time of first occurrence",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "id",
     "description": "A unique identifier for the error group",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "isCustom",
     "description": "Indicates whether this error group was custom generated.\n- false = this is a system-generated error group\n- true = this is a custom error group, created and sent by the end user",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "lastSeenAt",
     "description": "Time of last occurrence",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "message",
     "description": "Error group message",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "Error group name",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "occurrences",
     "description": "The occurrences of this error group.",
     "type": {
      "name": "ErrorsInboxOccurrences",
      "kind": "OBJECT"
     }
    },
    {
     "name": "regressedAt",
     "description": "Time of regression occurrence for regressed error groups",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "resources",
     "description": "List of resources associated with this error group",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ErrorsInboxResourcesResponse",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "cursor",
       "description": "Current query cursor",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "filter",
       "description": "Set of filters to be applied to the search.",
       "type": {
        "name": "ErrorsInboxResourceFilterInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "source",
     "description": "The source event of the error group.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "state",
     "description": "Value to indicate the current state of the group.",
     "type": {
      "name": "ErrorsInboxErrorGroupState",
      "kind": "ENUM"
     }
    },
    {
     "name": "url",
     "description": "The public URL of the error group detail view.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ],
   "possibleTypes": [
    {
     "name": "ErrorsInboxErrorGroup",
     "kind": "OBJECT"
    },
    {
     "name": "ErrorsInboxErrorGroupOutline",
     "kind": "OBJECT"
    }
   ]
  },
  {
   "name": "Nr1CatalogAlertConditionType",
   "description": "Possible types of configured alert conditions",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "BASELINE",
     "description": "A baseline alert condition",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "STATIC",
     "description": "A static alert condition",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AgentApplicationSettingsTransactionTracerInput",
   "description": "Fields related to transaction traces and data collection for traces.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "captureMemcacheKeys",
     "description": "DEPRECATED: Please use capture_memcache_keys on parent type",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "enabled",
     "description": "If true, this enables the transaction tracer feature, enabling collection of transaction traces.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "explainEnabled",
     "description": "If true, enables the collection of explain plans in transaction traces. This setting will also apply to explain plans in slow SQL traces if slow_sql.explain_enabled is not set separately.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "explainThresholdType",
     "description": "Relevant only when explain_enabled is true. Can be set to automatic configuration (APDEX_F) or manual (see explainThresholdValue).",
     "type": {
      "name": "AgentApplicationSettingsThresholdTypeEnum",
      "kind": "ENUM"
     }
    },
    {
     "name": "explainThresholdValue",
     "description": "Threshold (in seconds) above which the agent will collect explain plans. Relevant only when explain_enabled is true and explainThresholdType is set to VALUE.",
     "type": {
      "name": "Seconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "logSql",
     "description": "Set to true to enable logging of queries to the agent log file instead of uploading to New Relic. Queries are logged using the record_sql mode.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "recordSql",
     "description": "Obfuscation level for SQL queries reported in transaction trace nodes.",
     "type": {
      "name": "AgentApplicationSettingsRecordSqlEnum",
      "kind": "ENUM"
     }
    },
    {
     "name": "stackTraceThreshold",
     "description": "Specify a threshold in seconds. The agent includes stack traces in transaction trace nodes when the stack trace duration exceeds this threshold.",
     "type": {
      "name": "Seconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "transactionThresholdType",
     "description": "Relevant only when transaction tracer is enabled. Can be set to automatic configuration (APDEX_F) or manual (see TransactionThresholdValue).",
     "type": {
      "name": "AgentApplicationSettingsThresholdTypeEnum",
      "kind": "ENUM"
     }
    },
    {
     "name": "transactionThresholdValue",
     "description": "Threshold (in seconds) that transactions with a duration longer than this threshold are eligible for transaction traces.  Relevant only when transaction tracer is enabled and transaction_threshold_type is set to VALUE.",
     "type": {
      "name": "Seconds",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "DataManagementRetentionValues",
   "description": "Wrapper object for namespace retention values",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "appliedRules",
     "description": "List of rules applied to a namespace",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "DataManagementAppliedRules",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "namespace",
     "description": "The name of a namespace",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "subscriptionRetentionInDays",
     "description": "The retention value from the subscription (in days)",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AgentEnvironmentAccountStitchedFields",
   "description": "account-scope schemas",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "agentSettingsAttributes",
     "description": "Contains environment attributes regarding the reported setting of the reporting agent at account level.",
     "type": {
      "name": "AgentEnvironmentAccountEnvironmentAttributesResults",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "cursor",
       "description": "Cursor for fetching more results. Populate using result's nextCursor field.",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "filter",
       "description": "Filter to apply to results on attribute name.",
       "type": {
        "name": "AgentEnvironmentFilter",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "environmentAttributes",
     "description": "Contains general environment attributes from the same environment where the application instance is running.",
     "type": {
      "name": "AgentEnvironmentAccountEnvironmentAttributesResults",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "cursor",
       "description": "Cursor for fetching more results. Populate using result's nextCursor field.",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "filter",
       "description": "Filter to apply to results on attribute name.",
       "type": {
        "name": "AgentEnvironmentFilter",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "modules",
     "description": "Contains environment attributes regarding modules loaded by the application instance. Used only by the Java agent.",
     "type": {
      "name": "AgentEnvironmentAccountApplicationLoadedModulesResults",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "cursor",
       "description": "Cursor for fetching more results. Populate using result's nextCursor field.",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "filter",
       "description": "Filter to apply to results on module name field.",
       "type": {
        "name": "AgentEnvironmentFilter",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    }
   ]
  },
  {
   "name": "EventsToMetricsDeleteRuleResult",
   "description": "The result of which submitted events to metrics rules were successfully and unsuccessfully deleted.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "failures",
     "description": "Information about the rules that could not be deleted.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EventsToMetricsDeleteRuleFailure",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "successes",
     "description": "Rules that were successfully deleted.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EventsToMetricsRule",
       "kind": "OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "NerdpackData",
   "description": "The Nerdpack root object. Contains the Nerdpack information including the list of versions and subscriptions.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "accountId",
     "description": "Unique identifier of the account that owns the Nerdpack.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "allowedAccounts",
     "description": "Get the list of accounts specified on the allow list.\nIf the user is authorized to the nerdpack owner account all the allowed accounts will be displayed,\notherwise, only the intersection of allowed accounts and user authorized accounts will be displayed.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "NerdpackAllowedAccount",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "id",
     "description": "Unique V5 uuid that identifies the Nerdpack.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "subscriptionModel",
     "description": "Type that defines the rules for account subscription.",
     "type": {
      "name": "NerdpackSubscriptionModel",
      "kind": "ENUM"
     }
    },
    {
     "name": "subscriptions",
     "description": "List of subscriptions on versions of the given Nerdpack.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "NerdpackSubscription",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "versions",
     "description": "Retrieve the versions for the given Nerdpack.",
     "type": {
      "name": "NerdpackVersionsResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "cursor",
       "description": "Pagination cursor. Defaults to first page",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "filter",
       "description": "Version filter",
       "type": {
        "name": "NerdpackVersionFilter",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    }
   ]
  },
  {
   "name": "EntityOutline",
   "description": "The `EntityOutline` interface object allows fetching basic entity data for many entities at a time.\n\nTo understand more about entities and entity types, look at [our docs](https://docs.newrelic.com/docs/what-are-new-relic-entities).",
   "kind": "INTERFACE",
   "fields": [
    {
     "name": "account",
     "type": {
      "name": "AccountOutline",
      "kind": "OBJECT"
     }
    },
    {
     "name": "accountId",
     "description": "The New Relic account ID associated with this entity.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "alertSeverity",
     "description": "The current alerting severity of the entity.",
     "type": {
      "name": "EntityAlertSeverity",
      "kind": "ENUM"
     }
    },
    {
     "name": "domain",
     "description": "The entity's domain",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "entityType",
     "description": "A value representing the combination of the entity's domain and type.",
     "type": {
      "name": "EntityType",
      "kind": "ENUM"
     }
    },
    {
     "name": "firstIndexedAt",
     "description": "The date of last time the entity has updated any of its fields.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "goldenMetrics",
     "description": "The list of golden metrics for a specific entity",
     "type": {
      "name": "EntityGoldenContextScopedGoldenMetrics",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden metrics",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "timeWindow",
       "description": "Time range to apply to the golden metric NRQL query result field",
       "type": {
        "name": "EntityGoldenNrqlTimeWindowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "goldenTags",
     "description": "The list of golden tags for a specific entityType.",
     "type": {
      "name": "EntityGoldenContextScopedGoldenTags",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden tags",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "guid",
     "description": "A unique entity identifier.",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    },
    {
     "name": "indexedAt",
     "description": "The time the entity was indexed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "lastReportingChangeAt",
     "description": "The last time the entity's reporting status changed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The name of this entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "permalink",
     "description": "The url to the entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "reporting",
     "description": "The reporting status of the entity. If New Relic is successfully collecting data from your application, this will be true.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "serviceLevel",
     "description": "The service level defined for the entity.",
     "type": {
      "name": "ServiceLevelDefinition",
      "kind": "OBJECT"
     }
    },
    {
     "name": "tags",
     "description": "The tags applied to the entity.\n\nFor details on tags, as well as query and mutation examples, visit [our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/graphql-tagging-api-tutorial).",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityTag",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "type",
     "description": "The entity's type",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ],
   "interfaces": [
    {
     "name": "AlertableEntityOutline",
     "kind": "INTERFACE"
    }
   ],
   "possibleTypes": [
    {
     "name": "ApmApplicationEntityOutline",
     "kind": "OBJECT"
    },
    {
     "name": "ApmDatabaseInstanceEntityOutline",
     "kind": "OBJECT"
    },
    {
     "name": "ApmExternalServiceEntityOutline",
     "kind": "OBJECT"
    },
    {
     "name": "BrowserApplicationEntityOutline",
     "kind": "OBJECT"
    },
    {
     "name": "DashboardEntityOutline",
     "kind": "OBJECT"
    },
    {
     "name": "ExternalEntityOutline",
     "kind": "OBJECT"
    },
    {
     "name": "GenericEntityOutline",
     "kind": "OBJECT"
    },
    {
     "name": "GenericInfrastructureEntityOutline",
     "kind": "OBJECT"
    },
    {
     "name": "InfrastructureAwsLambdaFunctionEntityOutline",
     "kind": "OBJECT"
    },
    {
     "name": "InfrastructureHostEntityOutline",
     "kind": "OBJECT"
    },
    {
     "name": "KeyTransactionEntityOutline",
     "kind": "OBJECT"
    },
    {
     "name": "MobileApplicationEntityOutline",
     "kind": "OBJECT"
    },
    {
     "name": "SecureCredentialEntityOutline",
     "kind": "OBJECT"
    },
    {
     "name": "SyntheticMonitorEntityOutline",
     "kind": "OBJECT"
    },
    {
     "name": "TeamEntityOutline",
     "kind": "OBJECT"
    },
    {
     "name": "ThirdPartyServiceEntityOutline",
     "kind": "OBJECT"
    },
    {
     "name": "UnavailableEntityOutline",
     "kind": "OBJECT"
    },
    {
     "name": "WorkloadEntityOutline",
     "kind": "OBJECT"
    }
   ]
  },
  {
   "name": "MultiTenantAuthorizationRoleIdInputFilter",
   "description": "Provides all the available filters on the role id",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "eq",
     "description": "performs an equals operation",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AuthorizationManagementGrantedRoleSearch",
   "description": "container for roles enabling cursor based pagination",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "nextCursor",
     "description": "an opaque cursor to supply with subsequent   requests to get the next page of results, null if there are no more pages",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "roles",
     "description": "the roles granted to this group",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AuthorizationManagementGrantedRole",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "totalCount",
     "description": "the total number of results",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "CloudAzurePowerbidedicatedIntegration",
   "description": "Power BI Dedicated Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "resourceGroups",
     "description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "Nr1CatalogQuickstartAlertConditionMetadata",
   "description": "Metadata associated with the alert condition in a quickstart",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "description",
     "description": "A short form description for the alert condition",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "displayName",
     "description": "The human-readable name for the alert condition",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "type",
     "description": "Determines the type of alert condition that will be created",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Nr1CatalogQuickstartAlertConditionType",
       "kind": "ENUM"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "Nr1CatalogQuickstartComponentMetadata",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "LogConfigurationsParsingRule",
   "description": "A parsing rule for an account.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "accountId",
     "description": "The account id associated with the rule.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "attribute",
     "description": "The parsing rule will apply to value of this attribute.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "createdBy",
     "description": "Identifies the user who has created the rule.",
     "type": {
      "name": "UserReference",
      "kind": "OBJECT"
     }
    },
    {
     "name": "deleted",
     "description": "Whether or not this rule is deleted.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "description",
     "description": "A description of what this parsing rule represents.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "enabled",
     "description": "Whether or not this rule is enabled.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "grok",
     "description": "The Grok of what to parse.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "Unique parsing rule identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "lucene",
     "description": "The Lucene to match events to the parsing rule.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "nrql",
     "description": "The NRQL to match events to the parsing rule.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Nrql",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "updatedAt",
     "description": "Identifies the date and time when the rule was last updated.",
     "type": {
      "name": "DateTime",
      "kind": "SCALAR"
     }
    },
    {
     "name": "updatedBy",
     "description": "Identifies the user who has last updated the rule.",
     "type": {
      "name": "UserReference",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "DashboardVariableEnumItem",
   "description": "Represents a possible value for a variable of type ENUM.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "title",
     "description": "A human-friendly display string for this value.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "value",
     "description": "A possible variable value.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "SyntheticsAutomatedTestMonitorConfigInput",
   "description": "Monitor specific test configuration",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "isBlocking",
     "description": "Specifies whether a failure of this monitor should fail the entire automated test",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "overrides",
     "description": "Specific overrides for the given monitor",
     "type": {
      "name": "SyntheticsAutomatedTestOverridesInput",
      "kind": "INPUT_OBJECT"
     }
    }
   ]
  },
  {
   "name": "SyntheticsWeeklyMonitorDowntimeMutationResult",
   "description": "Monitor downtime object returned to the customer for a downtime run weekly",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "accountId",
     "description": "The account ID associated with the monitor downtime",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "endRepeat",
     "description": "Configuration options if the customer wants the monitor to end at a specific date",
     "type": {
      "name": "SyntheticsDateWindowEndOutput",
      "kind": "OBJECT"
     }
    },
    {
     "name": "endTime",
     "description": "The date and time in which the monitor downtime will end",
     "type": {
      "name": "NaiveDateTime",
      "kind": "SCALAR"
     }
    },
    {
     "name": "guid",
     "description": "The entity GUID associated with the monitor downtime",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    },
    {
     "name": "maintenanceDays",
     "description": "Days of the week the monitor downtime will run",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "SyntheticsMonitorDowntimeWeekDays",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "monitorGuids",
     "description": "The monitor GUIDs associated with the monitor downtime",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityGuid",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "The name of the monitor downtime",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "startTime",
     "description": "The date and time in which the monitor downtime will begin",
     "type": {
      "name": "NaiveDateTime",
      "kind": "SCALAR"
     }
    },
    {
     "name": "timezone",
     "description": "The timezone the time values will be in",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "UserManagementSortDirection",
   "description": "Available directions for sorting",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "ASCENDING",
     "description": "Sort in ascending order",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "DESCENDING",
     "description": "Sort in descending order",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "ErrorsInboxErrorGroupSortOrderInput",
   "description": "Sort object.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "direction",
     "description": "Sort object order.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ErrorsInboxDirection",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "field",
     "description": "Sort object field.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ErrorsInboxErrorGroupSortOrderField",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "OrganizationCustomerOrganizationFilterInput",
   "description": "A filter for customer organizations",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "accountId",
     "description": "The id of the owned account",
     "type": {
      "name": "OrganizationOrganizationAccountIdInputFilter",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "authenticationDomainId",
     "description": "The id of the authentication domain",
     "type": {
      "name": "OrganizationOrganizationAuthenticationDomainIdInputFilter",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "customerId",
     "description": "The id of the customer",
     "type": {
      "name": "OrganizationOrganizationCustomerIdInputFilter",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "id",
     "description": "The id of the organization",
     "type": {
      "name": "OrganizationOrganizationIdInputFilter",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "name",
     "description": "The name of the organization",
     "type": {
      "name": "OrganizationOrganizationNameInputFilter",
      "kind": "INPUT_OBJECT"
     }
    }
   ]
  },
  {
   "name": "CloudAwsConnectIntegration",
   "description": "Connect Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "SyntheticsAutomatedTestConfigInput",
   "description": "Global automated test config",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "batchName",
     "description": "An identifier for the automated test run",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "branch",
     "description": "Branch metadata to indicate what triggered the automated test",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "commit",
     "description": "Commit metadata to indicate what commit triggered the automated test",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "deepLink",
     "description": "Metadata for the automated test",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "platform",
     "description": "Metadata about the platform target the automated test will run against",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "repository",
     "description": "The unique client identifier for the Synthetics Monitor in New Relic",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "UserManagementGroups",
   "description": "container for groups enabling cursor based pagination",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "groups",
     "description": "container for groups enabling cursor based pagination",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "UserManagementGroup",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "nextCursor",
     "description": "an opaque cursor to supply with subsequent     requests to get the next page of results, null if there are no more pages",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "totalCount",
     "description": "the total number of results",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "Nr1CatalogInstallPlanDestination",
   "description": "Possible destinations for the install plan target",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "APPLICATION",
     "description": "Application (APM) install",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "CLOUD",
     "description": "Cloud provider install",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "HOST",
     "description": "Host install",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "KUBERNETES",
     "description": "Kubernetes install",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "UNKNOWN",
     "description": "Unknown install - special case when the target where the install takes place is unknown (such as guided install)",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "EdgeCreateTraceFilterRuleResponses",
   "description": "Array of responses, one for each span attribute trace filter rule creation request.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "spanAttributeRules",
     "description": "Span attribute trace filter rule creation response",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EdgeCreateSpanAttributeRulesResponse",
       "kind": "OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "AgentApplicationSettingsBrowserDistributedTracing",
   "description": "Distributed tracing type. See [documentation](https://docs.newrelic.com/docs/browser/new-relic-browser/browser-pro-features/browser-data-distributed-tracing/) for further information.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "allowedOrigins",
     "description": "List of allowed origins for use with distributed tracing.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "corsEnabled",
     "description": "Whether or not CORS is enabled in distributed tracing.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "corsUseNewrelicHeader",
     "description": "Whether or not CORS uses the `newrelic` header in distributed tracing.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "corsUseTracecontextHeaders",
     "description": "Whether or not CORS uses tracecontext headers in distributed tracing.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "enabled",
     "description": "Whether or not distributed tracing is enabled.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "excludeNewrelicHeader",
     "description": "Whether or not to exclude the `newrelic` header in distributed tracing.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "CloudAzureCostmanagementIntegration",
   "description": "Cost Management Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "tagKeys",
     "description": "Specify if additional cost data per tag should be collected. This field is case sensitive.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "OrganizationOrganizationIdInput",
   "description": "Provides the operations available on the organization id",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "eq",
     "description": "An organization id",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "EntityGoldenTagInput",
   "description": "An input that represents a golden tag",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "key",
     "description": "The golden tag key.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "SyntheticsMonitorDowntimeWeeklyConfig",
   "description": "Configuration options for a monitor downtime that runs weekly",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "endRepeat",
     "description": "Configuration options if the customer wants the monitor to end at a specific date",
     "type": {
      "name": "SyntheticsDateWindowEndConfig",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "endTime",
     "description": "The date and time in which the monitor downtime will end",
     "type": {
      "name": "NaiveDateTime",
      "kind": "SCALAR"
     }
    },
    {
     "name": "maintenanceDays",
     "description": "Configuration options if the customer wants the monitor to end at a specific date",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "SyntheticsMonitorDowntimeWeekDays",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "startTime",
     "description": "The date and time in which the monitor downtime will begin",
     "type": {
      "name": "NaiveDateTime",
      "kind": "SCALAR"
     }
    },
    {
     "name": "timezone",
     "description": "The timezone the time values will be in",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "CloudRenameAccountPayload",
   "description": "Autogenerated return type of RenameAccount",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "errors",
     "description": "The list of errors.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "CloudAccountMutationError",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "linkedAccounts",
     "description": "The updated linked accounts.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "CloudLinkedAccount",
         "kind": "OBJECT"
        }
       }
      }
     }
    }
   ]
  },
  {
   "name": "AiDecisionsRelativeEqualInput",
   "description": "Input type for RelativeEqual expression",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "left",
     "description": "Left operand of comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsIncidentObjectInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "right",
     "description": "Right operand of comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsIncidentObjectInput",
       "kind": "INPUT_OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "UnavailableEntity",
   "description": "An entity that is unavailable.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "account",
     "type": {
      "name": "AccountOutline",
      "kind": "OBJECT"
     }
    },
    {
     "name": "accountId",
     "description": "The New Relic account ID associated with this entity.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "alertSeverity",
     "description": "The current alerting severity of the entity.",
     "type": {
      "name": "EntityAlertSeverity",
      "kind": "ENUM"
     }
    },
    {
     "name": "alertViolations",
     "description": "Violations on the entity that were open during the specified time window. This will return up to 500 violations - if there are more in the time window selected, you must narrow the time window or look at fewer entities.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityAlertViolation",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "endTime",
       "description": "End of time window for violations.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EpochMilliseconds",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "startTime",
       "description": "Start of time window for violations.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EpochMilliseconds",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "deploymentSearch",
     "description": "Retrieve the deployment event(s). Ordered by timestamp DESC.",
     "type": {
      "name": "ChangeTrackingDeploymentSearchResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "filter",
       "description": "Contains the set of filters to apply to the query.",
       "type": {
        "name": "ChangeTrackingSearchFilter",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "domain",
     "description": "The entity's domain",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "entityType",
     "description": "A value representing the combination of the entity's domain and type.",
     "type": {
      "name": "EntityType",
      "kind": "ENUM"
     }
    },
    {
     "name": "firstIndexedAt",
     "description": "The date of last time the entity has updated any of its fields.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "goldenMetrics",
     "description": "The list of golden metrics for a specific entity",
     "type": {
      "name": "EntityGoldenContextScopedGoldenMetrics",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden metrics",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "timeWindow",
       "description": "Time range to apply to the golden metric NRQL query result field",
       "type": {
        "name": "EntityGoldenNrqlTimeWindowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "goldenTags",
     "description": "The list of golden tags for a specific entityType.",
     "type": {
      "name": "EntityGoldenContextScopedGoldenTags",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden tags",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "guid",
     "description": "A unique entity identifier.",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    },
    {
     "name": "indexedAt",
     "description": "The time the entity was indexed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "lastReportingChangeAt",
     "description": "The last time the entity's reporting status changed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The name of this entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nerdStorage",
     "type": {
      "name": "NerdStorageEntityScope",
      "kind": "OBJECT"
     }
    },
    {
     "name": "nrdbQuery",
     "description": "Make an `Entity` scoped query to NRDB with a NRQL string.\n\nA relevant `WHERE` clause will be added to your query to scope data to the entity in question.\n\nSee the [NRQL Docs](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/nrql-resources/nrql-syntax-components-functions) for more information about generating a query string.",
     "type": {
      "name": "NrdbResultContainer",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "async",
       "description": "When true, the query will begin asynchronous resolution after the allotted `timeout`. Include `queryProgress` fields in your GraphQL query to receive the information you will need to poll the `nrdbQueryProgress` field for the results of your async NRQL query.\n\nSee [this page](https://docs.newrelic.com/docs/apis/nerdgraph/examples/async-queries-nrql-tutorial) for additional asynchronous query documentation.",
       "type": {
        "name": "Boolean",
        "kind": "SCALAR"
       },
       "defaultValue": "false"
      },
      {
       "name": "nrql",
       "description": "The [NRQL](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/nrql-resources/nrql-syntax-components-functions) query string.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Nrql",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "options",
       "description": "Additional options for NRQL queries.",
       "type": {
        "name": "NrqlQueryOptions",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "timeout",
       "description": "The timeout we will apply to the NRQL Query. The value will be clamped to between 5 and 120 seconds and defaults to 5 seconds.\n\nFor `async` queries, if the query is still incomplete after this amount of time, resolution will become asynchronous and return `queryProgress` data if requested.",
       "type": {
        "name": "Seconds",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "nrdbQueryProgress",
     "description": "Poll for the results of a previously-executed asychronous NRDB query.\n\nThe `queryId` is available in the `queryProgress` data returned by the original asynchronous query.\n\nSee [this page](https://docs.newrelic.com/docs/apis/nerdgraph/examples/async-queries-nrql-tutorial) for additional asynchronous query documentation.",
     "type": {
      "name": "NrdbResultContainer",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "queryId",
       "description": "A token for retrieving the results of a previously executed asynchronous query.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "permalink",
     "description": "The url to the entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "recentAlertViolations",
     "description": "Recent violations on the entity.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityAlertViolation",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "count",
       "description": "The desired number of alert violations to be returned.",
       "type": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "relatedEntities",
     "description": "Related entities result with optional filtering.",
     "type": {
      "name": "EntityRelationshipRelatedEntitiesResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "cursor",
       "description": "The cursor to fetch paginated results.",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "filter",
       "description": "Apply an optional filter to the related entities.",
       "type": {
        "name": "EntityRelationshipEdgeFilter",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "limit",
       "description": "A limit to apply to the number of relationships returned. Note: this option can only lower the default limits (2000 relationships).",
       "type": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "relationships",
     "description": "A list of the entities' relationships.\n\nFor more information, visit [our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/graphql-relationships-api-tutorial).",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityRelationship",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "endTime",
       "description": "Return relationships as they existed in the past. The duration of the time window queried is fixed at 75 minutes.",
       "type": {
        "name": "EpochMilliseconds",
        "kind": "SCALAR"
       }
      },
      {
       "name": "filter",
       "description": "Apply an optional filter to the relationships.",
       "type": {
        "name": "EntityRelationshipFilter",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "reporting",
     "description": "The reporting status of the entity. If New Relic is successfully collecting data from your application, this will be true.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "serviceLevel",
     "description": "The service level defined for the entity.",
     "type": {
      "name": "ServiceLevelDefinition",
      "kind": "OBJECT"
     }
    },
    {
     "name": "tags",
     "description": "The tags applied to the entity.\n\nFor details on tags, as well as query and mutation examples, visit [our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/graphql-tagging-api-tutorial).",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityTag",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "tagsWithMetadata",
     "description": "The tags applied to the entity with their metadata.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityTagWithMetadata",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "tracingSummary",
     "description": "Look up Distributed Tracing summary data for the selected `EntityGuid`",
     "type": {
      "name": "DistributedTracingEntityTracingSummary",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "timeWindow",
       "description": "The start and end of the tracing data. Defaults to the last 30 minutes",
       "type": {
        "name": "TimeWindowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "type",
     "description": "The entity's type",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ],
   "interfaces": [
    {
     "name": "AlertableEntity",
     "kind": "INTERFACE"
    },
    {
     "name": "Entity",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "DataManagementAccountStitchedFields",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "customizableRetention",
     "description": "List all customizable event namespaces",
     "type": {
      "name": "DataManagementCustomizableRetention",
      "kind": "OBJECT"
     }
    },
    {
     "name": "eventRetentionPolicies",
     "description": "Get the event retention policies for an account",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "DataManagementRenderedRetention",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "eventRetentionRule",
     "description": "Get the event retention rule for a namespace on an account, if it exists",
     "type": {
      "name": "DataManagementRule",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "namespace",
       "description": "Namespace of the requested event retention rule",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "eventRetentionRules",
     "description": "List all the event retention rules for an account",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "DataManagementRule",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "featureSettings",
     "description": "Query for all feature settings",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "DataManagementFeatureSetting",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "limits",
     "description": "Query for all limits",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "DataManagementAccountLimit",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "retentionAudit",
     "description": "Audit of retention values per namespace for an account",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "DataManagementRetentionValues",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "retentions",
     "description": "List of all namespaces",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "DataManagementRetention",
       "kind": "OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "ApiAccessCreateKeyResponse",
   "description": "The response of the create keys mutation.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdKeys",
     "description": "Lists all successfully created keys.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "ApiAccessKey",
       "kind": "INTERFACE"
      }
     }
    },
    {
     "name": "errors",
     "description": "Lists all errors for keys that could not be created. Each error maps to a single key input.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "ApiAccessKeyError",
       "kind": "INTERFACE"
      }
     }
    }
   ]
  },
  {
   "name": "AlertsActionOnMutingRuleWindowEnded",
   "description": "Configuration on the action when the muting rule window is ended or disabled",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "CLOSE_ISSUES_ON_INACTIVE",
     "description": "Muting Rule closes issues when the muting rule window is ended or disabled to notify users.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "DO_NOTHING",
     "description": "The currently opened issues will not be notified even if the muting rule window is ended or disabled.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AlertsNotificationChannelsAddToPolicyErrorType",
   "description": "The error type for associating notification channels with a policy.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "BAD_USER_INPUT",
     "description": "Bad user input error.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "FORBIDDEN_ERROR",
     "description": "Forbidden error.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NOT_FOUND_ERROR",
     "description": "Not found error.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SERVER_ERROR",
     "description": "Server error.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "TOO_MANY_REQUESTS_ERROR",
     "description": "Too many requests error.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "UserManagementDisplayNameInput",
   "description": "Available filtering types for group display names",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "contains",
     "description": "Part of a display name",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "eq",
     "description": "A display name",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AlertsNrqlDynamicConditionTermsOperator",
   "description": "Operator used to compare against the threshold for `NrqlConditions`. Only `ABOVE` is allowed for baseline NRQL conditions.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "ABOVE",
     "description": "For comparing values above a threshold.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AlertsMutingRuleScheduleInput",
   "description": "The time window when the MutingRule should actively mute violations.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "endRepeat",
     "description": "The datetime stamp when the MutingRule schedule should stop repeating.\nThis is in local ISO 8601 format without an offset.\n\nExample: `'2020-07-10T15:00:00'`\n\nNote: Either `endRepeat` or `repeatCount` should be used to end a MutingRule schedule.\nBoth fields should not be provided together.",
     "type": {
      "name": "NaiveDateTime",
      "kind": "SCALAR"
     }
    },
    {
     "name": "endTime",
     "description": "The datetime stamp representing when the MutingRule should end.\nThis is in local ISO 8601 format without an offset.\n\nExample: `'2020-07-10T15:00:00'`",
     "type": {
      "name": "NaiveDateTime",
      "kind": "SCALAR"
     }
    },
    {
     "name": "repeat",
     "description": "The frequency the MutingRule schedule repeats.\nIf the MutingRule repeats `WEEKLY`, be sure to set `weeklyRepeatDays`.\nIf the MutingRule does not repeat, use `null`.\n\nExample: `DAILY`",
     "type": {
      "name": "AlertsMutingRuleScheduleRepeat",
      "kind": "ENUM"
     }
    },
    {
     "name": "repeatCount",
     "description": "The number of times the MutingRule schedule should repeat.\n\nNote: Either `repeatCount` or `endRepeat` should be used to end a MutingRule schedule.\nBoth fields should not be provided together.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "startTime",
     "description": "The datetime stamp representing when the MutingRule should start.\nThis is in local ISO 8601 format without an offset.\n\nExample: `'2020-07-08T14:30:00'`",
     "type": {
      "name": "NaiveDateTime",
      "kind": "SCALAR"
     }
    },
    {
     "name": "timeZone",
     "description": "The time zone that applies to the MutingRule schedule.\n\nExample: `'America/Los_Angeles'`\n\nSee https://en.wikipedia.org/wiki/List_of_tz_database_time_zones.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "weeklyRepeatDays",
     "description": "The day(s) of the week that a MutingRule should repeat when the repeat field is set to `WEEKLY`.\n\nExample: `[MONDAY, WEDNESDAY]`",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AlertsDayOfWeek",
        "kind": "ENUM"
       }
      }
     }
    }
   ]
  },
  {
   "name": "ChangeTrackingDeploymentSearchResult",
   "description": "The result of the deployment search query.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "results",
     "description": "The list of deployment events in the given time window.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "ChangeTrackingDeployment",
       "kind": "OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "SyntheticsRuntimeInput",
   "description": "Input to determine which runtime the monitor will run",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "runtimeType",
     "description": "The runtime type that the monitor will run",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "runtimeTypeVersion",
     "description": "The specific version of the runtime type selected",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SemVer",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "scriptLanguage",
     "description": "The programing language that should execute the script",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "SyntheticsPrivateLocationMutationError",
   "description": "Error object for Synthetic Private Location mutation request",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "description",
     "description": "String description of error",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "type",
     "description": "Enum type of error response",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SyntheticsPrivateLocationMutationErrorType",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "CloudAzurePostgresqlIntegrationInput",
   "description": "Database for PostgreSQL",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "resourceGroups",
     "description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "SyntheticsTag",
   "description": "Tag entries for the monitor",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "key",
     "description": "Name of the tag key",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "values",
     "description": "Values associated with the tag key",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    }
   ]
  },
  {
   "name": "EdgeTraceObserver",
   "description": "A `TraceObserver` handles a group of tracing services for an account family.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "complianceTypes",
     "description": "Optional list of compliance types (e.g., FedRAMP) applied to this trace observer.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EdgeComplianceTypeCode",
        "kind": "ENUM"
       }
      }
     }
    },
    {
     "name": "dataSourceGroup",
     "description": "The group of data sources if any have been assigned to this trace observer.",
     "type": {
      "name": "EdgeDataSourceGroup",
      "kind": "OBJECT"
     }
    },
    {
     "name": "endpoints",
     "description": "List of endpoints associated with this trace observer. Currently, only one endpoint per trace observer is supported.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EdgeEndpoint",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "id",
     "description": "Globally unique identifier of this trace observer.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "monitoringAccountId",
     "description": "Which account monitoring metrics are being written to for this trace observer (if specified)",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "Human-readable name of this trace observer.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "providerRegion",
     "description": "Provider-specific region of this endpoint (for example, `AWS_US_EAST_1`). Currently, only AWS regions are supported.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EdgeProviderRegion",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "status",
     "description": "Status of the trace observer.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EdgeTraceObserverStatus",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "traceFilters",
     "description": "Trace filters applied to the trace observer.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EdgeTraceFilters",
       "kind": "OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "SyntheticsMonitorPeriod",
   "description": "Enum of monitor period types",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "EVERY_10_MINUTES",
     "description": "10 minute monitor period",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "EVERY_12_HOURS",
     "description": "12 hour monitor period (720 minutes)",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "EVERY_15_MINUTES",
     "description": "15 minute monitor period",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "EVERY_30_MINUTES",
     "description": "30 minute monitor period",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "EVERY_5_MINUTES",
     "description": "5 minute monitor period",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "EVERY_6_HOURS",
     "description": "6 hour monitor period (360 minutes)",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "EVERY_DAY",
     "description": "1 day monitor period (1440 minutes)",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "EVERY_HOUR",
     "description": "1 hour monitor period (60 minutes)",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "EVERY_MINUTE",
     "description": "1 minute monitor period",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AiNotificationsOAuthUrlResponse",
   "description": "OAuth URL response",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "error",
     "description": "OAuth response error",
     "type": {
      "name": "AiNotificationsResponseError",
      "kind": "OBJECT"
     }
    },
    {
     "name": "errors",
     "description": "Deprecated list of errors",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiNotificationsResponseError",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "transactionId",
     "description": "Transaction id to track OAuth flow with",
     "type": {
      "name": "ID",
      "kind": "SCALAR"
     }
    },
    {
     "name": "url",
     "description": "OAuth URL for the user",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "OrganizationUpdateResponse",
   "description": "The return object for an update mutation.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "errors",
     "description": "A description of any errors with the mutation.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "OrganizationError",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "organizationInformation",
     "description": "Information about the updated organization.",
     "type": {
      "name": "OrganizationInformation",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "Nr1CatalogSupportChannels",
   "description": "A container for the various support channels",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "community",
     "description": "A support channel available via the community",
     "type": {
      "name": "Nr1CatalogCommunityContactChannel",
      "kind": "OBJECT"
     }
    },
    {
     "name": "email",
     "description": "A support channel available via email",
     "type": {
      "name": "Nr1CatalogEmailContactChannel",
      "kind": "OBJECT"
     }
    },
    {
     "name": "issues",
     "description": "A support channel available via an issues page",
     "type": {
      "name": "Nr1CatalogIssuesContactChannel",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "EntitySearchQuery",
   "description": "A query string using Entity Search query syntax",
   "kind": "SCALAR"
  },
  {
   "name": "CloudGcpBigqueryIntegrationInput",
   "description": "BigQuery",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "fetchTableMetrics",
     "description": "Fetch BigQuery Table metrics, disabled by default",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "fetchTags",
     "description": "Specify if labels and the extended inventory should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "Nr1CatalogSearchComponentType",
   "description": "Possible component types to filter the search",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "ALERTS",
     "description": "Filter search results that contain alerts",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "APPS",
     "description": "Filter search results that contain apps",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "DASHBOARDS",
     "description": "Filter search results that contain dashboards",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "DATA_SOURCES",
     "description": "Filter search results that contain data sources",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "VISUALIZATIONS",
     "description": "Filter search results that contain visualizations",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AlertsNrqlConditionExpiration",
   "description": "Also known as **loss of signal**, these are settings for how violations are opened or closed when a signal expires.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "closeViolationsOnExpiration",
     "description": "Whether to close all open violations when the signal expires. Defaults to true.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "expirationDuration",
     "description": "The amount of time (in seconds) to wait before considering if the signal has been lost. Max value of 172800 (48 hours).",
     "type": {
      "name": "Seconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "ignoreOnExpectedTermination",
     "description": "Indicates whether an alert condition should ignore expected termination of a signal when considering whether to create a loss of signal incident. Defaults to false.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "openViolationOnExpiration",
     "description": "Whether to create a new \"lost signal\" violation to capture that the signal expired. Defaults to false.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "MultiTenantAuthorizationRoleScopeEnum",
   "description": "Enumerations of role scopes",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "ACCOUNT",
     "description": "Account scoped role",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "GROUP",
     "description": "Group scoped role",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "ORGANIZATION",
     "description": "Organization scoped role",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "EventsToMetricsDeleteRuleFailure",
   "description": "Error details about the events to metrics rule that failed to be deleted and why.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "errors",
     "description": "Information about why the delete failed.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EventsToMetricsError",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "submitted",
     "description": "Input information about a submitted rule that was unable to be deleted.",
     "type": {
      "name": "EventsToMetricsDeleteRuleSubmission",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "AiDecisionsRuleSource",
   "description": "Possible creation sources for rules.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "ADMIN",
     "description": "Created by ADMIN",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "GENERATED",
     "description": "Created by GENERATED",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SYSTEM",
     "description": "Created by SYSTEM",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "USER",
     "description": "Created by USER",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "OrganizationInformation",
   "description": "The attributes of an organization.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "id",
     "description": "The ID of the organization.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "The name of the organization.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "NerdStorageVaultWriteSecretInput",
   "description": "The data to be stored in NerdStorageVault.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "key",
     "description": "The unique identifier of the secret.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "value",
     "description": "The value of the secret.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SecureValue",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "LogConfigurationsGrokTestResult",
   "description": "The result of testing Grok on a log line.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "attributes",
     "description": "Any attributes that were extracted.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "LogConfigurationsGrokTestExtractedAttribute",
        "kind": "OBJECT"
       }
      }
     }
    },
    {
     "name": "logLine",
     "description": "The log line that was tested against.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "matched",
     "description": "Whether the Grok pattern matched.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "CloudGcpBigtableIntegrationInput",
   "description": "Bigtable",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "DataSourceGapsGapTypeIdentifier",
   "description": "The different types of data source gaps detectable by New Relic.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "APACHE",
     "description": "Apache",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "APM_AGENT_LOGS",
     "description": "APM agent logs",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "CASSANDRA",
     "description": "Cassandra",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "CONSUL",
     "description": "Consul",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "COUCHBASE",
     "description": "Couchbase",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "ELASTICSEARCH",
     "description": "Elasticsearch",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "GO",
     "description": "Go",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "HAPROXY",
     "description": "HAProxy",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "INFRA_LOGS",
     "description": "Infrastructure agent logs",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "JAVA",
     "description": "Java",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "JMX",
     "description": "JMX",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "MEMCACHED",
     "description": "Memcached",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "MICROSOFT_NET",
     "description": ".NET",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "MICROSOFT_SQL_SERVER",
     "description": "Microsoft SQL Server",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "MONGODB",
     "description": "MongoDB",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "MYSQL",
     "description": "MySQL",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NAGIOS",
     "description": "Nagios",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NGINX",
     "description": "NGINX",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NODE_JS",
     "description": "Node.js",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "PHP",
     "description": "PHP",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "PIXIE",
     "description": "Pixie",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "POSTGRESQL",
     "description": "PostgreSQL",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "PYTHON",
     "description": "Python",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "RABBITMQ",
     "description": "RabbitMQ",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "REDIS",
     "description": "Redis",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "RUBY",
     "description": "Ruby",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "VARNISH",
     "description": "Varnish",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AlertsNotificationChannelType",
   "description": "The type of the notification channel which determines its configuration field.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "CAMPFIRE",
     "description": "Campfire notification channel.",
     "isDeprecated": true,
     "deprecationReason": "This channel type is deprecated"
    },
    {
     "name": "EMAIL",
     "description": "Email notification channel.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "HIP_CHAT",
     "description": "HipChat notification channel.",
     "isDeprecated": true,
     "deprecationReason": "This channel type is deprecated"
    },
    {
     "name": "OPSGENIE",
     "description": "OpsGenie notification channel.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "PAGERDUTY",
     "description": "PagerDuty notification channel.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SLACK",
     "description": "Slack notification channel.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "USER",
     "description": "User notification channel.",
     "isDeprecated": true,
     "deprecationReason": "This channel type is deprecated"
    },
    {
     "name": "VICTOROPS",
     "description": "VictorOps notification channel.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "WEBHOOK",
     "description": "Webhook notification channel.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "XMATTERS",
     "description": "xMatters notification channel.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AgentApplicationSegmentsBrowserSegmentAllowListResult",
   "description": "The resulting allow list after the modifications have been made.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "entityGuid",
     "description": "The NR1 entity guid.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EntityGuid",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "segments",
     "description": "The aggregate result of the segments in the modified list or lists.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AgentApplicationSegmentsBrowserSegmentAllowListInput",
   "description": "The allow list that you would like to modify.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "segments",
     "description": "A case sensitive list of url segments. The list cannot exceed 8192 characters in total. Each segment must be less than 100 characters.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    }
   ]
  },
  {
   "name": "LogConfigurationsCreateParsingRuleResponse",
   "description": "The result after creating a new parsing rule.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "errors",
     "description": "List of errors, if any.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "LogConfigurationsParsingRuleMutationError",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "rule",
     "description": "The created parsing rule.",
     "type": {
      "name": "LogConfigurationsParsingRule",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "Nr1CatalogSubmitMetadataResult",
   "description": "Information about the mutation result when submitting metadata",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "errors",
     "description": "A list of errors that may have occurred as a result of submitting metadata",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Nr1CatalogSubmitMetadataError",
        "kind": "OBJECT"
       }
      }
     }
    },
    {
     "name": "nerdpack",
     "description": "The Nerdpack with updated information as a result of running the mutation",
     "type": {
      "name": "Nr1CatalogNerdpack",
      "kind": "OBJECT"
     }
    },
    {
     "name": "result",
     "description": "The mutation result when submitting metadata",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Nr1CatalogMutationResult",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "CustomerAdministration",
   "description": "The `CustomerAdministration` object contains fields for managing the configuration that defines the business relationships between New Relic, partners, and customers.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "accountShares",
     "description": "Accessible account shares",
     "type": {
      "name": "OrganizationAccountShareCollection",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "cursor",
       "description": "the cursor from the previous request, to get the next page",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "filter",
       "description": "The filter",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "OrganizationAccountShareFilterInput",
         "kind": "INPUT_OBJECT"
        }
       }
      },
      {
       "name": "sort",
       "description": "Sort account share results",
       "type": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "OrganizationAccountShareSortInput",
          "kind": "INPUT_OBJECT"
         }
        }
       }
      }
     ]
    },
    {
     "name": "accounts",
     "description": "accounts",
     "type": {
      "name": "OrganizationAccountCollection",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "cursor",
       "description": "the cursor from the previous request, to get the next page",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "filter",
       "description": "The filter",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "OrganizationAccountFilterInput",
         "kind": "INPUT_OBJECT"
        }
       }
      },
      {
       "name": "sort",
       "description": "Sort Accounts",
       "type": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "OrganizationAccountSortInput",
          "kind": "INPUT_OBJECT"
         }
        }
       }
      }
     ]
    },
    {
     "name": "authenticationDomains",
     "description": "Authentication domains",
     "type": {
      "name": "OrganizationAuthenticationDomainCollection",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "cursor",
       "description": "the cursor from the previous request, to get the next page",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "filter",
       "description": "Filter authentication domain results",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "OrganizationAuthenticationDomainFilterInput",
         "kind": "INPUT_OBJECT"
        }
       }
      },
      {
       "name": "sort",
       "description": "Order authentication domain results",
       "type": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "OrganizationAuthenticationDomainSortInput",
          "kind": "INPUT_OBJECT"
         }
        }
       }
      }
     ]
    },
    {
     "name": "consumption",
     "description": "The `consumption` field is the entry point into a customer's consumption data that is scoped to the ID of the customer.",
     "type": {
      "name": "Consumption",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "customerId",
       "description": "The ID of the customer.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "contracts",
     "description": "Accessible contracts",
     "type": {
      "name": "OrganizationCustomerContractWrapper",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "cursor",
       "description": "the cursor from the previous request, to get the next page",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "filter",
       "description": "The filter",
       "type": {
        "name": "OrganizationCustomerContractFilterInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "grants",
     "description": "list of grants",
     "type": {
      "name": "MultiTenantAuthorizationGrantCollection",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "cursor",
       "description": "the cursor from the previous request, to get   the next page",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "filter",
       "description": "allows filtering of the data",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "MultiTenantAuthorizationGrantFilterInputExpression",
         "kind": "INPUT_OBJECT"
        }
       }
      },
      {
       "name": "sort",
       "description": "allows sorting of the data",
       "type": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "MultiTenantAuthorizationGrantSortInput",
          "kind": "INPUT_OBJECT"
         }
        }
       }
      }
     ]
    },
    {
     "name": "groups",
     "description": "Named sets of New Relic users within an authentication domain",
     "type": {
      "name": "MultiTenantIdentityGroupCollection",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "cursor",
       "description": "the cursor from the previous request, to get     the next page",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "filter",
       "description": "Filter groups",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "MultiTenantIdentityGroupFilterInput",
         "kind": "INPUT_OBJECT"
        }
       }
      },
      {
       "name": "sort",
       "description": "Sort groups",
       "type": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "MultiTenantIdentityGroupSortInput",
          "kind": "INPUT_OBJECT"
         }
        }
       }
      }
     ]
    },
    {
     "name": "jobs",
     "description": "This provides access to fields you can use to check the status of asynchronous jobs related to customer administration.",
     "type": {
      "name": "CustomerAdministrationJobs",
      "kind": "OBJECT"
     }
    },
    {
     "name": "organizations",
     "description": "Accessible organizations",
     "type": {
      "name": "OrganizationCustomerOrganizationWrapper",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "cursor",
       "description": "the cursor from the previous request, to get the next page",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "filter",
       "description": "The filter",
       "type": {
        "name": "OrganizationCustomerOrganizationFilterInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "permissions",
     "description": "list of permissions",
     "type": {
      "name": "MultiTenantAuthorizationPermissionCollection",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "cursor",
       "description": "the cursor from the previous request, to get   the next page",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "filter",
       "description": "allows filtering of the data",
       "type": {
        "name": "MultiTenantAuthorizationPermissionFilter",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "roles",
     "description": "list of roles",
     "type": {
      "name": "MultiTenantAuthorizationRoleCollection",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "cursor",
       "description": "the cursor from the previous request, to get   the next page",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "filter",
       "description": "allows filtering of the data",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "MultiTenantAuthorizationRoleFilterInputExpression",
         "kind": "INPUT_OBJECT"
        }
       }
      },
      {
       "name": "sort",
       "description": "allows sorting of the data",
       "type": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "MultiTenantAuthorizationRoleSortInput",
          "kind": "INPUT_OBJECT"
         }
        }
       }
      }
     ]
    },
    {
     "name": "user",
     "description": "The authenticated `User` who made this request.",
     "type": {
      "name": "User",
      "kind": "OBJECT"
     }
    },
    {
     "name": "users",
     "description": "A collection of New Relic users",
     "type": {
      "name": "MultiTenantIdentityUserCollection",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "cursor",
       "description": "the cursor from the previous request, to get     the next page",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "filter",
       "description": "Filter users",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "MultiTenantIdentityUserFilterInput",
         "kind": "INPUT_OBJECT"
        }
       }
      },
      {
       "name": "sort",
       "description": "Sort users",
       "type": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "MultiTenantIdentityUserSortInput",
          "kind": "INPUT_OBJECT"
         }
        }
       }
      }
     ]
    }
   ]
  },
  {
   "name": "SyntheticsMonitorUpdateErrorType",
   "description": "Types of errors that can be returned from a Monitor mutation request",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "BAD_REQUEST",
     "description": "Received a request missing required fields or containing invalid data",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "INTERNAL_SERVER_ERROR",
     "description": "An unknown error occurred while processing request to mutate monitor",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NOT_FOUND",
     "description": "Monitor not found for given guid (monitor does not exist on account or has already been deleted)",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "PAYMENT_REQUIRED",
     "description": "Monitor update exceeds account subscription limits",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SCRIPT_ERROR",
     "description": "An error occurred while updating monitor script",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "TAGGING_ERROR",
     "description": "Monitor tags were not updated.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "UNAUTHORIZED",
     "description": "User does not have authorization to perform monitor mutation.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "UNKNOWN_ERROR",
     "description": "An unknown error occurred while processing request to update monitor",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "NrqlDropRulesDeleteDropRuleResult",
   "description": "The result of which drop rules were successfully and unsuccessfully deleted.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "failures",
     "description": "Rules that were not deleted and why.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "NrqlDropRulesDeleteDropRuleFailure",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "successes",
     "description": "Rules that were successfully deleted.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "NrqlDropRulesDropRule",
       "kind": "OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "OrganizationCreateOrganizationInput",
   "description": "Attributes belonging to the organization to create.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "name",
     "description": "The name for the new organization.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "UserManagementPendingUpgradeRequestInput",
   "description": "Available filtering types for pending upgrade requests",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "exists",
     "description": "Whether a request exists or not",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AlertsWebhookCustomPayloadType",
   "description": "Webhook custom payload type",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "FORM",
     "description": "FORM payload type",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "JSON",
     "description": "JSON payload type",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "ServiceLevelEventsQuerySelectCreateInput",
   "description": "The NRQL SELECT clause to aggregate events.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "attribute",
     "description": "The attribute used in the selected function. Only use it in combination with the SUM, GET_FIELD and GET_CDF_COUNT functions.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "function",
     "description": "The function to use in the SELECT clause.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ServiceLevelEventsQuerySelectFunction",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "threshold",
     "description": "The threshold used in the selected function. Only use it in combination with the GET_CDF_COUNT function.",
     "type": {
      "name": "Float",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "SyntheticsCustomHeader",
   "description": "Custom header for monitor jobs",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "name",
     "description": "Header name",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "value",
     "description": "Header value",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AccountManagementCreateResponse",
   "description": "The return object for a create-account mutation.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "managedAccount",
     "description": "Information about the newly created account.",
     "type": {
      "name": "AccountManagementManagedAccount",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "EntityRelationshipEntityDomainTypeFilter",
   "description": "Filter on entity domain-types.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "exclude",
     "description": "Filter the relationships to those between entities that are not of specific domain-types.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "DomainTypeInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    },
    {
     "name": "include",
     "description": "Filter the relationships to those between entities of specific domain-types.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "DomainTypeInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    }
   ]
  },
  {
   "name": "DashboardUpdatePageErrorType",
   "description": "Expected error types that can be returned by updatePage operation.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "FORBIDDEN_OPERATION",
     "description": "User is not allowed to execute the operation.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "INVALID_INPUT",
     "description": "Invalid input error.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "PAGE_NOT_FOUND",
     "description": "Page not found in the system.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "ServiceLevelObjectiveRollingTimeWindowUnit",
   "description": "The rolling time window units.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "DAY",
     "description": "Day.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "WorkloadEntityOutline",
   "description": "A workload entity outline.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "account",
     "type": {
      "name": "AccountOutline",
      "kind": "OBJECT"
     }
    },
    {
     "name": "accountId",
     "description": "The New Relic account ID associated with this entity.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "alertSeverity",
     "description": "The current alerting severity of the entity.",
     "type": {
      "name": "EntityAlertSeverity",
      "kind": "ENUM"
     }
    },
    {
     "name": "createdAt",
     "description": "When the workload was created.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "createdByUser",
     "description": "The user that created the workload.",
     "type": {
      "name": "UserReference",
      "kind": "OBJECT"
     }
    },
    {
     "name": "domain",
     "description": "The entity's domain",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "entityType",
     "description": "A value representing the combination of the entity's domain and type.",
     "type": {
      "name": "EntityType",
      "kind": "ENUM"
     }
    },
    {
     "name": "firstIndexedAt",
     "description": "The date of last time the entity has updated any of its fields.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "goldenMetrics",
     "description": "The list of golden metrics for a specific entity",
     "type": {
      "name": "EntityGoldenContextScopedGoldenMetrics",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden metrics",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "timeWindow",
       "description": "Time range to apply to the golden metric NRQL query result field",
       "type": {
        "name": "EntityGoldenNrqlTimeWindowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "goldenTags",
     "description": "The list of golden tags for a specific entityType.",
     "type": {
      "name": "EntityGoldenContextScopedGoldenTags",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden tags",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "guid",
     "description": "A unique entity identifier.",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    },
    {
     "name": "indexedAt",
     "description": "The time the entity was indexed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "lastReportingChangeAt",
     "description": "The last time the entity's reporting status changed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The name of this entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "permalink",
     "description": "The url to the entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "reporting",
     "description": "The reporting status of the entity. If New Relic is successfully collecting data from your application, this will be true.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "serviceLevel",
     "description": "The service level defined for the entity.",
     "type": {
      "name": "ServiceLevelDefinition",
      "kind": "OBJECT"
     }
    },
    {
     "name": "tags",
     "description": "The tags applied to the entity.\n\nFor details on tags, as well as query and mutation examples, visit [our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/graphql-tagging-api-tutorial).",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityTag",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "type",
     "description": "The entity's type",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "updatedAt",
     "description": "When the workload was last updated.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "workloadStatus",
     "description": "Status of the workload.",
     "type": {
      "name": "WorkloadStatus",
      "kind": "OBJECT"
     }
    }
   ],
   "interfaces": [
    {
     "name": "AlertableEntityOutline",
     "kind": "INTERFACE"
    },
    {
     "name": "EntityOutline",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "AiDecisionsRelativeFuzzyWuzzyTokenSetRatioInput",
   "description": "Input type for RelativeFuzzyWuzzyTokenSetRatio expression",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "left",
     "description": "Left operand of comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsIncidentObjectInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "minSimilarity",
     "description": "Minimum similarity threshold.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Float",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "right",
     "description": "Right operand of comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsIncidentObjectInput",
       "kind": "INPUT_OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "CloudAwsFsxIntegration",
   "description": "FSx Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "EntityGoldenMetricDefinition",
   "description": "The definition of the metric.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "eventId",
     "description": "The field used to filter the entity in the metric. This will be added to the WHERE by default.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "eventObjectId",
     "description": "Indicates if the eventId field references a GUID, a domainId or an entity name.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EntityGoldenEventObjectId",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "facet",
     "description": "The field to FACET by.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "from",
     "description": "The FROM clause of the query.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "select",
     "description": "The SELECT clause of the query.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "where",
     "description": "If a complementary WHERE clause is required to identify the entity type this field will contain it.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "Milliseconds",
   "description": "The `Milliseconds` scalar represents a duration in milliseconds",
   "kind": "SCALAR"
  },
  {
   "name": "ApiAccessUpdateIngestKeyInput",
   "description": "The `id` and data to update one or more keys.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "keyId",
     "description": "The `id` of the key you want to update.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "The name you want to assign to the key.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "notes",
     "description": "The notes you want to assign to the key.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "MultiTenantAuthorizationGrantScopeIdInputFilter",
   "description": "Filters on the grants scope id",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "eq",
     "description": "Performs an equals operation",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "in",
     "description": "Performs an in operation",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    }
   ]
  },
  {
   "name": "QueryHistoryActorStitchedFields",
   "description": "Type defined so its fields will be merged directly into NerdGraph's actor type.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "nrql",
     "description": "List of records of the query history for the current user.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "QueryHistoryNrqlHistoryResult",
        "kind": "OBJECT"
       }
      }
     },
     "args": [
      {
       "name": "options",
       "description": "Input options to select query records.",
       "type": {
        "name": "QueryHistoryQueryHistoryOptionsInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    }
   ]
  },
  {
   "name": "CloudGcpRouterIntegrationInput",
   "description": "Router",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "ThirdPartyServiceEntity",
   "description": "A third party service entity.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "account",
     "type": {
      "name": "AccountOutline",
      "kind": "OBJECT"
     }
    },
    {
     "name": "accountId",
     "description": "The New Relic account ID associated with this entity.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "alertSeverity",
     "description": "The current alerting severity of the entity.",
     "type": {
      "name": "EntityAlertSeverity",
      "kind": "ENUM"
     }
    },
    {
     "name": "alertViolations",
     "description": "Violations on the entity that were open during the specified time window. This will return up to 500 violations - if there are more in the time window selected, you must narrow the time window or look at fewer entities.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityAlertViolation",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "endTime",
       "description": "End of time window for violations.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EpochMilliseconds",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "startTime",
       "description": "Start of time window for violations.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EpochMilliseconds",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "deploymentSearch",
     "description": "Retrieve the deployment event(s). Ordered by timestamp DESC.",
     "type": {
      "name": "ChangeTrackingDeploymentSearchResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "filter",
       "description": "Contains the set of filters to apply to the query.",
       "type": {
        "name": "ChangeTrackingSearchFilter",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "domain",
     "description": "The entity's domain",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "entityType",
     "description": "A value representing the combination of the entity's domain and type.",
     "type": {
      "name": "EntityType",
      "kind": "ENUM"
     }
    },
    {
     "name": "firstIndexedAt",
     "description": "The date of last time the entity has updated any of its fields.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "goldenMetrics",
     "description": "The list of golden metrics for a specific entity",
     "type": {
      "name": "EntityGoldenContextScopedGoldenMetrics",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden metrics",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "timeWindow",
       "description": "Time range to apply to the golden metric NRQL query result field",
       "type": {
        "name": "EntityGoldenNrqlTimeWindowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "goldenTags",
     "description": "The list of golden tags for a specific entityType.",
     "type": {
      "name": "EntityGoldenContextScopedGoldenTags",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden tags",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "guid",
     "description": "A unique entity identifier.",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    },
    {
     "name": "indexedAt",
     "description": "The time the entity was indexed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "lastReportingChangeAt",
     "description": "The last time the entity's reporting status changed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The name of this entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nerdStorage",
     "type": {
      "name": "NerdStorageEntityScope",
      "kind": "OBJECT"
     }
    },
    {
     "name": "nrdbQuery",
     "description": "Make an `Entity` scoped query to NRDB with a NRQL string.\n\nA relevant `WHERE` clause will be added to your query to scope data to the entity in question.\n\nSee the [NRQL Docs](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/nrql-resources/nrql-syntax-components-functions) for more information about generating a query string.",
     "type": {
      "name": "NrdbResultContainer",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "async",
       "description": "When true, the query will begin asynchronous resolution after the allotted `timeout`. Include `queryProgress` fields in your GraphQL query to receive the information you will need to poll the `nrdbQueryProgress` field for the results of your async NRQL query.\n\nSee [this page](https://docs.newrelic.com/docs/apis/nerdgraph/examples/async-queries-nrql-tutorial) for additional asynchronous query documentation.",
       "type": {
        "name": "Boolean",
        "kind": "SCALAR"
       },
       "defaultValue": "false"
      },
      {
       "name": "nrql",
       "description": "The [NRQL](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/nrql-resources/nrql-syntax-components-functions) query string.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Nrql",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "options",
       "description": "Additional options for NRQL queries.",
       "type": {
        "name": "NrqlQueryOptions",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "timeout",
       "description": "The timeout we will apply to the NRQL Query. The value will be clamped to between 5 and 120 seconds and defaults to 5 seconds.\n\nFor `async` queries, if the query is still incomplete after this amount of time, resolution will become asynchronous and return `queryProgress` data if requested.",
       "type": {
        "name": "Seconds",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "nrdbQueryProgress",
     "description": "Poll for the results of a previously-executed asychronous NRDB query.\n\nThe `queryId` is available in the `queryProgress` data returned by the original asynchronous query.\n\nSee [this page](https://docs.newrelic.com/docs/apis/nerdgraph/examples/async-queries-nrql-tutorial) for additional asynchronous query documentation.",
     "type": {
      "name": "NrdbResultContainer",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "queryId",
       "description": "A token for retrieving the results of a previously executed asynchronous query.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "permalink",
     "description": "The url to the entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "recentAlertViolations",
     "description": "Recent violations on the entity.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityAlertViolation",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "count",
       "description": "The desired number of alert violations to be returned.",
       "type": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "relatedEntities",
     "description": "Related entities result with optional filtering.",
     "type": {
      "name": "EntityRelationshipRelatedEntitiesResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "cursor",
       "description": "The cursor to fetch paginated results.",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "filter",
       "description": "Apply an optional filter to the related entities.",
       "type": {
        "name": "EntityRelationshipEdgeFilter",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "limit",
       "description": "A limit to apply to the number of relationships returned. Note: this option can only lower the default limits (2000 relationships).",
       "type": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "relationships",
     "description": "A list of the entities' relationships.\n\nFor more information, visit [our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/graphql-relationships-api-tutorial).",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityRelationship",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "endTime",
       "description": "Return relationships as they existed in the past. The duration of the time window queried is fixed at 75 minutes.",
       "type": {
        "name": "EpochMilliseconds",
        "kind": "SCALAR"
       }
      },
      {
       "name": "filter",
       "description": "Apply an optional filter to the relationships.",
       "type": {
        "name": "EntityRelationshipFilter",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "reporting",
     "description": "The reporting status of the entity. If New Relic is successfully collecting data from your application, this will be true.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "serviceLevel",
     "description": "The service level defined for the entity.",
     "type": {
      "name": "ServiceLevelDefinition",
      "kind": "OBJECT"
     }
    },
    {
     "name": "tags",
     "description": "The tags applied to the entity.\n\nFor details on tags, as well as query and mutation examples, visit [our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/graphql-tagging-api-tutorial).",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityTag",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "tagsWithMetadata",
     "description": "The tags applied to the entity with their metadata.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityTagWithMetadata",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "tracingSummary",
     "description": "Look up Distributed Tracing summary data for the selected `EntityGuid`",
     "type": {
      "name": "DistributedTracingEntityTracingSummary",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "timeWindow",
       "description": "The start and end of the tracing data. Defaults to the last 30 minutes",
       "type": {
        "name": "TimeWindowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "type",
     "description": "The entity's type",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ],
   "interfaces": [
    {
     "name": "AlertableEntity",
     "kind": "INTERFACE"
    },
    {
     "name": "Entity",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "EdgeDataSourceGroup",
   "description": "A group of data sources that are associated with this trace observer.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "dataSources",
     "description": "The list of data sources in this group.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EdgeDataSource",
         "kind": "OBJECT"
        }
       }
      }
     }
    }
   ]
  },
  {
   "name": "CloudRoute53IntegrationInput",
   "description": "Amazon Route 53",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "fetchExtendedInventory",
     "description": "Determine if extra inventory data be collected or not. May affect total data collection time and contribute to the Cloud provider API rate limit.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "SyntheticsDateWindowEndOutput",
   "description": "Configuration options for when a monitor downtime should end",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "onDate",
     "description": "End the monitor downtime on a particular date",
     "type": {
      "name": "Date",
      "kind": "SCALAR"
     }
    },
    {
     "name": "onRepeat",
     "description": "End the monitor downtime after a set number of occurrences",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AiDecisionsRelativeLessThanOrEqualInput",
   "description": "Input type for RelativeLessThanOrEqual expression",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "left",
     "description": "Left operand of comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsIncidentObjectInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "right",
     "description": "Right operand of comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsIncidentObjectInput",
       "kind": "INPUT_OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "CloudAzureServicebusIntegration",
   "description": "Service Bus Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "resourceGroups",
     "description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "OrganizationContractCustomerIdInputFilter",
   "description": "Provides all the available filters on the customer id",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "eq",
     "description": "performs an equals operation",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "MultiTenantIdentityPendingUpgradeRequest",
   "description": "Exists only if a user has a pending upgrade request.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "id",
     "description": "a value that uniquely identifies this object",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "message",
     "description": "Requester message, why the user believes they require the upgrade.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "requestedUserType",
     "description": "Requested user type for the user.",
     "type": {
      "name": "MultiTenantIdentityUserType",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "EntitySearchQueryBuilderDomain",
   "description": "The domain to search",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "APM",
     "description": "Any APM entity",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "BROWSER",
     "description": "Any Browser entity",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "EXT",
     "description": "Any External entity",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "INFRA",
     "description": "Any Infrastructure entity",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "MOBILE",
     "description": "Any Mobile entity",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SYNTH",
     "description": "Any Synthetics entity",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "CloudGcpComposerIntegrationInput",
   "description": "Composer",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "StackTraceBrowserStackTrace",
   "description": "A structured representation of a stack trace for a Browser application.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "frames",
     "description": "Stack trace frames.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "StackTraceBrowserStackTraceFrame",
       "kind": "OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "CloudGcpFirebasestorageIntegrationInput",
   "description": "Firebase Storage",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "MultiTenantIdentityGroup",
   "description": "For users on our New Relic One user model, a \"group\" represents a group of users. Putting users in a group allows the managing of permissions for multiple users at the same time.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "authenticationDomainId",
     "description": "The authentication domain the group belongs to",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "a value that uniquely identifies this object",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "the name of the object",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "users",
     "description": "Active users belonging to a group",
     "type": {
      "name": "MultiTenantIdentityGroupUsers",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "cursor",
       "description": "the cursor from the previous request, to get     the next page",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "filter",
       "description": "Filter group users",
       "type": {
        "name": "MultiTenantIdentityGroupUserFilterInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    }
   ]
  },
  {
   "name": "DashboardUpdatePageResult",
   "description": "Result of updatePage operation.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "errors",
     "description": "Expected errors while processing request. No errors means successful request.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "DashboardUpdatePageError",
       "kind": "OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "BrowserApplicationSummaryData",
   "description": "Summary statistics about the Browser App.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "ajaxRequestThroughput",
     "description": "The number of AJAX requests per minute",
     "type": {
      "name": "Float",
      "kind": "SCALAR"
     }
    },
    {
     "name": "ajaxResponseTimeAverage",
     "description": "The average AJAX response time in seconds.",
     "type": {
      "name": "Seconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "jsErrorRate",
     "description": "The percentage of page views with a JS error.",
     "type": {
      "name": "Float",
      "kind": "SCALAR"
     }
    },
    {
     "name": "pageLoadThroughput",
     "description": "The number of page loads per minute",
     "type": {
      "name": "Float",
      "kind": "SCALAR"
     }
    },
    {
     "name": "pageLoadTimeAverage",
     "description": "The average page view time in seconds.",
     "type": {
      "name": "Float",
      "kind": "SCALAR"
     }
    },
    {
     "name": "pageLoadTimeMedian",
     "description": "The median page view time in seconds.",
     "type": {
      "name": "Float",
      "kind": "SCALAR"
     }
    },
    {
     "name": "spaResponseTimeAverage",
     "description": "The average SPA response time in seconds.",
     "type": {
      "name": "Seconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "spaResponseTimeMedian",
     "description": "The median SPA response time in seconds.",
     "type": {
      "name": "Seconds",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "CloudAzureEventhubIntegration",
   "description": "Event Hub Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "resourceGroups",
     "description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "IncidentIntelligenceEnvironmentConsentAuthorizedAccounts",
   "description": "Consent all the user's authorized accounts for the Incident Intelligence product for EU or FedRAMP",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "consentedAccounts",
     "description": "The list of accounts marked with consent",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "IncidentIntelligenceEnvironmentConsentedAccount",
        "kind": "OBJECT"
       }
      }
     }
    },
    {
     "name": "result",
     "description": "The outcome of the consent marking",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "IncidentIntelligenceEnvironmentConsentAccountsResult",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "EdgeDeleteTraceObserverResponseErrorType",
   "description": "Known error codes and messages for `DeleteTraceObserverResponseError`.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "ALREADY_DELETED",
     "description": "The trace observer has already been deleted.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NOT_FOUND",
     "description": "No trace observer was found with the id given.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AiWorkflowsNrqlConfiguration",
   "description": "NRQL enrichment configuration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "query",
     "description": "NRQL query",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AiDecisionsFixedLevenshteinInput",
   "description": "Input type for FixedLevenshtein expression",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "incident",
     "description": "Incident selector to be used in comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsIncidentObjectInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "maxDistance",
     "description": "Maximum distance threshold.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "value",
     "description": "Value to be used in comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "DashboardWidgetVisualization",
   "description": "Visualization configuration.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "id",
     "description": "This field can either have a known type like `viz.area` or `\u003cnerdpack-id\u003e.\u003cvisualization-id\u003e` in the case of custom visualizations.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "EntitySearchResult",
   "description": "A section of the entity search results. If there is a `nextCursor` present, there are more results available.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "entities",
     "description": "The entities contained in this section of the entity search results.\n\nFor information on New Relic entities, visit [our docs](https://docs.newrelic.com/docs/what-are-new-relic-entities).\n\nTo see some query examples of entity information,\nvisit [our entity GraphQL API docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/use-new-relic-graphql-api-query-entities).",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityOutline",
       "kind": "INTERFACE"
      }
     }
    },
    {
     "name": "nextCursor",
     "description": "The next cursor for fetching additional paginated entity search results.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "UserManagementUserIdInput",
   "description": "Available filtering types for user IDs",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "eq",
     "description": "A user ID",
     "type": {
      "name": "ID",
      "kind": "SCALAR"
     }
    },
    {
     "name": "in",
     "description": "An array of user IDs",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    }
   ]
  },
  {
   "name": "CrossAccountNrdbResultContainer",
   "description": "A data structure that contains the results of the multi account NRDB query along\nwith other capabilities that enhance those results.\n\nDirect query results are available through `results`, `totalResult` and\n`otherResult`. The query you made is accessible through `nrql`, along with\n`metadata` about the query itself.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "currentResults",
     "description": "In a `COMPARE WITH` query, the `currentResults` contain the results for the current comparison time window.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "NrdbResult",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metadata",
     "description": "Metadata about the query and result.",
     "type": {
      "name": "NrdbMetadata",
      "kind": "OBJECT"
     }
    },
    {
     "name": "nrql",
     "description": "The [NRQL](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/nrql-resources/nrql-syntax-components-functions) query that was executed to yield these results.",
     "type": {
      "name": "Nrql",
      "kind": "SCALAR"
     }
    },
    {
     "name": "otherResult",
     "description": "In a `FACET` query, the `otherResult` contains the aggregates representing the events _not_\ncontained in an individual `results` facet.",
     "type": {
      "name": "NrdbResult",
      "kind": "SCALAR"
     }
    },
    {
     "name": "previousResults",
     "description": "In a `COMPARE WITH` query, the `previousResults` contain the results for the previous comparison time window.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "NrdbResult",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "queryProgress",
     "description": "Metadata about the execution of an asynchronous NRQL query.",
     "type": {
      "name": "NrdbQueryProgress",
      "kind": "OBJECT"
     }
    },
    {
     "name": "rawResponse",
     "description": "The raw query results exactly as they are returned from NRDB. NerdGraph provides no additional transformation.",
     "type": {
      "name": "NrdbRawResults",
      "kind": "SCALAR"
     }
    },
    {
     "name": "results",
     "description": "The query results. This is a flat list of objects who's structure matches the query submitted.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "NrdbResult",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "totalResult",
     "description": "In a `FACET` query, the `totalResult` contains the aggregates representing _all_ the events,\nwhether or not they are contained in an individual `results` facet.",
     "type": {
      "name": "NrdbResult",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AlertsNrqlConditionOutlierInput",
   "description": "Input for creating an outlier NRQL condition.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "description",
     "description": "The custom violation description.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "enabled",
     "description": "Whether the NRQL condition is enabled.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "expectedGroups",
     "description": "Number of groups expected in the returned values for the condition.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "expiration",
     "description": "Also known as **loss of signal**, these are settings for how violations are opened or closed when a signal expires.",
     "type": {
      "name": "AlertsNrqlConditionExpirationInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "name",
     "description": "Name of the NRQL condition.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "nrql",
     "description": "The NRQL query that defines the signal for the condition.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsNrqlConditionQueryInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "openViolationOnGroupOverlap",
     "description": "Whether overlapping groups should produce a violation.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "runbookUrl",
     "description": "Runbook URL.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "signal",
     "description": "Configuration that defines the signal that the NRQL condition will use to evaluate.",
     "type": {
      "name": "AlertsNrqlConditionSignalInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "terms",
     "description": "List of critical and warning terms for the condition.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AlertsNrqlDynamicConditionTermsInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "titleTemplate",
     "description": "This field allows you to create a custom title to be used when incidents are opened by the condition. Setting this field will override the default title. Must be [Handlebars format](https://handlebarsjs.com/guide/).",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "violationTimeLimit",
     "description": "Deprecated - use violationTimeLimitSeconds for full range of values.\n\nDuration after which a violation automatically closes. Default is THIRTY_DAYS.",
     "type": {
      "name": "AlertsViolationTimeLimit",
      "kind": "ENUM"
     }
    },
    {
     "name": "violationTimeLimitSeconds",
     "description": "Duration after which a violation automatically closes in seconds.\nAccepts values between 300 seconds (5 minutes) and 2592000 seconds (30 days).\n\nDefault is 3 days (259200 seconds).",
     "type": {
      "name": "Seconds",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AiWorkflowsWorkflow",
   "description": "Workflow object",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "accountId",
     "description": "Account Id of this Workflow",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "createdAt",
     "description": "The time this workflow was created",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "DateTime",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "destinationConfigurations",
     "description": "Specifies where to send the notifications",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiWorkflowsDestinationConfiguration",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "destinationsEnabled",
     "description": "Are Destinations enabled",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "enrichments",
     "description": "List of enrichments that are attached to the notifications",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiWorkflowsEnrichment",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "enrichmentsEnabled",
     "description": "Are Enrichments enabled",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "guid",
     "description": "Entity Id of the workflow",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EntityGuid",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "Workflow Id",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "issuesFilter",
     "description": "Specifies which issues the workflow will handle",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiWorkflowsFilter",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "lastRun",
     "description": "Last time a notification was sent regarding this workflow",
     "type": {
      "name": "DateTime",
      "kind": "SCALAR"
     }
    },
    {
     "name": "mutingRulesHandling",
     "description": "Describes how to handle muted issues",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiWorkflowsMutingRulesHandling",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "name",
     "description": "Name of the Workflow",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "updatedAt",
     "description": "The time this workflow was updated",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "DateTime",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "workflowEnabled",
     "description": "Is Workflow enabled",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "CloudAwsGovcloudDisableIntegrationsInput",
   "description": "List of integrations",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "alb",
     "description": "ALB/NLB integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "apigateway",
     "description": "API Gateway integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "autoscaling",
     "description": "AutoScaling integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "awsDirectconnect",
     "description": "Direct Connect integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "awsStates",
     "description": "Step Functions integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "cloudtrail",
     "description": "CloudTrail integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "dynamodb",
     "description": "DynamoDB integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "ebs",
     "description": "EBS integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "ec2",
     "description": "EC2 integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "elasticsearch",
     "description": "Elasticsearch Service integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "elb",
     "description": "ELB (Classic) integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "emr",
     "description": "EMR integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "iam",
     "description": "IAM integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "lambda",
     "description": "Lambda integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "rds",
     "description": "RDS integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "redshift",
     "description": "Redshift integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "route53",
     "description": "Route 53 integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "s3",
     "description": "S3 integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "sns",
     "description": "SNS integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "sqs",
     "description": "SQS integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "AiWorkflowsDeleteWorkflowResponse",
   "description": "Delete workflow mutation response including errors",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "errors",
     "description": "A list of errors that occurred while performing the delete workflow action",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiWorkflowsDeleteResponseError",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "id",
     "description": "Id of the successfully deleted workflow",
     "type": {
      "name": "ID",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "MetricNormalizationRuleErrorType",
   "description": "The different types of errors the API can return.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "CREATION_ERROR",
     "description": "Creation Error.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "EDITION_ERROR",
     "description": "Edition Error.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "RULE_NOT_FOUND",
     "description": "Rule does not exist.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "VALIDATION_ERROR",
     "description": "Validation error",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "Nr1CatalogVisualization",
   "description": "Information about a visualization in a Nerdpack",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "id",
     "description": "The unique identifier for the visualization.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metadata",
     "description": "Metadata associated with the visualization",
     "type": {
      "name": "Nr1CatalogVisualizationMetadata",
      "kind": "OBJECT"
     }
    }
   ],
   "interfaces": [
    {
     "name": "Nr1CatalogNerdpackItem",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "CloudAccountMutationError",
   "description": "Account Mutation Error",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "linkedAccountId",
     "description": "The passed linked account identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "message",
     "description": "The error message.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "nrAccountId",
     "description": "The passed newrelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "providerSlug",
     "description": "The passed provider slug.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "type",
     "description": "The error status.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "SystemIdentityType",
   "description": "A non user system identity",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "clientId",
     "description": "The client id of the system identity",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The id of the system identity",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "The name of the system identity",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "organizationId",
     "description": "The id of the organization the system identity belongs to",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "publicKey",
     "description": "The public key of the system identity",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "CloudSesIntegration",
   "description": "SES Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "Nr1CatalogQuickstartDocumentationMetadata",
   "description": "Metadata associated with the documentation component in a quickstart",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "description",
     "description": "A short form description for the documentation component.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "displayName",
     "description": "The human-readable name for the documentation component.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "url",
     "description": "The documentation URL",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "Nr1CatalogQuickstartComponentMetadata",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "SyntheticsDeviceEmulationInput",
   "description": "Information related to device browser emulation",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "deviceOrientation",
     "description": "The device orientation the user would like to represent",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SyntheticsDeviceOrientation",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "deviceType",
     "description": "The device type that a user can select",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SyntheticsDeviceType",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "CloudAwsKinesisanalyticsIntegrationInput",
   "description": "Kinesis Data Analytics",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AuthorizationManagementRevokeAccessPayload",
   "description": "Autogenerated return type of RevokeAccess",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "roles",
     "description": "the roles that were revoked from this group",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AuthorizationManagementGrantedRole",
         "kind": "OBJECT"
        }
       }
      }
     }
    }
   ]
  },
  {
   "name": "AiTopologyCollectorVertexBlueprint",
   "description": "Blueprint for vertex creation.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "definingAttributes",
     "description": "Attributes to define the vertex.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiTopologyCollectorAttributeInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "name",
     "description": "The name of the vertex.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "vertexClass",
     "description": "The class of the vertex.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiTopologyCollectorVertexClass",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "AiNotificationsSchema",
   "description": "Channel schema object",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "fields",
     "description": "Possible fields for the channel",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiNotificationsSchemaField",
         "kind": "OBJECT"
        }
       }
      }
     }
    }
   ]
  },
  {
   "name": "SyntheticsBrokenLinksMonitorCreateMutationResult",
   "description": "The result of a Broken Links monitor create mutation",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "errors",
     "description": "Errors that occurred during Broken Links monitor create mutation",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "name": "SyntheticsMonitorCreateError",
        "kind": "OBJECT"
       }
      }
     }
    },
    {
     "name": "monitor",
     "description": "The resulting Broken Links monitor",
     "type": {
      "name": "SyntheticsBrokenLinksMonitor",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "ErrorsInboxResourceFilterInput",
   "description": "Criteria for the resource filter",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "types",
     "description": "Types of resources to include in the query",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ErrorsInboxResourceType",
        "kind": "ENUM"
       }
      }
     }
    }
   ]
  },
  {
   "name": "CloudRedshiftIntegration",
   "description": "Redshift Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "tagKey",
     "description": "Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "tagValue",
     "description": "Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "AiDecisionsRelativeRegularExpressionInput",
   "description": "Input type for RelativeRegularExpression expression",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "left",
     "description": "Left operand of comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsIncidentObjectInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "right",
     "description": "Right operand of comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsIncidentObjectInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "value",
     "description": "Value to be used in comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "DataManagementFeatureSettingLookup",
   "description": "Input object to lookup a feature setting",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "key",
     "description": "Key of the feature setting",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "UserManagementDeleteGroupPayload",
   "description": "Autogenerated return type of DeleteGroup.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "group",
     "description": "The group that was deleted",
     "type": {
      "name": "UserManagementGroup",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "AiIssuesIssueUserActionResponse",
   "description": "Response for user action",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "error",
     "description": "Error, if any",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "result",
     "description": "User operation performed with an issue",
     "type": {
      "name": "AiIssuesIssueUserActionResult",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "Nr1CatalogQuickstartInstallPlan",
   "description": "Information about an install plan component in a quickstart",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "metadata",
     "description": "Metadata associated with the install plan",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Nr1CatalogQuickstartInstallPlanMetadata",
       "kind": "OBJECT"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "Nr1CatalogQuickstartComponent",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "CloudGcpDatastoreIntegrationInput",
   "description": "Datastore",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AiIssuesFilterIncidents",
   "description": "Filter incidents",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "entityGuids",
     "description": "entityGuids",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "entityTypes",
     "description": "entityTypes",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "ids",
     "description": "ids",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "priority",
     "description": "priority",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "states",
     "description": "states",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AiIssuesIncidentState",
        "kind": "ENUM"
       }
      }
     }
    }
   ]
  },
  {
   "name": "AgentApplicationBrowserLoader",
   "description": "Determines which browser loader will be configured. There are three browser loader types. They are Pro+SPA, Pro, and Lite.\nSee [documentation](https://docs.newrelic.com/docs/browser/browser-monitoring/installation/install-browser-monitoring-agent/#agent-types) for further information.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "FULL",
     "description": "Use PRO instead.",
     "isDeprecated": true,
     "deprecationReason": "Browsers which historically had the FULL loader will now return PRO as the loader type."
    },
    {
     "name": "LITE",
     "description": "Lite: Gives you information about some basic page load timing and browser user information. Lacks the Browser Pro features and SPA features.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NONE",
     "description": "Don't use an agent.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "PRO",
     "description": "Pro: Gives you access to the Browser Pro features. Lacks the functionality designed for single page app monitoring.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SPA",
     "description": "Pro+SPA: This is the default installed agent when you enable browser monitoring. Gives you access to all of the Browser Pro features and to Single Page App (SPA) monitoring. Provides detailed page timing data and the most up-to-date New Relic features, including distributed tracing, for all types of applications.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "MobilePushNotificationActorStitchedFields",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "devices",
     "description": "A list of mobile devices the user has registered for push notifications.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "MobilePushNotificationDevice",
       "kind": "OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "OrganizationOrganizationAccountIdInputFilter",
   "description": "Provides all the available filters on the account id",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "eq",
     "description": "performs an equals operation",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "ChangeTrackingValidationFlag",
   "description": "Validation flags to determine how we handle input data.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "FAIL_ON_FIELD_LENGTH",
     "description": "Will validate all string fields to be within max size limit. An error is returned and data is not saved if any of the fields exceeds max size limit.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "FAIL_ON_REST_API_FAILURES",
     "description": "For APM entities, a call is made to the legacy New Relic v2 REST API. When this flag is set, if the call fails for any reason, an error will be returned containing the failure message.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AiWorkflowsFilterType",
   "description": "Type of Filter",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "FILTER",
     "description": "Standard Filter type",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "VIEW",
     "description": "View Filter type",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "MultiTenantAuthorizationPermissionFilter",
   "description": "Provides all the available filters on permissions",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "roleId",
     "description": "Filter permissions by role id",
     "type": {
      "name": "MultiTenantAuthorizationPermissionFilterRoleIdInput",
      "kind": "INPUT_OBJECT"
     }
    }
   ]
  },
  {
   "name": "CloudAzureApimanagementIntegrationInput",
   "description": "Api Management",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "resourceGroups",
     "description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "NerdpackSubscriptionModel",
   "description": "Type that define the rules for account subscription.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "CORE",
     "description": "Product nerdpacks displayed to everybody, no subscription required .",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "GLOBAL",
     "description": "Any NR user can subscribe to the nerdpack.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "OWNER_AND_ALLOWED",
     "description": "Only owner, master and allowed accounts can subscribe to the nerdpack.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "ChangeTrackingTimeWindowInputWithDefaults",
   "description": "A time window input with default values.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "endTime",
     "description": "The end time of the time window. If not specified, it defaults to the current time.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "startTime",
     "description": "The start time of the time window. If not specified, it defaults to 60 minutes before the endTime.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "CloudAzureAppgatewayIntegration",
   "description": "App Gateway Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "resourceGroups",
     "description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "IncidentIntelligenceEnvironmentUserNotCapableToOperateOnAccount",
   "description": "The user is not capable to perform an operation on this account",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "accountId",
     "description": "The account id the user is not capable to perform the operation on",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "capability",
     "description": "The capability the user is missing",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AgentApplicationSettingsErrorCollectorHttpStatus",
   "description": "A list of HTTP status codes, such as \"404\" or \"500.\"",
   "kind": "SCALAR"
  },
  {
   "name": "SyntheticsMonitorDowntimeDayOfMonthOrdinal",
   "description": "enum of which day in the month a customer can have a monitor downtime run",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "FIRST",
     "description": "First selected day of the month",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "FOURTH",
     "description": "Fourth selected day of the month",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "LAST",
     "description": "Last selected day of the month",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SECOND",
     "description": "Second selected day of the month",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "THIRD",
     "description": "Third selected day of the month",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "UserManagementAuthenticationDomain",
   "description": "An \"authentication domain\" is a grouping of New Relic users governed by the same user management settings, like how they're provisioned (added and updated), how they're authenticated (logged in), session settings, and how user upgrades are managed.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "groups",
     "description": "container for groups enabling cursor based pagination",
     "type": {
      "name": "UserManagementGroups",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "cursor",
       "description": "the cursor from the previous request, to get     the next page",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "filter",
       "description": "Filter groups",
       "type": {
        "name": "UserManagementGroupFilterInput",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "id",
       "description": "a list of ids to filter returned objects by\n\n(NOTICE: setting both this argument and the filter argument to filter by ID is not allowed)\n\n(NOTICE: this argument will be deprecated at a later date, so please use the filter argument to return users by ID)",
       "type": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "ID",
          "kind": "SCALAR"
         }
        }
       }
      },
      {
       "name": "sort",
       "description": "Sort groups",
       "type": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "UserManagementGroupSortInput",
          "kind": "INPUT_OBJECT"
         }
        }
       },
       "defaultValue": "[]"
      }
     ]
    },
    {
     "name": "id",
     "description": "a value that uniquely identifies this object",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "the name of the object",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "provisioningType",
     "description": "the method used to provision users in this authentication domain",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "users",
     "description": "container for users enabling cursor based pagination",
     "type": {
      "name": "UserManagementUsers",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "cursor",
       "description": "the cursor from the previous request, to get     the next page",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "filter",
       "description": "Filter users",
       "type": {
        "name": "UserManagementUserFilterInput",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "id",
       "description": "a list of ids to filter returned objects by\n\n(NOTICE: setting both this argument and the filter argument to filter by ID is not allowed)\n\n(NOTICE: this argument will be deprecated at a later date, so please use the filter argument to return users by ID)",
       "type": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "ID",
          "kind": "SCALAR"
         }
        }
       }
      }
     ]
    }
   ]
  },
  {
   "name": "EntityRelationshipEdgeType",
   "description": "The type of the relationship.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "BUILT_FROM",
     "description": "The target entity contains the code for the source entity.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "CALLS",
     "description": "The source entity calls the target entity.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "CONNECTS_TO",
     "description": "The source entity has a connection to the target entity.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "CONSUMES",
     "description": "The source entity consumes messages from a target kafka topic or other queue systems.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "CONTAINS",
     "description": "The source entity contains the target entity.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "HOSTS",
     "description": "The source entity hosts the target.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "IS",
     "description": "The source and target entities are perspectives on the same thing.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "MANAGES",
     "description": "The source entity manages the target, that represents a subsystem of the source.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "MEASURES",
     "description": "The source entity is used to measure the target entity.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "MONITORS",
     "description": "The source entity monitors the target entity.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "OPERATES_IN",
     "description": "The source operates in the target entity, e.g. a region or a data center.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "OWNS",
     "description": "The source entity owns the target entity.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "PRODUCES",
     "description": "The source entity produces messages to a target kafka topic or other queue systems.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SERVES",
     "description": "The source is an Application that serves the target Browser application.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "TRIGGERS",
     "description": "The source entity initiates an action in the target entity.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "SyntheticsCreateBrokenLinksMonitorInput",
   "description": "The monitor input values needed to create a Broken Links monitor",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "apdexTarget",
     "description": "The monitor's Apdex target used to populate SLA reports",
     "type": {
      "name": "Float",
      "kind": "SCALAR"
     }
    },
    {
     "name": "locations",
     "description": "The locations the monitor will run from",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SyntheticsLocationsInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "name",
     "description": "The human readable identifier for the monitor",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "period",
     "description": "The interval at which the monitor runs in minutes",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SyntheticsMonitorPeriod",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "runtime",
     "description": "The runtime that the monitor will use to run jobs. The only accepted values are runtimeType: NODE_API \u0026 runtimeTypeVersion: 16.10",
     "type": {
      "name": "SyntheticsExtendedTypeMonitorRuntimeInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "status",
     "description": "The run state of the monitor",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SyntheticsMonitorStatus",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "tags",
     "description": "The tags that will be associated with the monitor",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "SyntheticsTag",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "uri",
     "description": "The uri the monitor runs against",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "CloudAwsFsxIntegrationInput",
   "description": "FSx",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "SyntheticsMonitorDeleteMutationResult",
   "description": "The result of a monitor delete mutation",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "deletedGuid",
     "description": "The unique identifier of the deleted monitor",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AlertsNrqlConditionUpdateStaticInput",
   "description": "Input for updating a static NRQL condition.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "description",
     "description": "The custom violation description.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "enabled",
     "description": "Whether the NRQL condition is enabled.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "expiration",
     "description": "Also known as **loss of signal**, these are settings for how violations are opened or closed when a signal expires.",
     "type": {
      "name": "AlertsNrqlConditionExpirationInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "name",
     "description": "Name of the NRQL condition.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrql",
     "description": "The NRQL query that defines the signal for the condition.",
     "type": {
      "name": "AlertsNrqlConditionUpdateQueryInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "runbookUrl",
     "description": "Runbook URL.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "signal",
     "description": "Configuration that defines the signal that the NRQL condition will use to evaluate.",
     "type": {
      "name": "AlertsNrqlConditionSignalInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "terms",
     "description": "List of critical and warning terms for the condition.\n\nTerms are required in most cases. For conditions with a loss of signal threshold only, terms can be blank.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AlertsNrqlConditionTermsInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    },
    {
     "name": "titleTemplate",
     "description": "This field allows you to create a custom title to be used when incidents are opened by the condition. Setting this field will override the default title. Must be [Handlebars format](https://handlebarsjs.com/guide/).",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "valueFunction",
     "description": "Deprecated - use `signal.slideBy` instead.\n\nFunction used to aggregate the NRQL query value(s) for comparison to the `terms.threshold`. When the result of this aggregate surpasses the `terms.threshold`, a violation is opened.",
     "type": {
      "name": "AlertsNrqlStaticConditionValueFunction",
      "kind": "ENUM"
     }
    },
    {
     "name": "violationTimeLimit",
     "description": "Deprecated - use violationTimeLimitSeconds for full range of values.\n\nDuration after which a violation automatically closes. Default is THIRTY_DAYS.",
     "type": {
      "name": "AlertsViolationTimeLimit",
      "kind": "ENUM"
     }
    },
    {
     "name": "violationTimeLimitSeconds",
     "description": "Duration after which a violation automatically closes in seconds.\nAccepts values between 300 seconds (5 minutes) and 2592000 seconds (30 days).\n\nDefault is 3 days (259200 seconds).",
     "type": {
      "name": "Seconds",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AccountOutline",
   "description": "The `AccountOutline` object provides basic data about an account.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "id",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "reportingEventTypes",
     "description": "Returns event types that are currently reporting in the account.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     "args": [
      {
       "name": "filter",
       "description": "Filter results to a chosen set of event types.",
       "type": {
        "kind": "LIST",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "timeWindow",
       "type": {
        "name": "TimeWindowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    }
   ]
  },
  {
   "name": "CloudElasticacheIntegration",
   "description": "ElastiCache Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "fetchTags",
     "description": "Specify if tags should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "tagKey",
     "description": "Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "tagValue",
     "description": "Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "AgentApplicationSettingsNetworkFilterMode",
   "description": "Configuration setting to apply either the show or hide strategy for network filtering.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "DISABLED",
     "description": "Disables both show and hide confurations.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "HIDE",
     "description": "Use the hide list configuration.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SHOW",
     "description": "Use the show list configuration.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AiNotificationsUiComponentType",
   "description": "UI component type",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "BUTTON",
     "description": "Button component",
     "isDeprecated": true,
     "deprecationReason": "unused component type"
    },
    {
     "name": "DICTIONARY_WITH_MASK",
     "description": "Dictionary type component",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "PAYLOAD",
     "description": "Handlebars powered payload editor",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SELECT",
     "description": "Select component",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "TEXT_AREA",
     "description": "Multiline text box",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "TEXT_FIELD",
     "description": "Single line text field",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "TOGGLE",
     "description": "Toggle component",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AiDecisionsRelativeFuzzyWuzzyPartialRatioInput",
   "description": "Input type for RelativeFuzzyWuzzyPartialRatio expression",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "left",
     "description": "Left operand of comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsIncidentObjectInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "minSimilarity",
     "description": "Minimum similarity threshold.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Float",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "right",
     "description": "Right operand of comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsIncidentObjectInput",
       "kind": "INPUT_OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "CloudEfsIntegrationInput",
   "description": "Amazon Elastic File System (EFS)",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "fetchTags",
     "description": "Specify if tags should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "tagKey",
     "description": "Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "tagValue",
     "description": "Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "OrganizationAuthenticationDomainFilterInput",
   "description": "A filter for authentication domains",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "id",
     "description": "Filter authentication domains by id",
     "type": {
      "name": "OrganizationIdInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "name",
     "description": "Filter authentication domains by name",
     "type": {
      "name": "OrganizationNameInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "organizationId",
     "description": "Filter authentication domains by organization",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "OrganizationOrganizationIdInput",
       "kind": "INPUT_OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "AgentApplicationSettingsThreadProfilerInput",
   "description": "Settings for the thread profiler.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "enabled",
     "description": "Is thread profiling enabled for this application?",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "ErrorsInboxResponseError",
   "description": "Response error interface",
   "kind": "INTERFACE",
   "fields": [
    {
     "name": "description",
     "description": "The description of the error",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "possibleTypes": [
    {
     "name": "ErrorsInboxAssignErrorGroupError",
     "kind": "OBJECT"
    },
    {
     "name": "ErrorsInboxUpdateErrorGroupStateError",
     "kind": "OBJECT"
    }
   ]
  },
  {
   "name": "NerdpackSubscription",
   "description": "Nerdpack subscription information.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "accessType",
     "description": "What type of access the user has over this subscription. Eg: direct or inherited.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "NerdpackSubscriptionAccessType",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "accountId",
     "description": "Unique identifier of the account that has subscribed to the Nerdpack.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nerdpackVersion",
     "description": "Nerdpack associated to the subscribed version.",
     "type": {
      "name": "NerdpackVersion",
      "kind": "OBJECT"
     }
    },
    {
     "name": "tag",
     "description": "Tag associated with the version.",
     "type": {
      "name": "NerdpackTagName",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "WhatsNewContent",
   "description": "Represents the details in common between all types of news.",
   "kind": "INTERFACE",
   "fields": [
    {
     "name": "contentType",
     "description": "The type of the news.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "WhatsNewContentType",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "context",
     "description": "Contains information about the context of the news.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "id",
     "description": "The ID of the news.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "publishDate",
     "description": "The date the news was published.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "summary",
     "description": "The summary of the news.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "title",
     "description": "The title of the news.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ],
   "possibleTypes": [
    {
     "name": "WhatsNewAnnouncementContent",
     "kind": "OBJECT"
    }
   ]
  },
  {
   "name": "WorkloadStaticStatusResult",
   "description": "A static status that was involved in the calculation of the workload status.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "description",
     "description": "A description that provides additional details about the status of the workload.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "source",
     "description": "Indicates where the status value derives from.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "WorkloadStatusSource",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "summary",
     "description": "A short description of the status of the workload.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "value",
     "description": "The value of a static status.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "WorkloadStatusValue",
       "kind": "ENUM"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "WorkloadStatusResult",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "NerdpackMutationErrorType",
   "description": "Error reason for the mutation.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "CAPABILITY_NOT_GRANTED",
     "description": "The user does not have the required capability to execute the operation.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "DOWNSTREAM_ERROR",
     "description": "Downstream service error.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NOT_FOUND",
     "description": "Resource not found for given operation.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "TNC_NOT_ACCEPTED",
     "description": "Terms and conditions have not been accepted by the operation account.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "UNAUTHORIZED_ACCOUNT",
     "description": "Account is not authorized to execute the operation.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "OrganizationOrganizationCreateJobStatusInput",
   "description": "The status of the jobs to search for",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "eq",
     "description": "a job status to search for",
     "type": {
      "name": "OrganizationOrganizationCreateJobStatusEnum",
      "kind": "ENUM"
     }
    },
    {
     "name": "in",
     "description": "a set of job statuses to search for",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "OrganizationOrganizationCreateJobStatusEnum",
        "kind": "ENUM"
       }
      }
     }
    }
   ]
  },
  {
   "name": "AiDecisionsRuleMetadata",
   "description": "Metadata about a decision.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "mergeOpinionCount",
     "description": "Summary of user opinions for merges by this decision",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiDecisionsOpinionEntry",
         "kind": "OBJECT"
        }
       }
      }
     }
    }
   ]
  },
  {
   "name": "Nr1CatalogAllSupportedEntityTypes",
   "description": "Specifies the supported entity types to be all entity types",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "mode",
     "description": "The level of support entity types. Always set to ALL",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Nr1CatalogSupportedEntityTypesMode",
       "kind": "ENUM"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "Nr1CatalogSupportedEntityTypes",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "InstallationRecipeStatus",
   "description": "An object that represents a recipe status.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "cliVersion",
     "description": "The version of the newrelic-cli that was used for a given recipe.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SemVer",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "complete",
     "description": "Whether or not the recipe has been installed and all steps have been completed.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "displayName",
     "description": "The display name for a given recipe.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "entityGuid",
     "description": "The entity Guid for a given recipe.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EntityGuid",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "error",
     "description": "The error returned for a given recipe.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "InstallationStatusErrorInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "hostName",
     "description": "The host name of the customer's machine.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "installId",
     "description": "The unique ID that corresponds to an install event.",
     "type": {
      "name": "ID",
      "kind": "SCALAR"
     }
    },
    {
     "name": "installLibraryVersion",
     "description": "The version of the open-install-library that is being used.",
     "type": {
      "name": "SemVer",
      "kind": "SCALAR"
     }
    },
    {
     "name": "kernelArch",
     "description": "The kernel architecture of the customer's machine.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "kernelVersion",
     "description": "The kernel version of the customer's machine.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SemVer",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "logFilePath",
     "description": "The path to the log file on the customer's host.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metadata",
     "description": "Additional key:value data related to an error or related to the environment where the installation occurred.",
     "type": {
      "name": "InstallationRawMetadata",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The unique name for a given recipe.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "os",
     "description": "The OS of the customer's machine.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "platform",
     "description": "The platform name provided by the open-install-library.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "platformFamily",
     "description": "The platform family name provided by the open-install-library.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "platformVersion",
     "description": "The platform version provided by the open-install-library.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SemVer",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "redirectUrl",
     "description": "The redirect URL created by the CLI used for redirecting to a particular entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "status",
     "description": "The status for a given recipe.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "InstallationRecipeStatusType",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "targetedInstall",
     "description": "Whether or not the recipe being installed is a targeted install.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "taskPath",
     "description": "The path to the installation task as defined in the open-install-library.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "validationDurationMilliseconds",
     "description": "The number of milliseconds it took to validate the recipe.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochMilliseconds",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AgentApplicationSettingsSlowSqlInput",
   "description": "In APM, when transaction traces are collected, there may be additional Slow query data available.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "enabled",
     "description": "Whether or not slow_sql is enabled.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AiIssuesFilterIssuesEvents",
   "description": "Filter issues events",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "entityGuids",
     "description": "entityGuids",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "entityTypes",
     "description": "entityTypes",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "ids",
     "description": "ids",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    }
   ]
  },
  {
   "name": "ApiAccessKeyType",
   "description": "The type of key.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "INGEST",
     "description": "An ingest key is used by New Relic agents to authenticate with New Relic and send data to the assigned account.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "USER",
     "description": "A user key is used by New Relic users to authenticate with New Relic and to interact with the New Relic GraphQL API .",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "MultiTenantAuthorizationGrantSortEnum",
   "description": "The possible fields a grant can be sorted on",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "ID",
     "description": "Id of the grant",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "CloudGcpDatastoreIntegration",
   "description": "Datastore Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "NerdpackSubscriptionAccessType",
   "description": "Type of access to the subscribed Nerdpack.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "DIRECT",
     "description": "Direct subscription with user account.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "INHERITED",
     "description": "Master account subscription.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "LogConfigurationsUpdateParsingRuleResponse",
   "description": "The result after updating a parsing rule.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "errors",
     "description": "List of errors, if any.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "LogConfigurationsParsingRuleMutationError",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "rule",
     "description": "The updated parsing rule.",
     "type": {
      "name": "LogConfigurationsParsingRule",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "NrqlDropRulesAction",
   "description": "Specifies how data matching the drop rule's NRQL string should be processed.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "DROP_ATTRIBUTES",
     "description": "This action will strip the attributes specified in the SELECT clause of the NRQL string for all events that match the associated NRQL string.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "DROP_ATTRIBUTES_FROM_METRIC_AGGREGATES",
     "description": "This action will strip the attributes specified in the SELECT clause of the NRQL string for metric aggregates. The event type must be Metric.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "DROP_DATA",
     "description": "This action will drop all data that match the associated NRQL string. That string MUST be a `SELECT *`.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "CloudHealthIntegration",
   "description": "Health Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "IncidentIntelligenceEnvironmentIncidentIntelligenceEnvironment",
   "description": "Represents an AI Incident Intelligence environment. An environment crosses the account boundary and allows\ncorrelating data as long as the data's accounts are attached to the same environment.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "associatedAuthorizedAccounts",
     "description": "Authorized accounts associated with the environment. Events from these accounts can be correlated with one another (across the account boundary). The resulting correlated issue will be stored in the Incident Intelligence account",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "name": "AccountReference",
        "kind": "OBJECT"
       }
      }
     }
    },
    {
     "name": "billingCycleQuota",
     "description": "The assigned quota on the current billing cycle",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "createdAt",
     "description": "When the environment was created",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "createdBy",
     "description": "The user that created the environment",
     "type": {
      "name": "UserReference",
      "kind": "OBJECT"
     }
    },
    {
     "name": "incidentIntelligenceAccount",
     "description": "The account attached to the environment",
     "type": {
      "name": "AccountReference",
      "kind": "OBJECT"
     }
    },
    {
     "name": "isConsentRequired",
     "description": "True indicates that a consent has to be asked when an environment is created. The consent is to acknowledge that if the account is overaging an additional usage charge may be charged based on extra usage",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "isEntitledForAi",
     "description": "Whether the environment is entitled for AI",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "isFreeTier",
     "description": "True if the environment is part of the free-tier package",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "kind",
     "description": "The environment kind",
     "type": {
      "name": "IncidentIntelligenceEnvironmentEnvironmentKind",
      "kind": "ENUM"
     }
    },
    {
     "name": "masterAccount",
     "description": "The parent account related to the environment",
     "type": {
      "name": "AccountReference",
      "kind": "OBJECT"
     }
    },
    {
     "name": "name",
     "description": "The environment name",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "wasConsented",
     "description": "True if the environment was consented, false otherwise",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AgentApplicationSettingsBrowserDistributedTracingInput",
   "description": "Configure distributed traces from within browser apps.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "allowedOrigins",
     "description": "Supplies allowed origins for distributed tracing in browser.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "corsEnabled",
     "description": "Enables CORS for distributed tracing in browser.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "corsUseNewrelicHeader",
     "description": "Enables the use of the `newrelic` header for CORS requests with distributed tracing. [See Docs](https://docs.newrelic.com/docs/browser/new-relic-browser/browser-pro-features/browser-data-distributed-tracing/#cors) for more information.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "corsUseTracecontextHeaders",
     "description": "Enables CORS to use tracecontext headers for distributed tracing in browser.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "enabled",
     "description": "Enables distributed tracing in browser.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "excludeNewrelicHeader",
     "description": "Enables the `newrelic` header to be excluded in distributed tracing in browser.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "NrqlDropRulesAccountStitchedFields",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "list",
     "description": "List the drop rules for the given account",
     "type": {
      "name": "NrqlDropRulesListDropRulesResult",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "CloudAzureKeyvaultIntegrationInput",
   "description": "Key Vault",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "resourceGroups",
     "description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "SecureValue",
   "description": "The `SecureValue` scalar represents a secure value, ie a password, an API key, etc.",
   "kind": "SCALAR"
  },
  {
   "name": "AiDecisionsWholeCosineDistanceInput",
   "description": "Input type for WholeCosineDistance expression",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "maxDistance",
     "description": "Maximum distance threshold.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Float",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AiDecisionsSelectorApplicability",
   "description": "Number of incidents applicable for a selector",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "count",
     "description": "Applicable number of incidents",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "select",
     "description": "Incident selector",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsIncidentSelect",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "NrqlDropRulesError",
   "description": "Error details when processing drop rule requests.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "description",
     "description": "A detailed error message.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "reason",
     "description": "The category of error that occurred.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "NrqlDropRulesErrorReason",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "AlertsWebhookNotificationChannel",
   "description": "Webhook notification channel.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "associatedPolicies",
     "description": "Policies associated with the channel.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsNotificationChannelPoliciesResultSet",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "config",
     "description": "Webhook channel specific configuration.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsWebhookNotificationChannelConfig",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "id",
     "description": "Channel ID.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "Channel name.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "type",
     "description": "Channel type.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsNotificationChannelType",
       "kind": "ENUM"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "AlertsNotificationChannel",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "MultiTenantIdentityUserGroup",
   "description": "A group of users.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "id",
     "description": "a value that uniquely identifies this object",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "the name of the object",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "OrganizationOrganizationIdInputFilter",
   "description": "Provides all the available filters on the organization id",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "eq",
     "description": "performs an equals operation",
     "type": {
      "name": "ID",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AuthorizationManagementRevokeAccess",
   "description": "The input object representing the access to revoke for the group",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "accountAccessGrants",
     "description": "The Role and the Account the Target Group should no longer have access to",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AuthorizationManagementAccountAccessGrant",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    },
    {
     "name": "groupAccessGrants",
     "description": "The Role and the Group the Target Group should no longer have access to",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AuthorizationManagementGroupAccessGrant",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    },
    {
     "name": "groupId",
     "description": "The Group ID that will have access revoked",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "organizationAccessGrants",
     "description": "The Role and the Organization the Target Group should no longer have access to",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AuthorizationManagementOrganizationAccessGrant",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    }
   ]
  },
  {
   "name": "AiDecisionsFixedGreaterThanOrEqualInput",
   "description": "Input type for FixedGreaterThanOrEqual expression",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "compared",
     "description": "Value to be used in comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Float",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "incident",
     "description": "Incident selector to be used in comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsIncidentObjectInput",
       "kind": "INPUT_OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "ErrorsInboxUpdateErrorGroupStateResponse",
   "description": "Response for error group state mutation.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "errors",
     "description": "List of errors encountered.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ErrorsInboxUpdateErrorGroupStateError",
        "kind": "OBJECT"
       }
      }
     }
    },
    {
     "name": "resolveInNextVersion",
     "description": "Configures errors inbox to use change tracking to resolve an error group in the next tracked version.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "state",
     "description": "Updated state value.",
     "type": {
      "name": "ErrorsInboxErrorGroupState",
      "kind": "ENUM"
     }
    },
    {
     "name": "versions",
     "description": "Versions of the entity for which an error group's state applies.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ErrorsInboxVersion",
        "kind": "OBJECT"
       }
      }
     }
    }
   ]
  },
  {
   "name": "SyntheticsDateWindowEndConfig",
   "description": "Configuration options for when a monitor downtime should end",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "onDate",
     "description": "End the monitor downtime on a particular date",
     "type": {
      "name": "Date",
      "kind": "SCALAR"
     }
    },
    {
     "name": "onRepeat",
     "description": "End the monitor downtime after a set number of occurrences",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AgentFeaturesFilter",
   "description": "Agent Feature Filter",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "DOTNET",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "ELIXIR",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "GO",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "HTML",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "JAVA",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "MOBILE",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NODEJS",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "PHP",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "PYTHON",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "RUBY",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SDK",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AlertsFillOption",
   "description": "The available fill options.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "LAST_VALUE",
     "description": "Fill using the last known value.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NONE",
     "description": "Do not fill data.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "STATIC",
     "description": "Fill using a static value.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AlertsMutingRuleConditionInput",
   "description": "A condition which describes how to target a New Relic Alerts Violation.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "attribute",
     "description": "The attribute on a violation. Expects one of:\n\n* **accountId** - The account id\n* **conditionId** - The alert condition id\n* **conditionName** - The alert condition name\n* **conditionRunbookUrl** - The alert condition's runbook url\n* **conditionType** - The alert condition type, such as `metric`\n* **entity.guid** - The entity GUID\n* **nrqlEventType** - The NRQL event type\n* **nrqlQuery** - The NRQL query string\n* **policyId** - The alert policy id\n* **policyName** - The alert policy name\n* **product** - The target product (e.g., `SYNTHETICS`)\n* **tags.\u003cNAME\u003e** - Arbitrary tags associated with some entity (e.g., FACET from a NRQL query, for example `tags.appName` or `tags.host`)\n* **targetId** - The ID of the alerts target\n* **targetName** - The name of the alerts target",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "operator",
     "description": "The operator used to compare the attribute's value with the supplied value(s).",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsMutingRuleConditionOperator",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "values",
     "description": "The value(s) to compare against the attribute's value.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    }
   ]
  },
  {
   "name": "AiDecisionsRelativeFuzzyWuzzyAdaptiveRatioInput",
   "description": "Input type for RelativeFuzzyWuzzyAdaptiveRatio expression",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "left",
     "description": "Left operand of comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsIncidentObjectInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "minSimilarity",
     "description": "Minimum similarity threshold.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Float",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "right",
     "description": "Right operand of comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsIncidentObjectInput",
       "kind": "INPUT_OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "AlertsPoliciesSearchResultSet",
   "description": "Collection of policies with pagination information.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "nextCursor",
     "description": "Cursor pointing to the end of the current page of policy records. Null if final page.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "policies",
     "description": "Set of policies returned for the supplied cursor and criteria.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AlertsPolicy",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "totalCount",
     "description": "Total number of policy records for the given search criteria.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AlertsOpsGenieDataCenterRegion",
   "description": "OpsGenie data center region",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "EU",
     "description": "EU data center region",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "US",
     "description": "US data center region",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "EdgeUpdateTraceObserverResponse",
   "description": "Successfully updated trace observers, or one or more error responses if there were issues.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "errors",
     "description": "Errors that may occur when creating a `TraceObserver`. Defaults to `null` in case of success.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EdgeUpdateTraceObserverResponseError",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "traceObserver",
     "description": "The trace observer defined in `UpdateTraceObserverInput`. Defaults to `null` in case of failure.",
     "type": {
      "name": "EdgeTraceObserver",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "AgentApplicationSettingsSessionTraceModeInput",
   "description": "Default (fixed_rate) or custom (probabilistic) option used to collect session traces.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "FIXED_RATE",
     "description": "Fixed Rate mode for Session Trace\n(Default) Session traces are randomly sampled and stored at a rate of 90/hour.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "PROBABILISTIC",
     "description": "Probabilistic mode for Session Trace\n(Custom) Opt to collect more session traces using percentage from 0-100.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "EntitySearchQueryBuilderTag",
   "description": "An entity tag.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "key",
     "description": "The tag key. You can search using a `tags.` prefix or omit it and receive the same results.\n\nExamples: `tags.environment`, `environment`.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "value",
     "description": "The tag value.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "EdgeCreateTraceFilterRulesInput",
   "description": "Input for creating multiple trace filter rules",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "spanAttributeRules",
     "description": "One or more `CreateSpanAttributeRuleInput` that describe the span attribute trace filter rule(s) to be created.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EdgeCreateSpanAttributeRuleInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    }
   ]
  },
  {
   "name": "AiNotificationsPropertyInput",
   "description": "Property object",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "displayValue",
     "description": "displayValue",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "key",
     "description": "key",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "label",
     "description": "label",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "value",
     "description": "value",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "NerdStorageScopeInput",
   "description": "The data access level and ID for the selected scope.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "id",
     "description": "The ID for the selected scope.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "The NerdStorage data access level.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "NerdStorageScope",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "DashboardWidgetNrqlQueryInput",
   "description": "NRQL query used by a widget.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "accountId",
     "description": "New Relic account ID to issue the query against.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "query",
     "description": "NRQL formatted query.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Nrql",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "CloudAwsDirectconnectIntegration",
   "description": "Direct Connect Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "UserManagementUsersGroupsInput",
   "description": "The input object representing the group(s) and user(s) to update.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "groupIds",
     "description": "The id of the group(s) to add the user(s) to. Max: 10",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     }
    },
    {
     "name": "userIds",
     "description": "The id of the user(s) to be added to the group(s). Max: 50",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     }
    }
   ]
  },
  {
   "name": "DashboardDeleteResult",
   "description": "Result of delete operation.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "errors",
     "description": "Expected errors while processing request.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "DashboardDeleteError",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "status",
     "description": "The status of the attempted delete.",
     "type": {
      "name": "DashboardDeleteResultStatus",
      "kind": "ENUM"
     }
    }
   ]
  },
  {
   "name": "CloudIntegration",
   "description": "The configuration of a cloud service integration for a linked account.",
   "kind": "INTERFACE",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "possibleTypes": [
    {
     "name": "CloudAlbIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudApigatewayIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudAutoscalingIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudAwsAppsyncIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudAwsAthenaIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudAwsCognitoIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudAwsConnectIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudAwsDirectconnectIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudAwsDocdbIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudAwsFsxIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudAwsGlueIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudAwsKinesisanalyticsIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudAwsMediaconvertIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudAwsMediapackagevodIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudAwsMetadataIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudAwsMqIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudAwsMsElasticacheIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudAwsMskIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudAwsNeptuneIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudAwsQldbIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudAwsRoute53resolverIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudAwsStatesIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudAwsTagsGlobalIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudAwsTransitgatewayIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudAwsWafIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudAwsWafv2Integration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudAwsXrayIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudAzureApimanagementIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudAzureAppgatewayIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudAzureAppserviceIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudAzureContainersIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudAzureCosmosdbIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudAzureCostmanagementIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudAzureDatafactoryIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudAzureEventhubIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudAzureExpressrouteIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudAzureFirewallsIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudAzureFrontdoorIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudAzureFunctionsIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudAzureKeyvaultIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudAzureLoadbalancerIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudAzureLogicappsIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudAzureMachinelearningIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudAzureMariadbIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudAzureMonitorIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudAzureMysqlIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudAzureMysqlflexibleIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudAzurePostgresqlIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudAzurePostgresqlflexibleIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudAzurePowerbidedicatedIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudAzureRediscacheIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudAzureServicebusIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudAzureSqlIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudAzureSqlmanagedIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudAzureStorageIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudAzureVirtualmachineIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudAzureVirtualnetworksIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudAzureVmsIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudAzureVpngatewaysIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudBaseIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudBillingIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudCloudfrontIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudCloudtrailIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudDynamodbIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudEbsIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudEc2Integration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudEcsIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudEfsIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudElasticacheIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudElasticbeanstalkIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudElasticsearchIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudElbIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudEmrIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudGcpAiplatformIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudGcpAlloydbIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudGcpAppengineIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudGcpBigqueryIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudGcpBigtableIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudGcpComposerIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudGcpDataflowIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudGcpDataprocIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudGcpDatastoreIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudGcpFirebasedatabaseIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudGcpFirebasehostingIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudGcpFirebasestorageIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudGcpFirestoreIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudGcpFunctionsIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudGcpInterconnectIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudGcpKubernetesIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudGcpLoadbalancingIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudGcpMemcacheIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudGcpPubsubIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudGcpRedisIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudGcpRouterIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudGcpRunIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudGcpSpannerIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudGcpSqlIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudGcpStorageIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudGcpVmsIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudGcpVpcaccessIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudHealthIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudIamIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudIotIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudKinesisFirehoseIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudKinesisIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudLambdaIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudRdsIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudRedshiftIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudRoute53Integration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudS3Integration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudSesIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudSnsIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudSqsIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudTrustedadvisorIntegration",
     "kind": "OBJECT"
    },
    {
     "name": "CloudVpcIntegration",
     "kind": "OBJECT"
    }
   ]
  },
  {
   "name": "MultiTenantAuthorizationGrantOrganizationIdInputFilter",
   "description": "Filters on the grants organization id",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "eq",
     "description": "Performs an equals operation",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AlertsWebhookCustomHeaderInput",
   "description": "Webhook header",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "name",
     "description": "Header name",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "value",
     "description": "Header value",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SecureValue",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "CloudAwsGovCloudLinkAccountInput",
   "description": "Information required to link an AWS GovCloud account to a NewRelic account.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "accessKeyId",
     "description": "The key used to make requests to AWS service APIs",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "awsAccountId",
     "description": "The AWS account id",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricCollectionMode",
     "description": "How metrics will be collected.",
     "type": {
      "name": "CloudMetricCollectionMode",
      "kind": "ENUM"
     }
    },
    {
     "name": "name",
     "description": "The linked account name.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "secretAccessKey",
     "description": "The secret key used to make requests to AWS service APIs",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SecureValue",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "OrganizationOrganizationCreateAsyncCustomerResult",
   "description": "An async organization creation result customer",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "customerId",
     "description": "The customer ID",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "ErrorsInboxRawEvent",
   "description": "This scalar represents an event",
   "kind": "SCALAR"
  },
  {
   "name": "MultiTenantAuthorizationGrantRole",
   "description": "The role associated to the grant",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "id",
     "description": "The id of the role",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "The name of the role",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "DashboardVariableDefaultItem",
   "description": "Represents a possible default value item.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "value",
     "description": "The value of this default item.",
     "type": {
      "name": "DashboardVariableDefaultValue",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "OrganizationError",
   "description": "A user-readable error",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "message",
     "description": "A description of the error.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "type",
     "description": "A description of the type of error.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "OrganizationUpdateErrorType",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "AiNotificationsAuth",
   "description": "Authentication interface",
   "kind": "UNION",
   "possibleTypes": [
    {
     "name": "AiNotificationsBasicAuth",
     "kind": "OBJECT"
    },
    {
     "name": "AiNotificationsCustomHeadersAuth",
     "kind": "OBJECT"
    },
    {
     "name": "AiNotificationsOAuth2Auth",
     "kind": "OBJECT"
    },
    {
     "name": "AiNotificationsTokenAuth",
     "kind": "OBJECT"
    }
   ]
  },
  {
   "name": "AgentEnvironmentLoadedModuleAttribute",
   "description": "Attribute belonging to a loaded module.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "name",
     "description": "Name of the module attribute.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "value",
     "description": "Value of the module attribute.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AiIssuesIssueUserActionResult",
   "description": "User action for issue",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "accountId",
     "description": "Account id",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "action",
     "description": "User action",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiIssuesIssueUserAction",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "issueId",
     "description": "Issue id",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "CloudGcpFirestoreIntegration",
   "description": "Firestore Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "MultiTenantIdentityUserNameInput",
   "description": "Filters by user name",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "contains",
     "description": "Part of a user name",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "eq",
     "description": "A user name",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AlertsHipChatNotificationChannelConfig",
   "description": "Configuration for HipChat notification channel.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "authToken",
     "description": "Authentication token.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SecureValue",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "baseUrl",
     "description": "Base URL.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "roomId",
     "description": "Room ID.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "CloudGcpStorageIntegration",
   "description": "Cloud Storage Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "fetchTags",
     "description": "Specify if labels and the extended inventory should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "CloudAwsProvider",
   "description": "The Amazon Web Services cloud provider",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "icon",
     "description": "The cloud provider icon name.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud provider identifier in NewRelic.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "The cloud provider name.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "roleAccountId",
     "description": "The New Relic AWS Account ID that will use the Role.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "roleExternalId",
     "description": "The external ID required to assume the Role by the New Relic Account.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "Get details of one cloud provider service.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "slug",
       "description": "The cloud provider short name.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "services",
     "description": "Get details of all the cloud provider services available for integration.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "CloudService",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "slug",
     "description": "The cloud provider short name.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "templateParams",
     "description": "Get template params of one cloud provider service.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "CloudTemplateParam",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudProvider",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "AlertsXMattersNotificationChannelConfig",
   "description": "Configuration for xMatters notification channel.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "integrationUrl",
     "description": "Integration URL.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SecureValue",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "ApmApplicationRunningAgentVersions",
   "description": "Represents the currently running agent versions in an APM Application.\nAn application could be running multiple versions of an agent (across different hosts, for example).",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "maxVersion",
     "description": "The maximum (newest) language agent version running in the APM Application.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "minVersion",
     "description": "The minimum (oldest) language agent version running in the APM Application.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "EdgeCreateTraceObserverInput",
   "description": "Data required to create a trace observer.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "complianceTypes",
     "description": "Optional list of compliance types (e.g., FedRAMP) applied to this trace observer.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EdgeComplianceTypeCode",
        "kind": "ENUM"
       }
      }
     }
    },
    {
     "name": "monitoring",
     "description": "When set to `true` a trace observer will write trace metrics to the current account.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "Name of the trace observer.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "providerRegion",
     "description": "Provider and region where the trace observer must run. Currently, only AWS regions are supported.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EdgeProviderRegion",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "AiDecisionsSuggestion",
   "description": "A suggested correlation rule.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "correlationWindowLength",
     "description": "Length of the window in which incidents are compared.",
     "type": {
      "name": "Milliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "createdAt",
     "description": "Time suggestion was created.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochMilliseconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "description",
     "description": "Description of suggestion.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "hash",
     "description": "External hash of suggestion.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "ID of suggestion.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "minCorrelationThreshold",
     "description": "Number of correlations within a window required to merge issues.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "Name of suggestion.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "overrideConfiguration",
     "description": "Configuration to allow rule to override issue properties.",
     "type": {
      "name": "AiDecisionsOverrideConfiguration",
      "kind": "OBJECT"
     }
    },
    {
     "name": "ruleExpression",
     "description": "Expression to use to compare incidents.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsRuleExpression",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "state",
     "description": "Acceptance state of suggestion.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsSuggestionState",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "suggester",
     "description": "Service/user that created this suggestion.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "support",
     "description": "External support for suggestion.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AlertsCampfireNotificationChannelConfig",
   "description": "Configuration for Campfire notification channel.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "room",
     "description": "Room.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "subdomain",
     "description": "Subdomain.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "token",
     "description": "Authentication token.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SecureValue",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AgentApplicationSettingsMaskInputOptions",
   "description": "Mask specific kinds of input options as *.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "color",
     "description": "Mask 'color' input type.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "date",
     "description": "Mask 'date' input type.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "datetimeLocal",
     "description": "Mask 'datetime_local' input type.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "email",
     "description": "Mask 'email' input type.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "month",
     "description": "Mask 'month' input type.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "number",
     "description": "Mask 'number' input type.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "range",
     "description": "Mask 'range' input type.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "search",
     "description": "Mask 'search' input type.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "select",
     "description": "Mask 'select' input type.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "tel",
     "description": "Mask 'tel' input type.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "text",
     "description": "Mask 'text' input type.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "textArea",
     "description": "Mask 'textarea' input type.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "time",
     "description": "Mask 'time' input type.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "url",
     "description": "Mask 'url' input type.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "week",
     "description": "Mask 'week' input type.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AiWorkflowsResponseError",
   "description": "Error description",
   "kind": "INTERFACE",
   "fields": [
    {
     "name": "description",
     "description": "The error description",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "possibleTypes": [
    {
     "name": "AiWorkflowsCreateResponseError",
     "kind": "OBJECT"
    },
    {
     "name": "AiWorkflowsDeleteResponseError",
     "kind": "OBJECT"
    },
    {
     "name": "AiWorkflowsTestResponseError",
     "kind": "OBJECT"
    },
    {
     "name": "AiWorkflowsUpdateResponseError",
     "kind": "OBJECT"
    }
   ]
  },
  {
   "name": "EntitySearch",
   "description": "A data structure that contains the detailed response of an entity search.\n\nThe direct search result is available through `results`. Information about the\nquery itself is available through `query`, `types`, and `count`.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "count",
     "description": "The number of entities returned by the entity search.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "counts",
     "description": "A count of the Entity Search results faceted by a chosen set of criteria.\n\nNote: Unlike a NRQL facet, the facet results do not include entities where the facet value does not exist. Additionally, entities can be tagged with multiple tag values for one tag key. For these reasons, depending on the facet values chosen, the `counts` field will not always equal the `entitySearch.count` field.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntitySearchCounts",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "facet",
       "description": "A list of criteria to facet entities by.\n\nThis can be combined with the `facetTags` argument to facet by a combination of criteria and tags.",
       "type": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "EntitySearchCountsFacet",
          "kind": "ENUM"
         }
        }
       }
      },
      {
       "name": "facetTags",
       "description": "A list of tags to facet entities by. For example: `\"environment\"`, `\"region\"`.\n\nThis can be combined with the `facet` argument to facet by a combination of criteria and tags.\n\nNote: If a tag does not exist on an entity, the entity will not be counted in the facet results. If an entity tag has multiple values, it will be counted in all facets that apply.",
       "type": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "String",
          "kind": "SCALAR"
         }
        }
       }
      }
     ]
    },
    {
     "name": "query",
     "description": "The entity search query string that was generated by the `query` argument or the `queryBuilder` argument.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "results",
     "description": "The paginated results of the entity search.",
     "type": {
      "name": "EntitySearchResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "cursor",
       "description": "The cursor to fetch paginated entity search results.",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "types",
     "description": "The entity types returned by the entity search.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntitySearchTypes",
       "kind": "OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "WhatsNewContentType",
   "description": "Represents the different types of content available when searching by news.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "ANNOUNCEMENT",
     "description": "News the content of which is type of announcement.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "SyntheticsMonitorDowntimeWeekDays",
   "description": "enum of weekdays customers can select monitor downtimes to run",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "FRIDAY",
     "description": "Select monitor downtime to run on Friday",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "MONDAY",
     "description": "Select monitor downtime to run on Monday",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SATURDAY",
     "description": "Select monitor downtime to run on Saturday",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SUNDAY",
     "description": "Select monitor downtime to run on Sunday",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "THURSDAY",
     "description": "Select monitor downtime to run on Thursday",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "TUESDAY",
     "description": "Select monitor downtime to run on Tuesday",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "WEDNESDAY",
     "description": "Select monitor downtime to run on Wednesday",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "UserManagementGroup",
   "description": "For users on our New Relic One user model, a \"group\" represents a group of users. Putting users in a group allows the managing of permissions for multiple users at the same time.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "displayName",
     "description": "the name of the object",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "a value that uniquely identifies this object",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "users",
     "description": "container for users enabling cursor based pagination",
     "type": {
      "name": "UserManagementGroupUsers",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "cursor",
       "description": "the cursor from the previous request, to get     the next page",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "id",
       "description": "a list of ids to filter returned objects by",
       "type": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "ID",
          "kind": "SCALAR"
         }
        }
       }
      }
     ]
    }
   ]
  },
  {
   "name": "UserManagementGroupFilterInput",
   "description": "The input object representing the filter parameters for groups",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "displayName",
     "description": "Filter groups by display name",
     "type": {
      "name": "UserManagementDisplayNameInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "id",
     "description": "Filter groups by group ID",
     "type": {
      "name": "UserManagementGroupIdInput",
      "kind": "INPUT_OBJECT"
     }
    }
   ]
  },
  {
   "name": "ErrorsInboxStateVersionInput",
   "description": "Input for the version related to an applied state (e.g., Resolved in version \u003cstateVersion\u003e).",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "values",
     "description": "Version strings",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    }
   ]
  },
  {
   "name": "SyntheticsStepMonitorAdvancedOptions",
   "description": "The advanced options available for a Step monitor",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "enableScreenshotOnFailureAndScript",
     "description": "Capture a screenshot during job execution",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AccountManagementCreateInput",
   "description": "Attributes for creating an account.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "name",
     "description": "The name of the account.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "organizationId",
     "description": "The id of the managed organization where the account will be created.",
     "type": {
      "name": "ID",
      "kind": "SCALAR"
     }
    },
    {
     "name": "regionCode",
     "description": "The data center region for the account",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AlertsUserNotificationChannelConfig",
   "description": "Configuration for user notification channel.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "userId",
     "description": "User ID.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "EventsToMetricsUpdateRuleInput",
   "description": "Identifying information about the events to metrics rule you want to update.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "accountId",
     "description": "A submitted account id.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "enabled",
     "description": "Changes the state of the rule as being enabled or disabled.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "ruleId",
     "description": "A submitted rule id.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "UserManagementUsers",
   "description": "container for users enabling cursor based pagination",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "nextCursor",
     "description": "an opaque cursor to supply with subsequent     requests to get the next page of results, null if there are no more pages",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "totalCount",
     "description": "the total number of results",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "users",
     "description": "container for users enabling cursor based pagination",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "UserManagementUser",
         "kind": "OBJECT"
        }
       }
      }
     }
    }
   ]
  },
  {
   "name": "ErrorsInboxErrorGroupSortOrderField",
   "description": "Sort fields",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "LAST_OCCURRENCE_IN_WINDOW",
     "description": "Order by last occurrence in the current time window.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "OCCURRENCES",
     "description": "Order by error group occurrences.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AlertsWebhookBasicAuthInput",
   "description": "Webhook basic auth",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "password",
     "description": "Password",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SecureValue",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "username",
     "description": "Username",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "EdgeRandomTraceFilter",
   "description": "Contains all of the data that is used to sample traces based on random selection.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "percentKept",
     "description": "The percent of traces to keep when selected at random.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Float",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AiWorkflowsEnrichment",
   "description": "Makes it possible to augment the notification with additional data from the New Relic platform",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "accountId",
     "description": "Account Id of the Enrichment",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "configurations",
     "description": "List of configurations for the enrichment",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiWorkflowsConfiguration",
         "kind": "UNION"
        }
       }
      }
     }
    },
    {
     "name": "createdAt",
     "description": "The time the Enrichment was created",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "DateTime",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "Enrichment Id",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "Name of the Enrichment",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "type",
     "description": "Type of the Enrichment",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiWorkflowsEnrichmentType",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "updatedAt",
     "description": "The time the Enrichment was last updated",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "DateTime",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "MultiTenantIdentityUserFilterInput",
   "description": "Filter users",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "authenticationDomainId",
     "description": "Filter users by authentication domain",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "MultiTenantIdentityAuthenticationDomainIdInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "email",
     "description": "Filter users by email address",
     "type": {
      "name": "MultiTenantIdentityUserEmailInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "emailVerificationState",
     "description": "Filter users by email verification state",
     "type": {
      "name": "MultiTenantIdentityEmailVerificationStateInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "groupId",
     "description": "Filter users by group id",
     "type": {
      "name": "MultiTenantIdentityUserGroupIdInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "id",
     "description": "Filter users by id",
     "type": {
      "name": "MultiTenantIdentityUserIdInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "name",
     "description": "Filter users by name",
     "type": {
      "name": "MultiTenantIdentityUserNameInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "pendingUpgradeRequest",
     "description": "Filter users by pending upgrade request",
     "type": {
      "name": "MultiTenantIdentityPendingUpgradeRequestInput",
      "kind": "INPUT_OBJECT"
     }
    }
   ]
  },
  {
   "name": "InstallationInstallStatus",
   "description": "An object that contains the overall installation status that is created from within the newrelic-cli.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "cliVersion",
     "description": "The version of the newrelic-cli that was used for a given installation attempt.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SemVer",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "deployedBy",
     "description": "Refers to the source of the installation.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "enabledProxy",
     "description": "Whether or not the installation is using a proxy.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "error",
     "description": "The error returned for a given installation attempt.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "InstallationStatusError",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "hostName",
     "description": "The host name of the customer's machine.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "installId",
     "description": "The unique ID that corresponds to an install status.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "installLibraryVersion",
     "description": "The version of the open-install-library that is being used.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SemVer",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "isUnsupported",
     "description": "Whether or not the installation is supported on the host machine.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "kernelArch",
     "description": "The kernel architecture of the customer's machine.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "kernelVersion",
     "description": "The kernel version of the customer's machine.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SemVer",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "logFilePath",
     "description": "The path to the log file on the customer's host.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "os",
     "description": "The OS of the customer's machine.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "platform",
     "description": "The platform name provided by the open-install-library.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "platformFamily",
     "description": "The platform family name provided by the open-install-library.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "platformVersion",
     "description": "The platform version provided by the open-install-library.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SemVer",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "redirectUrl",
     "description": "A URL generated by the newrelic-cli that redirects to the appropriate entity once an installation is complete.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "state",
     "description": "The state of the installation.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "InstallationInstallStateType",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "targetedInstall",
     "description": "Whether or not the installation is a targeted install.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "timestamp",
     "description": "The timestamp for when the install event occurred.",
     "type": {
      "name": "EpochSeconds",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "CloudAzureDatafactoryIntegrationInput",
   "description": "Data Factory",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "resourceGroups",
     "description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "Nr1CatalogQuickstartInstallPlanMetadata",
   "description": "Metadata associated with the install plan in a quickstart",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "description",
     "description": "A short form description for the documentation component.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "displayName",
     "description": "The human-readable name for the install plan component.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ],
   "interfaces": [
    {
     "name": "Nr1CatalogQuickstartComponentMetadata",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "CloudAzureLogicappsIntegrationInput",
   "description": "Logic Apps",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "resourceGroups",
     "description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "Nr1CatalogRawNerdletState",
   "description": "Represents JSON nerdlet state data",
   "kind": "SCALAR"
  },
  {
   "name": "ServiceLevelIndicatorCreateInput",
   "description": "The input object that represents the SLI that will be created.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "description",
     "description": "The description of the SLI.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "events",
     "description": "The events that define the SLI.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ServiceLevelEventsCreateInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "name",
     "description": "The name of the SLI.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "objectives",
     "description": "A list of objective definitions.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ServiceLevelObjectiveCreateInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    },
    {
     "name": "slug",
     "description": "[DEPRECATED] The slug is deprecated and it will be removed from the schema as soon as possible.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "DashboardPieWidgetConfigurationInput",
   "description": "Configuration for visualization type 'viz.pie'.  Learn more about [pie](https://docs.newrelic.com/docs/apis/nerdgraph/examples/create-widgets-dashboards-api/#pie) widget.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "nrqlQueries",
     "description": "NRQL queries.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "DashboardWidgetNrqlQueryInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    }
   ]
  },
  {
   "name": "EpochMilliseconds",
   "description": "The `EpochMilliseconds` scalar represents the number of milliseconds since the Unix epoch",
   "kind": "SCALAR"
  },
  {
   "name": "MultiTenantIdentityEmailVerificationState",
   "description": "Email verification validates that a user's email address exists and can receive email. One of: \"Not Verifiable\", \"Verified\", and \"Pending\".",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "NOT_VERIFIABLE",
     "description": "The user's email does not require verification.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "PENDING",
     "description": "The user's email requires verification and has not been verified.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "VERIFIED",
     "description": "The user's email requires verification and has been verified.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "MultiTenantIdentityAllowsCapabilityInput",
   "description": "The input object representing parameters for the allowed capability filter",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "in",
     "description": "A list of capabilities. If set, groups with atleast one of the given capabilities granted on them for the user will be returned. Otherwise, only groups with read access granted are returned.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "MultiTenantIdentityCapability",
        "kind": "ENUM"
       }
      }
     }
    }
   ]
  },
  {
   "name": "CloudAwsStatesIntegrationInput",
   "description": "Step Functions",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "EdgeUpdateTraceObserverInput",
   "description": "Data required to update a trace observer.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "dataSourceGroupConfig",
     "description": "When set, allows updating the data source group.",
     "type": {
      "name": "EdgeDataSourceGroupInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "id",
     "description": "Globally unique identifier of the trace observer being updated.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "monitoring",
     "description": "When set to `true` a trace observer will write trace metrics to the current account.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "Name of the trace observer.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "randomTraceFilterConfig",
     "description": "When set, allows changing the random trace filter configuration.",
     "type": {
      "name": "EdgeRandomTraceFilterInput",
      "kind": "INPUT_OBJECT"
     }
    }
   ]
  },
  {
   "name": "Nr1CatalogAlertPolicyOutline",
   "description": "An outline of a created alert policy",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "conditions",
     "description": "A list of created alert conditions under this policy",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Nr1CatalogAlertConditionOutline",
        "kind": "OBJECT"
       }
      }
     }
    },
    {
     "name": "id",
     "description": "The id of the created alert policy",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "CloudAutoscalingIntegrationInput",
   "description": "AWS Auto Scaling",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AiNotificationsCredentialsInput",
   "description": "Credential input object",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "basic",
     "description": "basic",
     "type": {
      "name": "AiNotificationsBasicAuthInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "customHeaders",
     "description": "customHeaders",
     "type": {
      "name": "AiNotificationsCustomHeadersAuthInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "oauth2",
     "description": "oauth2",
     "type": {
      "name": "AiNotificationsOAuth2AuthInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "token",
     "description": "token",
     "type": {
      "name": "AiNotificationsTokenAuthInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "type",
     "description": "type",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiNotificationsAuthType",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "MultiTenantAuthorizationRoleGroupIdInputFilter",
   "description": "Provides all the available filters on the group id",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "eq",
     "description": "performs an equals operation",
     "type": {
      "name": "ID",
      "kind": "SCALAR"
     }
    },
    {
     "name": "in",
     "description": "A list of group IDs",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    }
   ]
  },
  {
   "name": "SyntheticsAutomatedTestMonitorInput",
   "description": "Monitor test definition to be included in the automated test",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "config",
     "description": "The monitor config for an automated test",
     "type": {
      "name": "SyntheticsAutomatedTestMonitorConfigInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "monitorGuid",
     "description": "The unique client identifier for the Synthetics Monitor in New Relic",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EntityGuid",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "CloudGcpFirestoreIntegrationInput",
   "description": "Firestore",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AlertsNotificationChannelId",
   "description": "A notification channel ID - temporarily until addToPolicy will support returning full notification channels.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "id",
     "description": "Channel ID.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "OrganizationOrganizationAdministrator",
   "description": "The organization's administrator",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "organizationId",
     "description": "The organization id of the organization's administrator",
     "type": {
      "name": "ID",
      "kind": "SCALAR"
     }
    },
    {
     "name": "organizationName",
     "description": "The organization name of the organization's administrator",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "CloudAzureMachinelearningIntegrationInput",
   "description": "Machine Learning",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "resourceGroups",
     "description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "ApmApplicationEntityOutline",
   "description": "An APM Application entity outline.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "account",
     "type": {
      "name": "AccountOutline",
      "kind": "OBJECT"
     }
    },
    {
     "name": "accountId",
     "description": "The New Relic account ID associated with this entity.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "alertSeverity",
     "description": "The current alerting severity of the entity.",
     "type": {
      "name": "EntityAlertSeverity",
      "kind": "ENUM"
     }
    },
    {
     "name": "apmBrowserSummary",
     "description": "Summary statistics about the Browser App injected by an APM Application.",
     "type": {
      "name": "ApmBrowserApplicationSummaryData",
      "kind": "OBJECT"
     }
    },
    {
     "name": "apmSummary",
     "description": "Summary statistics about the APM App.",
     "type": {
      "name": "ApmApplicationSummaryData",
      "kind": "OBJECT"
     }
    },
    {
     "name": "applicationId",
     "description": "The ID of the APM Application.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "domain",
     "description": "The entity's domain",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "entityType",
     "description": "A value representing the combination of the entity's domain and type.",
     "type": {
      "name": "EntityType",
      "kind": "ENUM"
     }
    },
    {
     "name": "firstIndexedAt",
     "description": "The date of last time the entity has updated any of its fields.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "goldenMetrics",
     "description": "The list of golden metrics for a specific entity",
     "type": {
      "name": "EntityGoldenContextScopedGoldenMetrics",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden metrics",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "timeWindow",
       "description": "Time range to apply to the golden metric NRQL query result field",
       "type": {
        "name": "EntityGoldenNrqlTimeWindowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "goldenTags",
     "description": "The list of golden tags for a specific entityType.",
     "type": {
      "name": "EntityGoldenContextScopedGoldenTags",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden tags",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "guid",
     "description": "A unique entity identifier.",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    },
    {
     "name": "indexedAt",
     "description": "The time the entity was indexed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "language",
     "description": "The programming language of the APM Application.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "lastReportingChangeAt",
     "description": "The last time the entity's reporting status changed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The name of this entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "permalink",
     "description": "The url to the entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "reporting",
     "description": "The reporting status of the entity. If New Relic is successfully collecting data from your application, this will be true.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "runningAgentVersions",
     "description": "The running versions of the language agent in the APM Application.",
     "type": {
      "name": "ApmApplicationRunningAgentVersions",
      "kind": "OBJECT"
     }
    },
    {
     "name": "serviceLevel",
     "description": "The service level defined for the entity.",
     "type": {
      "name": "ServiceLevelDefinition",
      "kind": "OBJECT"
     }
    },
    {
     "name": "settings",
     "description": "Configuration settings for the APM Application",
     "type": {
      "name": "ApmApplicationSettings",
      "kind": "OBJECT"
     }
    },
    {
     "name": "tags",
     "description": "The tags applied to the entity.\n\nFor details on tags, as well as query and mutation examples, visit [our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/graphql-tagging-api-tutorial).",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityTag",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "type",
     "description": "The entity's type",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ],
   "interfaces": [
    {
     "name": "AlertableEntityOutline",
     "kind": "INTERFACE"
    },
    {
     "name": "ApmBrowserApplicationEntityOutline",
     "kind": "INTERFACE"
    },
    {
     "name": "EntityOutline",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "CloudAzurePostgresqlIntegration",
   "description": "Database for PostgreSQL Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "resourceGroups",
     "description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "ErrorsInboxDeleteErrorGroupResourceResponse",
   "description": "Response for delete resource mutation.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "resourceId",
     "description": "Id of the deleted resource",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "CloudAzurePostgresqlflexibleIntegration",
   "description": "PostgreSQL Flexible Server Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "resourceGroups",
     "description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "LogConfigurationsObfuscationAction",
   "description": "Application of an obfuscation expression with specific a replacement method.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "attributes",
     "description": "Log record attributes to apply this expression to. An empty list applies the action to all the attributes.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      }
     }
    },
    {
     "name": "expression",
     "description": "Obfuscation expression applied by this action.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "LogConfigurationsObfuscationExpression",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "id",
     "description": "The id of the obfuscation action.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "method",
     "description": "How to obfuscate matches for the applied expression.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "LogConfigurationsObfuscationMethod",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "AiDecisionsOverrideConfiguration",
   "description": "Configuration for overriding properties of issues created by merges.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "description",
     "description": "Description merged issues should take.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "priority",
     "description": "Priority merged issues should take.",
     "type": {
      "name": "AiDecisionsIssuePriority",
      "kind": "ENUM"
     }
    },
    {
     "name": "title",
     "description": "Title merged issues should take.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "CloudAzureMysqlflexibleIntegration",
   "description": "MySQL Flexible Server Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "resourceGroups",
     "description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "CloudSqsIntegration",
   "description": "SQS Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "fetchExtendedInventory",
     "description": "Determine if extra inventory data be collected or not. May affect total data collection time and contribute to the Cloud provider API rate limit.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "fetchTags",
     "description": "Specify if tags should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "queuePrefixes",
     "description": "Specify each name or prefix for the Queues that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "tagKey",
     "description": "Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "tagValue",
     "description": "Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "AiTopologyDefiningAttribute",
   "description": "A key-value entry representing an attribute name and value.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "key",
     "description": "Key of entry.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "value",
     "description": "Value of entry.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "Nr1CatalogQuickstartAlertConditionType",
   "description": "Possible types of configured alert conditions",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "BASELINE",
     "description": "A baseline alert condition",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "OUTLIER",
     "description": "An outlier alert condition",
     "isDeprecated": true,
     "deprecationReason": "Outlier alert conditions are no longer supported"
    },
    {
     "name": "STATIC",
     "description": "A static alert condition",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "EdgeAccountStitchedFields",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "tracing",
     "description": "Provides access to Tracing data.",
     "type": {
      "name": "EdgeTracing",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "DashboardVariableReplacementStrategy",
   "description": "Possible strategies when replacing variables in a NRQL query.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "DEFAULT",
     "description": "Replace the variable based on its automatically-inferred type.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "IDENTIFIER",
     "description": "Replace the variable value as an identifier.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NUMBER",
     "description": "Replace the variable value as a number.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "STRING",
     "description": "Replace the variable value as a string.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "EventsToMetricsDeleteRuleInput",
   "description": "Identifying information about the events to metrics rule you want to delete.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "accountId",
     "description": "A submitted account id.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "ruleId",
     "description": "A submitted rule id.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "NrdbMetadata",
   "description": "An object containing metadata about the query and result.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "eventTypes",
     "description": "A list of the event types that were queried.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "facets",
     "description": "A list of facets that were queried.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "messages",
     "description": "Messages from NRDB included with the result.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "timeWindow",
     "description": "Details about the query time window.",
     "type": {
      "name": "NrdbMetadataTimeWindow",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "EdgeComplianceTypeCode",
   "description": "Compliance type codes that can be applied to a trace observer",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "FEDRAMP",
     "description": "Fedramp compliant",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "CloudGcpAiplatformIntegrationInput",
   "description": "Vertex AI",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "KeyTransactionEntityOutline",
   "description": "A Key Transaction entity outline.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "account",
     "type": {
      "name": "AccountOutline",
      "kind": "OBJECT"
     }
    },
    {
     "name": "accountId",
     "description": "The New Relic account ID associated with this entity.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "alertSeverity",
     "description": "The current alerting severity of the entity.",
     "type": {
      "name": "EntityAlertSeverity",
      "kind": "ENUM"
     }
    },
    {
     "name": "domain",
     "description": "The entity's domain",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "entityType",
     "description": "A value representing the combination of the entity's domain and type.",
     "type": {
      "name": "EntityType",
      "kind": "ENUM"
     }
    },
    {
     "name": "firstIndexedAt",
     "description": "The date of last time the entity has updated any of its fields.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "goldenMetrics",
     "description": "The list of golden metrics for a specific entity",
     "type": {
      "name": "EntityGoldenContextScopedGoldenMetrics",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden metrics",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "timeWindow",
       "description": "Time range to apply to the golden metric NRQL query result field",
       "type": {
        "name": "EntityGoldenNrqlTimeWindowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "goldenTags",
     "description": "The list of golden tags for a specific entityType.",
     "type": {
      "name": "EntityGoldenContextScopedGoldenTags",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden tags",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "guid",
     "description": "A unique entity identifier.",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    },
    {
     "name": "indexedAt",
     "description": "The time the entity was indexed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "lastReportingChangeAt",
     "description": "The last time the entity's reporting status changed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The name of this entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "permalink",
     "description": "The url to the entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "reporting",
     "description": "The reporting status of the entity. If New Relic is successfully collecting data from your application, this will be true.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "serviceLevel",
     "description": "The service level defined for the entity.",
     "type": {
      "name": "ServiceLevelDefinition",
      "kind": "OBJECT"
     }
    },
    {
     "name": "tags",
     "description": "The tags applied to the entity.\n\nFor details on tags, as well as query and mutation examples, visit [our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/graphql-tagging-api-tutorial).",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityTag",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "type",
     "description": "The entity's type",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ],
   "interfaces": [
    {
     "name": "AlertableEntityOutline",
     "kind": "INTERFACE"
    },
    {
     "name": "EntityOutline",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "AiDecisionsFixedSoundExInput",
   "description": "Input type for FixedSoundEx expression",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "incident",
     "description": "Incident selector to be used in comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsIncidentObjectInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "minDistance",
     "description": "Minimum distance threshold.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "value",
     "description": "Value to be used in comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "TeamEntity",
   "description": "A Team entity.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "account",
     "type": {
      "name": "AccountOutline",
      "kind": "OBJECT"
     }
    },
    {
     "name": "accountId",
     "description": "The New Relic account ID associated with this entity.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "alertSeverity",
     "description": "The current alerting severity of the entity.",
     "type": {
      "name": "EntityAlertSeverity",
      "kind": "ENUM"
     }
    },
    {
     "name": "alertViolations",
     "description": "Violations on the entity that were open during the specified time window. This will return up to 500 violations - if there are more in the time window selected, you must narrow the time window or look at fewer entities.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityAlertViolation",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "endTime",
       "description": "End of time window for violations.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EpochMilliseconds",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "startTime",
       "description": "Start of time window for violations.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EpochMilliseconds",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "collection",
     "type": {
      "name": "EntityCollection",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "name",
       "description": "The name of the collection to fetch.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "deploymentSearch",
     "description": "Retrieve the deployment event(s). Ordered by timestamp DESC.",
     "type": {
      "name": "ChangeTrackingDeploymentSearchResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "filter",
       "description": "Contains the set of filters to apply to the query.",
       "type": {
        "name": "ChangeTrackingSearchFilter",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "domain",
     "description": "The entity's domain",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "entityType",
     "description": "A value representing the combination of the entity's domain and type.",
     "type": {
      "name": "EntityType",
      "kind": "ENUM"
     }
    },
    {
     "name": "firstIndexedAt",
     "description": "The date of last time the entity has updated any of its fields.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "goldenMetrics",
     "description": "The list of golden metrics for a specific entity",
     "type": {
      "name": "EntityGoldenContextScopedGoldenMetrics",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden metrics",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "timeWindow",
       "description": "Time range to apply to the golden metric NRQL query result field",
       "type": {
        "name": "EntityGoldenNrqlTimeWindowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "goldenTags",
     "description": "The list of golden tags for a specific entityType.",
     "type": {
      "name": "EntityGoldenContextScopedGoldenTags",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden tags",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "guid",
     "description": "A unique entity identifier.",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    },
    {
     "name": "indexedAt",
     "description": "The time the entity was indexed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "lastReportingChangeAt",
     "description": "The last time the entity's reporting status changed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The name of this entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nerdStorage",
     "type": {
      "name": "NerdStorageEntityScope",
      "kind": "OBJECT"
     }
    },
    {
     "name": "nrdbQuery",
     "description": "Make an `Entity` scoped query to NRDB with a NRQL string.\n\nA relevant `WHERE` clause will be added to your query to scope data to the entity in question.\n\nSee the [NRQL Docs](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/nrql-resources/nrql-syntax-components-functions) for more information about generating a query string.",
     "type": {
      "name": "NrdbResultContainer",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "async",
       "description": "When true, the query will begin asynchronous resolution after the allotted `timeout`. Include `queryProgress` fields in your GraphQL query to receive the information you will need to poll the `nrdbQueryProgress` field for the results of your async NRQL query.\n\nSee [this page](https://docs.newrelic.com/docs/apis/nerdgraph/examples/async-queries-nrql-tutorial) for additional asynchronous query documentation.",
       "type": {
        "name": "Boolean",
        "kind": "SCALAR"
       },
       "defaultValue": "false"
      },
      {
       "name": "nrql",
       "description": "The [NRQL](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/nrql-resources/nrql-syntax-components-functions) query string.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Nrql",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "options",
       "description": "Additional options for NRQL queries.",
       "type": {
        "name": "NrqlQueryOptions",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "timeout",
       "description": "The timeout we will apply to the NRQL Query. The value will be clamped to between 5 and 120 seconds and defaults to 5 seconds.\n\nFor `async` queries, if the query is still incomplete after this amount of time, resolution will become asynchronous and return `queryProgress` data if requested.",
       "type": {
        "name": "Seconds",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "nrdbQueryProgress",
     "description": "Poll for the results of a previously-executed asychronous NRDB query.\n\nThe `queryId` is available in the `queryProgress` data returned by the original asynchronous query.\n\nSee [this page](https://docs.newrelic.com/docs/apis/nerdgraph/examples/async-queries-nrql-tutorial) for additional asynchronous query documentation.",
     "type": {
      "name": "NrdbResultContainer",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "queryId",
       "description": "A token for retrieving the results of a previously executed asynchronous query.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "permalink",
     "description": "The url to the entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "recentAlertViolations",
     "description": "Recent violations on the entity.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityAlertViolation",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "count",
       "description": "The desired number of alert violations to be returned.",
       "type": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "relatedEntities",
     "description": "Related entities result with optional filtering.",
     "type": {
      "name": "EntityRelationshipRelatedEntitiesResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "cursor",
       "description": "The cursor to fetch paginated results.",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "filter",
       "description": "Apply an optional filter to the related entities.",
       "type": {
        "name": "EntityRelationshipEdgeFilter",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "limit",
       "description": "A limit to apply to the number of relationships returned. Note: this option can only lower the default limits (2000 relationships).",
       "type": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "relationships",
     "description": "A list of the entities' relationships.\n\nFor more information, visit [our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/graphql-relationships-api-tutorial).",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityRelationship",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "endTime",
       "description": "Return relationships as they existed in the past. The duration of the time window queried is fixed at 75 minutes.",
       "type": {
        "name": "EpochMilliseconds",
        "kind": "SCALAR"
       }
      },
      {
       "name": "filter",
       "description": "Apply an optional filter to the relationships.",
       "type": {
        "name": "EntityRelationshipFilter",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "reporting",
     "description": "The reporting status of the entity. If New Relic is successfully collecting data from your application, this will be true.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "serviceLevel",
     "description": "The service level defined for the entity.",
     "type": {
      "name": "ServiceLevelDefinition",
      "kind": "OBJECT"
     }
    },
    {
     "name": "tags",
     "description": "The tags applied to the entity.\n\nFor details on tags, as well as query and mutation examples, visit [our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/graphql-tagging-api-tutorial).",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityTag",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "tagsWithMetadata",
     "description": "The tags applied to the entity with their metadata.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityTagWithMetadata",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "tracingSummary",
     "description": "Look up Distributed Tracing summary data for the selected `EntityGuid`",
     "type": {
      "name": "DistributedTracingEntityTracingSummary",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "timeWindow",
       "description": "The start and end of the tracing data. Defaults to the last 30 minutes",
       "type": {
        "name": "TimeWindowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "type",
     "description": "The entity's type",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ],
   "interfaces": [
    {
     "name": "AlertableEntity",
     "kind": "INTERFACE"
    },
    {
     "name": "CollectionEntity",
     "kind": "INTERFACE"
    },
    {
     "name": "Entity",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "CloudAwsMqIntegration",
   "description": "MQ Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "ServiceLevelEventsQuery",
   "description": "The query that represents the events to fetch.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "from",
     "description": "The NRDB event to fetch the data from.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Nrql",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "select",
     "description": "The NRQL SELECT clause to aggregate events.",
     "type": {
      "name": "ServiceLevelEventsQuerySelect",
      "kind": "OBJECT"
     }
    },
    {
     "name": "where",
     "description": "The NRQL condition to filter the events.",
     "type": {
      "name": "Nrql",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AlertsXMattersNotificationChannelCreateInput",
   "description": "The input for creating a new xMatters notification channel.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "integrationUrl",
     "description": "Integration URL.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SecureValue",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "Notification channel name.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "DashboardPermissions",
   "description": "Permissions that represent visibility \u0026 editing.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "PRIVATE",
     "description": "Only you can see the dashboard. Everything but the metadata is hidden.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "PUBLIC_READ_ONLY",
     "description": "All users are able to see the dashboard, but only you have full rights to work with the dashboard. Other users can access the dashboard but are not able to edit or delete it, although they can duplicate it.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "PUBLIC_READ_WRITE",
     "description": "All users have full rights to the dashboard.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AiIssuesRestIncident",
   "description": "Rest incident",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "account",
     "description": "account",
     "type": {
      "name": "AccountReference",
      "kind": "OBJECT"
     }
    },
    {
     "name": "accountIds",
     "description": "An account id this incident is stored in",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "aggregationTags",
     "description": "Aggregation of tags related to this incident",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AiIssuesKeyValue",
        "kind": "OBJECT"
       }
      }
     }
    },
    {
     "name": "closedAt",
     "description": "The time the incident was closed",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "createdAt",
     "description": "The time the incident was created",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochMilliseconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "description",
     "description": "The description provided through API",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      }
     }
    },
    {
     "name": "entityGuids",
     "description": "A list of unique entity identifiers",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    },
    {
     "name": "entityNames",
     "description": "A list of entity names",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "entityTypes",
     "description": "A list of entity types",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "environmentId",
     "description": "See our documentation to learn about environments",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "incidentId",
     "description": "Incident identifier",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "priority",
     "description": "Incident priority",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiIssuesPriority",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "state",
     "description": "Incident state",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiIssuesIncidentState",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "timestamp",
     "description": "Incident event timestamp",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochMilliseconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "title",
     "description": "The description the user gave the condition if provided. Otherwise the incident description",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "updatedAt",
     "description": "The time the incident was last updated",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochMilliseconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "AiIssuesIIncident",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "CloudLinkedAccount",
   "description": "A cloud account linked to a NewRelic account.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "authLabel",
     "description": "The credential. This is a Role ARN for AWS, an application ID for Azure and a service account ID or user account email for GCP.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "disabled",
     "description": "Indicates whether the account disabled.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "externalId",
     "description": "The cloud account identifier. This is the Account ID in AWS, the Subscription ID in Azure and the Project ID in GCP.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "id",
     "description": "The linked account identifier in NewRelic.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "integration",
     "description": "Get details of one cloud service integration.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "CloudIntegration",
       "kind": "INTERFACE"
      }
     },
     "args": [
      {
       "name": "id",
       "description": "The cloud service integration identifier.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "integrations",
     "description": "Get details of all cloud service integrations.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "CloudIntegration",
         "kind": "INTERFACE"
        }
       }
      }
     },
     "args": [
      {
       "name": "service",
       "description": "The cloud integration service slug.",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "metricCollectionMode",
     "description": "Indicate how the metrics will be collected (PUSH/PULL)",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "CloudMetricCollectionMode",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "name",
     "description": "The linked account name in NewRelic.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "nrAccountId",
     "description": "The New Relic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "provider",
     "description": "The cloud provider.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "CloudProvider",
       "kind": "INTERFACE"
      }
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "UserReference",
   "description": "The `UserReference` object provides basic identifying information about the user.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "email",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "gravatar",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "id",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "EdgeSpanAttributeKeyOperator",
   "description": "Span attribute key operator types",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "EQUALS",
     "description": "Matches on an exact value",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "LIKE",
     "description": "Matches on a value that starts-with and/or ends-with the provided value",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AgentApplicationSettingsBrowserMonitoring",
   "description": "Provides fields to set browser monitoring application settings.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "ajax",
     "description": "Enables ajax traces in the browser app.",
     "type": {
      "name": "AgentApplicationSettingsBrowserAjax",
      "kind": "OBJECT"
     }
    },
    {
     "name": "distributedTracing",
     "description": "Distributed tracing type. See [documentation](https://docs.newrelic.com/docs/browser/new-relic-browser/browser-pro-features/browser-data-distributed-tracing/) for further information.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AgentApplicationSettingsBrowserDistributedTracing",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "loader",
     "description": "The type of browser agent that will be loaded.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AgentApplicationSettingsBrowserLoader",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "pinnedVersion",
     "description": "Specify the semantic version of the browser agent that you would like your app to use. Leave this blank to use the most recent version. Use 'x' in place of a numeric digit to represent the latest release within the version range. For example, '1.x.x'",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "privacy",
     "description": "Browser privacy. See [documentation](https://docs.newrelic.com/docs/browser/browser-monitoring/page-load-timing-resources/cookie-collection-session-tracking/) for further information.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AgentApplicationSettingsBrowserPrivacy",
       "kind": "OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "QueryHistoryQueryHistoryOptionsInput",
   "description": "Input condition to select query records.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "limit",
     "description": "Total number of query records to be returned.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "ChangeTrackingDeployment",
   "description": "A deployment.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "changelog",
     "description": "A URL to the changelog or, if not linkable, a list of changes.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "commit",
     "description": "The commit identifier, for example, a Git commit SHA.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "deepLink",
     "description": "A link to the system that generated the deployment.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "deploymentId",
     "description": "A unique deployment identifier.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "deploymentType",
     "description": "The type of deployment, for example, ‘Blue green’ or ‘Rolling’.",
     "type": {
      "name": "ChangeTrackingDeploymentType",
      "kind": "ENUM"
     }
    },
    {
     "name": "description",
     "description": "A description of the deployment.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "entityGuid",
     "description": "The NR entity that was deployed.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EntityGuid",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "groupId",
     "description": "An identifier used to correlate account-wide changes across entities. These changes are shown together in the `Changes in group` section of the change event details UI.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "timestamp",
     "description": "The start time of the deployment as the number of milliseconds since the Unix epoch.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochMilliseconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "user",
     "description": "The username of the deployer or bot.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "version",
     "description": "The version of the deployed software, for example, something like v1.1.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "DashboardUpdateWidgetInput",
   "description": "Input type used when updating widgets.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "configuration",
     "description": "Typed widgets are area, bar, billboard, line, markdown, pie, and table. Check our [docs](https://docs.newrelic.com/docs/apis/nerdgraph/examples/create-widgets-dashboards-api/#widget-typed) for more info.",
     "type": {
      "name": "DashboardWidgetConfigurationInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "id",
     "description": "ID of the widget to be updated.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "layout",
     "description": "The widget's position and size in the dashboard.",
     "type": {
      "name": "DashboardWidgetLayoutInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "linkedEntityGuids",
     "description": "Entities related to the widget. Currently only supports one Dashboard entity guid, but may allow other cases in the future.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "rawConfiguration",
     "description": "Untyped widgets are all other widgets, such as bullet, histogram, inventory, etc. Check our [docs](https://docs.newrelic.com/docs/apis/nerdgraph/examples/create-widgets-dashboards-api/#widget-untyped) for more info.",
     "type": {
      "name": "DashboardWidgetRawConfiguration",
      "kind": "SCALAR"
     }
    },
    {
     "name": "title",
     "description": "A title for the widget.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "visualization",
     "description": "Specifies how this widget will be visualized. If null, the WidgetConfigurationInput will be used to determine the visualization.",
     "type": {
      "name": "DashboardWidgetVisualizationInput",
      "kind": "INPUT_OBJECT"
     }
    }
   ]
  },
  {
   "name": "AiNotificationsConstraintsError",
   "description": "Object for constraints errors",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "constraints",
     "description": "List of missing constraints for channel creation",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiNotificationsConstraintError",
         "kind": "OBJECT"
        }
       }
      }
     }
    }
   ]
  },
  {
   "name": "OrganizationOrganizationGroup",
   "description": "A customers organization group",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "id",
     "description": "The ID of the organization group",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "The name of the organization group",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AiNotificationsSortOrder",
   "description": "Sort order",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "ASC",
     "description": "Ascending sort order",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "DESC",
     "description": "Descending sort order",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AiDecisionsOrInput",
   "description": "Input type for Or expression",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "left",
     "description": "Left child expression.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsRuleExpressionInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "right",
     "description": "Right child expression.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsRuleExpressionInput",
       "kind": "INPUT_OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "AiDecisionsFixedJaccardDistanceInput",
   "description": "Input type for FixedJaccardDistance expression",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "incident",
     "description": "Incident selector to be used in comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsIncidentObjectInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "maxDistance",
     "description": "Maximum distance threshold.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Float",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "value",
     "description": "Value to be used in comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "Account",
   "description": "The `Account` object provides general data about the account, as well as\nbeing the entry point into more detailed data about a single account.\n\nAccount configuration data is queried through this object, as well as\ntelemetry data that is specific to a single account.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "agentEnvironment",
     "description": "This field provides access to AgentEnvironment data.",
     "type": {
      "name": "AgentEnvironmentAccountStitchedFields",
      "kind": "OBJECT"
     }
    },
    {
     "name": "aiDecisions",
     "description": "This field provides access to AiDecisions data.",
     "type": {
      "name": "AiDecisionsAccountStitchedFields",
      "kind": "OBJECT"
     }
    },
    {
     "name": "aiIssues",
     "description": "This field provides access to AiIssues data.",
     "type": {
      "name": "AiIssuesAccountStitchedFields",
      "kind": "OBJECT"
     }
    },
    {
     "name": "aiNotifications",
     "description": "This field provides access to AiNotifications data.",
     "type": {
      "name": "AiNotificationsAccountStitchedFields",
      "kind": "OBJECT"
     }
    },
    {
     "name": "aiTopology",
     "description": "This field provides access to AiTopology data.",
     "type": {
      "name": "AiTopologyAccountStitchedFields",
      "kind": "OBJECT"
     }
    },
    {
     "name": "aiWorkflows",
     "description": "This field provides access to AiWorkflows data.",
     "type": {
      "name": "AiWorkflowsAccountStitchedFields",
      "kind": "OBJECT"
     }
    },
    {
     "name": "alerts",
     "description": "This field provides access to Alerts data.",
     "type": {
      "name": "AlertsAccountStitchedFields",
      "kind": "OBJECT"
     }
    },
    {
     "name": "cloud",
     "description": "The `cloud` field provides access to cloud integrations configuration data.\n\nFor details and query examples visit\n[our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/manage-your-aws-azure-google-cloud-integrations-graphql-api).",
     "type": {
      "name": "CloudAccountFields",
      "kind": "OBJECT"
     }
    },
    {
     "name": "dataManagement",
     "description": "This field provides access to DataManagement data.",
     "type": {
      "name": "DataManagementAccountStitchedFields",
      "kind": "OBJECT"
     }
    },
    {
     "name": "edge",
     "description": "This field provides access to Edge data.",
     "type": {
      "name": "EdgeAccountStitchedFields",
      "kind": "OBJECT"
     }
    },
    {
     "name": "eventsToMetrics",
     "description": "This field provides access to EventsToMetrics data.",
     "type": {
      "name": "EventsToMetricsAccountStitchedFields",
      "kind": "OBJECT"
     }
    },
    {
     "name": "historicalDataExport",
     "description": "This field provides access to HistoricalDataExport data.",
     "type": {
      "name": "HistoricalDataExportAccountStitchedFields",
      "kind": "OBJECT"
     }
    },
    {
     "name": "id",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "incidentIntelligenceEnvironment",
     "description": "This field provides access to IncidentIntelligenceEnvironment data.",
     "type": {
      "name": "IncidentIntelligenceEnvironmentAccountStitchedFields",
      "kind": "OBJECT"
     }
    },
    {
     "name": "installation",
     "description": "This field provides access to Installation data.",
     "type": {
      "name": "InstallationAccountStitchedFields",
      "kind": "OBJECT"
     }
    },
    {
     "name": "licenseKey",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "logConfigurations",
     "description": "This field provides access to LogConfigurations data.",
     "type": {
      "name": "LogConfigurationsAccountStitchedFields",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricNormalization",
     "description": "This field provides access to MetricNormalization data.",
     "type": {
      "name": "MetricNormalizationAccountStitchedFields",
      "kind": "OBJECT"
     }
    },
    {
     "name": "name",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nerdStorage",
     "description": "NerdStorage is a document database that is accessible within the New Relic One interface.\nThis allows for persistence of Nerdpack data including users' configuration settings and preferences\n(like favorites), or any other small data sets.\n\nConceptually, you can imagine NerdStorage as a nested key-value map.\n\nFor information on New Relic NerdStorage, visit [our docs](https://developer.newrelic.com/build-tools/new-relic-one-applications/nerdstorage).\n\nTo use the NerdStorage schema you must specify a Nerdpack ID using the NewRelic-Package-Id header in your request.",
     "type": {
      "name": "NerdStorageAccountScope",
      "kind": "OBJECT"
     }
    },
    {
     "name": "nrql",
     "description": "Make a query to NRDB with a NRQL string.\n\nSee the [NRQL Docs](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/nrql-resources/nrql-syntax-components-functions) for more information about generating a query string.\n\nExample NRQL query:\n```\nSELECT count(*) FROM Transaction TIMESERIES\n```\n\nFor more details on how to use NRQL in the GraphQL API, visit [our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/query-nrql-through-new-relic-graphql-api)",
     "type": {
      "name": "NrdbResultContainer",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "async",
       "description": "When true, the query will begin asynchronous resolution after the allotted `timeout`. Include `queryProgress` fields in your GraphQL query to receive the information you will need to poll the `nrqlQueryProgress` field for the results of your async NRQL query.\n\nSee [this page](https://docs.newrelic.com/docs/apis/nerdgraph/examples/async-queries-nrql-tutorial) for additional asynchronous query documentation.",
       "type": {
        "name": "Boolean",
        "kind": "SCALAR"
       },
       "defaultValue": "false"
      },
      {
       "name": "options",
       "description": "Additional options for NRQL queries.",
       "type": {
        "name": "NrqlQueryOptions",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "query",
       "description": "The [NRQL](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/nrql-resources/nrql-syntax-components-functions) query string.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Nrql",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "timeout",
       "description": "The timeout we will apply to the NRQL Query. The value will be clamped to between 5 and 120 seconds and defaults to 5 seconds.\n\nFor `async` queries, if the query is still incomplete after this amount of time, resolution will become asynchronous and return `queryProgress` data if requested.",
       "type": {
        "name": "Seconds",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "nrqlDropRules",
     "description": "This field provides access to NrqlDropRules data.",
     "type": {
      "name": "NrqlDropRulesAccountStitchedFields",
      "kind": "OBJECT"
     }
    },
    {
     "name": "nrqlQueryProgress",
     "description": "Poll for the results of a previously-executed asychronous NRDB query.\n\nThe `queryId` is available in the `queryProgress` data returned by the original asynchronous query.\n\nSee [this page](https://docs.newrelic.com/docs/apis/nerdgraph/examples/async-queries-nrql-tutorial) for additional asynchronous query documentation.",
     "type": {
      "name": "NrdbResultContainer",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "queryId",
       "description": "A token for retrieving the results of a previously executed asynchronous query.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "pixie",
     "description": "This field provides access to Pixie data.",
     "type": {
      "name": "PixieAccountStitchedFields",
      "kind": "OBJECT"
     }
    },
    {
     "name": "streamingExport",
     "description": "This field provides access to StreamingExport data.",
     "type": {
      "name": "StreamingExportAccountStitchedFields",
      "kind": "OBJECT"
     }
    },
    {
     "name": "synthetics",
     "description": "This field provides access to Synthetics data.",
     "type": {
      "name": "SyntheticsAccountStitchedFields",
      "kind": "OBJECT"
     }
    },
    {
     "name": "workload",
     "description": "This field provides access to Workload data.",
     "type": {
      "name": "WorkloadAccountStitchedFields",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "DataSourceGapsGapsQuery",
   "description": "Query parameters used to filter data source gaps.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "accountIds",
     "description": "A list of account IDs used to filter data source gaps.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "entityGuids",
     "description": "A list of entity GUIDs used to filter data source gaps.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "gapTypeIds",
     "description": "A list of gap type identifiers used to filter data source gaps.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "DataSourceGapsGapTypeIdentifier",
        "kind": "ENUM"
       }
      }
     }
    }
   ]
  },
  {
   "name": "CloudAzureVpngatewaysIntegrationInput",
   "description": "VPN Gateways",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "resourceGroups",
     "description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "IncidentIntelligenceEnvironmentCurrentEnvironmentResult",
   "description": "An environment will be populated only if the user is attached to a single environment.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "environment",
     "description": "The current environment attached to the user",
     "type": {
      "name": "IncidentIntelligenceEnvironmentIncidentIntelligenceEnvironment",
      "kind": "OBJECT"
     }
    },
    {
     "name": "reason",
     "description": "The explanation for the environment field result",
     "type": {
      "name": "IncidentIntelligenceEnvironmentCurrentEnvironmentResultReason",
      "kind": "ENUM"
     }
    },
    {
     "name": "reasonDetails",
     "description": "The current environment result details",
     "type": {
      "name": "IncidentIntelligenceEnvironmentCurrentEnvironmentResultReasonDetails",
      "kind": "UNION"
     }
    }
   ]
  },
  {
   "name": "CloudAccountFields",
   "description": "Cloud integrations related data, including configured integrations and\nall available cloud provider service integrations.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "linkedAccount",
     "description": "Get one linked provider account.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "id",
       "description": "The linked cloud provider account's ID.",
       "type": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "linkedAccounts",
     "description": "Get all linked cloud provider accounts.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudLinkedAccount",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "provider",
     "description": "Get one cloud provider by short name.",
     "type": {
      "name": "CloudProvider",
      "kind": "INTERFACE"
     },
     "args": [
      {
       "name": "slug",
       "description": "The cloud provider short name.\n\nValues include `aws`, `gcp`, foobar?",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "providers",
     "description": "Get all available cloud providers.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudProvider",
       "kind": "INTERFACE"
      }
     }
    }
   ]
  },
  {
   "name": "AlertsSlackNotificationChannelConfig",
   "description": "Configuration for Slack notification channel.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "teamChannel",
     "description": "Slack channel name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "url",
     "description": "Slack channel URL.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SecureValue",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "EntityRelationshipUserDefinedCreateOrReplaceResultError",
   "description": "The entityRelationshipUserDefinedCreateOrReplace result error.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "message",
     "description": "A message explaining what the error is about.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "type",
     "description": "The mutation error type.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EntityRelationshipUserDefinedCreateOrReplaceErrorType",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "UserManagementEmailVerificationStateInput",
   "description": "Available filtering types for email verification states",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "pending",
     "description": "An email verification state",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "StackTraceMobileException",
   "description": "A structured representation of a handled exception occurring in a mobile application.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "stackTrace",
     "description": "A structured representation of a handled exception in a mobile application.",
     "type": {
      "name": "StackTraceMobileExceptionStackTrace",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "CloudAwsMskIntegrationInput",
   "description": "Managed Kafka",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "CloudTrustedadvisorIntegrationInput",
   "description": "Trusted Advisor",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "EventsToMetricsError",
   "description": "Error details when processing events to metrics rule requests.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "description",
     "description": "A detailed error message.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "reason",
     "description": "The category of error that occurred.",
     "type": {
      "name": "EventsToMetricsErrorReason",
      "kind": "ENUM"
     }
    }
   ]
  },
  {
   "name": "ChangeTrackingSearchFilter",
   "description": "The object contains the filters to be applied to the search.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "limit",
     "description": "Maximum number of deployments to be returned. Default value is 100 deployments.\nThere is a maximum limit value of 2,000. If you set the limit greater than 2,000, the service will only return the latest 2,000 deployments.\"",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "query",
     "description": "Deployment search query string. The query string can search for a match on users and deployment IDs, and any other deployment event attributes.\n\nOperators available: Any valid NRQL operators, other than subqueries. For example, =, OR, AND, IN, LIKE, RLIKE, NO.\n\nFor the full list of operators, see the where clause documentation [here](https://docs.newrelic.com/docs/query-your-data/nrql-new-relic-query-language/get-started/nrql-syntax-clauses-functions/#sel-where)\n\nNote: Do not include keywords like SELECT, WHERE, SINCE, FACET, and TIMESERIES.\n\nExamples:\n\n    • \"user = 'Test User'\"\n    • \"user LIKE '%Test User%' AND deploymentType IN ('BLUE_GREEN', 'CANARY')\"\n    • \"user RLIKE r'Test.*|test.*'\"\n    • \"version = '1.0' OR deploymentType IN ('BASIC')\"\n    • \"deploymentId IN ('1234', '4567')\"\n    • \"((user = 'Test User' AND version = '1.0') OR deploymentType in ('BLUE_GREEN', 'CANARY'))\"",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "timeWindow",
     "description": "Search time window. If not specified, defaults to the past hour.",
     "type": {
      "name": "ChangeTrackingTimeWindowInputWithDefaults",
      "kind": "INPUT_OBJECT"
     }
    }
   ]
  },
  {
   "name": "AiDecisionsCategoricalClusteringInput",
   "description": "Input type for CategoricalClustering expression",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "threshold",
     "description": "Threshold for comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Float",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "ErrorsInboxUpdateErrorGroupStateError",
   "description": "Configure notification policy error",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "description",
     "description": "The description of the error",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "type",
     "description": "The error type",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ErrorsInboxUpdateErrorGroupStateErrorType",
       "kind": "ENUM"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "ErrorsInboxResponseError",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "LogConfigurationsCreateObfuscationRuleInput",
   "description": "Input for creating an obfuscation rule.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "actions",
     "description": "Actions for the rule. The actions will be applied in the order specified by this list.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "LogConfigurationsCreateObfuscationActionInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "description",
     "description": "Description of rule.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "enabled",
     "description": "Whether the rule should be applied or not to incoming data.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "filter",
     "description": "NRQL for determining whether a given log record should have obfuscation actions applied.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Nrql",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "Name of rule.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "Nr1CatalogAlertConditionOutline",
   "description": "An outline of a created alert condition",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "alertConditionTemplate",
     "description": "The template id of the created alert condition",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Nr1CatalogAlertConditionTemplate",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "id",
     "description": "The id of the created alert condition",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "Nr1CatalogInstallPlanTarget",
   "description": "Represents the location of an install",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "destination",
     "description": "Provides context on the location the install will take place",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Nr1CatalogInstallPlanDestination",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "os",
     "description": "Provides context for the operating system that will be targeted",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Nr1CatalogInstallPlanOperatingSystem",
         "kind": "ENUM"
        }
       }
      }
     }
    },
    {
     "name": "type",
     "description": "Provides context for the type of installation that will take place",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Nr1CatalogInstallPlanTargetType",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "ServiceLevelObjectiveCreateInput",
   "description": "The input object that represents an objective definition.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "description",
     "description": "The description of the SLO.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The name of the SLO.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "target",
     "description": "The target percentage of the SLO. Maximum value is 100.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Float",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "timeWindow",
     "description": "The time window configuration of the SLO.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ServiceLevelObjectiveTimeWindowCreateInput",
       "kind": "INPUT_OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "DashboardAlertSeverity",
   "description": "Alert severity.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "CRITICAL",
     "description": "CRITICAL.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NOT_ALERTING",
     "description": "NOT_ALERTING.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "WARNING",
     "description": "WARNING.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "OrganizationAccountSortInput",
   "description": "Sort key and direction for accounts",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "direction",
     "description": "Direction to sort in",
     "type": {
      "name": "OrganizationAccountSortDirectionEnum",
      "kind": "ENUM"
     }
    },
    {
     "name": "key",
     "description": "Account share attribute to sort on",
     "type": {
      "name": "OrganizationAccountSortKeyEnum",
      "kind": "ENUM"
     }
    }
   ]
  },
  {
   "name": "GenericInfrastructureEntity",
   "description": "An Infrastructure entity.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "account",
     "type": {
      "name": "AccountOutline",
      "kind": "OBJECT"
     }
    },
    {
     "name": "accountId",
     "description": "The New Relic account ID associated with this entity.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "alertSeverity",
     "description": "The current alerting severity of the entity.",
     "type": {
      "name": "EntityAlertSeverity",
      "kind": "ENUM"
     }
    },
    {
     "name": "alertViolations",
     "description": "Violations on the entity that were open during the specified time window. This will return up to 500 violations - if there are more in the time window selected, you must narrow the time window or look at fewer entities.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityAlertViolation",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "endTime",
       "description": "End of time window for violations.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EpochMilliseconds",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "startTime",
       "description": "Start of time window for violations.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EpochMilliseconds",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "deploymentSearch",
     "description": "Retrieve the deployment event(s). Ordered by timestamp DESC.",
     "type": {
      "name": "ChangeTrackingDeploymentSearchResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "filter",
       "description": "Contains the set of filters to apply to the query.",
       "type": {
        "name": "ChangeTrackingSearchFilter",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "domain",
     "description": "The entity's domain",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "entityType",
     "description": "A value representing the combination of the entity's domain and type.",
     "type": {
      "name": "EntityType",
      "kind": "ENUM"
     }
    },
    {
     "name": "firstIndexedAt",
     "description": "The date of last time the entity has updated any of its fields.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "goldenMetrics",
     "description": "The list of golden metrics for a specific entity",
     "type": {
      "name": "EntityGoldenContextScopedGoldenMetrics",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden metrics",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "timeWindow",
       "description": "Time range to apply to the golden metric NRQL query result field",
       "type": {
        "name": "EntityGoldenNrqlTimeWindowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "goldenTags",
     "description": "The list of golden tags for a specific entityType.",
     "type": {
      "name": "EntityGoldenContextScopedGoldenTags",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden tags",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "guid",
     "description": "A unique entity identifier.",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    },
    {
     "name": "indexedAt",
     "description": "The time the entity was indexed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "integrationTypeCode",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "lastReportingChangeAt",
     "description": "The last time the entity's reporting status changed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The name of this entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nerdStorage",
     "type": {
      "name": "NerdStorageEntityScope",
      "kind": "OBJECT"
     }
    },
    {
     "name": "nrdbQuery",
     "description": "Make an `Entity` scoped query to NRDB with a NRQL string.\n\nA relevant `WHERE` clause will be added to your query to scope data to the entity in question.\n\nSee the [NRQL Docs](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/nrql-resources/nrql-syntax-components-functions) for more information about generating a query string.",
     "type": {
      "name": "NrdbResultContainer",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "async",
       "description": "When true, the query will begin asynchronous resolution after the allotted `timeout`. Include `queryProgress` fields in your GraphQL query to receive the information you will need to poll the `nrdbQueryProgress` field for the results of your async NRQL query.\n\nSee [this page](https://docs.newrelic.com/docs/apis/nerdgraph/examples/async-queries-nrql-tutorial) for additional asynchronous query documentation.",
       "type": {
        "name": "Boolean",
        "kind": "SCALAR"
       },
       "defaultValue": "false"
      },
      {
       "name": "nrql",
       "description": "The [NRQL](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/nrql-resources/nrql-syntax-components-functions) query string.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Nrql",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "options",
       "description": "Additional options for NRQL queries.",
       "type": {
        "name": "NrqlQueryOptions",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "timeout",
       "description": "The timeout we will apply to the NRQL Query. The value will be clamped to between 5 and 120 seconds and defaults to 5 seconds.\n\nFor `async` queries, if the query is still incomplete after this amount of time, resolution will become asynchronous and return `queryProgress` data if requested.",
       "type": {
        "name": "Seconds",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "nrdbQueryProgress",
     "description": "Poll for the results of a previously-executed asychronous NRDB query.\n\nThe `queryId` is available in the `queryProgress` data returned by the original asynchronous query.\n\nSee [this page](https://docs.newrelic.com/docs/apis/nerdgraph/examples/async-queries-nrql-tutorial) for additional asynchronous query documentation.",
     "type": {
      "name": "NrdbResultContainer",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "queryId",
       "description": "A token for retrieving the results of a previously executed asynchronous query.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "permalink",
     "description": "The url to the entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "recentAlertViolations",
     "description": "Recent violations on the entity.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityAlertViolation",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "count",
       "description": "The desired number of alert violations to be returned.",
       "type": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "relatedEntities",
     "description": "Related entities result with optional filtering.",
     "type": {
      "name": "EntityRelationshipRelatedEntitiesResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "cursor",
       "description": "The cursor to fetch paginated results.",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "filter",
       "description": "Apply an optional filter to the related entities.",
       "type": {
        "name": "EntityRelationshipEdgeFilter",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "limit",
       "description": "A limit to apply to the number of relationships returned. Note: this option can only lower the default limits (2000 relationships).",
       "type": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "relationships",
     "description": "A list of the entities' relationships.\n\nFor more information, visit [our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/graphql-relationships-api-tutorial).",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityRelationship",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "endTime",
       "description": "Return relationships as they existed in the past. The duration of the time window queried is fixed at 75 minutes.",
       "type": {
        "name": "EpochMilliseconds",
        "kind": "SCALAR"
       }
      },
      {
       "name": "filter",
       "description": "Apply an optional filter to the relationships.",
       "type": {
        "name": "EntityRelationshipFilter",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "reporting",
     "description": "The reporting status of the entity. If New Relic is successfully collecting data from your application, this will be true.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "serviceLevel",
     "description": "The service level defined for the entity.",
     "type": {
      "name": "ServiceLevelDefinition",
      "kind": "OBJECT"
     }
    },
    {
     "name": "tags",
     "description": "The tags applied to the entity.\n\nFor details on tags, as well as query and mutation examples, visit [our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/graphql-tagging-api-tutorial).",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityTag",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "tagsWithMetadata",
     "description": "The tags applied to the entity with their metadata.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityTagWithMetadata",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "tracingSummary",
     "description": "Look up Distributed Tracing summary data for the selected `EntityGuid`",
     "type": {
      "name": "DistributedTracingEntityTracingSummary",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "timeWindow",
       "description": "The start and end of the tracing data. Defaults to the last 30 minutes",
       "type": {
        "name": "TimeWindowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "type",
     "description": "The entity's type",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ],
   "interfaces": [
    {
     "name": "AlertableEntity",
     "kind": "INTERFACE"
    },
    {
     "name": "Entity",
     "kind": "INTERFACE"
    },
    {
     "name": "InfrastructureIntegrationEntity",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "ServiceLevelEventsQuerySelectUpdateInput",
   "description": "The NRQL SELECT clause to aggregate events.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "attribute",
     "description": "The attribute used in the selected function. Only use it in combination with the SUM, GET_FIELD and GET_CDF_COUNT functions.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "function",
     "description": "The function to use in the SELECT clause.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ServiceLevelEventsQuerySelectFunction",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "threshold",
     "description": "The threshold used in the selected function. Only use it in combination with the GET_CDF_COUNT function.",
     "type": {
      "name": "Float",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AiDecisionsRuleState",
   "description": "State of rule.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "DISABLED",
     "description": "Rule state is disabled",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "ENABLED",
     "description": "Rule state is enabled",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "NrqlDropRulesDropRule",
   "description": "Details of a drop rule.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "account",
     "description": "The account this drop rule targets.",
     "type": {
      "name": "AccountReference",
      "kind": "OBJECT"
     }
    },
    {
     "name": "accountId",
     "description": "The account this drop rule targets.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "action",
     "description": "The behavior of the drop rule.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "NrqlDropRulesAction",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "createdAt",
     "description": "The time this drop rule was created.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "DateTime",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "createdBy",
     "description": "The id of the user that created the drop rule.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "creator",
     "description": "The user reference of the user that created the drop rule",
     "type": {
      "name": "UserReference",
      "kind": "OBJECT"
     }
    },
    {
     "name": "description",
     "description": "Additional information about the rule.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "id",
     "description": "The unique id for the drop rule.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "nrql",
     "description": "The NRQL used to match data that will receive the `action`.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "source",
     "description": "Who or what registered this rule.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "NerdpackCreationInput",
   "description": "Input data for creating a new nerdpack.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "ownerAccount",
     "description": "Nerdpack owner account ID. If not provided it will use the account ID specified in the header.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AiWorkflowsNrqlTestEnrichmentInput",
   "description": "NRQL type test enrichment input object",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "configuration",
     "description": "configuration",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiWorkflowsNrqlConfigurationInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "id",
     "description": "id",
     "type": {
      "name": "ID",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "name",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "MultiTenantAuthorizationGrantGroupIdInputFilter",
   "description": "Filters on grants group id",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "eq",
     "description": "Performs an equals operation",
     "type": {
      "name": "ID",
      "kind": "SCALAR"
     }
    },
    {
     "name": "in",
     "description": "Performs an in operation",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    }
   ]
  },
  {
   "name": "AiWorkflowsOperator",
   "description": "Type of Filter",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "CONTAINS",
     "description": "String or list attribute contains this value",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "DOES_NOT_CONTAIN",
     "description": "String or list attribute does not contain this value",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "DOES_NOT_EQUAL",
     "description": "String or Numeric attribute does not equal this value",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "DOES_NOT_EXACTLY_MATCH",
     "description": "Element in list attribute does not exactly match this value",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "ENDS_WITH",
     "description": "String attribute ends with this value",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "EQUAL",
     "description": "String or Numeric attribute equals this value",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "EXACTLY_MATCHES",
     "description": "Element in list attribute exactly matches this value",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "GREATER_OR_EQUAL",
     "description": "Numeric attribute is greater or equal to this value",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "GREATER_THAN",
     "description": "Numeric attribute is greater than this value",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "IS",
     "description": "Boolean attribute equals value",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "IS_NOT",
     "description": "Boolean attribute does not equal value",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "LESS_OR_EQUAL",
     "description": "Numeric attribute is less or equal to this value",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "LESS_THAN",
     "description": "Numeric attribute is less than this value",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "STARTS_WITH",
     "description": "String attribute starts with this value",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "IncidentIntelligenceEnvironmentMultipleEnvironmentsAvailable",
   "description": "The user has access to more than one environment from the context of this account (only one is allowed)",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "accountIds",
     "description": "The multiple accounts the user has access to in this context",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "CloudAwsDocdbIntegration",
   "description": "DocumentDB Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "SyntheticsStepMonitorUpdateMutationResult",
   "description": "The result of a Step monitor update mutation",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "errors",
     "description": "Errors that occurred during Step monitor update mutation",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "name": "SyntheticsMonitorUpdateError",
        "kind": "OBJECT"
       }
      }
     }
    },
    {
     "name": "monitor",
     "description": "The resulting Step monitor",
     "type": {
      "name": "SyntheticsStepMonitor",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "RootMutationType",
   "description": "This is the root of all GraphQL mutations. Unlike queries, mutations\nrepresent actions that have a side effects, like `create` or `update`.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "accountManagementCancelAccount",
     "description": "Cancels an account.",
     "type": {
      "name": "AccountManagementManagedAccount",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "id",
       "description": "The attributes for canceling an account.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "accountManagementCreateAccount",
     "description": "Creates an organization-scoped account.",
     "type": {
      "name": "AccountManagementCreateResponse",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "managedAccount",
       "description": "The attributes for the account being created.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AccountManagementCreateInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "accountManagementUpdateAccount",
     "description": "Updates an account.",
     "type": {
      "name": "AccountManagementUpdateResponse",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "managedAccount",
       "description": "The attributes for updating an account.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AccountManagementUpdateInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "agentApplicationCreateBrowser",
     "description": "If you aren't using an auto-instrumenting agent on the backend, use this to set up browser monitoring for an application. For more information on enabling copy/paste, [see our docs](https://docs.newrelic.com/docs/browser/browser-monitoring/installation/install-browser-monitoring-agent/#copy-paste-app)",
     "type": {
      "name": "AgentApplicationCreateBrowserResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "The account ID.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "name",
       "description": "The application's name.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "settings",
       "description": "Browser settings input object.",
       "type": {
        "name": "AgentApplicationBrowserSettingsInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "agentApplicationCreateMobile",
     "description": "Create a new mobile application.",
     "type": {
      "name": "AgentApplicationCreateMobileResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "The application's account ID.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "name",
       "description": "The application's name..",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "agentApplicationDelete",
     "description": "Deletes a browser, mobile, or APM application. This isn't allowed if an application is actively reporting data.",
     "type": {
      "name": "AgentApplicationDeleteResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "guid",
       "description": "An application's GUID.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EntityGuid",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "agentApplicationEnableApmBrowser",
     "description": "Enable browser monitoring for an application monitored by APM. For information about specific APM agents, [see our docs](https://docs.newrelic.com/docs/browser/browser-monitoring/installation/install-browser-monitoring-agent/#agent-instrumentation)",
     "type": {
      "name": "AgentApplicationEnableBrowserResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "guid",
       "description": "The affected entity's GUID.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EntityGuid",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "settings",
       "description": "Browsers settings input object.",
       "type": {
        "name": "AgentApplicationBrowserSettingsInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "agentApplicationSegmentsReplaceAllBrowserSegmentAllowList",
     "description": "Replaces the entity's allow list with the provided segments.",
     "type": {
      "name": "AgentApplicationSegmentsBrowserSegmentAllowListResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "allowList",
       "description": "The list of url segments to replace the current allow list with. The list cannot be Empty.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AgentApplicationSegmentsBrowserSegmentAllowListInput",
         "kind": "INPUT_OBJECT"
        }
       }
      },
      {
       "name": "entityGuid",
       "description": "The NR1 entity guid",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EntityGuid",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "agentApplicationSettingsUpdate",
     "description": "Update configuration for APM applications. Includes thresholds for how often to record Transaction traces, SQL traces, enabling Distributed traces, ignoring certain error classes. This is the main mutation that powers the Application \u003e Settings page in APM.",
     "type": {
      "name": "AgentApplicationSettingsUpdateResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "guid",
       "description": "The GUID for the affected entity.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EntityGuid",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "settings",
       "description": "Input data about the entities you want to update and the settings to use. Any unspecified fields will retain their original values.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AgentApplicationSettingsUpdateInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "aiDecisionsAcceptSuggestion",
     "description": "Accept and deploy an existing suggested rule.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsRule",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "accountId",
       "description": "Account ID.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "suggestionId",
       "description": "Suggestion ID.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "aiDecisionsCreateImplicitRule",
     "description": "Create and deploy a new implicit rule.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsRule",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "accountId",
       "description": "Account ID.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "rule",
       "description": "Rule blueprint to be created.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiDecisionsRuleBlueprint",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "aiDecisionsCreateRule",
     "description": "Create and deploy a new rule.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsRule",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "accountId",
       "description": "Account ID.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "rule",
       "description": "Rule blueprint to be created.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiDecisionsRuleBlueprint",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "aiDecisionsCreateSuggestion",
     "description": "Create a new suggested rule.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsSuggestion",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "accountId",
       "description": "Account ID.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "suggestion",
       "description": "Suggestion blueprint to be created.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiDecisionsSuggestionBlueprint",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "aiDecisionsDeclineSuggestion",
     "description": "Decline an existing suggested rule.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsOperationResult",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "accountId",
       "description": "Account ID.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "suggestionId",
       "description": "Suggestion ID.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "aiDecisionsDeleteMergeFeedback",
     "description": "Delete existing feedback for a merge.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsOperationResult",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "accountId",
       "description": "Account ID.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "childIssueId",
       "description": "Child issue ID.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "parentIssueId",
       "description": "Parent issue ID.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "ruleId",
       "description": "Rule ID.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "aiDecisionsDeleteRule",
     "description": "Delete an existing rule.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsOperationResult",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "accountId",
       "description": "Account ID.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "ruleId",
       "description": "Rule ID.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "aiDecisionsDeleteSuggestion",
     "description": "Delete an existing suggested rule.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsOperationResult",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "accountId",
       "description": "Account ID.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "suggestionId",
       "description": "Suggestion ID.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "aiDecisionsDisableRule",
     "description": "Disable an existing enabled rule.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsOperationResult",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "accountId",
       "description": "Account ID.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "ruleId",
       "description": "Rule ID.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "aiDecisionsEnableRule",
     "description": "Enable an existing disabled rule.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsOperationResult",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "accountId",
       "description": "Account ID.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "ruleId",
       "description": "Rule ID.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "aiDecisionsFindApplicableIncidents",
     "description": "Create a search operation to fetch applicable incidents for a rule expression",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsApplicableIncidentSearch",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "accountId",
       "description": "Account ID.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "search",
       "description": "Search operation blueprint to be created.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiDecisionsSearchBlueprint",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "aiDecisionsPostponeSuggestion",
     "description": "Postpone an existing suggested rule.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsRule",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "accountId",
       "description": "Account ID.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "suggestionId",
       "description": "Suggestion ID.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "aiDecisionsRecordMergeFeedback",
     "description": "Record feedback for a merge",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsMergeFeedback",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "accountId",
       "description": "Account ID.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "childIssueId",
       "description": "Child issue ID.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "opinion",
       "description": "Opinion type.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiDecisionsOpinion",
         "kind": "ENUM"
        }
       }
      },
      {
       "name": "parentIssueId",
       "description": "Parent issue ID.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "ruleId",
       "description": "Rule ID.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "aiDecisionsSimulate",
     "description": "Create an arbitrary expression simulation.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsSimulation",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "accountId",
       "description": "Account ID.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "simulation",
       "description": "Simulation blueprint to be created.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiDecisionsSimulationBlueprint",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "aiDecisionsUpdateImplicitRule",
     "description": "Update an existing implicit rule.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsRule",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "accountId",
       "description": "Account ID.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "rule",
       "description": "Rule blueprint to be created.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiDecisionsRuleBlueprint",
         "kind": "INPUT_OBJECT"
        }
       }
      },
      {
       "name": "ruleId",
       "description": "Rule ID.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "aiDecisionsUpdateRule",
     "description": "Update an existing rule.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsRule",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "accountId",
       "description": "Account ID.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "rule",
       "description": "Rule blueprint to be created.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiDecisionsRuleBlueprint",
         "kind": "INPUT_OBJECT"
        }
       }
      },
      {
       "name": "ruleId",
       "description": "Rule ID.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "aiIssuesAckIssue",
     "description": "Acknowledge issue",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiIssuesIssueUserActionResponse",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "accountId",
       "description": "account id",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "issueId",
       "description": "issue id",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "aiIssuesCloseIncident",
     "description": "Close incident",
     "type": {
      "name": "AiIssuesIncidentUserActionResponse",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "account id",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "incidentId",
       "description": "Incident id",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "aiIssuesResolveIssue",
     "description": "Resolve issue",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiIssuesIssueUserActionResponse",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "accountId",
       "description": "account id",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "issueId",
       "description": "issue id",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "aiIssuesUnackIssue",
     "description": "Unacknowledge issue",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiIssuesIssueUserActionResponse",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "accountId",
       "description": "account id",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "issueId",
       "description": "issue id",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "aiIssuesUpdateGracePeriod",
     "description": "Set interval between issue being created and being activated (and user being notified)",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiIssuesConfigurationOverrideResponse",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "accountId",
       "description": "Account id",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "gracePeriod",
       "description": "Grace period configuration",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiIssuesGracePeriodConfigurationInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "aiIssuesUpdateIssueTtl",
     "description": "Update issue TTL",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiIssuesConfigurationOverrideResponse",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "accountId",
       "description": "Account id",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "issueTtl",
       "description": "Issue TTL",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Seconds",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "aiNotificationsCreateChannel",
     "description": "Create a Channel",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiNotificationsChannelResponse",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "accountId",
       "description": "Account Id",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "channel",
       "description": "Channel object",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiNotificationsChannelInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "aiNotificationsCreateDestination",
     "description": "Create a Destination",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiNotificationsDestinationResponse",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "accountId",
       "description": "Account Id",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "destination",
       "description": "Destination object",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiNotificationsDestinationInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "aiNotificationsDeleteChannel",
     "description": "Delete a Channel",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiNotificationsDeleteResponse",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "accountId",
       "description": "Account Id",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "channelId",
       "description": "Id of the deleted channel",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "aiNotificationsDeleteDestination",
     "description": "Delete a Destination",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiNotificationsDeleteResponse",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "accountId",
       "description": "Account Id",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "destinationId",
       "description": "Id of the deleted destination",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "aiNotificationsTestChannel",
     "description": "Test notifications",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiNotificationsChannelTestResponse",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "accountId",
       "description": "Account Id",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "channel",
       "description": "Channel to test notification for",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiNotificationsChannelInput",
         "kind": "INPUT_OBJECT"
        }
       }
      },
      {
       "name": "variables",
       "description": "Dynamic variables",
       "type": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "AiNotificationsDynamicVariable",
          "kind": "INPUT_OBJECT"
         }
        }
       }
      }
     ]
    },
    {
     "name": "aiNotificationsTestChannelById",
     "description": "Test channel by channelId",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiNotificationsChannelTestResponse",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "accountId",
       "description": "Account Id",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "channelId",
       "description": "Channel ID to test notification for",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "variables",
       "description": "Dynamic variables",
       "type": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "AiNotificationsDynamicVariable",
          "kind": "INPUT_OBJECT"
         }
        }
       }
      }
     ]
    },
    {
     "name": "aiNotificationsTestDestination",
     "description": "Test connection",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiNotificationsDestinationTestResponse",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "accountId",
       "description": "Account Id",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "destination",
       "description": "Destination to test connection for",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiNotificationsDestinationInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "aiNotificationsTestDestinationById",
     "description": "Test connection by destination id",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiNotificationsDestinationTestResponse",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "accountId",
       "description": "Account Id",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "destinationId",
       "description": "Destination ID to test",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "update",
       "description": "Update that will override existing properties",
       "type": {
        "name": "AiNotificationsDestinationUpdate",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "aiNotificationsUpdateChannel",
     "description": "Update a Channel",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiNotificationsChannelResponse",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "accountId",
       "description": "Account Id",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "channel",
       "description": "Channel object",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiNotificationsChannelUpdate",
         "kind": "INPUT_OBJECT"
        }
       }
      },
      {
       "name": "channelId",
       "description": "Channel to update",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "aiNotificationsUpdateDestination",
     "description": "Update a Destination",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiNotificationsDestinationResponse",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "accountId",
       "description": "Account Id",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "destination",
       "description": "Update Destination fields",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiNotificationsDestinationUpdate",
         "kind": "INPUT_OBJECT"
        }
       }
      },
      {
       "name": "destinationId",
       "description": "Destination to update",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "aiTopologyCollectorCreateEdges",
     "description": "Create a list of new edges.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiTopologyCollectorOperationResult",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "accountId",
       "description": "Account ID.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "edges",
       "description": "List of edge blueprints to be created.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "kind": "LIST",
         "ofType": {
          "kind": "NON_NULL",
          "ofType": {
           "name": "AiTopologyCollectorEdgeBlueprint",
           "kind": "INPUT_OBJECT"
          }
         }
        }
       }
      }
     ]
    },
    {
     "name": "aiTopologyCollectorCreateVertices",
     "description": "Create a list of new vertices.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiTopologyCollectorOperationResult",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "accountId",
       "description": "Account ID.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "vertices",
       "description": "List of vertex blueprints to be created.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "kind": "LIST",
         "ofType": {
          "kind": "NON_NULL",
          "ofType": {
           "name": "AiTopologyCollectorVertexBlueprint",
           "kind": "INPUT_OBJECT"
          }
         }
        }
       }
      }
     ]
    },
    {
     "name": "aiTopologyCollectorDeleteEdges",
     "description": "Delete an existing list of edges.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiTopologyCollectorOperationResult",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "accountId",
       "description": "Account ID.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "edgeIds",
       "description": "List of edge IDs.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "kind": "LIST",
         "ofType": {
          "kind": "NON_NULL",
          "ofType": {
           "name": "ID",
           "kind": "SCALAR"
          }
         }
        }
       }
      }
     ]
    },
    {
     "name": "aiTopologyCollectorDeleteVertices",
     "description": "Delete an existing list of vertices.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiTopologyCollectorOperationResult",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "accountId",
       "description": "Account ID.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "vertexNames",
       "description": "List of vertex names.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "kind": "LIST",
         "ofType": {
          "kind": "NON_NULL",
          "ofType": {
           "name": "ID",
           "kind": "SCALAR"
          }
         }
        }
       }
      }
     ]
    },
    {
     "name": "aiWorkflowsCreateWorkflow",
     "description": "Create a new Workflow with issues filter, enrichments and destinations",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiWorkflowsCreateWorkflowResponse",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "accountId",
       "description": "Workflow's account id",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "createWorkflowData",
       "description": "Create Workflow input object",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiWorkflowsCreateWorkflowInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "aiWorkflowsDeleteWorkflow",
     "description": "Delete a workflow and all it's sub entities: filter, enrichments and destinations",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiWorkflowsDeleteWorkflowResponse",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "accountId",
       "description": "Workflow's account id",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "deleteChannels",
       "description": "If true, workflow channel will be deleted along with the workflow",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Boolean",
         "kind": "SCALAR"
        }
       },
       "defaultValue": "true"
      },
      {
       "name": "id",
       "description": "Workflow's id for deletion",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "aiWorkflowsTestWorkflow",
     "description": "test a workflow and all it's sub entities: filter, enrichments and destinations",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiWorkflowsTestWorkflowResponse",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "accountId",
       "description": "Workflow's account id",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "testWorkflowData",
       "description": "Test Workflow input object",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiWorkflowsTestWorkflowInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "aiWorkflowsUpdateWorkflow",
     "description": "Update Workflow with issues filter, enrichments and destinations",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiWorkflowsUpdateWorkflowResponse",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "accountId",
       "description": "Workflow's account id",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "deleteUnusedChannels",
       "description": "If true, the channels that are no longer used by the update workflow will be deleted",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Boolean",
         "kind": "SCALAR"
        }
       },
       "defaultValue": "true"
      },
      {
       "name": "updateWorkflowData",
       "description": "Update Workflow input object",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiWorkflowsUpdateWorkflowInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "alertsConditionDelete",
     "description": "Delete an Alerts condition.",
     "type": {
      "name": "AlertsConditionDeleteResponse",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "Account ID.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "id",
       "description": "Alerts condition ID.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "alertsMutingRuleCreate",
     "description": "Create a muting rule for New Relic Alerts violations.",
     "type": {
      "name": "AlertsMutingRule",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "Account ID.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "rule",
       "description": "Input settings for the muting rule.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AlertsMutingRuleInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "alertsMutingRuleDelete",
     "description": "Delete a muting rule for New Relic Alerts violations.",
     "type": {
      "name": "AlertsMutingRuleDeleteResponse",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "Account ID.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "id",
       "description": "Muting rule.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "alertsMutingRuleUpdate",
     "description": "Update a muting rule for New Relic Alerts violations.",
     "type": {
      "name": "AlertsMutingRule",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "Account ID.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "id",
       "description": "Muting rule ID.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "rule",
       "description": "The input options for updating a muting rule.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AlertsMutingRuleUpdateInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "alertsNotificationChannelCreate",
     "description": "Creates a notification channel",
     "type": {
      "name": "AlertsNotificationChannelCreateResponse",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "Account ID.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "notificationChannel",
       "description": "Notification channel to create.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AlertsNotificationChannelCreateConfiguration",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "alertsNotificationChannelDelete",
     "description": "Deletes a notification channel",
     "type": {
      "name": "AlertsNotificationChannelDeleteResponse",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "Account ID.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "id",
       "description": "Notification channel ID.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "alertsNotificationChannelUpdate",
     "description": "Updates an existing notification channel",
     "type": {
      "name": "AlertsNotificationChannelUpdateResponse",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "Account ID.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "id",
       "description": "Notification channel ID.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "notificationChannel",
       "description": "Notification channel fields to update.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AlertsNotificationChannelUpdateConfiguration",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "alertsNotificationChannelsAddToPolicy",
     "description": "Associates notification channels with a policy.",
     "type": {
      "name": "AlertsNotificationChannelsAddToPolicyResponse",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "Account ID.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "notificationChannelIds",
       "description": "Notification channel IDs.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "kind": "LIST",
         "ofType": {
          "kind": "NON_NULL",
          "ofType": {
           "name": "ID",
           "kind": "SCALAR"
          }
         }
        }
       }
      },
      {
       "name": "policyId",
       "description": "Policy ID.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "alertsNotificationChannelsRemoveFromPolicy",
     "description": "Dissociates notification channels from a policy.",
     "type": {
      "name": "AlertsNotificationChannelsRemoveFromPolicyResponse",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "Account ID.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "notificationChannelIds",
       "description": "Notification channel IDs.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "kind": "LIST",
         "ofType": {
          "kind": "NON_NULL",
          "ofType": {
           "name": "ID",
           "kind": "SCALAR"
          }
         }
        }
       }
      },
      {
       "name": "policyId",
       "description": "Policy ID.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "alertsNrqlConditionBaselineCreate",
     "description": "Create a baseline NRQL condition.",
     "type": {
      "name": "AlertsNrqlBaselineCondition",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "Account ID.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "condition",
       "description": "Input settings for the baseline NRQL condition.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AlertsNrqlConditionBaselineInput",
         "kind": "INPUT_OBJECT"
        }
       }
      },
      {
       "name": "policyId",
       "description": "Policy ID for the condition.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "alertsNrqlConditionBaselineUpdate",
     "description": "Update a baseline NRQL condition.",
     "type": {
      "name": "AlertsNrqlBaselineCondition",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "Account ID.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "condition",
       "description": "Input settings for the baseline NRQL condition.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AlertsNrqlConditionUpdateBaselineInput",
         "kind": "INPUT_OBJECT"
        }
       }
      },
      {
       "name": "id",
       "description": "Alerts condition ID.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "alertsNrqlConditionOutlierCreate",
     "description": "Create an outlier NRQL condition.",
     "type": {
      "name": "AlertsNrqlOutlierCondition",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "Account ID.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "condition",
       "description": "Input settings for the outlier NRQL condition.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AlertsNrqlConditionOutlierInput",
         "kind": "INPUT_OBJECT"
        }
       }
      },
      {
       "name": "policyId",
       "description": "Policy ID for the condition.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "alertsNrqlConditionOutlierUpdate",
     "description": "Update an outlier NRQL condition.",
     "type": {
      "name": "AlertsNrqlOutlierCondition",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "Account ID.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "condition",
       "description": "Input settings for the outlier NRQL condition.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AlertsNrqlConditionUpdateOutlierInput",
         "kind": "INPUT_OBJECT"
        }
       }
      },
      {
       "name": "id",
       "description": "Alerts condition ID.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "alertsNrqlConditionStaticCreate",
     "description": "Create a static NRQL condition.",
     "type": {
      "name": "AlertsNrqlStaticCondition",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "Account ID.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "condition",
       "description": "Input settings for the static NRQL condition.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AlertsNrqlConditionStaticInput",
         "kind": "INPUT_OBJECT"
        }
       }
      },
      {
       "name": "policyId",
       "description": "Policy ID for the condition.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "alertsNrqlConditionStaticUpdate",
     "description": "Update a static NRQL condition.",
     "type": {
      "name": "AlertsNrqlStaticCondition",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "Account ID.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "condition",
       "description": "Input settings for the static NRQL condition.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AlertsNrqlConditionUpdateStaticInput",
         "kind": "INPUT_OBJECT"
        }
       }
      },
      {
       "name": "id",
       "description": "Alerts condition ID.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "alertsPolicyCreate",
     "description": "Create an Alerts policy.",
     "type": {
      "name": "AlertsPolicy",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "Account ID.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "policy",
       "description": "Policy to be created.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AlertsPolicyInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "alertsPolicyDelete",
     "description": "Delete an Alerts policy. This archives all conditions associated to the policy.",
     "type": {
      "name": "AlertsPolicyDeleteResponse",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "Account ID.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "id",
       "description": "Policy ID.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "alertsPolicyUpdate",
     "description": "Update an Alerts policy.",
     "type": {
      "name": "AlertsPolicy",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "Account ID.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "id",
       "description": "Policy ID.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "policy",
       "description": "Fields on the policy to be updated.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AlertsPolicyUpdateInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "apiAccessCreateKeys",
     "description": "Create keys. You can create keys for multiple accounts at once. You can read more about managing keys on [this documentation page](https://docs.newrelic.com/docs/apis/nerdgraph/examples/use-nerdgraph-manage-license-keys-personal-api-keys).",
     "type": {
      "name": "ApiAccessCreateKeyResponse",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "keys",
       "description": "A list of the configurations for each key you want to create.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ApiAccessCreateInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "apiAccessDeleteKeys",
     "description": "A mutation to delete keys.",
     "type": {
      "name": "ApiAccessDeleteKeyResponse",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "keys",
       "description": "A list of each key `id` that you want to delete. You can read more about managing keys on [this documentation page](https://docs.newrelic.com/docs/apis/nerdgraph/examples/use-nerdgraph-manage-license-keys-personal-api-keys).",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ApiAccessDeleteInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "apiAccessUpdateKeys",
     "description": "Update keys. You can update keys for multiple accounts at once. You can read more about managing keys on [this documentation page](https://docs.newrelic.com/docs/apis/nerdgraph/examples/use-nerdgraph-manage-license-keys-personal-api-keys).",
     "type": {
      "name": "ApiAccessUpdateKeyResponse",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "keys",
       "description": "The configurations of each key you want to update.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ApiAccessUpdateInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "apmApplicationEntityChangeSettings",
     "description": "Change the settings of an ApmApplicationEntity.",
     "type": {
      "name": "ApmApplicationEntitySettingsResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "guid",
       "description": "The guid of the ApmApplicationEntity to update.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EntityGuid",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "settings",
       "description": "The desired settings of the ApmApplicationEntity.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ApmApplicationEntitySettings",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "authorizationManagementGrantAccess",
     "description": "Grant access for a group",
     "type": {
      "name": "AuthorizationManagementGrantAccessPayload",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "grantAccessOptions",
       "description": "The object representing the group and the access to add",
       "type": {
        "name": "AuthorizationManagementGrantAccess",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "authorizationManagementRevokeAccess",
     "description": "Revoke access for a group",
     "type": {
      "name": "AuthorizationManagementRevokeAccessPayload",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "revokeAccessOptions",
       "description": "The object representing the group and the access to remove",
       "type": {
        "name": "AuthorizationManagementRevokeAccess",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "changeTrackingCreateDeployment",
     "description": "Creates a new deployment record in NRDB and its associated deployment marker.",
     "type": {
      "name": "ChangeTrackingDeployment",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "dataHandlingRules",
       "description": "Specify how you would like the API to handle validation failures.\nCurrently, the following validations should be considered:\n- Text fields must be less than 4,096 characters and encoded as UTF-8. By default, they will be trimmed with an UTF-8 ellipses character (…) placed at the end.\n- Failures to update the legacy REST API for APM entities can be used to determine whether the mutation should proceed.",
       "type": {
        "name": "ChangeTrackingDataHandlingRules",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "deployment",
       "description": "The deployment to create.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ChangeTrackingDeploymentInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "cloudConfigureIntegration",
     "description": "Create or modify a cloud integration.\n\nFor details and mutation examples visit\n[our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/manage-your-aws-azure-google-cloud-integrations-graphql-api).",
     "type": {
      "name": "CloudConfigureIntegrationPayload",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "Your New Relic account ID",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "integrations",
       "description": "The cloud integrations you want to configure.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "CloudIntegrationsInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "cloudDisableIntegration",
     "description": "Disable a cloud integration. Stops collecting data for the specified integration.\n\nFor details and mutation examples visit\n[our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/manage-your-aws-azure-google-cloud-integrations-graphql-api).",
     "type": {
      "name": "CloudDisableIntegrationPayload",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "Your New Relic account ID",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "integrations",
       "description": "The integrations you want to disable",
       "type": {
        "name": "CloudDisableIntegrationsInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "cloudLinkAccount",
     "description": "Link a cloud provider account to a New Relic Account.\n\nFor details and mutation examples visit\n[our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/manage-your-aws-azure-google-cloud-integrations-graphql-api).",
     "type": {
      "name": "CloudLinkAccountPayload",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "Your New Relic account ID",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "accounts",
       "description": "The cloud provider account you want to link to your New Relic account.",
       "type": {
        "name": "CloudLinkCloudAccountsInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "cloudMigrateAwsGovCloudToAssumeRole",
     "description": "Migrate one or more existing AWS GovCloud Accounts to use AssumeRole authentication.\n\nFor details and mutation examples visit\n[our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/manage-your-aws-azure-google-cloud-integrations-graphql-api).",
     "type": {
      "name": "CloudMigrateAwsGovCloudToAssumeRolePayload",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "Your New Relic account ID",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "accounts",
       "description": "One or multiple ARNs for the IAM Role for the different accounts.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "kind": "LIST",
         "ofType": {
          "kind": "NON_NULL",
          "ofType": {
           "name": "CloudAwsGovCloudMigrateToAssumeroleInput",
           "kind": "INPUT_OBJECT"
          }
         }
        }
       }
      }
     ]
    },
    {
     "name": "cloudRenameAccount",
     "description": "Rename one or more linked cloud provider accounts.\n\nFor details and mutation examples visit\n[our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/manage-your-aws-azure-google-cloud-integrations-graphql-api).",
     "type": {
      "name": "CloudRenameAccountPayload",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "Your New Relic account ID",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "accounts",
       "description": "The cloud provider account you want to rename.",
       "type": {
        "kind": "LIST",
        "ofType": {
         "name": "CloudRenameAccountsInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "cloudUnlinkAccount",
     "description": "Unlink one or more cloud provider accounts.\nStops collecting data for all the associated integrations.\n\nFor details and mutation examples visit\n[our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/manage-your-aws-azure-google-cloud-integrations-graphql-api).",
     "type": {
      "name": "CloudUnlinkAccountPayload",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "Your New Relic account ID",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "accounts",
       "description": "The cloud provider accounts you want to unlink.",
       "type": {
        "kind": "LIST",
        "ofType": {
         "name": "CloudUnlinkAccountsInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "cloudUpdateAccount",
     "description": "Update one or more Cloud Provider accounts to a NewRelic account. Updates each Linked account with the passed parameters.",
     "type": {
      "name": "CloudUpdateAccountPayload",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "Your New Relic account ID.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "accounts",
       "description": "The desired cloud accounts to be updated.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "CloudUpdateCloudAccountsInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "dashboardAddWidgetsToPage",
     "description": "Add widgets to a `DashboardPage`",
     "type": {
      "name": "DashboardAddWidgetsToPageResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "guid",
       "description": "Unique entity identifier of the `DashboardPage` where widgets will be added.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EntityGuid",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "widgets",
       "description": "Widgets input holding all required widgets data.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "kind": "LIST",
         "ofType": {
          "kind": "NON_NULL",
          "ofType": {
           "name": "DashboardWidgetInput",
           "kind": "INPUT_OBJECT"
          }
         }
        }
       }
      }
     ]
    },
    {
     "name": "dashboardCreate",
     "description": "Create a `DashboardEntity`",
     "type": {
      "name": "DashboardCreateResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "Account ID where the `DashboardEntity` will be created.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "dashboard",
       "description": "Dashboard input holding all required `DashboardEntity` data.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "DashboardInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "dashboardCreateSnapshotUrl",
     "description": "Creates a public URL where a `DashboardPage` can be accessed in the form of a static snapshot.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     },
     "args": [
      {
       "name": "guid",
       "description": "Unique entity identifier of the `DashboardPage` to be accessed as a snapshot through a public URL.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EntityGuid",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "params",
       "description": "Optional input parameters for the generated snapshot.",
       "type": {
        "name": "DashboardSnapshotUrlInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "dashboardDelete",
     "description": "Delete an existing `DashboardEntity`",
     "type": {
      "name": "DashboardDeleteResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "guid",
       "description": "Unique entity identifier of the `DashboardEntity` to be deleted. A dashboard guid must be specified. Dashboard page guids are not supported.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EntityGuid",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "dashboardUndelete",
     "description": "Undelete a `DashboardEntity` that was previously deleted.",
     "type": {
      "name": "DashboardUndeleteResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "guid",
       "description": "Unique entity identifier of the `DashboardEntity` to be undeleted. A dashboard guid must be specified. Dashboard page guids are not supported.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EntityGuid",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "dashboardUpdate",
     "description": "Update an existing `DashboardEntity`",
     "type": {
      "name": "DashboardUpdateResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "dashboard",
       "description": "Dashboard input holding all required data from an existing `DashboardEntity`.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "DashboardInput",
         "kind": "INPUT_OBJECT"
        }
       }
      },
      {
       "name": "guid",
       "description": "Unique entity identifier of the `DashboardEntity` to be updated.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EntityGuid",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "dashboardUpdateLiveUrl",
     "description": "Updates a created public Live URL",
     "type": {
      "name": "DashboardLiveUrl",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "id",
       "description": "The unique identifier of the public live URL to be updated.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "options",
       "description": "Options to configure the live url when is updated",
       "type": {
        "name": "DashboardLiveUrlOptionsInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "dashboardUpdatePage",
     "description": "Update a page in a dashboard.",
     "type": {
      "name": "DashboardUpdatePageResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "guid",
       "description": "Unique entity identifier of the Page to be updated.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EntityGuid",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "page",
       "description": "Page input holding all required data to update a page.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "DashboardUpdatePageInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "dashboardUpdateWidgetsInPage",
     "description": "Update an existing set of `Widget`s in a `DashboardPage`",
     "type": {
      "name": "DashboardUpdateWidgetsInPageResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "guid",
       "description": "Unique entity identifier of the `DashboardPage` where widgets will be updated.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EntityGuid",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "widgets",
       "description": "Widgets input holding all required widgets data.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "kind": "LIST",
         "ofType": {
          "kind": "NON_NULL",
          "ofType": {
           "name": "DashboardUpdateWidgetInput",
           "kind": "INPUT_OBJECT"
          }
         }
        }
       }
      }
     ]
    },
    {
     "name": "dashboardWidgetRevokeLiveUrl",
     "description": "Revokes a `DashboardWidget` public live URL that was created in advance.",
     "type": {
      "name": "DashboardRevokeLiveUrlResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "uuid",
       "description": "The unique identifier of the public live URL to be revoked.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "dataManagementCopyRetentions",
     "description": "Bulk copy account rules to list of accounts",
     "type": {
      "name": "DataManagementBulkCopyResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "destinationAccountIds",
       "description": "A list of IDs for the accounts that should have the source account retentions applied.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "kind": "LIST",
         "ofType": {
          "name": "Int",
          "kind": "SCALAR"
         }
        }
       }
      },
      {
       "name": "sourceAccountId",
       "description": "The ID of the source account",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "dataManagementCreateAccountLimit",
     "description": "Create a new account limit",
     "type": {
      "name": "DataManagementAccountLimit",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "The id for the account",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "accountLimit",
       "description": "Global limit",
       "type": {
        "name": "DataManagementAccountLimitInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "dataManagementCreateEventRetentionRule",
     "description": "Create a new event retention rule for a namespace on an account",
     "type": {
      "name": "DataManagementRule",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "The ID of the account the event retention rule applies to",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "namespace",
       "description": "The namespace the event retention rule applies to",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "retentionInDays",
       "description": "Length of time for event data retention (in days)",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "dataManagementCreateRetentionRules",
     "description": "Create event retention rules for namespaces",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "DataManagementRule",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "accountId",
       "description": "The ID of the account the new retention rules will apply to",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "retentionRules",
       "description": "List of rule_input params (:namespace, :retention_in_days) for new rules to be created",
       "type": {
        "kind": "LIST",
        "ofType": {
         "name": "DataManagementRuleInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "dataManagementDeleteEventRetentionRule",
     "description": "Delete the event retention rule for a namespace on an account, if it exists",
     "type": {
      "name": "DataManagementRule",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "The ID of the event retention rule's account",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "namespace",
       "description": "The event retention rule's namespace",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "dataManagementUpdateFeatureSettings",
     "description": "Mutation to add and change a feature setting toggle for an account",
     "type": {
      "name": "DataManagementFeatureSetting",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "The ID of the account to apply this feature setting",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "setting",
       "description": "Arguments to update the feature setting on an account",
       "type": {
        "name": "DataManagementAccountFeatureSettingInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "edgeCreateTraceFilterRules",
     "description": "Create one or more trace filter rules, as defined by the `CreateTraceFilterRulesInput`.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EdgeCreateTraceFilterRuleResponses",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "accountId",
       "description": "ID of the account in the account family the trace observer belongs to.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "rules",
       "description": "A grouping of trace filter rule configurations",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EdgeCreateTraceFilterRulesInput",
         "kind": "INPUT_OBJECT"
        }
       }
      },
      {
       "name": "traceObserverId",
       "description": "ID of the trace observer to apply the trace filter(s) to.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "edgeCreateTraceObserver",
     "description": "Create one or more trace observers, as defined by the `CreateTraceObserverInput`. Currently, only one trace observer can be created per provider region.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EdgeCreateTraceObserverResponses",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "accountId",
       "description": "ID of the account in the account family the trace observer(s) belong to.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "traceObserverConfigs",
       "description": "One or more `CreateTraceObserverInput` that describe the trace observer to be created.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "kind": "LIST",
         "ofType": {
          "kind": "NON_NULL",
          "ofType": {
           "name": "EdgeCreateTraceObserverInput",
           "kind": "INPUT_OBJECT"
          }
         }
        }
       }
      }
     ]
    },
    {
     "name": "edgeDeleteTraceFilterRules",
     "description": "Delete one or more trace filter rules, as defined by the `DeleteTraceFilterRulesInput`.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EdgeDeleteTraceFilterRuleResponses",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "accountId",
       "description": "ID of the account in the account family the trace observer belongs to.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "rules",
       "description": "A grouping of trace filter rule configurations",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EdgeDeleteTraceFilterRulesInput",
         "kind": "INPUT_OBJECT"
        }
       }
      },
      {
       "name": "traceObserverId",
       "description": "ID of the trace observer to remove the provided trace filter(s) from.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "edgeDeleteTraceObservers",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EdgeDeleteTraceObserverResponses",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "accountId",
       "description": "ID of the account in the account family the trace observer(s) belong to.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "traceObserverConfigs",
       "description": "One or more `DeleteTraceObserverInput` that describe the trace observer to be deleted.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "kind": "LIST",
         "ofType": {
          "kind": "NON_NULL",
          "ofType": {
           "name": "EdgeDeleteTraceObserverInput",
           "kind": "INPUT_OBJECT"
          }
         }
        }
       }
      }
     ]
    },
    {
     "name": "edgeUpdateTraceObservers",
     "description": "Update one or more trace observers, as defined by the `UpdateTraceObserverInput`.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EdgeUpdateTraceObserverResponses",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "accountId",
       "description": "ID of the account in the account family the trace observer(s) belong to.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "traceObserverConfigs",
       "description": "One or more `UpdateTraceObserverInput` that describe the trace observer to be updated.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "kind": "LIST",
         "ofType": {
          "kind": "NON_NULL",
          "ofType": {
           "name": "EdgeUpdateTraceObserverInput",
           "kind": "INPUT_OBJECT"
          }
         }
        }
       }
      }
     ]
    },
    {
     "name": "entityDelete",
     "description": "Delete an entity",
     "type": {
      "name": "EntityDeleteResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "forceDelete",
       "description": "Set to true to skip safety checks and force-delete the entity",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Boolean",
         "kind": "SCALAR"
        }
       },
       "defaultValue": "false"
      },
      {
       "name": "guids",
       "description": "List of guids to be deleted",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "kind": "LIST",
         "ofType": {
          "kind": "NON_NULL",
          "ofType": {
           "name": "EntityGuid",
           "kind": "SCALAR"
          }
         }
        }
       }
      }
     ]
    },
    {
     "name": "entityGoldenMetricsOverride",
     "description": "Override the default golden metrics given an account or a collection guid. Only use one context",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EntityGoldenMetricsDomainTypeScopedResponse",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "context",
       "description": "Context to scope the golden metrics",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EntityGoldenContextInput",
         "kind": "INPUT_OBJECT"
        }
       }
      },
      {
       "name": "domainType",
       "description": "Entity Domain Type to override the golden metrics",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "DomainTypeInput",
         "kind": "INPUT_OBJECT"
        }
       }
      },
      {
       "name": "metrics",
       "description": "The new golden metrics by the entity domain type and the context",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "kind": "LIST",
         "ofType": {
          "kind": "NON_NULL",
          "ofType": {
           "name": "EntityGoldenMetricInput",
           "kind": "INPUT_OBJECT"
          }
         }
        }
       }
      }
     ]
    },
    {
     "name": "entityGoldenMetricsReset",
     "description": "Reset the default golden metrics given an account or a collection guid. Only use one context",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EntityGoldenMetricsDomainTypeScopedResponse",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "context",
       "description": "Context to scope the golden metrics",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EntityGoldenContextInput",
         "kind": "INPUT_OBJECT"
        }
       }
      },
      {
       "name": "domainType",
       "description": "Entity Domain Type to reset the golden metrics",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "DomainTypeInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "entityGoldenTagsOverride",
     "description": "Override the default tags given an account or a collection guid. Only use one context",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EntityGoldenTagsDomainTypeScopedResponse",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "context",
       "description": "Context to scope the golden metrics",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EntityGoldenContextInput",
         "kind": "INPUT_OBJECT"
        }
       }
      },
      {
       "name": "domainType",
       "description": "Entity Domain Type to override the golden tags",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "DomainTypeInput",
         "kind": "INPUT_OBJECT"
        }
       }
      },
      {
       "name": "tags",
       "description": "The new golden tags by the entity domain type and the tags",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "kind": "LIST",
         "ofType": {
          "kind": "NON_NULL",
          "ofType": {
           "name": "EntityGoldenTagInput",
           "kind": "INPUT_OBJECT"
          }
         }
        }
       }
      }
     ]
    },
    {
     "name": "entityGoldenTagsReset",
     "description": "Reset the default tags given an account or a collection guid. Only use one context",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EntityGoldenTagsDomainTypeScopedResponse",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "context",
       "description": "Context to scope the golden metrics",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EntityGoldenContextInput",
         "kind": "INPUT_OBJECT"
        }
       }
      },
      {
       "name": "domainType",
       "description": "Entity Domain Type to reset the golden tags",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "DomainTypeInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "entityRelationshipUserDefinedCreateOrReplace",
     "description": "Create a relationship between entities.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EntityRelationshipUserDefinedCreateOrReplaceResult",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "sourceEntityGuid",
       "description": "The source entity guid of the relationship.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EntityGuid",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "targetEntityGuid",
       "description": "The target entity guid of the relationship.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EntityGuid",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "type",
       "description": "The type of the relationship.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EntityRelationshipEdgeType",
         "kind": "ENUM"
        }
       }
      }
     ]
    },
    {
     "name": "entityRelationshipUserDefinedDelete",
     "description": "Delete a relationship between entities. If no type is provided, it will delete all relationships between source and target.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EntityRelationshipUserDefinedDeleteResult",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "sourceEntityGuid",
       "description": "The source entity guid of the relationship.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EntityGuid",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "targetEntityGuid",
       "description": "The target entity guid of the relationship.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EntityGuid",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "type",
       "description": "The type of the relationship. If none provided, it will delete all relationships between source and target.",
       "type": {
        "name": "EntityRelationshipEdgeType",
        "kind": "ENUM"
       }
      }
     ]
    },
    {
     "name": "errorsInboxAssignErrorGroup",
     "description": "Assigns a user to an error group",
     "type": {
      "name": "ErrorsInboxAssignErrorGroupResponse",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "assignment",
       "description": "An input object that represents the new assignment.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ErrorsInboxAssignErrorGroupInput",
         "kind": "INPUT_OBJECT"
        }
       }
      },
      {
       "name": "id",
       "description": "The id of the error group.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "errorsInboxDeleteErrorGroupResource",
     "description": "Removes a resource from an error group.",
     "type": {
      "name": "ErrorsInboxDeleteErrorGroupResourceResponse",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "id",
       "description": "The id of the error group.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "resourceId",
       "description": "Id of the resource",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "errorsInboxUpdateErrorGroupState",
     "description": "Updates the states of error groups.",
     "type": {
      "name": "ErrorsInboxUpdateErrorGroupStateResponse",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "id",
       "description": "DEPRECATED. Use `ids` field instead.",
       "type": {
        "name": "ID",
        "kind": "SCALAR"
       }
      },
      {
       "name": "ids",
       "description": "The ids of the error groups.",
       "type": {
        "kind": "LIST",
        "ofType": {
         "kind": "NON_NULL",
         "ofType": {
          "name": "ID",
          "kind": "SCALAR"
         }
        }
       }
      },
      {
       "name": "resolveInNextVersion",
       "description": "Allows error group(s) to be marked as `Resolved` prior to deployment.  Configures errors inbox to resolve an error group in the next semantically higher version that is detected via change tracking. Cannot be used with `versions`.\n\nFor example, if an error group is occurring in version `1.5` and marked as `resolvedInNextVersion` = `true`, then the error group will remain in a resolved state for errors with versions `1.5` or lower.\n- When the next version is deployed (say `1.6`), the error group will be updated to reflect as resolved in version `1.6`.\n- If an error occurs in a newer version (say `1.6`) before the next detected deployment, then the error group will be set to unresolved with regression in `1.6`.",
       "type": {
        "name": "Boolean",
        "kind": "SCALAR"
       }
      },
      {
       "name": "state",
       "description": "State that the error groups should transition to.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ErrorsInboxErrorGroupState",
         "kind": "ENUM"
        }
       }
      },
      {
       "name": "versions",
       "description": "Optionally specify versions of the entity for which an error group's state applies. Note: this is currently only applicable for `Resolved` and cannot be used with `resolvedInNextVersion`.\n\nFor example, let's say a given error group is occurring for version `1.0.0`.  A fix was implemented and deployed in `1.0.1`.  The error group may be marked as `Resolved` in version `1.0.1`.  For any errors still occurring in `1.0.0` or lower, they will continue to appear as occurrences but the error group will remain in a resolved state.  If there is a new occurrence in `1.0.1` or higher, then the error group will become unresolved with regression in the affected version(s).",
       "type": {
        "name": "ErrorsInboxStateVersionInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "eventsToMetricsCreateRule",
     "description": "Create a new rule which will make metrics from event data.",
     "type": {
      "name": "EventsToMetricsCreateRuleResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "rules",
       "description": "List of events to metrics rules to create.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "kind": "LIST",
         "ofType": {
          "name": "EventsToMetricsCreateRuleInput",
          "kind": "INPUT_OBJECT"
         }
        }
       }
      }
     ]
    },
    {
     "name": "eventsToMetricsDeleteRule",
     "description": "Delete an event-to-metric rule.",
     "type": {
      "name": "EventsToMetricsDeleteRuleResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "deletes",
       "description": "List of events to metrics rules to delete.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "kind": "LIST",
         "ofType": {
          "name": "EventsToMetricsDeleteRuleInput",
          "kind": "INPUT_OBJECT"
         }
        }
       }
      }
     ]
    },
    {
     "name": "eventsToMetricsUpdateRule",
     "description": "Enable or disable an event-to-metric rule.",
     "type": {
      "name": "EventsToMetricsUpdateRuleResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "updates",
       "description": "List of events to metrics rules to update.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "kind": "LIST",
         "ofType": {
          "name": "EventsToMetricsUpdateRuleInput",
          "kind": "INPUT_OBJECT"
         }
        }
       }
      }
     ]
    },
    {
     "name": "historicalDataExportCancelExport",
     "description": "Cancel a historic export",
     "type": {
      "name": "HistoricalDataExportCustomerExportResponse",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "The account id which created the export",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "id",
       "description": "The id of the export to cancel",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "historicalDataExportCreateExport",
     "description": "Create a historic export",
     "type": {
      "name": "HistoricalDataExportCustomerExportResponse",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "The account id to run the Export against",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "nrql",
       "description": "The NRQL string to use for this Export",
       "type": {
        "name": "Nrql",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "incidentIntelligenceEnvironmentConsentAccounts",
     "description": "Consent accounts to usage of the Incident Intelligence product in the EU or FedRAMP",
     "type": {
      "name": "IncidentIntelligenceEnvironmentConsentAccounts",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountIds",
       "description": "The account ids to mark with consent, will consent the parent accounts",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "kind": "LIST",
         "ofType": {
          "name": "Int",
          "kind": "SCALAR"
         }
        }
       }
      }
     ]
    },
    {
     "name": "incidentIntelligenceEnvironmentConsentAuthorizedAccounts",
     "description": "Consent all of the user's authorized accounts",
     "type": {
      "name": "IncidentIntelligenceEnvironmentConsentAuthorizedAccounts",
      "kind": "OBJECT"
     }
    },
    {
     "name": "incidentIntelligenceEnvironmentCreateEnvironment",
     "description": "Creates a new environment, each environment is attached to a parent account and an account. Note that only one environment per parent account is supported.",
     "type": {
      "name": "IncidentIntelligenceEnvironmentCreateEnvironment",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "associatedAccountIds",
       "description": "The account ids of the accounts that should be manually associated with the environment, if empty or null then the accounts are determinted automatically",
       "type": {
        "kind": "LIST",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "incidentIntelligenceAccountId",
       "description": "The account id to attach to the environment",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "name",
       "description": "The environment name",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "incidentIntelligenceEnvironmentDeleteEnvironment",
     "description": "Deletes an existing environment",
     "type": {
      "name": "IncidentIntelligenceEnvironmentDeleteEnvironment",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "The account id to delete",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "incidentIntelligenceEnvironmentDissentAccounts",
     "description": "Dissent accounts to usage of the Incident Intelligence product in the EU or FedRAMP (removes the consent marking)",
     "type": {
      "name": "IncidentIntelligenceEnvironmentDissentAccounts",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountIds",
       "description": "The account ids to dissent, empty list will mark all of the current user parent-accounts",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "kind": "LIST",
         "ofType": {
          "name": "Int",
          "kind": "SCALAR"
         }
        }
       }
      }
     ]
    },
    {
     "name": "installationCreateInstallStatus",
     "description": "Creates a new install status.\nAn install status is created on behalf of the newrelic-cli whenever the CLI has started an installation and completed an installation.\n\nGuided install: https://docs.newrelic.com/docs/full-stack-observability/observe-everything/get-started/new-relic-guided-install-overview/\nnewrelic-cli: https://github.com/newrelic/newrelic-cli",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "InstallationInstallStatus",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "accountId",
       "description": "The accountId associated with the install status.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "installStatus",
       "description": "The installation status.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "InstallationInstallStatusInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "installationCreateRecipeEvent",
     "description": "Creates a new recipe event.\n- A recipe event is created on behalf of the newrelic-cli whenever the CLI attempts to install the infrastructure-agent, for example.\n- A recipe event is appended to any existing recipe events, if there are any present in the cache.\n\nGuided install: https://docs.newrelic.com/docs/full-stack-observability/observe-everything/get-started/new-relic-guided-install-overview/\nnewrelic-cli: https://github.com/newrelic/newrelic-cli",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "InstallationRecipeEvent",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "accountId",
       "description": "The accountId associated with the recipe event.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "status",
       "description": "The installation status associated with the recipe event.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "InstallationRecipeStatus",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "installationDeleteInstall",
     "description": "Deletes an installation status and all recipe statuses given the accountId.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     },
     "args": [
      {
       "name": "accountId",
       "description": "The accountId associated with the installation.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "keyTransactionCreate",
     "description": "Creates a key transaction.",
     "type": {
      "name": "KeyTransactionCreateResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "apdexTarget",
       "description": "The acceptable amount of the time spent in the backend before customers get frustrated (Apdex target).",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Float",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "applicationGuid",
       "description": "The GUID of the application.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EntityGuid",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "browserApdexTarget",
       "description": "The acceptable amount of time for rendering a page in a browser before customers get frustrated (browser Apdex target).",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Float",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "metricName",
       "description": "The name of the metric underlying this key transaction.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "name",
       "description": "The name of the key transaction.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "keyTransactionDelete",
     "description": "Deletes a key transaction (historical data is not removed).",
     "type": {
      "name": "KeyTransactionDeleteResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "guid",
       "description": "The GUID of the key transaction to delete.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EntityGuid",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "keyTransactionUpdate",
     "description": "Update a key transaction.",
     "type": {
      "name": "KeyTransactionUpdateResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "apdexTarget",
       "description": "The acceptable amount of time spent in the backend before customers get frustrated (Apdex target).",
       "type": {
        "name": "Float",
        "kind": "SCALAR"
       }
      },
      {
       "name": "browserApdexTarget",
       "description": "The acceptable amount of time for rendering a page in a browser before customers get frustrated (browser Apdex target).",
       "type": {
        "name": "Float",
        "kind": "SCALAR"
       }
      },
      {
       "name": "guid",
       "description": "The GUID for the affected key transaction.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EntityGuid",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "name",
       "description": "The name of the key transaction.",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "logConfigurationsCreateDataPartitionRule",
     "description": "Create a new data partition rule.",
     "type": {
      "name": "LogConfigurationsCreateDataPartitionRuleResponse",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "The account id associated with the data partition rule.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "rule",
       "description": "The data partition rule to be created.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "LogConfigurationsCreateDataPartitionRuleInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "logConfigurationsCreateObfuscationExpression",
     "description": "Create an obfuscation expression.",
     "type": {
      "name": "LogConfigurationsObfuscationExpression",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "The account id associated with the obfuscation expression.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "expression",
       "description": "The obfuscation expression you want to create.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "LogConfigurationsCreateObfuscationExpressionInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "logConfigurationsCreateObfuscationRule",
     "description": "Create an obfuscation rule.",
     "type": {
      "name": "LogConfigurationsObfuscationRule",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "The account id associated with the obfuscation rule.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "rule",
       "description": "The obfuscation rule you want to create.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "LogConfigurationsCreateObfuscationRuleInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "logConfigurationsCreateParsingRule",
     "description": "Create a new parsing rule.",
     "type": {
      "name": "LogConfigurationsCreateParsingRuleResponse",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "The account id associated with the rule.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "rule",
       "description": "The rule to be created.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "LogConfigurationsParsingRuleConfiguration",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "logConfigurationsDeleteDataPartitionRule",
     "description": "Delete an existing data partition rule.\nThis operation will result in data to be allocated in the main NRDB storage (Log) if no other data partition rule exists intercepting the logs matching this rule.\nA deleted data partition rule can be recreated using the same name.",
     "type": {
      "name": "LogConfigurationsDeleteDataPartitionRuleResponse",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "The account id associated with the data partition rule.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "id",
       "description": "The id of the data partition rule you want to mark as deleted.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "logConfigurationsDeleteObfuscationExpression",
     "description": "Delete an obfuscation expression.",
     "type": {
      "name": "LogConfigurationsObfuscationExpression",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "The account id associated with the obfuscation expression.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "id",
       "description": "The id of the obfuscation expression to mark as deleted.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "logConfigurationsDeleteObfuscationRule",
     "description": "Delete an obfuscation rule.",
     "type": {
      "name": "LogConfigurationsObfuscationRule",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "The account id associated with the obfuscation rule.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "id",
       "description": "The id of the obfuscation rule to mark as deleted.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "logConfigurationsDeleteParsingRule",
     "description": "Delete an existing parsing rule.",
     "type": {
      "name": "LogConfigurationsDeleteParsingRuleResponse",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "The account id associated with the rule.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "id",
       "description": "The id of the rule you want to mark as deleted.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "logConfigurationsUpdateDataPartitionRule",
     "description": "Update an existing data partition rule.",
     "type": {
      "name": "LogConfigurationsUpdateDataPartitionRuleResponse",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "The account id associated with the data partition rule.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "rule",
       "description": "The data partition rule to be updated. Only the rule description or Matching criteria fields are allowed to be updated.",
       "type": {
        "name": "LogConfigurationsUpdateDataPartitionRuleInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "logConfigurationsUpdateLiveArchiveConfiguration",
     "description": "Update the Live Archive configuration of an event type.",
     "type": {
      "name": "LogConfigurationsLiveArchiveConfiguration",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "The account id associated with the EventType.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "enabled",
       "description": "Indicates if the Live Archive configuration is enabled",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Boolean",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "eventType",
       "description": "EventType name that will be configured.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "retentionPolicy",
       "description": "Retention policy for the EventType.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "LogConfigurationsLiveArchiveRetentionPolicyType",
         "kind": "ENUM"
        }
       }
      }
     ]
    },
    {
     "name": "logConfigurationsUpdateObfuscationExpression",
     "description": "Update an existing data partition rule.",
     "type": {
      "name": "LogConfigurationsObfuscationExpression",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "The account id associated with the obfuscation expression.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "expression",
       "description": "The obfuscation expression to be updated.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "LogConfigurationsUpdateObfuscationExpressionInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "logConfigurationsUpdateObfuscationRule",
     "description": "Update an existing data partition rule.",
     "type": {
      "name": "LogConfigurationsObfuscationRule",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "The account id associated with the obfuscation rule.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "rule",
       "description": "The obfuscation rule to be updated.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "LogConfigurationsUpdateObfuscationRuleInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "logConfigurationsUpdateParsingRule",
     "description": "Update an existing parsing rule.",
     "type": {
      "name": "LogConfigurationsUpdateParsingRuleResponse",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "The account id associated with the rule.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "id",
       "description": "The identifier of the rule to update.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "rule",
       "description": "The updated rule.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "LogConfigurationsParsingRuleConfiguration",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "logConfigurationsUpsertPipelineConfiguration",
     "description": "Upsert pipeline configuration for an account.",
     "type": {
      "name": "LogConfigurationsUpsertPipelineConfigurationResponse",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "The account id associated with the rule.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "pipelineConfiguration",
       "description": "The updated pipeline configuration.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "LogConfigurationsPipelineConfigurationInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "metricNormalizationCreateRule",
     "description": "Creates a metric normalization rule",
     "type": {
      "name": "MetricNormalizationRuleMutationResponse",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "Account Id",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "rule",
       "description": "An input object that represents the rule to be created.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "MetricNormalizationCreateRuleInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "metricNormalizationDisableRule",
     "description": "Disables a metric normalization rule",
     "type": {
      "name": "MetricNormalizationRuleMutationResponse",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "Account Id",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "ruleId",
       "description": "Rule id",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "metricNormalizationEditRule",
     "description": "edit a metric normalization rule",
     "type": {
      "name": "MetricNormalizationRuleMutationResponse",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "Account Id",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "rule",
       "description": "An input object that represents the rule to be created.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "MetricNormalizationEditRuleInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "metricNormalizationEnableRule",
     "description": "Enables a metric normalization rule",
     "type": {
      "name": "MetricNormalizationRuleMutationResponse",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "Account Id",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "ruleId",
       "description": "Rule id",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "mobilePushNotificationRemoveDevice",
     "description": "Remove a mobile device from the users list of devices",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "MobilePushNotificationRemoveDeviceResult",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "deviceId",
       "description": "The uuid of the device.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "mobilePushNotificationSendTestPush",
     "description": "Send a test push notification to a users specific mobile device",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "MobilePushNotificationSendPushResult",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "deviceId",
       "description": "The uuid of the device.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "mobilePushNotificationSendTestPushToAll",
     "description": "Send a test push notification to all of a users mobile devices",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "MobilePushNotificationSendPushResult",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "nerdStorageDeleteCollection",
     "description": "Delete a NerdStorage collection.\n\nTo use the NerdStorage schema you must specify a Nerdpack ID using the NewRelic-Package-Id header in your request.",
     "type": {
      "name": "NerdStorageDeleteResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "collection",
       "description": "The collection to be deleted.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "scope",
       "description": "The data access level and ID for the selected scope.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "NerdStorageScopeInput",
         "kind": "INPUT_OBJECT"
        }
       }
      },
      {
       "name": "scopeByActor",
       "type": {
        "name": "Boolean",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "nerdStorageDeleteDocument",
     "description": "Delete a NerdStorage document.\n\nTo use the NerdStorage schema you must specify a Nerdpack ID using the NewRelic-Package-Id header in your request.",
     "type": {
      "name": "NerdStorageDeleteResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "collection",
       "description": "The NerdStorage collection that the document being deleted belongs to.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "documentId",
       "description": "The documentId of the document to be deleted.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "scope",
       "description": "The data access level and ID for the selected scope.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "NerdStorageScopeInput",
         "kind": "INPUT_OBJECT"
        }
       }
      },
      {
       "name": "scopeByActor",
       "type": {
        "name": "Boolean",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "nerdStorageVaultDeleteSecret",
     "description": "Delete an existing secret for the selected scope.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "NerdStorageVaultDeleteSecretResult",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "key",
       "description": "The unique identifier of the secret.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "scope",
       "description": "The NerdStorageVault data access level of the secret.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "NerdStorageVaultScope",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "nerdStorageVaultWriteSecret",
     "description": "Store or modify a secret.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "NerdStorageVaultWriteSecretResult",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "scope",
       "description": "The type of scope the secret will be associated with.\nThe mutation allows for only one scope type at a time to add a secret.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "NerdStorageVaultScope",
         "kind": "INPUT_OBJECT"
        }
       }
      },
      {
       "name": "secret",
       "description": "The secrets data",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "NerdStorageVaultWriteSecretInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "nerdStorageWriteDocument",
     "description": "Create a new NerdStorage document.\n\nTo use the NerdStorage schema you must specify a Nerdpack ID using the NewRelic-Package-Id header in your request.",
     "type": {
      "name": "NerdStorageDocument",
      "kind": "SCALAR"
     },
     "args": [
      {
       "name": "collection",
       "description": "The NerdStorage collection to which the new document will be written.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "document",
       "description": "The new NerdStorage document to be written.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "NerdStorageDocument",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "documentId",
       "description": "The documentId for the newly created NerdStorage document.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "scope",
       "description": "The data access level and ID for the selected scope.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "NerdStorageScopeInput",
         "kind": "INPUT_OBJECT"
        }
       }
      },
      {
       "name": "scopeByActor",
       "type": {
        "name": "Boolean",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "nerdpackAddAllowedAccounts",
     "description": "Adds accounts to the Nerdpack allow list. The accounts must belong to the user's authorized account list.",
     "type": {
      "name": "NerdpackAllowListResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "allowList",
       "description": "Data of accounts to be added to the allow list.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "NerdpackAllowListInput",
         "kind": "INPUT_OBJECT"
        }
       }
      },
      {
       "name": "nerdpackId",
       "description": "Nerdpack id.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "nerdpackCreate",
     "description": "Creates a Nerdpack with a unique and random uuid V5.",
     "type": {
      "name": "NerdpackData",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "nerdpackData",
       "description": "Nerdpack input data.",
       "type": {
        "name": "NerdpackCreationInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "nerdpackRemoveAllowedAccounts",
     "description": "Removes accounts from the Nerdpack allow list. The accounts must belong to the user's authorized account list.",
     "type": {
      "name": "NerdpackAllowListResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "allowList",
       "description": "Data of accounts to be removed from the allow list.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "NerdpackAllowListInput",
         "kind": "INPUT_OBJECT"
        }
       }
      },
      {
       "name": "nerdpackId",
       "description": "Nerdpack id.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "nerdpackRemoveVersionTag",
     "description": "Remove a specific nerdpack version tag. This operation can only be performed if:\n- User has untagging capabilities.\n- User has accepted the terms and conditions.\n- User's account is the Nerdpack owner, or is an authorized account, or is an admin account for the Nerdpack owner account.",
     "type": {
      "name": "NerdpackRemovedTagResponse",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "nerdpackId",
       "description": "Nerdpack id.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "versionTag",
       "description": "Input data for nerdpack version tagging.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "NerdpackRemoveVersionTagInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "nerdpackSubscribeAccounts",
     "description": "Make a Nerdpack publication available to a list of accounts. Providing partial results.",
     "type": {
      "name": "NerdpackSubscribeResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "nerdpackId",
       "description": "Nerdpack id.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "subscription",
       "description": "Subscription data.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "NerdpackSubscribeAccountsInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "nerdpackTagVersion",
     "description": "Tag a Nerdpack version. This operation can only be performed if:\n- User has tagging capabilities.\n- User has accepted the terms and conditions.\n- User's account is the Nerdpack owner, or is an authorized account, or is an admin account for the Nerdpack owner account.",
     "type": {
      "name": "NerdpackVersion",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "nerdpackId",
       "description": "Nerdpack id.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "versionTag",
       "description": "Input data for nerdpack version tagging.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "NerdpackTagVersionInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "nerdpackUnsubscribeAccounts",
     "description": "Make a Nerdpack publication unavailable to a list of accounts. Providing partial results.",
     "type": {
      "name": "NerdpackUnsubscribeResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "nerdpackId",
       "description": "Nerdpack id.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "subscription",
       "description": "Subscription data.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "NerdpackUnsubscribeAccountsInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "nr1CatalogInstallAlertPolicyTemplate",
     "description": "Install an alert policy template on a given account for use in it",
     "type": {
      "name": "Nr1CatalogInstallAlertPolicyTemplateResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "The id of the account to install the alert policy template on",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "alertPolicyTemplateId",
       "description": "The id of the alert policy template to install on the account",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "nr1CatalogInstallDashboardTemplate",
     "description": "Install a dashboard template on a given account for use in it",
     "type": {
      "name": "Nr1CatalogInstallDashboardTemplateResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "The id of the account to install the dashboard template on",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "dashboardTemplateId",
       "description": "The id of the dashboard template to install on the account",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "nr1CatalogSubmitMetadata",
     "description": "Submit metadata for a Nerdpack that will be available in the New Relic One Catalog",
     "type": {
      "name": "Nr1CatalogSubmitMetadataResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "id",
       "description": "The Nerdpack's ID that will be associated with the metadata",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "nerdpackMetadata",
       "description": "The metadata for the Nerdpack that will be available in the New Relic One Catalog",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Nr1CatalogSubmitMetadataInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "nrqlDropRulesCreate",
     "description": "Create new drop rule(s).",
     "type": {
      "name": "NrqlDropRulesCreateDropRuleResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "The account the targeted data report to.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "rules",
       "description": "The list of drop rules you want to create.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "kind": "LIST",
         "ofType": {
          "name": "NrqlDropRulesCreateDropRuleInput",
          "kind": "INPUT_OBJECT"
         }
        }
       }
      }
     ]
    },
    {
     "name": "nrqlDropRulesDelete",
     "description": "Delete drop rule(s) by id.",
     "type": {
      "name": "NrqlDropRulesDeleteDropRuleResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "Account the rule was created on.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "ruleIds",
       "description": "The list of drop rules Ids you want to delete.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "kind": "LIST",
         "ofType": {
          "name": "ID",
          "kind": "SCALAR"
         }
        }
       }
      }
     ]
    },
    {
     "name": "organizationCreate",
     "description": "The new organization to create.",
     "type": {
      "name": "OrganizationCreateOrganizationResponse",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "customerId",
       "description": "The customer id in which the new organization will be created.",
       "type": {
        "name": "ID",
        "kind": "SCALAR"
       }
      },
      {
       "name": "newManagedAccount",
       "description": "The attributes of managed account to create. This is only required if sharedAccount field is not provided.",
       "type": {
        "name": "OrganizationNewManagedAccountInput",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "organization",
       "description": "The attributes of organization to create.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "OrganizationCreateOrganizationInput",
         "kind": "INPUT_OBJECT"
        }
       }
      },
      {
       "name": "sharedAccount",
       "description": "The attributes of the account that will be shared with the new organization. This is only required if newManagedAccount field is not provided",
       "type": {
        "name": "OrganizationSharedAccountInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "organizationCreateSharedAccount",
     "description": "The shared account to create",
     "type": {
      "name": "OrganizationCreateSharedAccountResponse",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "sharedAccount",
       "description": "The attributes for the account share.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "OrganizationCreateSharedAccountInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "organizationProvisioningUpdatePartnerSubscription",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "OrganizationProvisioningUpdateSubscriptionResult",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "accountId",
       "description": "Partner Owner Account Id for the Partnership that includes the affected account.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "affectedAccountId",
       "description": "Account id to which new entitlements will be applied",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "products",
       "description": "New entitlement set to be applied",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "kind": "LIST",
         "ofType": {
          "kind": "NON_NULL",
          "ofType": {
           "name": "OrganizationProvisioningProductInput",
           "kind": "INPUT_OBJECT"
          }
         }
        }
       }
      }
     ]
    },
    {
     "name": "organizationRevokeSharedAccount",
     "description": "The shared account to revoke",
     "type": {
      "name": "OrganizationRevokeSharedAccountResponse",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "sharedAccount",
       "description": "The attributes for the revoked account share.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "OrganizationRevokeSharedAccountInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "organizationUpdate",
     "description": "The organization to update",
     "type": {
      "name": "OrganizationUpdateResponse",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "organization",
       "description": "The new attributes for the organization.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "OrganizationUpdateInput",
         "kind": "INPUT_OBJECT"
        }
       }
      },
      {
       "name": "organizationId",
       "description": "The id of the organization to update",
       "type": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "organizationUpdateSharedAccount",
     "description": "The shared account to update",
     "type": {
      "name": "OrganizationUpdateSharedAccountResponse",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "sharedAccount",
       "description": "The new attributes for the account share.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "OrganizationUpdateSharedAccountInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "pixieLinkPixieProject",
     "description": "Link a Pixie project to a New Relic account using a Pixie API key",
     "type": {
      "name": "PixieLinkPixieProjectResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "The New Relic account to link with Pixie",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "apiKey",
       "description": "The Pixie API key",
       "type": {
        "name": "SecureValue",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "pixieRecordPixieTosAcceptance",
     "description": "Record the Pixie terms of service acceptance for a given account",
     "type": {
      "name": "PixieRecordPixieTosAcceptanceResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "The New Relic account to link with Pixie",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "pixieUnlinkPixieProject",
     "description": "Unlink a Pixie project to a New Relic account",
     "type": {
      "name": "PixieLinkPixieProjectResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "The New Relic account to link with Pixie",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "referenceEntityCreateOrUpdateRepository",
     "description": "Creates or updates repository entities.",
     "type": {
      "name": "ReferenceEntityCreateRepositoryResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "repositories",
       "description": "The list of repositories to create or update.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "kind": "LIST",
         "ofType": {
          "kind": "NON_NULL",
          "ofType": {
           "name": "ReferenceEntityCreateRepositoryInput",
           "kind": "INPUT_OBJECT"
          }
         }
        }
       }
      },
      {
       "name": "sync",
       "description": "Flag to force a synchronous execution of the mutation, which means that the entity has been stored once the mutation returns. Default is 'false', which means the entity is queued for storage.",
       "type": {
        "name": "Boolean",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "serviceLevelCreate",
     "description": "Creates a new SLI.",
     "type": {
      "name": "ServiceLevelIndicator",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "entityGuid",
       "description": "The entity GUID which the SLI will be attached to.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EntityGuid",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "indicator",
       "description": "The input object that represents the SLI that will be created.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ServiceLevelIndicatorCreateInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "serviceLevelDelete",
     "description": "Deletes an existing SLI by the GUID.",
     "type": {
      "name": "ServiceLevelIndicator",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "guid",
       "description": "The unique entity identifier of the SLI.",
       "type": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      },
      {
       "name": "id",
       "description": "[DEPRECATED] Please, use the GUID input field to delete the SLI.",
       "type": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "serviceLevelUpdate",
     "description": "Updates an existing SLI by the GUID.",
     "type": {
      "name": "ServiceLevelIndicator",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "guid",
       "description": "The unique entity identifier of the SLI.",
       "type": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      },
      {
       "name": "id",
       "description": "[DEPRECATED] Please, use the GUID input field to update the SLI.",
       "type": {
        "name": "ID",
        "kind": "SCALAR"
       }
      },
      {
       "name": "indicator",
       "description": "The input object that represents the SLI that will be updated.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ServiceLevelIndicatorUpdateInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "streamingExportCreateRule",
     "description": "Create new streaming rule",
     "type": {
      "name": "StreamingExportRule",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "The New Relic account to export data from",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "awsParameters",
       "description": "AWS information needed for the data to be exported",
       "type": {
        "name": "StreamingExportAwsInput",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "azureParameters",
       "description": "Azure information needed for the data to be exported",
       "type": {
        "name": "StreamingExportAzureInput",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "gcpParameters",
       "description": "GCP information needed for the streaming rule to be updated",
       "type": {
        "name": "StreamingExportGcpInput",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "ruleParameters",
       "description": "Information about the data to be exported",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "StreamingExportRuleInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "streamingExportDeleteRule",
     "description": "Delete a streaming rule",
     "type": {
      "name": "StreamingExportRule",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "id",
       "description": "The id of the streaming rule to delete",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "streamingExportDisableRule",
     "description": "Disable an existing streaming rule",
     "type": {
      "name": "StreamingExportRule",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "id",
       "description": "The id of the streaming rule to disable",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "streamingExportEnableRule",
     "description": "Enable an existing streaming rule",
     "type": {
      "name": "StreamingExportRule",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "id",
       "description": "The id of the streaming rule to enable",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "streamingExportUpdateRule",
     "description": "Update an existing streaming rule",
     "type": {
      "name": "StreamingExportRule",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "awsParameters",
       "description": "AWS information needed for the streaming rule to be updated",
       "type": {
        "name": "StreamingExportAwsInput",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "azureParameters",
       "description": "Azure information needed for the streaming rule to be updated",
       "type": {
        "name": "StreamingExportAzureInput",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "gcpParameters",
       "description": "GCP information needed for the streaming rule to be updated",
       "type": {
        "name": "StreamingExportGcpInput",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "id",
       "description": "The id of the streaming rule to update",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "ruleParameters",
       "description": "The information needed for the streaming rule to be updated",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "StreamingExportRuleInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "syntheticsCreateBrokenLinksMonitor",
     "description": "Create a Synthetic Broken Links monitor",
     "type": {
      "name": "SyntheticsBrokenLinksMonitorCreateMutationResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "The account in which the Synthetics Broken Links monitor will be created",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "monitor",
       "description": "The input arguments required to create a Synthetics Broken Links monitor",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "SyntheticsCreateBrokenLinksMonitorInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "syntheticsCreateCertCheckMonitor",
     "description": "Create a Synthetic Cert Check (Certificate check) monitor",
     "type": {
      "name": "SyntheticsCertCheckMonitorCreateMutationResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "The account in which the Synthetics Cert Check monitor will be created",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "monitor",
       "description": "The input arguments required to create a Synthetics Cert Check monitor",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "SyntheticsCreateCertCheckMonitorInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "syntheticsCreateDailyMonitorDowntime",
     "description": "Create a monitor downtime that runs daily",
     "type": {
      "name": "SyntheticsDailyMonitorDowntimeMutationResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "The account that will be associated with the created monitor downtime",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "endRepeat",
       "description": "Configuration options if the customer wants the monitor to end at a specific date",
       "type": {
        "name": "SyntheticsDateWindowEndConfig",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "endTime",
       "description": "The date and time in which the monitor downtime will end",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "NaiveDateTime",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "monitorGuids",
       "description": "Monitor GUIDs this monitor downtime will affect",
       "type": {
        "kind": "LIST",
        "ofType": {
         "name": "EntityGuid",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "name",
       "description": "The name of the monitor downtime",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "startTime",
       "description": "The date and time in which the monitor downtime will begin",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "NaiveDateTime",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "timezone",
       "description": "The timezone the time values will be in",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "syntheticsCreateMonthlyMonitorDowntime",
     "description": "Create a monitor downtime that runs monthly",
     "type": {
      "name": "SyntheticsMonthlyMonitorDowntimeMutationResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "The account that will be associated with the created monitor downtime",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "endRepeat",
       "description": "Configuration options if the customer wants the monitor to end at a specific date",
       "type": {
        "name": "SyntheticsDateWindowEndConfig",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "endTime",
       "description": "The date and time in which the monitor downtime will end",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "NaiveDateTime",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "frequency",
       "description": "Configuration options for which days of the month a monitor downtime will occur",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "SyntheticsMonitorDowntimeMonthlyFrequency",
         "kind": "INPUT_OBJECT"
        }
       }
      },
      {
       "name": "monitorGuids",
       "description": "Monitor GUIDs this monitor downtime will affect",
       "type": {
        "kind": "LIST",
        "ofType": {
         "name": "EntityGuid",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "name",
       "description": "The name of the monitor downtime",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "startTime",
       "description": "The date and time in which the monitor downtime will begin",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "NaiveDateTime",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "timezone",
       "description": "The timezone the time values will be in",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "syntheticsCreateOnceMonitorDowntime",
     "description": "Create a monitor downtime that runs once",
     "type": {
      "name": "SyntheticsOnceMonitorDowntimeMutationResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "The account that will be associated with the created monitor downtime",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "endTime",
       "description": "The date and time in which the monitor downtime will end",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "NaiveDateTime",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "monitorGuids",
       "description": "Monitor GUIDs this monitor downtime will affect",
       "type": {
        "kind": "LIST",
        "ofType": {
         "name": "EntityGuid",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "name",
       "description": "The name of the monitor downtime",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "startTime",
       "description": "The date and time in which the monitor downtime will begin",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "NaiveDateTime",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "timezone",
       "description": "The timezone the time values will be in",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "syntheticsCreatePrivateLocation",
     "description": "Create a Synthetics Private Location",
     "type": {
      "name": "SyntheticsPrivateLocationMutationResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "The account that will be associated with the created private location",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "description",
       "description": "The private location description",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "name",
       "description": "The name of the private location",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "verifiedScriptExecution",
       "description": "The private location requires a password to edit if value is true",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Boolean",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "syntheticsCreateScriptApiMonitor",
     "description": "Create a Synthetic Script Api monitor",
     "type": {
      "name": "SyntheticsScriptApiMonitorCreateMutationResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "The account in which the Synthetics Script Api monitor will be created",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "monitor",
       "description": "The input arguments required to create a Synthetics Script Api monitor",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "SyntheticsCreateScriptApiMonitorInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "syntheticsCreateScriptBrowserMonitor",
     "description": "Create a Synthetic Script Browser Monitor",
     "type": {
      "name": "SyntheticsScriptBrowserMonitorCreateMutationResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "The account in which the Synthetics Script Browser monitor will be created",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "monitor",
       "description": "The input arguments required to create a Synthetics Script Browser monitor",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "SyntheticsCreateScriptBrowserMonitorInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "syntheticsCreateSecureCredential",
     "description": "Queues a request to create a secure credential",
     "type": {
      "name": "SyntheticsSecureCredentialMutationResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "The account that will be associated with the created secure credential",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "description",
       "description": "The description identifier for the Synthetics Secure Credential in New Relic",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "key",
       "description": "The unique key identifier for the Synthetics Secure Credential in New Relic",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "value",
       "description": "The value identifier for the Synthetics Secure Credential in New Relic",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "SecureValue",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "syntheticsCreateSimpleBrowserMonitor",
     "description": "Create a Synthetic Simple (Ping) monitor",
     "type": {
      "name": "SyntheticsSimpleBrowserMonitorCreateMutationResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "The account in which the Synthetics Simple Browser monitor will be created",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "monitor",
       "description": "The input arguments required to create a Synthetics Simple Browser monitor",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "SyntheticsCreateSimpleBrowserMonitorInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "syntheticsCreateSimpleMonitor",
     "description": "Create a Synthetic Simple (Ping) monitor",
     "type": {
      "name": "SyntheticsSimpleBrowserMonitorCreateMutationResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "The account in which the Synthetics Simple (Ping) monitor will be created",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "monitor",
       "description": "The input arguments required to create a Synthetics Simple (Ping) monitor",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "SyntheticsCreateSimpleMonitorInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "syntheticsCreateStepMonitor",
     "description": "Create a Synthetic Step monitor",
     "type": {
      "name": "SyntheticsStepMonitorCreateMutationResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "The account in which the Synthetics Step monitor will be created",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "monitor",
       "description": "The input arguments required to create a Synthetics Step Monitor",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "SyntheticsCreateStepMonitorInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "syntheticsCreateWeeklyMonitorDowntime",
     "description": "Create a monitor downtime that runs weekly",
     "type": {
      "name": "SyntheticsWeeklyMonitorDowntimeMutationResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "The account that will be associated with the created monitor downtime",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "endRepeat",
       "description": "Configuration options if the customer wants the monitor to end at a specific date",
       "type": {
        "name": "SyntheticsDateWindowEndConfig",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "endTime",
       "description": "The date and time in which the monitor downtime will end",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "NaiveDateTime",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "maintenanceDays",
       "description": "Days of the week the monitor downtime will run",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "kind": "LIST",
         "ofType": {
          "name": "SyntheticsMonitorDowntimeWeekDays",
          "kind": "ENUM"
         }
        }
       }
      },
      {
       "name": "monitorGuids",
       "description": "Monitor GUIDs this monitor downtime will affect",
       "type": {
        "kind": "LIST",
        "ofType": {
         "name": "EntityGuid",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "name",
       "description": "The name of the monitor downtime",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "startTime",
       "description": "The date and time in which the monitor downtime will begin",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "NaiveDateTime",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "timezone",
       "description": "The timezone the time values will be in",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "syntheticsDeleteMonitor",
     "description": "Delete a Synthetic Monitor",
     "type": {
      "name": "SyntheticsMonitorDeleteMutationResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "guid",
       "description": "The unique identifier for the Synthetic Monitor in New Relic",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EntityGuid",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "syntheticsDeleteMonitorDowntime",
     "description": "Delete a monitor downtime",
     "type": {
      "name": "SyntheticsMonitorDowntimeDeleteResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "guid",
       "description": "The client identifier of the monitor downtime to be deleted",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EntityGuid",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "syntheticsDeletePrivateLocation",
     "description": "Delete a Synthetics Private Location",
     "type": {
      "name": "SyntheticsPrivateLocationDeleteResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "guid",
       "description": "The client identifier of the private location to be deleted",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EntityGuid",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "syntheticsDeleteSecureCredential",
     "description": "Queues a request to delete an existing secure credential",
     "type": {
      "name": "SyntheticsSecureCredentialMutationResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "The account that is associated with the secure credential to be deleted",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "key",
       "description": "The unique key identifier for the Synthetics Secure Credential in New Relic",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "syntheticsEditMonitorDowntime",
     "description": "Edit a monitor downtime",
     "type": {
      "name": "SyntheticsMonitorDowntimeMutationResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "daily",
       "description": "Configuration options for a monitor downtime that runs daily (only 1 of these can be selected)",
       "type": {
        "name": "SyntheticsMonitorDowntimeDailyConfig",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "guid",
       "description": "The unique identifier for the Synthetic Monitor Downtime in New Relic",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EntityGuid",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "monitorGuids",
       "description": "Monitor GUIDs this monitor downtime will affect",
       "type": {
        "kind": "LIST",
        "ofType": {
         "name": "EntityGuid",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "monthly",
       "description": "Configuration options for a monitor downtime that runs monthly (only 1 of these can be selected)",
       "type": {
        "name": "SyntheticsMonitorDowntimeMonthlyConfig",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "name",
       "description": "The name for the monitor downtime",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "once",
       "description": "Configuration options for a monitor downtime that runs once (only 1 of these can be selected)",
       "type": {
        "name": "SyntheticsMonitorDowntimeOnceConfig",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "weekly",
       "description": "Configuration options for a monitor downtime that runs weekly (only 1 of these can be selected)",
       "type": {
        "name": "SyntheticsMonitorDowntimeWeeklyConfig",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "syntheticsPurgePrivateLocationQueue",
     "description": "Purge the job queue for a specified private location",
     "type": {
      "name": "SyntheticsPrivateLocationPurgeQueueResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "guid",
       "description": "The unique client identifier for the Synthetics Private Location in New Relic",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EntityGuid",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "syntheticsStartAutomatedTest",
     "description": "Starts automated testing job",
     "type": {
      "name": "SyntheticsAutomatedTestStartResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "config",
       "description": "Global config for the automated test",
       "type": {
        "name": "SyntheticsAutomatedTestConfigInput",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "tests",
       "description": "List of monitor tests to run",
       "type": {
        "kind": "LIST",
        "ofType": {
         "name": "SyntheticsAutomatedTestMonitorInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "syntheticsUpdateBrokenLinksMonitor",
     "description": "Update a Synthetic Broken Links monitor",
     "type": {
      "name": "SyntheticsBrokenLinksMonitorUpdateMutationResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "guid",
       "description": "The unique identifier for the Synthetic Monitor in New Relic",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EntityGuid",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "monitor",
       "description": "The input arguments required to update a Synthetics Broken Links monitor",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "SyntheticsUpdateBrokenLinksMonitorInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "syntheticsUpdateCertCheckMonitor",
     "description": "Update a Synthetic Cert Check (Certificate check) monitor",
     "type": {
      "name": "SyntheticsCertCheckMonitorUpdateMutationResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "guid",
       "description": "The unique identifier for the Synthetic Monitor in New Relic",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EntityGuid",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "monitor",
       "description": "The input arguments required to update a Synthetics Cert Check monitor",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "SyntheticsUpdateCertCheckMonitorInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "syntheticsUpdatePrivateLocation",
     "description": "Update a Synthetics Private Location",
     "type": {
      "name": "SyntheticsPrivateLocationMutationResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "description",
       "description": "The private location description",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "guid",
       "description": "The unique client identifier for a Synthetics Private Location in New Relic",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EntityGuid",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "verifiedScriptExecution",
       "description": "Requires password to run scripts on this private location",
       "type": {
        "name": "Boolean",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "syntheticsUpdateScriptApiMonitor",
     "description": "Update a Synthetic Script Api monitor",
     "type": {
      "name": "SyntheticsScriptApiMonitorUpdateMutationResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "guid",
       "description": "The unique identifier for the Synthetic Monitor in New Relic",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EntityGuid",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "monitor",
       "description": "The input arguments required to update a Synthetics Script Api Monitor",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "SyntheticsUpdateScriptApiMonitorInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "syntheticsUpdateScriptBrowserMonitor",
     "description": "Update a Synthetic Script Browser Monitor",
     "type": {
      "name": "SyntheticsScriptBrowserMonitorUpdateMutationResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "guid",
       "description": "The unique identifier for the Synthetic Monitor in New Relic",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EntityGuid",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "monitor",
       "description": "The input arguments required to update a Synthetics Script Browser monitor",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "SyntheticsUpdateScriptBrowserMonitorInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "syntheticsUpdateSecureCredential",
     "description": "Queues a request to update an existing secure credential",
     "type": {
      "name": "SyntheticsSecureCredentialMutationResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "The account that is associated with the secure credential to be updated",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "description",
       "description": "The description identifier for the Synthetics Secure Credential in New Relic",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "key",
       "description": "The unique key identifier for the Synthetics Secure Credential in New Relic",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "value",
       "description": "The value identifier for the Synthetics Secure Credential in New Relic",
       "type": {
        "name": "SecureValue",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "syntheticsUpdateSimpleBrowserMonitor",
     "description": "Update a Synthetic Simple Browser monitor",
     "type": {
      "name": "SyntheticsSimpleBrowserMonitorUpdateMutationResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "guid",
       "description": "The unique identifier for the Synthetic Monitor in New Relic",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EntityGuid",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "monitor",
       "description": "The input arguments required to update a Synthetics Simple Browser monitor",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "SyntheticsUpdateSimpleBrowserMonitorInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "syntheticsUpdateSimpleMonitor",
     "description": "Update a Synthetic Simple (Ping) monitor",
     "type": {
      "name": "SyntheticsSimpleMonitorUpdateMutationResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "guid",
       "description": "The unique identifier for the Synthetic Monitor in New Relic",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EntityGuid",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "monitor",
       "description": "The input arguments required to update a Synthetics Simple (ping) Monitor",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "SyntheticsUpdateSimpleMonitorInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "syntheticsUpdateStepMonitor",
     "description": "Update a Synthetic Step monitor",
     "type": {
      "name": "SyntheticsStepMonitorUpdateMutationResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "guid",
       "description": "The unique identifier for the Synthetic Monitor in New Relic",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EntityGuid",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "monitor",
       "description": "The input arguments required to update a Synthetics Step Monitor",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "SyntheticsUpdateStepMonitorInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "systemIdentityCreate",
     "description": "Create a system identity",
     "type": {
      "name": "SystemIdentityType",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "name",
       "description": "The name of the system identity",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "organizationId",
       "description": "The organization id of the system identity",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "publicKey",
       "description": "The public key the system identity will use",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "systemIdentityDelete",
     "description": "Delete a system identity",
     "type": {
      "name": "SystemIdentityType",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "id",
       "description": "The id of the system identity to delete",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "systemIdentityUpdate",
     "description": "Update a system identity",
     "type": {
      "name": "SystemIdentityType",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "id",
       "description": "The id of the system identity to update",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "name",
       "description": "The name of the system identity",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "publicKey",
       "description": "The public key the system identity will use",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "taggingAddTagsToEntity",
     "description": "Adds the provided tags to your specified entity, without deleting existing ones.\nThe maximum number of tag-values per entity is 100; if the sum of existing and new tag-values if over the limit this mutation will fail.\n\nFor details and mutation examples, visit [our docs](https://docs.newrelic.com/docs/apis/nerdgraph/examples/nerdgraph-tagging-api-tutorial).",
     "type": {
      "name": "TaggingMutationResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "guid",
       "description": "The guid of the new entity.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EntityGuid",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "tags",
       "description": "An array of key-values pairs to represent a tag. For example:  Team:TeamName.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "kind": "LIST",
         "ofType": {
          "kind": "NON_NULL",
          "ofType": {
           "name": "TaggingTagInput",
           "kind": "INPUT_OBJECT"
          }
         }
        }
       }
      }
     ]
    },
    {
     "name": "taggingDeleteTagFromEntity",
     "description": "Delete specific tag keys from the entity.\n\nFor details and mutation examples, visit [our docs](https://docs.newrelic.com/docs/apis/nerdgraph/examples/nerdgraph-tagging-api-tutorial).",
     "type": {
      "name": "TaggingMutationResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "guid",
       "description": "The guid of the existing entity.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EntityGuid",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "tagKeys",
       "description": "An array of keys that have to be deleted. For example: ['Team'].",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "kind": "LIST",
         "ofType": {
          "kind": "NON_NULL",
          "ofType": {
           "name": "String",
           "kind": "SCALAR"
          }
         }
        }
       }
      }
     ]
    },
    {
     "name": "taggingDeleteTagValuesFromEntity",
     "description": "Delete specific tag key-values from the entity.\n\nFor details and mutation examples, visit [our docs](https://docs.newrelic.com/docs/apis/nerdgraph/examples/nerdgraph-tagging-api-tutorial).",
     "type": {
      "name": "TaggingMutationResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "guid",
       "description": "The guid of the existing entity.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EntityGuid",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "tagValues",
       "description": "An array of key-values pairs to represent a tag. For example: Team:TeamName.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "kind": "LIST",
         "ofType": {
          "kind": "NON_NULL",
          "ofType": {
           "name": "TaggingTagValueInput",
           "kind": "INPUT_OBJECT"
          }
         }
        }
       }
      }
     ]
    },
    {
     "name": "taggingReplaceTagsOnEntity",
     "description": "Replaces the entity's entire set of tags with the provided tag set.\nThe maximum number of tag-values per entity is 100; if more than 100 tag-values are provided this mutation will fail.\n\nFor details and mutation examples, visit [our docs](https://docs.newrelic.com/docs/apis/nerdgraph/examples/nerdgraph-tagging-api-tutorial).",
     "type": {
      "name": "TaggingMutationResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "guid",
       "description": "The guid of the existing entity.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EntityGuid",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "tags",
       "description": "An array of key-values pairs to represent a tag. For example:  Team:TeamName.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "kind": "LIST",
         "ofType": {
          "kind": "NON_NULL",
          "ofType": {
           "name": "TaggingTagInput",
           "kind": "INPUT_OBJECT"
          }
         }
        }
       }
      }
     ]
    },
    {
     "name": "userManagementAddUsersToGroups",
     "description": "A mutation for adding user(s) to group(s).",
     "type": {
      "name": "UserManagementAddUsersToGroupsPayload",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "addUsersToGroupsOptions",
       "description": "The input object representing the group(s) and user(s) to update.",
       "type": {
        "name": "UserManagementUsersGroupsInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "userManagementCreateGroup",
     "description": "A mutation for creating a group in an authentication domain.",
     "type": {
      "name": "UserManagementCreateGroupPayload",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "createGroupOptions",
       "description": "The input object representing the group to create",
       "type": {
        "name": "UserManagementCreateGroup",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "userManagementCreateUser",
     "description": "A mutation for creating a user in an authentication domain.",
     "type": {
      "name": "UserManagementCreateUserPayload",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "createUserOptions",
       "description": "The input object representing the user to be created.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "UserManagementCreateUser",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "userManagementDeleteGroup",
     "description": "A mutation for deleting a group.",
     "type": {
      "name": "UserManagementDeleteGroupPayload",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "groupOptions",
       "description": "The input object representing the group to remove",
       "type": {
        "name": "UserManagementDeleteGroup",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "userManagementDeleteUser",
     "description": "A mutation for deleting a user.",
     "type": {
      "name": "UserManagementDeleteUserPayload",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "deleteUserOptions",
       "description": "The input object containing the id of the user to be deleted.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "UserManagementDeleteUser",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "userManagementRemoveUsersFromGroups",
     "description": "A mutation for removing user(s) from group(s).",
     "type": {
      "name": "UserManagementRemoveUsersFromGroupsPayload",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "removeUsersFromGroupsOptions",
       "description": "The input object representing the users to remove and the groups to remove them from.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "UserManagementUsersGroupsInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "userManagementUpdateGroup",
     "description": "A mutation for updating an existing group.",
     "type": {
      "name": "UserManagementUpdateGroupPayload",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "updateGroupOptions",
       "description": "The input object representing the group to update",
       "type": {
        "name": "UserManagementUpdateGroup",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "userManagementUpdateUser",
     "description": "A mutation for updating an existing user.",
     "type": {
      "name": "UserManagementUpdateUserPayload",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "updateUserOptions",
       "description": "The input object representing the user to be updated.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "UserManagementUpdateUser",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "whatsNewSetLastReadDate",
     "description": "Updates the date the current user last read the news.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     },
     "args": [
      {
       "name": "date",
       "description": "The date, represented since the epoch in milliseconds, the current user last read the news.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EpochMilliseconds",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "workloadCreate",
     "description": "Creates a new workload.",
     "type": {
      "name": "WorkloadCollection",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "The New Relic account ID where you want to create the workload.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "workload",
       "description": "An input object that represents the workload to be created.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "WorkloadCreateInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "workloadDelete",
     "description": "Deletes an existing workload.",
     "type": {
      "name": "WorkloadCollection",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "guid",
       "description": "The GUID of the workload to delete.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EntityGuid",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "workloadDuplicate",
     "description": "Duplicates an existing workload.",
     "type": {
      "name": "WorkloadCollection",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "accountId",
       "description": "The New Relic Account ID where you want to create the new workload.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "sourceGuid",
       "description": "The GUID of the workload you want to duplicate.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EntityGuid",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "workload",
       "description": "An input object with information about the new workload.",
       "type": {
        "name": "WorkloadDuplicateInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "workloadUpdate",
     "description": "Updates an existing workload.",
     "type": {
      "name": "WorkloadCollection",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "guid",
       "description": "The GUID of the workload you want to update.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EntityGuid",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "workload",
       "description": "An input object with information to identify the workload to be updated and its new changes.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "WorkloadUpdateInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    }
   ]
  },
  {
   "name": "LogConfigurationsLiveArchiveRetentionPolicyType",
   "description": "Live Archive retention policies.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "NONE",
     "description": "Live Archive disabled",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "STANDARD_ARCHIVE",
     "description": "Live Archive enabled with configured retention policy",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "CloudVpcIntegrationInput",
   "description": "Amazon Virtual Private Cloud (VPC)",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "fetchNatGateway",
     "description": "Specify if NAT gateway should be monitored. May affect total data collection time and contribute to the Cloud provider API rate limit.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "fetchVpn",
     "description": "Specify if VPN should be monitored. May affect total data collection time and contribute to the Cloud provider API rate limit.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "tagKey",
     "description": "Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "tagValue",
     "description": "Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "WorkloadCollection",
   "description": "A user defined group of entities.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "account",
     "description": "The account the workload belongs to.",
     "type": {
      "name": "AccountReference",
      "kind": "OBJECT"
     }
    },
    {
     "name": "createdAt",
     "description": "The moment when the object was created, represented in milliseconds since the Unix epoch.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochMilliseconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "createdBy",
     "description": "The user who created the workload.",
     "type": {
      "name": "UserReference",
      "kind": "OBJECT"
     }
    },
    {
     "name": "description",
     "description": "Relevant information about the workload.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "entities",
     "description": "A list of entity GUIDs. These entities will belong to the collection as long as their accounts are included in the scope accounts of the collection.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "WorkloadEntityRef",
        "kind": "OBJECT"
       }
      }
     }
    },
    {
     "name": "entitySearchQueries",
     "description": "A list of entity search queries. The resulting entities will be limited to the scope accounts of the collection.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "WorkloadEntitySearchQuery",
        "kind": "OBJECT"
       }
      }
     }
    },
    {
     "name": "entitySearchQuery",
     "description": "The entity search query that returns the full collection of entities.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "guid",
     "description": "The unique entity identifier of the workload in New Relic.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EntityGuid",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The unique identifier of the workload.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "The workload's name.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "permalink",
     "description": "The URL of the workload.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "scopeAccounts",
     "description": "Accounts that will be used to get entities from.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "WorkloadScopeAccounts",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "status",
     "description": "Status of the workload.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "WorkloadWorkloadStatus",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "statusConfig",
     "description": "The configuration that defines how the status of the workload is calculated.",
     "type": {
      "name": "WorkloadStatusConfig",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The moment when the object was last updated, represented in milliseconds since the Unix epoch.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "updatedBy",
     "description": "The user who last updated the workload.",
     "type": {
      "name": "UserReference",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "DashboardBillboardWidgetThreshold",
   "description": "Billboard widget threshold.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "alertSeverity",
     "description": "Alert severity.",
     "type": {
      "name": "DashboardAlertSeverity",
      "kind": "ENUM"
     }
    },
    {
     "name": "value",
     "description": "Alert value.",
     "type": {
      "name": "Float",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "CloudAzureMariadbIntegration",
   "description": "Database for MariaDB Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "resourceGroups",
     "description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "Nr1CatalogQuickstartMetadata",
   "description": "Metadata associated with the quickstart that is available in New Relic I/O",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "authors",
     "description": "Authors for the quickstart",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Nr1CatalogAuthor",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "categories",
     "description": "The list of categories for filtering, searching, and grouping associated with the quickstart",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Nr1CatalogCategory",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "categoryTerms",
     "description": "The list of category terms associated with the quickstart",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      }
     }
    },
    {
     "name": "dataSources",
     "description": "The list of data sources associated with the quickstart",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Nr1CatalogDataSource",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "description",
     "description": "A short form description for the quickstart. Used throughout the platform when displaying the quickstart.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "displayName",
     "description": "The human-readable name for the quickstart. Used throughout the New Relic One platform when displaying the quickstart.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "icon",
     "description": "The corresponding icon for the quickstart",
     "type": {
      "name": "Nr1CatalogIcon",
      "kind": "OBJECT"
     }
    },
    {
     "name": "installer",
     "description": "Information about how a quickstart is installed",
     "type": {
      "name": "Nr1CatalogInstaller",
      "kind": "INTERFACE"
     }
    },
    {
     "name": "keywords",
     "description": "A list of keywords for filtering and searching",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      }
     }
    },
    {
     "name": "quickstartComponents",
     "description": "List of components in a quickstart",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Nr1CatalogQuickstartComponent",
         "kind": "INTERFACE"
        }
       }
      }
     }
    },
    {
     "name": "slug",
     "description": "The URL friendly name of the quickstart",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "summary",
     "description": "A short summary detailing the functionality of the quickstart",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "NerdStorageCollectionMember",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "document",
     "description": "The NerdStorage document.",
     "type": {
      "name": "NerdStorageDocument",
      "kind": "SCALAR"
     }
    },
    {
     "name": "id",
     "description": "The documentId.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "MobileApplicationEntity",
   "description": "A Mobile Application entity.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "account",
     "type": {
      "name": "AccountOutline",
      "kind": "OBJECT"
     }
    },
    {
     "name": "accountId",
     "description": "The New Relic account ID associated with this entity.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "alertSeverity",
     "description": "The current alerting severity of the entity.",
     "type": {
      "name": "EntityAlertSeverity",
      "kind": "ENUM"
     }
    },
    {
     "name": "alertViolations",
     "description": "Violations on the entity that were open during the specified time window. This will return up to 500 violations - if there are more in the time window selected, you must narrow the time window or look at fewer entities.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityAlertViolation",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "endTime",
       "description": "End of time window for violations.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EpochMilliseconds",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "startTime",
       "description": "Start of time window for violations.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EpochMilliseconds",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "applicationId",
     "description": "The ID of the Mobile App.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "crash",
     "description": "A Crash that occurred in your Mobile Application.",
     "type": {
      "name": "StackTraceMobileCrash",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "occurrenceId",
       "description": "A unique identifer for an occurrence of a Mobile Crash.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "timeWindow",
       "description": "The time window (60 minutes maximum) in which to search for the mobile crash. Defaults to standard NRQL query window.",
       "type": {
        "name": "TimeWindowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "deploymentSearch",
     "description": "Retrieve the deployment event(s). Ordered by timestamp DESC.",
     "type": {
      "name": "ChangeTrackingDeploymentSearchResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "filter",
       "description": "Contains the set of filters to apply to the query.",
       "type": {
        "name": "ChangeTrackingSearchFilter",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "domain",
     "description": "The entity's domain",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "entityType",
     "description": "A value representing the combination of the entity's domain and type.",
     "type": {
      "name": "EntityType",
      "kind": "ENUM"
     }
    },
    {
     "name": "exception",
     "description": "A Handled Exception that occurred in your Mobile Application.",
     "type": {
      "name": "StackTraceMobileException",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "fingerprint",
       "description": "The fingerprint of a Mobile Handled Exception. The first handled exception matching the fingerprint will be returned.",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "occurrenceId",
       "description": "A unique identifier for an occurrence of a Mobile Handled Exception. This is the 'handledExceptionUuid' attribute on the MobileHandledException events.",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "timeWindow",
       "description": "The time window (60 minutes maximum) in which to search for the handled exception. Defaults to standard NRQL query window.",
       "type": {
        "name": "TimeWindowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "firstIndexedAt",
     "description": "The date of last time the entity has updated any of its fields.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "goldenMetrics",
     "description": "The list of golden metrics for a specific entity",
     "type": {
      "name": "EntityGoldenContextScopedGoldenMetrics",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden metrics",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "timeWindow",
       "description": "Time range to apply to the golden metric NRQL query result field",
       "type": {
        "name": "EntityGoldenNrqlTimeWindowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "goldenTags",
     "description": "The list of golden tags for a specific entityType.",
     "type": {
      "name": "EntityGoldenContextScopedGoldenTags",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden tags",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "guid",
     "description": "A unique entity identifier.",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    },
    {
     "name": "indexedAt",
     "description": "The time the entity was indexed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "lastReportingChangeAt",
     "description": "The last time the entity's reporting status changed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "metricGroupingIssues",
     "description": "Retrieves the entity metric grouping issues.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "MetricNormalizationRuleMetricGroupingIssue",
        "kind": "OBJECT"
       }
      }
     },
     "args": [
      {
       "name": "endTime",
       "description": "End time.",
       "type": {
        "name": "EpochMilliseconds",
        "kind": "SCALAR"
       }
      },
      {
       "name": "metricNormalizationRuleIds",
       "description": "Metric normalization rule ids",
       "type": {
        "kind": "LIST",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "startTime",
       "description": "Start time.",
       "type": {
        "name": "EpochMilliseconds",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "metricNormalizationRule",
     "description": "Retrieves a rule.",
     "type": {
      "name": "MetricNormalizationRule",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "id",
       "description": "Rule Id",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Int",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "metricNormalizationRules",
     "description": "Retrieves the rules for the application.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "MetricNormalizationRule",
        "kind": "OBJECT"
       }
      }
     },
     "args": [
      {
       "name": "enabled",
       "description": "Rule enabled",
       "type": {
        "name": "Boolean",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "mobileProperties",
     "description": "Access general properties for the application.",
     "type": {
      "name": "AgentApplicationSettingsMobileProperties",
      "kind": "OBJECT"
     }
    },
    {
     "name": "mobileSettings",
     "description": "Settings that are common across mobile applications.",
     "type": {
      "name": "AgentApplicationSettingsMobileBase",
      "kind": "OBJECT"
     }
    },
    {
     "name": "mobileSummary",
     "description": "Summary statistics about the Mobile App.",
     "type": {
      "name": "MobileAppSummaryData",
      "kind": "OBJECT"
     }
    },
    {
     "name": "name",
     "description": "The name of this entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nerdStorage",
     "type": {
      "name": "NerdStorageEntityScope",
      "kind": "OBJECT"
     }
    },
    {
     "name": "nrdbQuery",
     "description": "Make an `Entity` scoped query to NRDB with a NRQL string.\n\nA relevant `WHERE` clause will be added to your query to scope data to the entity in question.\n\nSee the [NRQL Docs](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/nrql-resources/nrql-syntax-components-functions) for more information about generating a query string.",
     "type": {
      "name": "NrdbResultContainer",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "async",
       "description": "When true, the query will begin asynchronous resolution after the allotted `timeout`. Include `queryProgress` fields in your GraphQL query to receive the information you will need to poll the `nrdbQueryProgress` field for the results of your async NRQL query.\n\nSee [this page](https://docs.newrelic.com/docs/apis/nerdgraph/examples/async-queries-nrql-tutorial) for additional asynchronous query documentation.",
       "type": {
        "name": "Boolean",
        "kind": "SCALAR"
       },
       "defaultValue": "false"
      },
      {
       "name": "nrql",
       "description": "The [NRQL](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/nrql-resources/nrql-syntax-components-functions) query string.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Nrql",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "options",
       "description": "Additional options for NRQL queries.",
       "type": {
        "name": "NrqlQueryOptions",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "timeout",
       "description": "The timeout we will apply to the NRQL Query. The value will be clamped to between 5 and 120 seconds and defaults to 5 seconds.\n\nFor `async` queries, if the query is still incomplete after this amount of time, resolution will become asynchronous and return `queryProgress` data if requested.",
       "type": {
        "name": "Seconds",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "nrdbQueryProgress",
     "description": "Poll for the results of a previously-executed asychronous NRDB query.\n\nThe `queryId` is available in the `queryProgress` data returned by the original asynchronous query.\n\nSee [this page](https://docs.newrelic.com/docs/apis/nerdgraph/examples/async-queries-nrql-tutorial) for additional asynchronous query documentation.",
     "type": {
      "name": "NrdbResultContainer",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "queryId",
       "description": "A token for retrieving the results of a previously executed asynchronous query.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "permalink",
     "description": "The url to the entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "recentAlertViolations",
     "description": "Recent violations on the entity.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityAlertViolation",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "count",
       "description": "The desired number of alert violations to be returned.",
       "type": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "relatedEntities",
     "description": "Related entities result with optional filtering.",
     "type": {
      "name": "EntityRelationshipRelatedEntitiesResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "cursor",
       "description": "The cursor to fetch paginated results.",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "filter",
       "description": "Apply an optional filter to the related entities.",
       "type": {
        "name": "EntityRelationshipEdgeFilter",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "limit",
       "description": "A limit to apply to the number of relationships returned. Note: this option can only lower the default limits (2000 relationships).",
       "type": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "relationships",
     "description": "A list of the entities' relationships.\n\nFor more information, visit [our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/graphql-relationships-api-tutorial).",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityRelationship",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "endTime",
       "description": "Return relationships as they existed in the past. The duration of the time window queried is fixed at 75 minutes.",
       "type": {
        "name": "EpochMilliseconds",
        "kind": "SCALAR"
       }
      },
      {
       "name": "filter",
       "description": "Apply an optional filter to the relationships.",
       "type": {
        "name": "EntityRelationshipFilter",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "reporting",
     "description": "The reporting status of the entity. If New Relic is successfully collecting data from your application, this will be true.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "serviceLevel",
     "description": "The service level defined for the entity.",
     "type": {
      "name": "ServiceLevelDefinition",
      "kind": "OBJECT"
     }
    },
    {
     "name": "tags",
     "description": "The tags applied to the entity.\n\nFor details on tags, as well as query and mutation examples, visit [our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/graphql-tagging-api-tutorial).",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityTag",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "tagsWithMetadata",
     "description": "The tags applied to the entity with their metadata.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityTagWithMetadata",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "tracingSummary",
     "description": "Look up Distributed Tracing summary data for the selected `EntityGuid`",
     "type": {
      "name": "DistributedTracingEntityTracingSummary",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "timeWindow",
       "description": "The start and end of the tracing data. Defaults to the last 30 minutes",
       "type": {
        "name": "TimeWindowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "type",
     "description": "The entity's type",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ],
   "interfaces": [
    {
     "name": "AlertableEntity",
     "kind": "INTERFACE"
    },
    {
     "name": "Entity",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "OrganizationSortDirectionEnum",
   "description": "Provides the available values of possible directions to sort the result",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "ASCENDING",
     "description": "Sort in ascending order",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "DESCENDING",
     "description": "Sort in descending order",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "EdgeCreateSpanAttributeRuleResponseError",
   "description": "Description of errors that may occur while attempting to create a span attribute trace filter rule.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "message",
     "description": "Error message, with further detail to help resolve the issue.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "type",
     "description": "Error that may occur while attempting to create a trace filter rule.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EdgeCreateSpanAttributeRuleResponseErrorType",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "EdgeUpdateTraceObserverResponseError",
   "description": "Description of errors that may occur while attempting to update a trace observer.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "message",
     "description": "Error message, with further detail to help resolve the issue.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "type",
     "description": "Error that may occur while attempting to create a trace observer.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EdgeUpdateTraceObserverResponseErrorType",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "AiNotificationsDestinationInput",
   "description": "Destination input object",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "auth",
     "description": "auth",
     "type": {
      "name": "AiNotificationsCredentialsInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "name",
     "description": "name",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "properties",
     "description": "properties",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiNotificationsPropertyInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "secureUrl",
     "description": "secureUrl",
     "type": {
      "name": "AiNotificationsSecureUrlInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "type",
     "description": "type",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiNotificationsDestinationType",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "AiTopologyEdge",
   "description": "A connection between two vertices within a graph",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "directed",
     "description": "Whether or not the direction of the edge has semantic meaning.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "fromVertexId",
     "description": "ID of parent vertex.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "fromVertexName",
     "description": "Name of parent vertex.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "ID of edge.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "toVertexId",
     "description": "ID of child vertex.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "toVertexName",
     "description": "Name of child vertex.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "updatedAt",
     "description": "Time rule was last updated.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochMilliseconds",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "NerdpackSubscribeResult",
   "description": "Subscription result.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "nerdpack",
     "description": "Nerdpack to be subscribed to.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "NerdpackData",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "resultsPerAccount",
     "description": "Subscription result per account.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "NerdpackMutationResultPerAccount",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "tag",
     "description": "Tag associated with the version.",
     "type": {
      "name": "NerdpackTagName",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "CloudGcpDataprocIntegrationInput",
   "description": "Dataproc",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "SyntheticsAutomatedTestResult",
   "description": "Results from fetching automated test job",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "config",
     "description": "Automated test config",
     "type": {
      "name": "SyntheticsAutomatedTestConfig",
      "kind": "OBJECT"
     }
    },
    {
     "name": "finishTimestamp",
     "description": "Finished time of the automated test batch",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "startTimestamp",
     "description": "Start time of the automated test batch",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "status",
     "description": "Calculated status of automated test as a whole",
     "type": {
      "name": "SyntheticsAutomatedTestStatus",
      "kind": "ENUM"
     }
    },
    {
     "name": "tests",
     "description": "List of completed automated test jobs",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "SyntheticsAutomatedTestJobResult",
       "kind": "OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "NerdpackRemoveVersionTagInput",
   "description": "Input data that identifies nerdpack tag.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "tag",
     "description": "Tag name.",
     "type": {
      "name": "NerdpackTagName",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "CloudAwsCognitoIntegrationInput",
   "description": "Cognito",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "CloudAzureVirtualmachineIntegration",
   "description": "Virtual machine scale sets Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "resourceGroups",
     "description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "AgentApplicationSettingsSlowSql",
   "description": "In APM, when transaction traces are collected, there may be additional Slow query data available.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "enabled",
     "description": "If true, the agent collects slow SQL queries.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "Nr1CatalogLauncher",
   "description": "Information about a launcher in a Nerdpack",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "id",
     "description": "The unique identifier for the launcher.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metadata",
     "description": "Metadata associated with the launcher",
     "type": {
      "name": "Nr1CatalogLauncherMetadata",
      "kind": "OBJECT"
     }
    }
   ],
   "interfaces": [
    {
     "name": "Nr1CatalogNerdpackItem",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "Nr1CatalogDataSourceInstall",
   "description": "Information about a data source install",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "fallback",
     "description": "Provides context about how the fallback install should proceed",
     "type": {
      "name": "Nr1CatalogDataSourceInstallDirective",
      "kind": "UNION"
     }
    },
    {
     "name": "primary",
     "description": "Provides context about how the primary install should proceed",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Nr1CatalogDataSourceInstallDirective",
       "kind": "UNION"
      }
     }
    }
   ]
  },
  {
   "name": "EdgeUpdateTraceObserverResponseErrorType",
   "description": "Known error codes and messages for `UpdateTraceObserverResponseError`.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "INVALID_INPUT",
     "description": "Invalid input provided.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NOT_FOUND",
     "description": "No trace observer was found with the id given.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AgentApplicationSettingsNetworkSettingsInput",
   "description": "Configure mobile network settings here.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "aliases",
     "description": "Input data that maps hosts to alias names for grouping and identification purposes.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AgentApplicationSettingsNetworkAliasesInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    },
    {
     "name": "filterMode",
     "description": "Configuration setting to apply either the show or hide strategy for network filtering.",
     "type": {
      "name": "AgentApplicationSettingsNetworkFilterMode",
      "kind": "ENUM"
     }
    },
    {
     "name": "hideList",
     "description": "A list of hostnames that would be applied to our filter settings when the filterMode is 'HIDE.'",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "ignoredStatusCodeRules",
     "description": "Input data that maps ignore status codes associated with different hosts.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AgentApplicationSettingsIgnoredStatusCodeRuleInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    },
    {
     "name": "showList",
     "description": "A list of hostnames that would be applied to our filter settings when the filterMode is 'SHOW.'",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    }
   ]
  },
  {
   "name": "WorkloadEntityRef",
   "description": "A reference to a New Relic entity.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "guid",
     "description": "The unique entity identifier in New Relic.",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "CloudEfsIntegration",
   "description": "EFS Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "fetchTags",
     "description": "Specify if tags should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "tagKey",
     "description": "Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "tagValue",
     "description": "Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "EntityRelationshipNode",
   "description": "A node in an Entity relationship.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "accountId",
     "description": "The Account ID for the relationship node.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "entity",
     "type": {
      "name": "EntityOutline",
      "kind": "INTERFACE"
     }
    },
    {
     "name": "entityType",
     "description": "The `EntityType` of the relationship node.",
     "type": {
      "name": "EntityType",
      "kind": "ENUM"
     }
    },
    {
     "name": "guid",
     "description": "The Entity `guid` for the relationship node.",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AiNotificationsVariableResult",
   "description": "Channel result object",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "entities",
     "description": "Variable entities",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiNotificationsVariable",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "nextCursor",
     "description": "Cursor to get the next batch of results",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "totalCount",
     "description": "Count of all variable entities",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "CloudDashboardTemplate",
   "description": "A cloud service dashboard template.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "layout",
     "description": "The dashboard layout position.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "The dashboard template name.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "slug",
     "description": "The dashboard template slug.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "CloudAzureCostmanagementIntegrationInput",
   "description": "Cost Management",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "tagKeys",
     "description": "Specify if additional cost data per tag should be collected. This field is case sensitive.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AlertsAccountStitchedFields",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "mutingRule",
     "description": "Retrieve a muting rule for Alerts violations.",
     "type": {
      "name": "AlertsMutingRule",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "id",
       "description": "Muting rule identifier.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "mutingRules",
     "description": "List the muting rules for an account.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "AlertsMutingRule",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "notificationChannel",
     "description": "Retrieve a notification channel.",
     "type": {
      "name": "AlertsNotificationChannel",
      "kind": "INTERFACE"
     },
     "args": [
      {
       "name": "id",
       "description": "Notification channel identifier.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "notificationChannels",
     "description": "List the notification channels for an account.",
     "type": {
      "name": "AlertsNotificationChannelsResultSet",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "cursor",
       "description": "Cursor for pagination. Supplied by a previous `notificationChannels` query.",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "nrqlCondition",
     "description": "Retrieve a specific NRQL condition.",
     "type": {
      "name": "AlertsNrqlCondition",
      "kind": "INTERFACE"
     },
     "args": [
      {
       "name": "id",
       "description": "NRQL condition identifier.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "nrqlConditionsSearch",
     "description": "List NRQL conditions according to search criteria.",
     "type": {
      "name": "AlertsNrqlConditionsSearchResultSet",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "cursor",
       "description": "Cursor for pagination. Supplied by a previous `NrqlConditionsSearch` query.",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "searchCriteria",
       "description": "Search criteria used to filter the returned list NRQL conditions.",
       "type": {
        "name": "AlertsNrqlConditionsSearchCriteriaInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "policiesSearch",
     "description": "List Alerts policies according to search criteria.",
     "type": {
      "name": "AlertsPoliciesSearchResultSet",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "cursor",
       "description": "Cursor for pagination. Supplied by a previous `PoliciesSearch` query.",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "searchCriteria",
       "description": "Search criteria used to filter the returned list of policies.",
       "type": {
        "name": "AlertsPoliciesSearchCriteriaInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "policy",
     "description": "Retrieve a specific Alerts policy.",
     "type": {
      "name": "AlertsPolicy",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "id",
       "description": "Policy identifier.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    }
   ]
  },
  {
   "name": "CloudAzureDatafactoryIntegration",
   "description": "Data Factory Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "resourceGroups",
     "description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "GenericEntity",
   "description": "A generic entity.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "account",
     "type": {
      "name": "AccountOutline",
      "kind": "OBJECT"
     }
    },
    {
     "name": "accountId",
     "description": "The New Relic account ID associated with this entity.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "alertSeverity",
     "description": "The current alerting severity of the entity.",
     "type": {
      "name": "EntityAlertSeverity",
      "kind": "ENUM"
     }
    },
    {
     "name": "alertViolations",
     "description": "Violations on the entity that were open during the specified time window. This will return up to 500 violations - if there are more in the time window selected, you must narrow the time window or look at fewer entities.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityAlertViolation",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "endTime",
       "description": "End of time window for violations.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EpochMilliseconds",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "startTime",
       "description": "Start of time window for violations.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EpochMilliseconds",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "deploymentSearch",
     "description": "Retrieve the deployment event(s). Ordered by timestamp DESC.",
     "type": {
      "name": "ChangeTrackingDeploymentSearchResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "filter",
       "description": "Contains the set of filters to apply to the query.",
       "type": {
        "name": "ChangeTrackingSearchFilter",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "domain",
     "description": "The entity's domain",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "entityType",
     "description": "A value representing the combination of the entity's domain and type.",
     "type": {
      "name": "EntityType",
      "kind": "ENUM"
     }
    },
    {
     "name": "firstIndexedAt",
     "description": "The date of last time the entity has updated any of its fields.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "goldenMetrics",
     "description": "The list of golden metrics for a specific entity",
     "type": {
      "name": "EntityGoldenContextScopedGoldenMetrics",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden metrics",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "timeWindow",
       "description": "Time range to apply to the golden metric NRQL query result field",
       "type": {
        "name": "EntityGoldenNrqlTimeWindowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "goldenTags",
     "description": "The list of golden tags for a specific entityType.",
     "type": {
      "name": "EntityGoldenContextScopedGoldenTags",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden tags",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "guid",
     "description": "A unique entity identifier.",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    },
    {
     "name": "indexedAt",
     "description": "The time the entity was indexed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "lastReportingChangeAt",
     "description": "The last time the entity's reporting status changed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The name of this entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nerdStorage",
     "type": {
      "name": "NerdStorageEntityScope",
      "kind": "OBJECT"
     }
    },
    {
     "name": "nrdbQuery",
     "description": "Make an `Entity` scoped query to NRDB with a NRQL string.\n\nA relevant `WHERE` clause will be added to your query to scope data to the entity in question.\n\nSee the [NRQL Docs](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/nrql-resources/nrql-syntax-components-functions) for more information about generating a query string.",
     "type": {
      "name": "NrdbResultContainer",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "async",
       "description": "When true, the query will begin asynchronous resolution after the allotted `timeout`. Include `queryProgress` fields in your GraphQL query to receive the information you will need to poll the `nrdbQueryProgress` field for the results of your async NRQL query.\n\nSee [this page](https://docs.newrelic.com/docs/apis/nerdgraph/examples/async-queries-nrql-tutorial) for additional asynchronous query documentation.",
       "type": {
        "name": "Boolean",
        "kind": "SCALAR"
       },
       "defaultValue": "false"
      },
      {
       "name": "nrql",
       "description": "The [NRQL](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/nrql-resources/nrql-syntax-components-functions) query string.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Nrql",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "options",
       "description": "Additional options for NRQL queries.",
       "type": {
        "name": "NrqlQueryOptions",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "timeout",
       "description": "The timeout we will apply to the NRQL Query. The value will be clamped to between 5 and 120 seconds and defaults to 5 seconds.\n\nFor `async` queries, if the query is still incomplete after this amount of time, resolution will become asynchronous and return `queryProgress` data if requested.",
       "type": {
        "name": "Seconds",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "nrdbQueryProgress",
     "description": "Poll for the results of a previously-executed asychronous NRDB query.\n\nThe `queryId` is available in the `queryProgress` data returned by the original asynchronous query.\n\nSee [this page](https://docs.newrelic.com/docs/apis/nerdgraph/examples/async-queries-nrql-tutorial) for additional asynchronous query documentation.",
     "type": {
      "name": "NrdbResultContainer",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "queryId",
       "description": "A token for retrieving the results of a previously executed asynchronous query.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "permalink",
     "description": "The url to the entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "recentAlertViolations",
     "description": "Recent violations on the entity.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityAlertViolation",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "count",
       "description": "The desired number of alert violations to be returned.",
       "type": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "relatedEntities",
     "description": "Related entities result with optional filtering.",
     "type": {
      "name": "EntityRelationshipRelatedEntitiesResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "cursor",
       "description": "The cursor to fetch paginated results.",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "filter",
       "description": "Apply an optional filter to the related entities.",
       "type": {
        "name": "EntityRelationshipEdgeFilter",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "limit",
       "description": "A limit to apply to the number of relationships returned. Note: this option can only lower the default limits (2000 relationships).",
       "type": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "relationships",
     "description": "A list of the entities' relationships.\n\nFor more information, visit [our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/graphql-relationships-api-tutorial).",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityRelationship",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "endTime",
       "description": "Return relationships as they existed in the past. The duration of the time window queried is fixed at 75 minutes.",
       "type": {
        "name": "EpochMilliseconds",
        "kind": "SCALAR"
       }
      },
      {
       "name": "filter",
       "description": "Apply an optional filter to the relationships.",
       "type": {
        "name": "EntityRelationshipFilter",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "reporting",
     "description": "The reporting status of the entity. If New Relic is successfully collecting data from your application, this will be true.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "serviceLevel",
     "description": "The service level defined for the entity.",
     "type": {
      "name": "ServiceLevelDefinition",
      "kind": "OBJECT"
     }
    },
    {
     "name": "tags",
     "description": "The tags applied to the entity.\n\nFor details on tags, as well as query and mutation examples, visit [our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/graphql-tagging-api-tutorial).",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityTag",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "tagsWithMetadata",
     "description": "The tags applied to the entity with their metadata.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityTagWithMetadata",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "tracingSummary",
     "description": "Look up Distributed Tracing summary data for the selected `EntityGuid`",
     "type": {
      "name": "DistributedTracingEntityTracingSummary",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "timeWindow",
       "description": "The start and end of the tracing data. Defaults to the last 30 minutes",
       "type": {
        "name": "TimeWindowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "type",
     "description": "The entity's type",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ],
   "interfaces": [
    {
     "name": "AlertableEntity",
     "kind": "INTERFACE"
    },
    {
     "name": "Entity",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "Nr1CatalogQuickstartAlertCondition",
   "description": "Information about an alert condition in a quickstart",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "id",
     "description": "The unique identifier for the alert condition",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metadata",
     "description": "Metadata associated with the alert condition",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Nr1CatalogQuickstartAlertConditionMetadata",
       "kind": "OBJECT"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "Nr1CatalogQuickstartComponent",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "CloudAwsGovCloudUpdateAccountInput",
   "description": "Information required to update an AWS GovCloud account to a NewRelic account.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "accessKeyId",
     "description": "The key used to make requests to AWS service APIs",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "awsAccountId",
     "description": "The AWS account id",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "disabled",
     "description": "Disable the linked account.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "The linked account new name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "secretAccessKey",
     "description": "The secret key used to make requests to AWS service APIs",
     "type": {
      "name": "SecureValue",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "CloudAwsMqIntegrationInput",
   "description": "MQ",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "CloudAwsAthenaIntegration",
   "description": "Athena Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "AiNotificationsDestinationStatus",
   "description": "Destination statuses",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "AUTH_ERROR",
     "description": "Auth Error destination status",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AUTHENTICATION_ERROR",
     "description": "Authentication Error destination status",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AUTHORIZATION_ERROR",
     "description": "Authorization Error destination status",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AUTHORIZATION_WARNING",
     "description": "Authorization Warning destination status",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "CONFIGURATION_ERROR",
     "description": "Configuration Error destination status",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "DEFAULT",
     "description": "Default destination status",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "DRAFT",
     "description": "Draft channel status",
     "isDeprecated": true,
     "deprecationReason": "unused status"
    },
    {
     "name": "ERROR",
     "description": "Error channel status",
     "isDeprecated": true,
     "deprecationReason": "unused status"
    },
    {
     "name": "EXTERNAL_SERVER_ERROR",
     "description": "External Server Error destination status",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "TEMPORARY_WARNING",
     "description": "Temporary Warning destination status",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "TESTED",
     "description": "Tested channel status",
     "isDeprecated": true,
     "deprecationReason": "unused status"
    },
    {
     "name": "THROTTLED",
     "description": "Throttled channel status",
     "isDeprecated": true,
     "deprecationReason": "unused status"
    },
    {
     "name": "THROTTLING_WARNING",
     "description": "Throttling Warning destination status",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "TIMEOUT_ERROR",
     "description": "Timeout Error destination status",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "UNINSTALLED",
     "description": "Uninstalled destination status",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "UNKNOWN_ERROR",
     "description": "Unknown Error destination status",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AgentApplicationSettingsBrowserLoader",
   "description": "Determines which browser loader will be configured. Some allowed return values are specified for backwards-compatability and do not represent currently allowed values for new applications.\nSee [documentation](https://docs.newrelic.com/docs/browser/browser-monitoring/installation/install-browser-monitoring-agent/#agent-types) for further information.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "FULL",
     "description": "Use PRO instead",
     "isDeprecated": true,
     "deprecationReason": "Browsers which historically had the FULL loader will now return PRO as the loader type."
    },
    {
     "name": "LITE",
     "description": "Lite: Gives you information about some basic page load timing and browser user information. Lacks the Browser Pro features and SPA features.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NONE",
     "description": "Don't use an agent.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "PRO",
     "description": "Pro: Gives you access to the Browser Pro features. Lacks the functionality designed for single page app monitoring.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "RUM",
     "description": "This value is no longer in use.",
     "isDeprecated": true,
     "deprecationReason": "Browsers which historically had the RUM loader will now return LITE as the loader type."
    },
    {
     "name": "SPA",
     "description": "Pro+SPA: This is the default installed agent when you enable browser monitoring. Gives you access to all of the Browser Pro features and to Single Page App (SPA) monitoring. Provides detailed page timing data and the most up-to-date New Relic features, including distributed tracing, for all types of applications.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "XHR",
     "description": "This value is specified for backwards-compatability.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "EntityTag",
   "description": "A tag that has been applied to an entity.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "key",
     "description": "The tag's key",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "values",
     "description": "A list of the tag values",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "CloudAwsWafIntegrationInput",
   "description": "WAF",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "CloudGcpAiplatformIntegration",
   "description": "Vertex AI Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "SyntheticsDeviceType",
   "description": "enum of DeviceTypes that the user can use for device emulation",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "MOBILE",
     "description": "This will be dimensions for a typical mobile device",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NONE",
     "description": "This will disable device emulation",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "TABLET",
     "description": "This will be dimensions for a typical tablet device",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "Nr1CatalogInstallPlanStep",
   "description": "Information pertaining to a specific step in the installation plan",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "description",
     "description": "A short form description for the install plan step",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "displayName",
     "description": "The human-readable name for the install plan step",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "fallback",
     "description": "Provides context about how the fallback install plan step should proceed",
     "type": {
      "name": "Nr1CatalogInstallPlanDirective",
      "kind": "INTERFACE"
     }
    },
    {
     "name": "heading",
     "description": "Used as a heading for the install plan step",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The unique identifier for the install plan step",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "primary",
     "description": "Provides context about how the primary install plan step should proceed",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Nr1CatalogInstallPlanDirective",
       "kind": "INTERFACE"
      }
     }
    },
    {
     "name": "target",
     "description": "Provides context about where the install will occur",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Nr1CatalogInstallPlanTarget",
       "kind": "OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "JavaFlightRecorderFlamegraph",
   "description": "The flamegraph built from the strack trace samples",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "allFrames",
     "description": "List of stack frames for the flamegraph",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "name": "JavaFlightRecorderStackFrame",
        "kind": "OBJECT"
       }
      }
     }
    }
   ]
  },
  {
   "name": "CloudGcpLinkAccountInput",
   "description": "Information required to link a GCP account to a NewRelic account.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "name",
     "description": "The linked account name.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "projectId",
     "description": "The GCP project identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "EdgeCreateSpanAttributeRulesResponse",
   "description": "Successfully created span attribute trace filter rule, or one or more error responses if there were issues.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "errors",
     "description": "Errors that may occur when creating a `SpanAttributeTraceFilter`. Defaults to `null` in case of success.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EdgeCreateSpanAttributeRuleResponseError",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "rules",
     "description": "The trace filter rules that were created. Defaults to `null` in case of failure.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EdgeSpanAttributeRule",
       "kind": "OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "AlertsNotificationChannel",
   "description": "A notification channel.",
   "kind": "INTERFACE",
   "fields": [
    {
     "name": "associatedPolicies",
     "description": "Policies associated with the channel.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsNotificationChannelPoliciesResultSet",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "id",
     "description": "Channel ID.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "Channel name.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "type",
     "description": "Channel type.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsNotificationChannelType",
       "kind": "ENUM"
      }
     }
    }
   ],
   "possibleTypes": [
    {
     "name": "AlertsCampfireNotificationChannel",
     "kind": "OBJECT"
    },
    {
     "name": "AlertsEmailNotificationChannel",
     "kind": "OBJECT"
    },
    {
     "name": "AlertsHipChatNotificationChannel",
     "kind": "OBJECT"
    },
    {
     "name": "AlertsOpsGenieNotificationChannel",
     "kind": "OBJECT"
    },
    {
     "name": "AlertsPagerDutyNotificationChannel",
     "kind": "OBJECT"
    },
    {
     "name": "AlertsSlackNotificationChannel",
     "kind": "OBJECT"
    },
    {
     "name": "AlertsUserNotificationChannel",
     "kind": "OBJECT"
    },
    {
     "name": "AlertsVictorOpsNotificationChannel",
     "kind": "OBJECT"
    },
    {
     "name": "AlertsWebhookNotificationChannel",
     "kind": "OBJECT"
    },
    {
     "name": "AlertsXMattersNotificationChannel",
     "kind": "OBJECT"
    }
   ]
  },
  {
   "name": "ErrorsInboxVersion",
   "description": "Version details (ex: for first and last seen versions or an error group state)",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "name",
     "description": "Version name",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "DashboardVariableDefaultValue",
   "description": "Specifies a default value for variables.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "string",
     "description": "Default string value.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "DashboardEntityOutline",
   "description": "A Dashboard entity outline.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "account",
     "type": {
      "name": "AccountOutline",
      "kind": "OBJECT"
     }
    },
    {
     "name": "accountId",
     "description": "The New Relic account ID associated with this entity.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "alertSeverity",
     "description": "The current alerting severity of the entity.",
     "type": {
      "name": "EntityAlertSeverity",
      "kind": "ENUM"
     }
    },
    {
     "name": "createdAt",
     "description": "The date and time the dashboard was created",
     "type": {
      "name": "DateTime",
      "kind": "SCALAR"
     }
    },
    {
     "name": "dashboardParentGuid",
     "description": "The parent entity `guid` of the dashboard.",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    },
    {
     "name": "domain",
     "description": "The entity's domain",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "entityType",
     "description": "A value representing the combination of the entity's domain and type.",
     "type": {
      "name": "EntityType",
      "kind": "ENUM"
     }
    },
    {
     "name": "firstIndexedAt",
     "description": "The date of last time the entity has updated any of its fields.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "goldenMetrics",
     "description": "The list of golden metrics for a specific entity",
     "type": {
      "name": "EntityGoldenContextScopedGoldenMetrics",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden metrics",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "timeWindow",
       "description": "Time range to apply to the golden metric NRQL query result field",
       "type": {
        "name": "EntityGoldenNrqlTimeWindowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "goldenTags",
     "description": "The list of golden tags for a specific entityType.",
     "type": {
      "name": "EntityGoldenContextScopedGoldenTags",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden tags",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "guid",
     "description": "A unique entity identifier.",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    },
    {
     "name": "indexedAt",
     "description": "The time the entity was indexed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "lastReportingChangeAt",
     "description": "The last time the entity's reporting status changed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The name of this entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "owner",
     "description": "The owner information of the dashboard.",
     "type": {
      "name": "DashboardEntityOwnerInfo",
      "kind": "OBJECT"
     }
    },
    {
     "name": "permalink",
     "description": "The url to the entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "permissions",
     "description": "The permissions of the dashboard.",
     "type": {
      "name": "DashboardEntityPermissions",
      "kind": "ENUM"
     }
    },
    {
     "name": "reporting",
     "description": "The reporting status of the entity. If New Relic is successfully collecting data from your application, this will be true.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "serviceLevel",
     "description": "The service level defined for the entity.",
     "type": {
      "name": "ServiceLevelDefinition",
      "kind": "OBJECT"
     }
    },
    {
     "name": "tags",
     "description": "The tags applied to the entity.\n\nFor details on tags, as well as query and mutation examples, visit [our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/graphql-tagging-api-tutorial).",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityTag",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "type",
     "description": "The entity's type",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "updatedAt",
     "description": "The date and time the dashboard was updated",
     "type": {
      "name": "DateTime",
      "kind": "SCALAR"
     }
    }
   ],
   "interfaces": [
    {
     "name": "AlertableEntityOutline",
     "kind": "INTERFACE"
    },
    {
     "name": "EntityOutline",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "WorkloadRollupInput",
   "description": "The input object used to represent a rollup strategy.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "strategy",
     "description": "The rollup strategy that is applied to a group of entities.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "WorkloadRollupStrategy",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "thresholdType",
     "description": "Type of threshold defined for the rule. This is an optional field that only applies when strategy is WORST_STATUS_WINS. Use a threshold to roll up the worst status only after a certain amount of entities are not operational.",
     "type": {
      "name": "WorkloadRuleThresholdType",
      "kind": "ENUM"
     }
    },
    {
     "name": "thresholdValue",
     "description": "Threshold value defined for the rule. This optional field is used in combination with thresholdType. If the threshold type is null, the threshold value will be ignored.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AlertsOpsGenieNotificationChannel",
   "description": "OpsGenie notification channel.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "associatedPolicies",
     "description": "Policies associated with the channel.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsNotificationChannelPoliciesResultSet",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "config",
     "description": "OpsGenie channel specific configuration.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsOpsGenieNotificationChannelConfig",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "id",
     "description": "Channel ID.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "Channel name.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "type",
     "description": "Channel type.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsNotificationChannelType",
       "kind": "ENUM"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "AlertsNotificationChannel",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "AiDecisionsFixedFuzzyScoreInput",
   "description": "Input type for FixedFuzzyScore expression",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "incident",
     "description": "Incident selector to be used in comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsIncidentObjectInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "minDistance",
     "description": "Minimum distance threshold.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "value",
     "description": "Value to be used in comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "GenericInfrastructureEntityOutline",
   "description": "An Infrastructure entity outline.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "account",
     "type": {
      "name": "AccountOutline",
      "kind": "OBJECT"
     }
    },
    {
     "name": "accountId",
     "description": "The New Relic account ID associated with this entity.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "alertSeverity",
     "description": "The current alerting severity of the entity.",
     "type": {
      "name": "EntityAlertSeverity",
      "kind": "ENUM"
     }
    },
    {
     "name": "domain",
     "description": "The entity's domain",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "entityType",
     "description": "A value representing the combination of the entity's domain and type.",
     "type": {
      "name": "EntityType",
      "kind": "ENUM"
     }
    },
    {
     "name": "firstIndexedAt",
     "description": "The date of last time the entity has updated any of its fields.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "goldenMetrics",
     "description": "The list of golden metrics for a specific entity",
     "type": {
      "name": "EntityGoldenContextScopedGoldenMetrics",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden metrics",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "timeWindow",
       "description": "Time range to apply to the golden metric NRQL query result field",
       "type": {
        "name": "EntityGoldenNrqlTimeWindowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "goldenTags",
     "description": "The list of golden tags for a specific entityType.",
     "type": {
      "name": "EntityGoldenContextScopedGoldenTags",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden tags",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "guid",
     "description": "A unique entity identifier.",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    },
    {
     "name": "indexedAt",
     "description": "The time the entity was indexed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "integrationTypeCode",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "lastReportingChangeAt",
     "description": "The last time the entity's reporting status changed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The name of this entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "permalink",
     "description": "The url to the entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "reporting",
     "description": "The reporting status of the entity. If New Relic is successfully collecting data from your application, this will be true.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "serviceLevel",
     "description": "The service level defined for the entity.",
     "type": {
      "name": "ServiceLevelDefinition",
      "kind": "OBJECT"
     }
    },
    {
     "name": "tags",
     "description": "The tags applied to the entity.\n\nFor details on tags, as well as query and mutation examples, visit [our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/graphql-tagging-api-tutorial).",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityTag",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "type",
     "description": "The entity's type",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ],
   "interfaces": [
    {
     "name": "AlertableEntityOutline",
     "kind": "INTERFACE"
    },
    {
     "name": "EntityOutline",
     "kind": "INTERFACE"
    },
    {
     "name": "InfrastructureIntegrationEntityOutline",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "DashboardLiveUrlsFilterInput",
   "description": "Live URLs input.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "type",
     "description": "Live URL type.",
     "type": {
      "name": "DashboardLiveUrlType",
      "kind": "ENUM"
     }
    },
    {
     "name": "uuid",
     "description": "The unique identifier of a public live URL.",
     "type": {
      "name": "ID",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AlertsNrqlConditionStaticInput",
   "description": "Input for creating a static NRQL condition.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "description",
     "description": "The custom violation description.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "enabled",
     "description": "Whether the NRQL condition is enabled.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "expiration",
     "description": "Also known as **loss of signal**, these are settings for how violations are opened or closed when a signal expires.",
     "type": {
      "name": "AlertsNrqlConditionExpirationInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "name",
     "description": "Name of the NRQL condition.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "nrql",
     "description": "The NRQL query that defines the signal for the condition.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsNrqlConditionQueryInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "runbookUrl",
     "description": "Runbook URL.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "signal",
     "description": "Configuration that defines the signal that the NRQL condition will use to evaluate.",
     "type": {
      "name": "AlertsNrqlConditionSignalInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "terms",
     "description": "List of critical and warning terms for the condition.\n\nTerms are required in most cases. For conditions with a loss of signal threshold only, terms can be blank.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AlertsNrqlConditionTermsInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    },
    {
     "name": "titleTemplate",
     "description": "This field allows you to create a custom title to be used when incidents are opened by the condition. Setting this field will override the default title. Must be [Handlebars format](https://handlebarsjs.com/guide/).",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "valueFunction",
     "description": "Deprecated - use `signal.slideBy` instead.\n\nFunction used to aggregate the NRQL query value(s) for comparison to the `terms.threshold`. When the result of this aggregate surpasses the `terms.threshold`, a violation is opened.",
     "type": {
      "name": "AlertsNrqlStaticConditionValueFunction",
      "kind": "ENUM"
     }
    },
    {
     "name": "violationTimeLimit",
     "description": "Deprecated - use violationTimeLimitSeconds for full range of values.\n\nDuration after which a violation automatically closes. Default is THIRTY_DAYS.",
     "type": {
      "name": "AlertsViolationTimeLimit",
      "kind": "ENUM"
     }
    },
    {
     "name": "violationTimeLimitSeconds",
     "description": "Duration after which a violation automatically closes in seconds.\nAccepts values between 300 seconds (5 minutes) and 2592000 seconds (30 days).\n\nDefault is 3 days (259200 seconds).",
     "type": {
      "name": "Seconds",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AiDecisionsAndInput",
   "description": "Input type for And expression",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "left",
     "description": "Left child expression.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsRuleExpressionInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "right",
     "description": "Right child expression.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsRuleExpressionInput",
       "kind": "INPUT_OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "AiNotificationsSuggestionError",
   "description": "Object for suggestion errors",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "description",
     "description": "SuggestionError description",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "details",
     "description": "SuggestionError details",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "type",
     "description": "SuggestionError type",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiNotificationsErrorType",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "CloudAzureSqlIntegration",
   "description": "SQL Database Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "resourceGroups",
     "description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "ServiceLevelObjectiveTimeWindowUpdateInput",
   "description": "The time window configuration of the SLO.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "rolling",
     "description": "The rolling time window configuration of the SLO.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ServiceLevelObjectiveRollingTimeWindowUpdateInput",
       "kind": "INPUT_OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "WorkloadStatus",
   "description": "Detailed information about the status of a workload.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "description",
     "description": "A description that provides additional details about the status of the workload.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "statusSource",
     "description": "Indicates where the status value derives from.",
     "type": {
      "name": "WorkloadStatusSource",
      "kind": "ENUM"
     }
    },
    {
     "name": "statusValue",
     "description": "The status of the workload.",
     "type": {
      "name": "WorkloadStatusValue",
      "kind": "ENUM"
     }
    },
    {
     "name": "summary",
     "description": "A short description of the status of the workload.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "DistributedTracingSpanConnection",
   "description": "A relationship between a parent and child span.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "child",
     "description": "The span identifier of the child for this connection.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "parent",
     "description": "The span identifier of the parent for this connection.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "DashboardUndeleteResult",
   "description": "Result of undelete operation.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "errors",
     "description": "Expected errors while processing request. No errors means successful request.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "DashboardUndeleteError",
       "kind": "OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "ApmBrowserApplicationEntity",
   "description": "The `ApmBrowserApplicationEntity` interface provides detailed information for the Browser App injected by an APM Application.",
   "kind": "INTERFACE",
   "fields": [
    {
     "name": "apmBrowserSummary",
     "type": {
      "name": "ApmBrowserApplicationSummaryData",
      "kind": "OBJECT"
     }
    }
   ],
   "possibleTypes": [
    {
     "name": "ApmApplicationEntity",
     "kind": "OBJECT"
    }
   ]
  },
  {
   "name": "LogConfigurationsParsingRuleMutationError",
   "description": "Expected errors as a result of mutating a parsing rule.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "message",
     "description": "The message with the error cause.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "type",
     "description": "Type of error.",
     "type": {
      "name": "LogConfigurationsParsingRuleMutationErrorType",
      "kind": "ENUM"
     }
    }
   ]
  },
  {
   "name": "WorkloadUpdateCollectionEntitySearchQueryInput",
   "description": "The input object used to represent the entity search query to be updated.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "id",
     "description": "The unique identifier of the entity search query to be updated. If not provided, a new entity search query is created.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "query",
     "description": "The entity search query that is used to perform the search of a group of entities.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "EdgeCreateSpanAttributeRuleResponseErrorType",
   "description": "Known error codes and messages for `CreateSpanAttributeRuleResponseError`.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "DUPLICATE_RULES",
     "description": "Duplicate span attribute trace filter rules found",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "EXCEEDS_SPAN_ATTRIBUTE_RULE_LIMITS",
     "description": "The trace filter rule creation exceeds the number of allowed span attribute rules for a trace observer",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "INVALID_INPUT",
     "description": "Invalid trace filter rule input provided.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NOT_FOUND",
     "description": "No trace observer was found with the id given.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "OPPOSING_RULES",
     "description": "Span attribute trace filter rules found that would cancel each other out",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "CloudGcpFirebasehostingIntegration",
   "description": "Firebase Hosting Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "SyntheticsStep",
   "description": "A step that will be added to the monitor script",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "ordinal",
     "description": "The position of the step within the script ranging from 1-100.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "type",
     "description": "The type of step to be added to the script",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SyntheticsStepType",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "values",
     "description": "The metadata values related to the step",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    }
   ]
  },
  {
   "name": "UsersUserSearch",
   "description": "User information returned for UserSearch",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "email",
     "description": "The email of the user.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The full name of the user.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "userId",
     "description": "The unique identifier of the user.",
     "type": {
      "name": "ID",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "CloudElasticsearchIntegration",
   "description": "Elasticsearch Service Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "fetchNodes",
     "description": "Specify if metrics should be collected for nodes. Turning it on will increase the number of API calls made to CloudWatch.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "tagKey",
     "description": "Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "tagValue",
     "description": "Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "AlertsNotificationChannelDeleteResponse",
   "description": "The response for deleting a notification channel.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "error",
     "description": "Error.",
     "type": {
      "name": "AlertsNotificationChannelDeleteError",
      "kind": "OBJECT"
     }
    },
    {
     "name": "id",
     "description": "Notification channel ID.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "MetricNormalizationRuleMetricGroupingIssue",
   "description": "An object that represents a metric grouping issue.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "deniedMetricsCount",
     "description": "Total number of received and denied new metrics.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "deniedMetricsRatePerMinute",
     "description": "Rate of received and denied new metrics per minute.",
     "type": {
      "name": "Float",
      "kind": "SCALAR"
     }
    },
    {
     "name": "metricNormalizationRuleId",
     "description": "Metric normalization rule id",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "mitigated",
     "description": "Whether the issue is mitigated or still active",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "mitigationRateThreshold",
     "description": "The new metrics rate threshold to consider the issue mitigated.",
     "type": {
      "name": "Float",
      "kind": "SCALAR"
     }
    },
    {
     "name": "mitigationRateWindowSize",
     "description": "The minute time window to calculate if the issue was mitigated.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "EdgeDeleteSpanAttributeRuleResponseError",
   "description": "Description of errors that may occur while attempting to delete a span attribute trace filter.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "message",
     "description": "Error message, with further detail to help resolve the issue.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "type",
     "description": "Error that may occur while attempting to delete a span attribute trace filter.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EdgeDeleteSpanAttributeRuleResponseErrorType",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "EntityRelationshipVertex",
   "description": "A vertex in an entity relationship edge.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "accountId",
     "description": "The account ID of the relationship node.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "entity",
     "description": "The entity of the relationship node.",
     "type": {
      "name": "EntityOutline",
      "kind": "INTERFACE"
     }
    },
    {
     "name": "guid",
     "description": "The entity guid of the relationship node.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EntityGuid",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "NerdStorageVaultScope",
   "description": "The NerdStorageVault data access level.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "actor",
     "description": "A NerdStorageVault data access level for the current user.",
     "type": {
      "name": "NerdStorageVaultActorScope",
      "kind": "ENUM"
     }
    }
   ]
  },
  {
   "name": "AgentReleasesFilter",
   "description": "Agent Release Filter",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "ANDROID",
     "description": "Android agent",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "BROWSER",
     "description": "Browser agent",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "DOTNET",
     "description": ".NET agent",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "ELIXIR",
     "description": "Elixir agent",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "GO",
     "description": "Go agent",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "INFRASTRUCTURE",
     "description": "Infrastructure agent",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "IOS",
     "description": "iOS agent",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "JAVA",
     "description": "Java agent",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NODEJS",
     "description": "Node.js agent",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "PHP",
     "description": "PHP agent",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "PYTHON",
     "description": "Python agent",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "RUBY",
     "description": "Ruby agent",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SDK",
     "description": "C SDK",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AgentApplicationSettingsMobileBase",
   "description": "Settings that are applicable to mobile applications",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "applicationExitInfo",
     "description": "Reports on application exits, which can be used to determine if an application is not responding.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AgentApplicationSettingsApplicationExitInfo",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "networkSettings",
     "description": "Network settings associated with the mobile application.",
     "type": {
      "name": "AgentApplicationSettingsMobileNetworkSettings",
      "kind": "OBJECT"
     }
    },
    {
     "name": "useCrashReports",
     "description": "Enables viewing in-depth reports for mobile application crashes.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "OrganizationAccountStatus",
   "description": "Provides the types of account statuses available",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "ACTIVE",
     "description": "Accounts that are not in canceled status",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "CANCELED",
     "description": "Accounts that have been canceled",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "WorkloadUpdateStatusConfigInput",
   "description": "The input object used to provide the configuration that defines how the status of the workload is calculated.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "automatic",
     "description": "An input object used to represent an automatic status configuration.",
     "type": {
      "name": "WorkloadUpdateAutomaticStatusInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "static",
     "description": "A list of static status configurations. You can only configure one static status for a workload.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "WorkloadUpdateStaticStatusInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    }
   ]
  },
  {
   "name": "ApiAccessCreateIngestKeyInput",
   "description": "The input for any ingest keys you want to create. Each ingest key must have a type that communicates what kind of data it is for. You can optionally add a name or notes to your key, which can be updated later.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "accountId",
     "description": "The account ID indicating which account you want to make the key for. This cannot be updated once created.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "ingestType",
     "description": "The type of ingest key you want to create. This cannot be updated once created.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ApiAccessIngestKeyType",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "name",
     "description": "The name of the key. This can be updated later.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "notes",
     "description": "Any notes about this ingest key. This can be updated later.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "MultiTenantIdentityGroupUserFilterInput",
   "description": "The input object representing the filter parameters for user groups",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "id",
     "description": "Filter users by IDs",
     "type": {
      "name": "MultiTenantIdentityUserIdInput",
      "kind": "INPUT_OBJECT"
     }
    }
   ]
  },
  {
   "name": "OrganizationProvisioningUpdateSubscriptionResult",
   "description": "Result of subscription update",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "enqueued",
     "description": "Status of enqueuing update in subscription change service",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "errors",
     "description": "Error message from enqueuing update in subscription change service",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "OrganizationProvisioningUserError",
         "kind": "OBJECT"
        }
       }
      }
     }
    }
   ]
  },
  {
   "name": "ServiceLevelIndicatorUpdateInput",
   "description": "The input object that represents the SLI that will be updated.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "description",
     "description": "The description of the SLI.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "events",
     "description": "The events that define the SLI.",
     "type": {
      "name": "ServiceLevelEventsUpdateInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "name",
     "description": "The name of the SLI.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "objectives",
     "description": "A list of objective definitions.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ServiceLevelObjectiveUpdateInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    }
   ]
  },
  {
   "name": "EntityGoldenNrqlTimeWindowInput",
   "description": "Time range to apply to the golden metric NRQL query",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "since",
     "description": "Start time.",
     "type": {
      "name": "Nrql",
      "kind": "SCALAR"
     }
    },
    {
     "name": "until",
     "description": "End time.",
     "type": {
      "name": "Nrql",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AiNotificationsChannelFilter",
   "description": "Filter channel object",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "active",
     "description": "active",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "destinationId",
     "description": "destinationId",
     "type": {
      "name": "ID",
      "kind": "SCALAR"
     }
    },
    {
     "name": "id",
     "description": "id",
     "type": {
      "name": "ID",
      "kind": "SCALAR"
     }
    },
    {
     "name": "ids",
     "description": "ids",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "name",
     "description": "name",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "product",
     "description": "product",
     "type": {
      "name": "AiNotificationsProduct",
      "kind": "ENUM"
     }
    },
    {
     "name": "property",
     "description": "property",
     "type": {
      "name": "AiNotificationsPropertyFilter",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "statuses",
     "description": "statuses",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AiNotificationsChannelStatus",
        "kind": "ENUM"
       }
      }
     }
    },
    {
     "name": "type",
     "description": "type",
     "type": {
      "name": "AiNotificationsChannelType",
      "kind": "ENUM"
     }
    }
   ]
  },
  {
   "name": "User",
   "description": "The `User` object provides general data about the user.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "email",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "id",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "MultiTenantAuthorizationGrantScope",
   "description": "The scope associated to the grant",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "id",
     "description": "The id of the resource in scope",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "type",
     "description": "The type of the resource in scope",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "MultiTenantAuthorizationGrantScopeEnum",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "CloudAwsWafIntegration",
   "description": "WAF Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "EntityRelationshipEdgeTypeFilter",
   "description": "Filter on relationship types.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "exclude",
     "description": "Filter the relationships to those that are not of specific relationship types.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityRelationshipEdgeType",
        "kind": "ENUM"
       }
      }
     }
    },
    {
     "name": "include",
     "description": "Filter the relationships to those of specific relationship types.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityRelationshipEdgeType",
        "kind": "ENUM"
       }
      }
     }
    }
   ]
  },
  {
   "name": "InstallationInstallStateType",
   "description": "An enum that represent the installation state.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "COMPLETED",
     "description": "Defines a completed installation.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "STARTED",
     "description": "Defines an installation that has been started.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "CloudAwsGovcloudIntegrationsInput",
   "description": "List of integrations",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "alb",
     "description": "ALB/NLB integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudAlbIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "apigateway",
     "description": "API Gateway integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudApigatewayIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "autoscaling",
     "description": "AutoScaling integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudAutoscalingIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "awsDirectconnect",
     "description": "Direct Connect integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudAwsDirectconnectIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "awsStates",
     "description": "Step Functions integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudAwsStatesIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "cloudtrail",
     "description": "CloudTrail integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudCloudtrailIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "dynamodb",
     "description": "DynamoDB integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDynamodbIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "ebs",
     "description": "EBS integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudEbsIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "ec2",
     "description": "EC2 integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudEc2IntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "elasticsearch",
     "description": "Elasticsearch Service integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudElasticsearchIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "elb",
     "description": "ELB (Classic) integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudElbIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "emr",
     "description": "EMR integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudEmrIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "iam",
     "description": "IAM integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudIamIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "lambda",
     "description": "Lambda integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudLambdaIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "rds",
     "description": "RDS integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudRdsIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "redshift",
     "description": "Redshift integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudRedshiftIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "route53",
     "description": "Route 53 integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudRoute53IntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "s3",
     "description": "S3 integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudS3IntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "sns",
     "description": "SNS integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudSnsIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "sqs",
     "description": "SQS integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudSqsIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "SyntheticsScriptBrowserMonitorAdvancedOptionsInput",
   "description": "The advanced options inputs available for a Script Browser monitor",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "deviceEmulation",
     "description": "Emulate a device",
     "type": {
      "name": "SyntheticsDeviceEmulationInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "enableScreenshotOnFailureAndScript",
     "description": "Capture a screenshot during job execution",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "LogConfigurationsDataPartitionRule",
   "description": "The data partition rule for an account.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "Identifies the date and time when the rule was created.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "DateTime",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "createdBy",
     "description": "Identifies the user who has created the rule.",
     "type": {
      "name": "UserReference",
      "kind": "OBJECT"
     }
    },
    {
     "name": "deleted",
     "description": "Whether or not this data partition rule is deleted. Deleting a data partition rule does not delete the already persisted data. This data will be retained for a given period of time specified in the retention policy field.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "description",
     "description": "A description of what this data partition rule represents.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "enabled",
     "description": "Whether or not this data partition rule is enabled.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "Unique data partition rule identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "matchingCriteria",
     "description": "The matching criteria for this data partition rule. Logs matching this criteria will be routed to the specified data partition once the rule is enabled.",
     "type": {
      "name": "LogConfigurationsDataPartitionRuleMatchingCriteria",
      "kind": "OBJECT"
     }
    },
    {
     "name": "nrql",
     "description": "The NRQL to match events for this data partition rule. Logs matching this criteria will be routed to the specified data partition once the rule is enabled.",
     "type": {
      "name": "Nrql",
      "kind": "SCALAR"
     }
    },
    {
     "name": "retentionPolicy",
     "description": "The retention policy of the data partition data.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "LogConfigurationsDataPartitionRuleRetentionPolicyType",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "targetDataPartition",
     "description": "The name of the data partition.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "LogConfigurationsLogDataPartitionName",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "updatedAt",
     "description": "Identifies the date and time when the rule was last updated.",
     "type": {
      "name": "DateTime",
      "kind": "SCALAR"
     }
    },
    {
     "name": "updatedBy",
     "description": "Identifies the user who has last updated the rule.",
     "type": {
      "name": "UserReference",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "NerdStorageAccountScope",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "collection",
     "description": "The collection to be retrieved.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "NerdStorageCollectionMember",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "collection",
       "description": "The collection from which documents will be retrieved.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "document",
     "description": "A Nerdpack document is formed by an identifier (called documentId) and a set of data associated with it.",
     "type": {
      "name": "NerdStorageDocument",
      "kind": "SCALAR"
     },
     "args": [
      {
       "name": "collection",
       "description": "The collection that the document belongs to.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "documentId",
       "description": "The documentId to be retrieved.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      }
     ]
    }
   ]
  },
  {
   "name": "ServiceLevelResultQuery",
   "description": "A resulting query.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "nrql",
     "description": "A NRQL query.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Nrql",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "SortCriterionWithDirection",
   "description": "Possible entity sorting criterion with direction",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "attribute",
     "description": "Sort entities by attribute. Mutally exclusive with the `tag` argument",
     "type": {
      "name": "EntitySearchSortCriteria",
      "kind": "ENUM"
     }
    },
    {
     "name": "direction",
     "description": "The direction to sort results",
     "type": {
      "name": "SortBy",
      "kind": "ENUM"
     },
     "defaultValue": "ASC"
    },
    {
     "name": "tag",
     "description": "Sort entities by tag. Mutally exclusive with the `attribute` argument",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "EdgeCreateTraceObserverResponseError",
   "description": "Description of errors that may occur while attempting to create a trace observer.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "message",
     "description": "Error message, with further detail to help resolve the issue.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "type",
     "description": "Error that may occur while attempting to create a trace observer.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EdgeCreateTraceObserverResponseErrorType",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "CloudDisableIntegrationPayload",
   "description": "Autogenerated return type of DisableIntegration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "disabledIntegrations",
     "description": "The list of disabled cloud service integrations.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "CloudIntegration",
         "kind": "INTERFACE"
        }
       }
      }
     }
    },
    {
     "name": "errors",
     "description": "The list of errors.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "CloudIntegrationMutationError",
         "kind": "OBJECT"
        }
       }
      }
     }
    }
   ]
  },
  {
   "name": "DashboardEntity",
   "description": "A Dashboard entity.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "account",
     "type": {
      "name": "AccountOutline",
      "kind": "OBJECT"
     }
    },
    {
     "name": "accountId",
     "description": "The New Relic account ID associated with this entity.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "alertSeverity",
     "description": "The current alerting severity of the entity.",
     "type": {
      "name": "EntityAlertSeverity",
      "kind": "ENUM"
     }
    },
    {
     "name": "alertViolations",
     "description": "Violations on the entity that were open during the specified time window. This will return up to 500 violations - if there are more in the time window selected, you must narrow the time window or look at fewer entities.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityAlertViolation",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "endTime",
       "description": "End of time window for violations.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EpochMilliseconds",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "startTime",
       "description": "Start of time window for violations.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EpochMilliseconds",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "createdAt",
     "description": "The date and time the dashboard was created",
     "type": {
      "name": "DateTime",
      "kind": "SCALAR"
     }
    },
    {
     "name": "dashboardParentGuid",
     "description": "The parent entity `guid` of the dashboard.",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    },
    {
     "name": "deploymentSearch",
     "description": "Retrieve the deployment event(s). Ordered by timestamp DESC.",
     "type": {
      "name": "ChangeTrackingDeploymentSearchResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "filter",
       "description": "Contains the set of filters to apply to the query.",
       "type": {
        "name": "ChangeTrackingSearchFilter",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "description",
     "description": "Dashboard description.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "domain",
     "description": "The entity's domain",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "entityType",
     "description": "A value representing the combination of the entity's domain and type.",
     "type": {
      "name": "EntityType",
      "kind": "ENUM"
     }
    },
    {
     "name": "firstIndexedAt",
     "description": "The date of last time the entity has updated any of its fields.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "goldenMetrics",
     "description": "The list of golden metrics for a specific entity",
     "type": {
      "name": "EntityGoldenContextScopedGoldenMetrics",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden metrics",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "timeWindow",
       "description": "Time range to apply to the golden metric NRQL query result field",
       "type": {
        "name": "EntityGoldenNrqlTimeWindowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "goldenTags",
     "description": "The list of golden tags for a specific entityType.",
     "type": {
      "name": "EntityGoldenContextScopedGoldenTags",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden tags",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "guid",
     "description": "A unique entity identifier.",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    },
    {
     "name": "indexedAt",
     "description": "The time the entity was indexed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "lastReportingChangeAt",
     "description": "The last time the entity's reporting status changed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The name of this entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nerdStorage",
     "type": {
      "name": "NerdStorageEntityScope",
      "kind": "OBJECT"
     }
    },
    {
     "name": "nrdbQuery",
     "description": "Make an `Entity` scoped query to NRDB with a NRQL string.\n\nA relevant `WHERE` clause will be added to your query to scope data to the entity in question.\n\nSee the [NRQL Docs](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/nrql-resources/nrql-syntax-components-functions) for more information about generating a query string.",
     "type": {
      "name": "NrdbResultContainer",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "async",
       "description": "When true, the query will begin asynchronous resolution after the allotted `timeout`. Include `queryProgress` fields in your GraphQL query to receive the information you will need to poll the `nrdbQueryProgress` field for the results of your async NRQL query.\n\nSee [this page](https://docs.newrelic.com/docs/apis/nerdgraph/examples/async-queries-nrql-tutorial) for additional asynchronous query documentation.",
       "type": {
        "name": "Boolean",
        "kind": "SCALAR"
       },
       "defaultValue": "false"
      },
      {
       "name": "nrql",
       "description": "The [NRQL](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/nrql-resources/nrql-syntax-components-functions) query string.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Nrql",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "options",
       "description": "Additional options for NRQL queries.",
       "type": {
        "name": "NrqlQueryOptions",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "timeout",
       "description": "The timeout we will apply to the NRQL Query. The value will be clamped to between 5 and 120 seconds and defaults to 5 seconds.\n\nFor `async` queries, if the query is still incomplete after this amount of time, resolution will become asynchronous and return `queryProgress` data if requested.",
       "type": {
        "name": "Seconds",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "nrdbQueryProgress",
     "description": "Poll for the results of a previously-executed asychronous NRDB query.\n\nThe `queryId` is available in the `queryProgress` data returned by the original asynchronous query.\n\nSee [this page](https://docs.newrelic.com/docs/apis/nerdgraph/examples/async-queries-nrql-tutorial) for additional asynchronous query documentation.",
     "type": {
      "name": "NrdbResultContainer",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "queryId",
       "description": "A token for retrieving the results of a previously executed asynchronous query.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "owner",
     "description": "The owner information of the dashboard.",
     "type": {
      "name": "DashboardEntityOwnerInfo",
      "kind": "OBJECT"
     }
    },
    {
     "name": "pages",
     "description": "A nested block of all pages belonging to the dashboard.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "DashboardPage",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "permalink",
     "description": "The url to the entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "permissions",
     "description": "The permissions of the dashboard.",
     "type": {
      "name": "DashboardEntityPermissions",
      "kind": "ENUM"
     }
    },
    {
     "name": "recentAlertViolations",
     "description": "Recent violations on the entity.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityAlertViolation",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "count",
       "description": "The desired number of alert violations to be returned.",
       "type": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "relatedEntities",
     "description": "Related entities result with optional filtering.",
     "type": {
      "name": "EntityRelationshipRelatedEntitiesResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "cursor",
       "description": "The cursor to fetch paginated results.",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "filter",
       "description": "Apply an optional filter to the related entities.",
       "type": {
        "name": "EntityRelationshipEdgeFilter",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "limit",
       "description": "A limit to apply to the number of relationships returned. Note: this option can only lower the default limits (2000 relationships).",
       "type": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "relationships",
     "description": "A list of the entities' relationships.\n\nFor more information, visit [our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/graphql-relationships-api-tutorial).",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityRelationship",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "endTime",
       "description": "Return relationships as they existed in the past. The duration of the time window queried is fixed at 75 minutes.",
       "type": {
        "name": "EpochMilliseconds",
        "kind": "SCALAR"
       }
      },
      {
       "name": "filter",
       "description": "Apply an optional filter to the relationships.",
       "type": {
        "name": "EntityRelationshipFilter",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "reporting",
     "description": "The reporting status of the entity. If New Relic is successfully collecting data from your application, this will be true.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "serviceLevel",
     "description": "The service level defined for the entity.",
     "type": {
      "name": "ServiceLevelDefinition",
      "kind": "OBJECT"
     }
    },
    {
     "name": "tags",
     "description": "The tags applied to the entity.\n\nFor details on tags, as well as query and mutation examples, visit [our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/graphql-tagging-api-tutorial).",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityTag",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "tagsWithMetadata",
     "description": "The tags applied to the entity with their metadata.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityTagWithMetadata",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "tracingSummary",
     "description": "Look up Distributed Tracing summary data for the selected `EntityGuid`",
     "type": {
      "name": "DistributedTracingEntityTracingSummary",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "timeWindow",
       "description": "The start and end of the tracing data. Defaults to the last 30 minutes",
       "type": {
        "name": "TimeWindowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "type",
     "description": "The entity's type",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "updatedAt",
     "description": "The date and time the dashboard was updated",
     "type": {
      "name": "DateTime",
      "kind": "SCALAR"
     }
    },
    {
     "name": "variables",
     "description": "Dashboard-local variable definitions.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "DashboardVariable",
       "kind": "OBJECT"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "AlertableEntity",
     "kind": "INTERFACE"
    },
    {
     "name": "Entity",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "WorkloadCreateInput",
   "description": "The input object used to represent the workload to be created.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "description",
     "description": "Relevant information about the workload.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "entityGuids",
     "description": "A list of entity GUIDs composing the workload.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGuid",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "entitySearchQueries",
     "description": "A list of entity search queries used to retrieve the entities that compose the workload.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "WorkloadEntitySearchQueryInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    },
    {
     "name": "name",
     "description": "The name of the workload.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "scopeAccounts",
     "description": "Accounts that will be used to get entities from.",
     "type": {
      "name": "WorkloadScopeAccountsInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "statusConfig",
     "description": "The configuration that defines how the status of the workload is calculated.",
     "type": {
      "name": "WorkloadStatusConfigInput",
      "kind": "INPUT_OBJECT"
     }
    }
   ]
  },
  {
   "name": "ErrorsInboxResourceType",
   "description": "A Type of resource",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "JIRA_ISSUE",
     "description": "A JIRA issue",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "EventAttributeDefinition",
   "description": "A human-readable definition of an NRDB Event Type Attribute",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "category",
     "description": "This attribute's category",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "definition",
     "description": "A short description of this attribute",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "documentationUrl",
     "description": "The New Relic docs page for this attribute",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "label",
     "description": "The human-friendly formatted name of the attribute",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The name of the attribute",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "SyntheticsAccountStitchedFields",
   "description": "Nerdgraph account field",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "automatedTestResult",
     "description": "Query that fetches results for an automated test",
     "type": {
      "name": "SyntheticsAutomatedTestResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "batchId",
       "description": "The batchId associated with the automated tests",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "script",
     "description": "Query that fetches the script of a specific scripted monitor",
     "type": {
      "name": "SyntheticsMonitorScriptQueryResponse",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "monitorGuid",
       "description": "Unique identifier for monitor that that runs the script to be fetched",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EntityGuid",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "steps",
     "description": "visiblity(flag:Synthetics/setGraphqlCustomerVisible) Query that fetches the steps used by the specified Step Monitor",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "SyntheticsStep",
        "kind": "OBJECT"
       }
      }
     },
     "args": [
      {
       "name": "monitorGuid",
       "description": "Unique identifier for monitor that holds the script steps that are to be fetched",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EntityGuid",
         "kind": "SCALAR"
        }
       }
      }
     ]
    }
   ]
  },
  {
   "name": "AuthorizationManagementGrantAccess",
   "description": "The input object representing the access to grant for the group",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "accountAccessGrants",
     "description": "The Role and the Account the Target Group should have access to",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AuthorizationManagementAccountAccessGrant",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    },
    {
     "name": "groupAccessGrants",
     "description": "The Role and the Group the Target Group should have access to",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AuthorizationManagementGroupAccessGrant",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    },
    {
     "name": "groupId",
     "description": "The Group ID that will have access granted",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "organizationAccessGrants",
     "description": "The Role and the Organization the Target Group should have access to",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AuthorizationManagementOrganizationAccessGrant",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    }
   ]
  },
  {
   "name": "SyntheticsMonitorDowntimeOnceConfig",
   "description": "Configuration options for a monitor downtime that runs once",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "endTime",
     "description": "The date and time in which the monitor downtime will end",
     "type": {
      "name": "NaiveDateTime",
      "kind": "SCALAR"
     }
    },
    {
     "name": "startTime",
     "description": "The date and time in which the monitor downtime will begin",
     "type": {
      "name": "NaiveDateTime",
      "kind": "SCALAR"
     }
    },
    {
     "name": "timezone",
     "description": "The timezone the time values will be in",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "EdgeDeleteTraceFilterRuleResponses",
   "description": "Array of responses, one for each trace filter rule deletion request",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "spanAttributeRules",
     "description": "Array of span attribute trace filter rule deletion responses, one for each id provided to `DeleteTraceFilterRulesInput`.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EdgeDeleteSpanAttributeRuleResponse",
         "kind": "OBJECT"
        }
       }
      }
     }
    }
   ]
  },
  {
   "name": "DashboardVariableDefaultValueInput",
   "description": "Specifies a default value for variables.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "string",
     "description": "Default string value.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AiDecisionsSimulationBlueprint",
   "description": "Blueprint for simulation creation.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "correlationWindowLength",
     "description": "Length of the window in which incidents are compared.",
     "type": {
      "name": "Milliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "expression",
     "description": "Expression to use to compare incidents.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsRuleExpressionInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "minCorrelationThreshold",
     "description": "Number of correlated incidents within window required to merge issues.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "retentionWindowLength",
     "description": "Duration to consider resources for.",
     "type": {
      "name": "Milliseconds",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "CloudGcpKubernetesIntegration",
   "description": "Kubernetes Engine Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "AiNotificationsDestinationType",
   "description": "Destination types",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "EMAIL",
     "description": "Email destination type",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "EVENT_BRIDGE",
     "description": "EventBridge destination type",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "JIRA",
     "description": "Jira destination type",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "MOBILE_PUSH",
     "description": "Mobile push destination type",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "PAGERDUTY_ACCOUNT_INTEGRATION",
     "description": "PagerDuty destination type",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "PAGERDUTY_SERVICE_INTEGRATION",
     "description": "PagerDuty destination type}",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SERVICE_NOW",
     "description": "ServiceNow destination type",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SERVICE_NOW_APP",
     "description": "ServiceNow app destination type",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SLACK",
     "description": "Slack destination type",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SLACK_COLLABORATION",
     "description": "Slack Collaboration destination type",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SLACK_LEGACY",
     "description": "Legacy Slack destination type based on Incoming Webhooks",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "WEBHOOK",
     "description": "WebHook destination type",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "Nr1CatalogComponentFacet",
   "description": "Information about a facet count on a component",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "component",
     "description": "The type of component",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Nr1CatalogSearchComponentType",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "count",
     "description": "The count of results for this component",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AiWorkflowsDestinationConfigurationInput",
   "description": "Destination Configuration input object",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "channelId",
     "description": "channelId",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "notificationTriggers",
     "description": "notificationTriggers",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AiWorkflowsNotificationTrigger",
        "kind": "ENUM"
       }
      }
     }
    },
    {
     "name": "updateOriginalMessage",
     "description": "updateOriginalMessage",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "KeyTransactionEntity",
   "description": "A Key Transaction entity.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "account",
     "type": {
      "name": "AccountOutline",
      "kind": "OBJECT"
     }
    },
    {
     "name": "accountId",
     "description": "The New Relic account ID associated with this entity.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "alertSeverity",
     "description": "The current alerting severity of the entity.",
     "type": {
      "name": "EntityAlertSeverity",
      "kind": "ENUM"
     }
    },
    {
     "name": "alertViolations",
     "description": "Violations on the entity that were open during the specified time window. This will return up to 500 violations - if there are more in the time window selected, you must narrow the time window or look at fewer entities.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityAlertViolation",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "endTime",
       "description": "End of time window for violations.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EpochMilliseconds",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "startTime",
       "description": "Start of time window for violations.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EpochMilliseconds",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "apdexTarget",
     "description": "The acceptable amount of time spent in the backend before customers get frustrated (Apdex target).",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Float",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "application",
     "description": "The application associated with this key transaction",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "KeyTransactionApplication",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "browserApdexTarget",
     "description": "The acceptable amount of time for rendering a page in a browser before customers get frustrated (browser Apdex target).",
     "type": {
      "name": "Float",
      "kind": "SCALAR"
     }
    },
    {
     "name": "deploymentSearch",
     "description": "Retrieve the deployment event(s). Ordered by timestamp DESC.",
     "type": {
      "name": "ChangeTrackingDeploymentSearchResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "filter",
       "description": "Contains the set of filters to apply to the query.",
       "type": {
        "name": "ChangeTrackingSearchFilter",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "domain",
     "description": "The entity's domain",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "entityType",
     "description": "A value representing the combination of the entity's domain and type.",
     "type": {
      "name": "EntityType",
      "kind": "ENUM"
     }
    },
    {
     "name": "firstIndexedAt",
     "description": "The date of last time the entity has updated any of its fields.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "goldenMetrics",
     "description": "The list of golden metrics for a specific entity",
     "type": {
      "name": "EntityGoldenContextScopedGoldenMetrics",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden metrics",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "timeWindow",
       "description": "Time range to apply to the golden metric NRQL query result field",
       "type": {
        "name": "EntityGoldenNrqlTimeWindowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "goldenTags",
     "description": "The list of golden tags for a specific entityType.",
     "type": {
      "name": "EntityGoldenContextScopedGoldenTags",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden tags",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "guid",
     "description": "A unique entity identifier.",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    },
    {
     "name": "indexedAt",
     "description": "The time the entity was indexed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "lastReportingChangeAt",
     "description": "The last time the entity's reporting status changed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "metricName",
     "description": "The name of the metric underlying this key transaction.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "The name of this entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nerdStorage",
     "type": {
      "name": "NerdStorageEntityScope",
      "kind": "OBJECT"
     }
    },
    {
     "name": "nrdbQuery",
     "description": "Make an `Entity` scoped query to NRDB with a NRQL string.\n\nA relevant `WHERE` clause will be added to your query to scope data to the entity in question.\n\nSee the [NRQL Docs](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/nrql-resources/nrql-syntax-components-functions) for more information about generating a query string.",
     "type": {
      "name": "NrdbResultContainer",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "async",
       "description": "When true, the query will begin asynchronous resolution after the allotted `timeout`. Include `queryProgress` fields in your GraphQL query to receive the information you will need to poll the `nrdbQueryProgress` field for the results of your async NRQL query.\n\nSee [this page](https://docs.newrelic.com/docs/apis/nerdgraph/examples/async-queries-nrql-tutorial) for additional asynchronous query documentation.",
       "type": {
        "name": "Boolean",
        "kind": "SCALAR"
       },
       "defaultValue": "false"
      },
      {
       "name": "nrql",
       "description": "The [NRQL](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/nrql-resources/nrql-syntax-components-functions) query string.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Nrql",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "options",
       "description": "Additional options for NRQL queries.",
       "type": {
        "name": "NrqlQueryOptions",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "timeout",
       "description": "The timeout we will apply to the NRQL Query. The value will be clamped to between 5 and 120 seconds and defaults to 5 seconds.\n\nFor `async` queries, if the query is still incomplete after this amount of time, resolution will become asynchronous and return `queryProgress` data if requested.",
       "type": {
        "name": "Seconds",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "nrdbQueryProgress",
     "description": "Poll for the results of a previously-executed asychronous NRDB query.\n\nThe `queryId` is available in the `queryProgress` data returned by the original asynchronous query.\n\nSee [this page](https://docs.newrelic.com/docs/apis/nerdgraph/examples/async-queries-nrql-tutorial) for additional asynchronous query documentation.",
     "type": {
      "name": "NrdbResultContainer",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "queryId",
       "description": "A token for retrieving the results of a previously executed asynchronous query.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "permalink",
     "description": "The url to the entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "recentAlertViolations",
     "description": "Recent violations on the entity.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityAlertViolation",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "count",
       "description": "The desired number of alert violations to be returned.",
       "type": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "relatedEntities",
     "description": "Related entities result with optional filtering.",
     "type": {
      "name": "EntityRelationshipRelatedEntitiesResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "cursor",
       "description": "The cursor to fetch paginated results.",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "filter",
       "description": "Apply an optional filter to the related entities.",
       "type": {
        "name": "EntityRelationshipEdgeFilter",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "limit",
       "description": "A limit to apply to the number of relationships returned. Note: this option can only lower the default limits (2000 relationships).",
       "type": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "relationships",
     "description": "A list of the entities' relationships.\n\nFor more information, visit [our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/graphql-relationships-api-tutorial).",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityRelationship",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "endTime",
       "description": "Return relationships as they existed in the past. The duration of the time window queried is fixed at 75 minutes.",
       "type": {
        "name": "EpochMilliseconds",
        "kind": "SCALAR"
       }
      },
      {
       "name": "filter",
       "description": "Apply an optional filter to the relationships.",
       "type": {
        "name": "EntityRelationshipFilter",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "reporting",
     "description": "The reporting status of the entity. If New Relic is successfully collecting data from your application, this will be true.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "serviceLevel",
     "description": "The service level defined for the entity.",
     "type": {
      "name": "ServiceLevelDefinition",
      "kind": "OBJECT"
     }
    },
    {
     "name": "tags",
     "description": "The tags applied to the entity.\n\nFor details on tags, as well as query and mutation examples, visit [our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/graphql-tagging-api-tutorial).",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityTag",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "tagsWithMetadata",
     "description": "The tags applied to the entity with their metadata.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityTagWithMetadata",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "tracingSummary",
     "description": "Look up Distributed Tracing summary data for the selected `EntityGuid`",
     "type": {
      "name": "DistributedTracingEntityTracingSummary",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "timeWindow",
       "description": "The start and end of the tracing data. Defaults to the last 30 minutes",
       "type": {
        "name": "TimeWindowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "type",
     "description": "The entity's type",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ],
   "interfaces": [
    {
     "name": "AlertableEntity",
     "kind": "INTERFACE"
    },
    {
     "name": "Entity",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "DistributedTracingSpanAnomaly",
   "description": "An anomaly detected with respect to an attribute of a span.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "anomalousValue",
     "description": "The value of the span attribute which was detected as being anomalous.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Float",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "anomalyType",
     "description": "The attribute of the span which was detected as being anomalous.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "DistributedTracingSpanAnomalyType",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "averageMeasure",
     "description": "The average value for the attribute on similar spans.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Float",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "CloudBillingIntegration",
   "description": "Billing Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "EntityAlertViolation",
   "description": "The alert violation for an entity",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "agentUrl",
     "description": "A link to the agent in the time window in which the violation occurred.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "alertSeverity",
     "description": "The severity of the violation.",
     "type": {
      "name": "EntityAlertSeverity",
      "kind": "ENUM"
     }
    },
    {
     "name": "closedAt",
     "description": "Timestamp of when the violation was closed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "label",
     "description": "The description of the violation.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "level",
     "description": "The priority of the violation.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "openedAt",
     "description": "Timestamp of when the violation was opened.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "violationId",
     "description": "The id of the violation.",
     "type": {
      "name": "EntityAlertViolationInt",
      "kind": "SCALAR"
     }
    },
    {
     "name": "violationUrl",
     "description": "A link to the violation if it is connected to an incident.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "DashboardCreateError",
   "description": "Expected errors that can be returned by create operation.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "description",
     "description": "Error description.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "type",
     "description": "Error type.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "DashboardCreateErrorType",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "SyntheticMonitorStatus",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "DELETED",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "DISABLED",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "ENABLED",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "FAULTY",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "MUTED",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "PAUSED",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "ApiAccessUserKeyError",
   "description": "A user key error. Each error maps to a single key input.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "accountId",
     "description": "The account ID of the key.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "errorType",
     "description": "The error type of the error.",
     "type": {
      "name": "ApiAccessUserKeyErrorType",
      "kind": "ENUM"
     }
    },
    {
     "name": "id",
     "description": "The `id` of the key being updated.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "message",
     "description": "A message about why the key creation failed.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "type",
     "description": "The type of the key.",
     "type": {
      "name": "ApiAccessKeyType",
      "kind": "ENUM"
     }
    },
    {
     "name": "userId",
     "description": "The user ID of the key.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ],
   "interfaces": [
    {
     "name": "ApiAccessKeyError",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "IncidentIntelligenceEnvironmentCurrentEnvironmentResultReasonDetails",
   "description": "Reason details union",
   "kind": "UNION",
   "possibleTypes": [
    {
     "name": "IncidentIntelligenceEnvironmentMultipleEnvironmentsAvailable",
     "kind": "OBJECT"
    },
    {
     "name": "IncidentIntelligenceEnvironmentUserNotAuthorizedForAccount",
     "kind": "OBJECT"
    },
    {
     "name": "IncidentIntelligenceEnvironmentUserNotCapableToOperateOnAccount",
     "kind": "OBJECT"
    }
   ]
  },
  {
   "name": "AiDecisionsRelativeJaccardDistanceInput",
   "description": "Input type for RelativeJaccardDistance expression",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "left",
     "description": "Left operand of comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsIncidentObjectInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "maxDistance",
     "description": "Maximum distance threshold.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Float",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "right",
     "description": "Right operand of comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsIncidentObjectInput",
       "kind": "INPUT_OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "ServiceLevelObjective",
   "description": "An objective definition.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "description",
     "description": "The description of the SLO.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The name of the SLO.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "resultQueries",
     "description": "The resulting NRQL queries that help consume the metrics of the SLO.",
     "type": {
      "name": "ServiceLevelObjectiveResultQueries",
      "kind": "OBJECT"
     }
    },
    {
     "name": "target",
     "description": "The target percentage of the SLO.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Float",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "timeWindow",
     "description": "The time window configuration of the SLO.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ServiceLevelObjectiveTimeWindow",
       "kind": "OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "StreamingExportAccountStitchedFields",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "streamingRule",
     "description": "Get the information for a specific streaming rule",
     "type": {
      "name": "StreamingExportRule",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "id",
       "description": "The streaming rule you want details about",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "streamingRules",
     "description": "List the streaming rules for the given account",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "StreamingExportRule",
       "kind": "OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "CloudGcpUpdateAccountInput",
   "description": "Information required to update a GCP account to a NewRelic account.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "disabled",
     "description": "Disable the linked account.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "The linked account new name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "projectId",
     "description": "The GCP project identifier.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "DashboardWidgetNrqlQuery",
   "description": "Single NRQL query for a widget.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "accountId",
     "description": "New Relic account ID to issue the query against.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "query",
     "description": "NRQL formatted query.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Nrql",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "EmbeddedChartType",
   "description": "Represents all the visualization types available for embedded charts.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "APDEX",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AREA",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "BAR",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "BASELINE",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "BILLBOARD",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "BULLET",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "EMPTY",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "EVENT_FEED",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "FUNNEL",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "HEATMAP",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "HISTOGRAM",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "JSON",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "LINE",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "MARKDOWN",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "PIE",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SCATTER",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "STACKED_HORIZONTAL_BAR",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "TABLE",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "TRAFFIC_LIGHT",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "VERTICAL_BAR",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "OrganizationAccountShareLimitingRoleWrapper",
   "description": "An account share's limiting role",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "id",
     "description": "id",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "DashboardUndeleteError",
   "description": "Expected error types that can be returned by undelete operation.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "description",
     "description": "Error description.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "type",
     "description": "Error type.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "DashboardUndeleteErrorType",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "TaggingMutationErrorType",
   "description": "The different types of errors the API can return.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "CONCURRENT_TASK_EXCEPTION",
     "description": "Too many concurrent tasks for the same GUID are being sent and we cannot process. Please serialize your requests for the given GUID.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "INVALID_DOMAIN_TYPE",
     "description": "Domain Type invalid. The decoded domain type from the provided GUID is not valid. Please provide a correct GUID.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "INVALID_ENTITY_GUID",
     "description": "We could not decode the provided GUID. Entity guid needs to be base64 encoded.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "INVALID_KEY",
     "description": "The tag key is not valid. Char length has been reached, contains a disallowed character(eg :) or is empty",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "INVALID_VALUE",
     "description": "The tag value is not valid. Char length has been reached, contains a disallowed character(eg :) or is empty",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NOT_FOUND",
     "description": "The given GUID or tag you're looking for does not exist.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NOT_PERMITTED",
     "description": "You've attempted to do something your Domain/EntityType is not permitted to do. Its also possible that an api key is required.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "TOO_MANY_CHARS_QUERY_FILTER",
     "description": "One of the query filters exceeds the character limit.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "TOO_MANY_TAG_KEYS",
     "description": "The given entity has reached its tag key count limit. You will need to delete existing tags for the given GUID before continuing.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "TOO_MANY_TAG_VALUES",
     "description": "The given entity has reached its tag value count limit. You will need to delete existing values for the given GUID before continuing.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "UPDATE_WILL_BE_DELAYED",
     "description": "The changes will be reflected in the entity with some delay",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "OrganizationIdInput",
   "description": "Provides the operations available on the id",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "eq",
     "description": "An authentication domain id",
     "type": {
      "name": "ID",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AuthorizationManagementGrantedRole",
   "description": "A Granted Role represents the access given to a group.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "accountId",
     "description": "the account that this role grants access to",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "displayName",
     "description": "the name of the object",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "groupId",
     "description": "the group that this role grants access to",
     "type": {
      "name": "ID",
      "kind": "SCALAR"
     }
    },
    {
     "name": "id",
     "description": "a value that uniquely identifies this object",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "the name of the object",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "organizationId",
     "description": "the organization this role grants access to",
     "type": {
      "name": "ID",
      "kind": "SCALAR"
     }
    },
    {
     "name": "roleId",
     "description": "the role that defines this access",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "type",
     "description": "the type of the role",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "CloudAzureContainersIntegration",
   "description": "Containers Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "resourceGroups",
     "description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "CloudGcpInterconnectIntegrationInput",
   "description": "Interconnect",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "ErrorsInboxEventSource",
   "description": "Event source type (note: this list includes events currently supported by errors inbox)",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "AWS_LAMBDA_INVOCATION_ERROR",
     "description": "AwsLambdaInvocationError events",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "ERROR_TRACE",
     "description": "ErrorTrace events",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "JAVA_SCRIPT_ERROR",
     "description": "JavaScriptError events",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "MOBILE_CRASH",
     "description": "MobileCrash events",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "MOBILE_HANDLED_EXCEPTION",
     "description": "MobileHandledException events",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "MOBILE_REQUEST_ERROR",
     "description": "MobileRequestError events",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SPAN",
     "description": "Span events",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "TRANSACTION_ERROR",
     "description": "TransactionError events",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "Nr1CatalogSearchResultType",
   "description": "Possible search result types used to filter search results",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "ALERT_POLICY_TEMPLATE",
     "description": "Filter search results by alert policy templates",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "DASHBOARD_TEMPLATE",
     "description": "Filter search results by dashboard templates",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "DATA_SOURCE",
     "description": "Filter search results by data sources",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NERDPACK",
     "description": "Filter search results by nerdpacks",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "QUICKSTART",
     "description": "Filter search results by quickstarts",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "CloudGcpRedisIntegrationInput",
   "description": "Redis",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "MultiTenantAuthorizationGrantCollection",
   "description": "A list of grants",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "items",
     "description": "List of grants",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "MultiTenantAuthorizationGrant",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "nextCursor",
     "description": "an opaque cursor to supply with subsequent   requests to get the next page of results, null if there are no more pages",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "NrdbQueryProgress",
   "description": "An object containing metadata about the execution of an asynchronous NRQL query.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "completed",
     "description": "Whether the query has finished executing.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "queryId",
     "description": "A token for retrieving the results of a previously executed asynchronous query.",
     "type": {
      "name": "ID",
      "kind": "SCALAR"
     }
    },
    {
     "name": "resultExpiration",
     "description": "Results of the completed query will expire permanently after this long.",
     "type": {
      "name": "Seconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "retryAfter",
     "description": "Wait at least this long before querying for completed results with the `queryId`.",
     "type": {
      "name": "Seconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "retryDeadline",
     "description": "The server may cancel the NRDB query after this long if no GraphQL queries have been made to check the `queryId`'s status.",
     "type": {
      "name": "Seconds",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "DashboardPageInput",
   "description": "Page input.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "description",
     "description": "Brief text describing the page.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "guid",
     "description": "Unique entity identifier of the Page to be updated. When null, it means a new Page will be created.",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The name of the page.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "widgets",
     "description": "A nested block of all widgets belonging to the page.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "DashboardWidgetInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     }
    }
   ]
  },
  {
   "name": "SyntheticsUpdateCertCheckMonitorInput",
   "description": "The monitor values that can be updated on a Cert Check monitor",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "apdexTarget",
     "description": "The monitor's Apdex target used to populate SLA reports",
     "type": {
      "name": "Float",
      "kind": "SCALAR"
     }
    },
    {
     "name": "domain",
     "description": "The domain of the host that will have its certificate checked",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "locations",
     "description": "The locations the monitor will run from",
     "type": {
      "name": "SyntheticsLocationsInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "name",
     "description": "The human readable identifier for the monitor",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "numberDaysToFailBeforeCertExpires",
     "description": "The desired number of remaining days until the certificate expires to trigger a monitor failure",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "period",
     "description": "The interval at which the monitor runs in minutes",
     "type": {
      "name": "SyntheticsMonitorPeriod",
      "kind": "ENUM"
     }
    },
    {
     "name": "runtime",
     "description": "The runtime that the monitor will use to run jobs. The only accepted values are runtimeType: NODE_API \u0026 runtimeTypeVersion: 16.10",
     "type": {
      "name": "SyntheticsExtendedTypeMonitorRuntimeInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "status",
     "description": "The run state of the monitor",
     "type": {
      "name": "SyntheticsMonitorStatus",
      "kind": "ENUM"
     }
    },
    {
     "name": "tags",
     "description": "The tags that will be associated with the monitor",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "SyntheticsTag",
       "kind": "INPUT_OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "WorkloadWorkloadStatus",
   "description": "Status of the workload.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "description",
     "description": "A description that provides additional details about the status of the workload.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "source",
     "description": "Indicates where the status value derives from.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "WorkloadStatusSource",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "statusDetails",
     "description": "The details of the statuses that were involved in the calculation of the workload status.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "WorkloadStatusResult",
        "kind": "INTERFACE"
       }
      }
     }
    },
    {
     "name": "summary",
     "description": "A short description of the status of the workload.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "value",
     "description": "The status of the workload.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "WorkloadStatusValue",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "AgentApplicationSettingsApmConfigInput",
   "description": "Provides fields to set general APM application settings.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "apdexTarget",
     "description": "The desired target for the APDEX measurement of this application.",
     "type": {
      "name": "Float",
      "kind": "SCALAR"
     }
    },
    {
     "name": "useServerSideConfig",
     "description": "Sets if installed agents should override local settings with ones set here.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "TaggingTagValueInput",
   "description": "An object that represents a tag key-value pair",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "key",
     "description": "The tag key.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "value",
     "description": "The tag value.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "CloudAzurePowerbidedicatedIntegrationInput",
   "description": "Power BI Dedicated",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "resourceGroups",
     "description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "StackTraceBrowserStackTraceFrame",
   "description": "An object representing a stack trace segment",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "column",
     "description": "Frame column number",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "formatted",
     "description": "Formatted frame",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "line",
     "description": "Frame line number",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "Frame name",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "DashboardBarWidgetConfigurationInput",
   "description": "Configuration for visualization type 'viz.bar'. Learn more about [bar](https://docs.newrelic.com/docs/apis/nerdgraph/examples/create-widgets-dashboards-api/#bar) widget.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "nrqlQueries",
     "description": "NRQL queries.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "DashboardWidgetNrqlQueryInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    }
   ]
  },
  {
   "name": "CloudService",
   "description": "A Cloud Provider service available for monitoring.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "dashboards",
     "description": "The cloud service dashboard templates.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "CloudDashboardTemplate",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "icon",
     "description": "The cloud service icon name.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service identifier in NewRelic.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "isEnabled",
     "description": "Shows if the cloud service is enabled for integrating.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "The cloud service name.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "provider",
     "description": "The cloud provider.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "CloudProvider",
       "kind": "INTERFACE"
      }
     }
    },
    {
     "name": "slug",
     "description": "The cloud service unique short name.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "DomainTypeInput",
   "description": "Input for getting details about an entity type",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "domain",
     "description": "The domain of the entity.\n\nThe domain must be a value matching /[A-Z][A-Z0-9_]{2,14}/.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "type",
     "description": "The type of the entity.\n\nThe type must be a value matching /[A-Z][A-Z0-9_]{2,49}/.\n\nSome examples are APPLICATION, HOST or CONTAINER.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "OrganizationAuthenticationTypeEnum",
   "description": "Provides the available values for authentication type",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "DISABLED",
     "description": "Authentication not configured",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "HEROKU_SSO",
     "description": "Heroku Single Sign-On",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "OIDC_SSO",
     "description": "Oidc Single Sign-On",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "PASSWORD",
     "description": "Username and password authentication",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SAML_SSO",
     "description": "SAML Single Sign-On",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "UnavailableEntityOutline",
   "description": "An entity outline that is unavailable.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "account",
     "type": {
      "name": "AccountOutline",
      "kind": "OBJECT"
     }
    },
    {
     "name": "accountId",
     "description": "The New Relic account ID associated with this entity.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "alertSeverity",
     "description": "The current alerting severity of the entity.",
     "type": {
      "name": "EntityAlertSeverity",
      "kind": "ENUM"
     }
    },
    {
     "name": "domain",
     "description": "The entity's domain",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "entityType",
     "description": "A value representing the combination of the entity's domain and type.",
     "type": {
      "name": "EntityType",
      "kind": "ENUM"
     }
    },
    {
     "name": "firstIndexedAt",
     "description": "The date of last time the entity has updated any of its fields.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "goldenMetrics",
     "description": "The list of golden metrics for a specific entity",
     "type": {
      "name": "EntityGoldenContextScopedGoldenMetrics",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden metrics",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "timeWindow",
       "description": "Time range to apply to the golden metric NRQL query result field",
       "type": {
        "name": "EntityGoldenNrqlTimeWindowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "goldenTags",
     "description": "The list of golden tags for a specific entityType.",
     "type": {
      "name": "EntityGoldenContextScopedGoldenTags",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden tags",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "guid",
     "description": "A unique entity identifier.",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    },
    {
     "name": "indexedAt",
     "description": "The time the entity was indexed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "lastReportingChangeAt",
     "description": "The last time the entity's reporting status changed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The name of this entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "permalink",
     "description": "The url to the entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "reporting",
     "description": "The reporting status of the entity. If New Relic is successfully collecting data from your application, this will be true.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "serviceLevel",
     "description": "The service level defined for the entity.",
     "type": {
      "name": "ServiceLevelDefinition",
      "kind": "OBJECT"
     }
    },
    {
     "name": "tags",
     "description": "The tags applied to the entity.\n\nFor details on tags, as well as query and mutation examples, visit [our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/graphql-tagging-api-tutorial).",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityTag",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "type",
     "description": "The entity's type",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ],
   "interfaces": [
    {
     "name": "AlertableEntityOutline",
     "kind": "INTERFACE"
    },
    {
     "name": "EntityOutline",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "DataManagementRenderedRetention",
   "description": "An account's current retention values for a namespace",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "accountId",
     "description": "The account id for the event retention",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "namespace",
     "description": "The namespace for the event retention",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "namespaceLevelRetention",
     "description": "Base retention value for an event namespace",
     "type": {
      "name": "DataManagementNamespaceLevelRetention",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The UNIX timestamp when the retention was last updated",
     "type": {
      "name": "EpochSeconds",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "CloudEcsIntegrationInput",
   "description": "Amazon Elastic Container Service (ECS)",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "fetchTags",
     "description": "Specify if tags should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "tagKey",
     "description": "Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "tagValue",
     "description": "Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "IncidentIntelligenceEnvironmentActorStitchedFields",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "authorizedEnvironments",
     "description": "A list of potential environments is returned based on the authorized accounts list",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "IncidentIntelligenceEnvironmentIncidentIntelligenceEnvironment",
        "kind": "OBJECT"
       }
      }
     },
     "args": [
      {
       "name": "kind",
       "description": "Which environment kind to support when evaluating the query",
       "type": {
        "name": "IncidentIntelligenceEnvironmentSupportedEnvironmentKind",
        "kind": "ENUM"
       }
      }
     ]
    },
    {
     "name": "consentedAccounts",
     "description": "Retrieves a list of authorized accounts the user is authorized for that have been marked with consent by an admin of that account.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "IncidentIntelligenceEnvironmentConsentedAccount",
        "kind": "OBJECT"
       }
      }
     }
    },
    {
     "name": "currentEnvironment",
     "description": "Retrieves the incident intelligence environment based on the user's authentication and product entitlement, if an account id is not provided, the environment is detected based on the authorized accounts.In cases where a user have more then one potential environment, the account must be provided.",
     "type": {
      "name": "IncidentIntelligenceEnvironmentCurrentEnvironmentResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "kind",
       "description": "Which environment kind to support when evaluating the query",
       "type": {
        "name": "IncidentIntelligenceEnvironmentSupportedEnvironmentKind",
        "kind": "ENUM"
       }
      }
     ]
    }
   ]
  },
  {
   "name": "SyntheticsCreateScriptBrowserMonitorInput",
   "description": "The monitor input values needed to create a Script Browser monitor",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "advancedOptions",
     "description": "The monitor advanced options",
     "type": {
      "name": "SyntheticsScriptBrowserMonitorAdvancedOptionsInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "apdexTarget",
     "description": "The monitor's Apdex target used to populate SLA reports",
     "type": {
      "name": "Float",
      "kind": "SCALAR"
     }
    },
    {
     "name": "browsers",
     "description": "The browser(s) that the monitor will use to run jobs",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "SyntheticsBrowser",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "devices",
     "description": "The devices that the monitor will use to run jobs",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "SyntheticsDevice",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "locations",
     "description": "The locations the monitor will run from",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SyntheticsScriptedMonitorLocationsInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "name",
     "description": "The human readable identifier for the monitor",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "period",
     "description": "The interval at which the monitor runs in minutes",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SyntheticsMonitorPeriod",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "runtime",
     "description": "The runtime that the monitor will use to run jobs",
     "type": {
      "name": "SyntheticsRuntimeInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "script",
     "description": "The script that the monitor runs",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "status",
     "description": "The run state of the monitor",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SyntheticsMonitorStatus",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "tags",
     "description": "The tags that will be associated with the monitor",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "SyntheticsTag",
       "kind": "INPUT_OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "AiNotificationsConstraint",
   "description": "List of schema/suggestions constraints",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "key",
     "description": "key",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "value",
     "description": "value",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "DashboardVariableEnumItemInput",
   "description": "Input type that represents a possible value for a variable of type ENUM.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "title",
     "description": "A human-friendly display string for this value.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "value",
     "description": "A possible variable value",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "NerdpackAssetInfo",
   "description": "Info about Nerdpack assets.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "name",
     "description": "Name of the asset.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "sizeInBytes",
     "description": "Size of the asset, in Bytes.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "CloudAwsCognitoIntegration",
   "description": "Cognito Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "DashboardDeleteErrorType",
   "description": "Expected error types that can be returned by delete operation.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "DASHBOARD_NOT_FOUND",
     "description": "Dashboard not found in the system.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "FORBIDDEN_OPERATION",
     "description": "User is not allowed to execute the operation.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AiDecisionsDecisionType",
   "description": "Type of decision",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "EXPLICIT",
     "description": "Decision type is explicit",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "GLOBAL",
     "description": "Decision type is global",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "IMPLICIT",
     "description": "Decision type is implicit",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "SyntheticsScriptApiMonitorCreateMutationResult",
   "description": "The result of a Script Api monitor create mutation",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "errors",
     "description": "Errors that occurred during Script Api monitor create mutation",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "name": "SyntheticsMonitorCreateError",
        "kind": "OBJECT"
       }
      }
     }
    },
    {
     "name": "monitor",
     "description": "The resulting Script Api monitor",
     "type": {
      "name": "SyntheticsScriptApiMonitor",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "Nr1CatalogNerdpackVisibility",
   "description": "Possible visibilities for the Nerdpack",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "GLOBAL",
     "description": "Indicates the Nerdpack is available globally across all accounts",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "OWNER_AND_ALLOWED",
     "description": "Indicates the Nerdpack is only available to the owning and allowed accounts",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "SyntheticsDevice",
   "description": "enum for DeviceEmulation",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "DESKTOP",
     "description": "deviceType: DESKTOP, deviceOrientation: NONE",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "MOBILE_LANDSCAPE",
     "description": "deviceType: MOBILE, deviceOrientation: LANDSCAPE",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "MOBILE_PORTRAIT",
     "description": "deviceType: MOBILE, deviceOrientation: PORTRAIT",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NONE",
     "description": "No Device Settings",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "TABLET_LANDSCAPE",
     "description": "deviceType: TABLET, deviceOrientation: LANDSCAPE",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "TABLET_PORTRAIT",
     "description": "deviceType: TABLET, deviceOrientation: PORTRAIT",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "OrganizationAccountShareSortDirectionEnum",
   "description": "Provides the available values of possible directions to sort the result",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "ASCENDING",
     "description": "Sort in ascending order",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "DESCENDING",
     "description": "Sort in descending order",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "ServiceLevelObjectiveRollingTimeWindow",
   "description": "The rolling time window configuration of the SLO.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "count",
     "description": "The count of time units.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "unit",
     "description": "The time unit.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ServiceLevelObjectiveRollingTimeWindowUnit",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "MultiTenantIdentityUserSortKey",
   "description": "Available keys for sorting users",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "EMAIL",
     "description": "User email address",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "ID",
     "description": "User id",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "LAST_ACTIVE",
     "description": "User last active date",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NAME",
     "description": "User name",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "TYPE",
     "description": "User type",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "CloudAzureMonitorIntegration",
   "description": "Azure Monitor metrics Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "enabled",
     "description": "Specify if integration is active",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "excludeTags",
     "description": "Specify resource tags (in 'key:value' form) associated with the resources that you want to exclude from monitoring. Exclusion takes precedence over inclusion.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "includeTags",
     "description": "Specify resource tags (in 'key:value' form) associated with the resources that you want to monitor. If empty, all resources will be monitored.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "The polling interval for metadata and tags, in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The polling interval for metrics, in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "resourceGroups",
     "description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "resourceTypes",
     "description": "Specify each Azure resource type that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "UserManagementCreateGroupPayload",
   "description": "Autogenerated return type of CreateGroup.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "group",
     "description": "The group that was created",
     "type": {
      "name": "UserManagementGroup",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "EdgeHttpsEndpointDetail",
   "description": "All the details necessary to configure an integration to connect to the Infinite Tracing Trace API (HTTP 1.1) endpoint.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "host",
     "description": "Full host name that is used to connect to the endpoint.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "port",
     "description": "Port that is used to connect to the endpoint.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "url",
     "description": "Full URL used to send data to the endpoint. For instance, if you were using the\n[Java Telemetry SDK](https://docs.newrelic.com/docs/data-ingest-apis/get-data-new-relic/new-relic-sdks/telemetry-sdks-send-custom-telemetry-data-new-relic)\nthis is the data you would use to create a `URI` to pass to the [`uriOverride`](https://github.com/newrelic/newrelic-telemetry-sdk-java/blob/85e526cf6fbba0640f20d2d7a3ab0dab89f958b3/telemetry_core/src/main/java/com/newrelic/telemetry/AbstractSenderBuilder.java#L37-L48)\nmethod.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "EdgeEndpointDetail",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "UserManagementGroupIdInput",
   "description": "Available filtering types for group IDs",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "eq",
     "description": "A group ID",
     "type": {
      "name": "ID",
      "kind": "SCALAR"
     }
    },
    {
     "name": "in",
     "description": "An array of group IDs",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    }
   ]
  },
  {
   "name": "GenericEntityOutline",
   "description": "A generic entity outline.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "account",
     "type": {
      "name": "AccountOutline",
      "kind": "OBJECT"
     }
    },
    {
     "name": "accountId",
     "description": "The New Relic account ID associated with this entity.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "alertSeverity",
     "description": "The current alerting severity of the entity.",
     "type": {
      "name": "EntityAlertSeverity",
      "kind": "ENUM"
     }
    },
    {
     "name": "domain",
     "description": "The entity's domain",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "entityType",
     "description": "A value representing the combination of the entity's domain and type.",
     "type": {
      "name": "EntityType",
      "kind": "ENUM"
     }
    },
    {
     "name": "firstIndexedAt",
     "description": "The date of last time the entity has updated any of its fields.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "goldenMetrics",
     "description": "The list of golden metrics for a specific entity",
     "type": {
      "name": "EntityGoldenContextScopedGoldenMetrics",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden metrics",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "timeWindow",
       "description": "Time range to apply to the golden metric NRQL query result field",
       "type": {
        "name": "EntityGoldenNrqlTimeWindowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "goldenTags",
     "description": "The list of golden tags for a specific entityType.",
     "type": {
      "name": "EntityGoldenContextScopedGoldenTags",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden tags",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "guid",
     "description": "A unique entity identifier.",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    },
    {
     "name": "indexedAt",
     "description": "The time the entity was indexed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "lastReportingChangeAt",
     "description": "The last time the entity's reporting status changed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The name of this entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "permalink",
     "description": "The url to the entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "reporting",
     "description": "The reporting status of the entity. If New Relic is successfully collecting data from your application, this will be true.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "serviceLevel",
     "description": "The service level defined for the entity.",
     "type": {
      "name": "ServiceLevelDefinition",
      "kind": "OBJECT"
     }
    },
    {
     "name": "tags",
     "description": "The tags applied to the entity.\n\nFor details on tags, as well as query and mutation examples, visit [our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/graphql-tagging-api-tutorial).",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityTag",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "type",
     "description": "The entity's type",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ],
   "interfaces": [
    {
     "name": "AlertableEntityOutline",
     "kind": "INTERFACE"
    },
    {
     "name": "EntityOutline",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "AlertsNotificationChannelsRemoveFromPolicyError",
   "description": "The error for dissociating notification channels from a policy.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "description",
     "description": "Error description.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "errorType",
     "description": "Error type.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsNotificationChannelsRemoveFromPolicyErrorType",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "notificationChannelId",
     "description": "Notification channel ID.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "EdgeDeleteTraceObserverResponses",
   "description": "Array of responses, one for each trace observer deletion request.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "responses",
     "description": "Array of trace observer deletion responses, one for each `DeleteTraceObserverInput`.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EdgeDeleteTraceObserverResponse",
         "kind": "OBJECT"
        }
       }
      }
     }
    }
   ]
  },
  {
   "name": "OrganizationOrganizationCreateAsyncResultFilterInput",
   "description": "A filter for organization create job results",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "customerId",
     "description": "Filter organization create job results by customer ID",
     "type": {
      "name": "OrganizationOrganizationCreateJobCustomerIdInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "jobId",
     "description": "Filter oganization create job results by id",
     "type": {
      "name": "OrganizationOrganizationCreateJobIdInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "status",
     "description": "Filter organization create job results by status",
     "type": {
      "name": "OrganizationOrganizationCreateJobStatusInput",
      "kind": "INPUT_OBJECT"
     }
    }
   ]
  },
  {
   "name": "Nr1CatalogInstaller",
   "description": "Information about how a quickstart is installed",
   "kind": "INTERFACE",
   "fields": [
    {
     "name": "type",
     "description": "The type of installer",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Nr1CatalogInstallerType",
       "kind": "ENUM"
      }
     }
    }
   ],
   "possibleTypes": [
    {
     "name": "Nr1CatalogInstallPlan",
     "kind": "OBJECT"
    }
   ]
  },
  {
   "name": "CloudGcpDisableIntegrationsInput",
   "description": "List of integrations",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "gcpAiplatform",
     "description": "Vertex AI integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "gcpAlloydb",
     "description": "AlloyDB integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "gcpAppengine",
     "description": "App Engine integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "gcpBigquery",
     "description": "BigQuery integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "gcpBigtable",
     "description": "Bigtable integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "gcpComposer",
     "description": "Composer integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "gcpDataflow",
     "description": "Dataflow integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "gcpDataproc",
     "description": "Dataproc integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "gcpDatastore",
     "description": "Datastore integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "gcpFirebasedatabase",
     "description": "Firebase Database integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "gcpFirebasehosting",
     "description": "Firebase Hosting integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "gcpFirebasestorage",
     "description": "Firebase Storage integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "gcpFirestore",
     "description": "Firestore integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "gcpFunctions",
     "description": "Cloud Functions integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "gcpInterconnect",
     "description": "Interconnect integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "gcpKubernetes",
     "description": "Kubernetes Engine integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "gcpLoadbalancing",
     "description": "Cloud Load Balancing integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "gcpMemcache",
     "description": "Memcache integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "gcpPubsub",
     "description": "Cloud Pub/Sub integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "gcpRedis",
     "description": "Redis integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "gcpRouter",
     "description": "Router integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "gcpRun",
     "description": "Run integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "gcpSpanner",
     "description": "Cloud Spanner integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "gcpSql",
     "description": "Cloud SQL integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "gcpStorage",
     "description": "Cloud Storage integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "gcpVms",
     "description": "Compute Engine integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "gcpVpcaccess",
     "description": "VPC Access integration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudDisableAccountIntegrationInput",
       "kind": "INPUT_OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "JavaFlightRecorderStackFrame",
   "description": "A method within the flamegraph",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "count",
     "description": "The number of stack traces that this frame is in",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "This stackframe's id",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "The stackframe's class and method name",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "parentId",
     "description": "This stackframe's parent id",
     "type": {
      "name": "ID",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AgentApplicationBrowserSettings",
   "description": "The settings of a browser application. Includes loader script.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "cookiesEnabled",
     "description": "Configure cookies. The default is enabled: true.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "distributedTracingEnabled",
     "description": "Configure distributed tracing in browser apps. The default is enabled: true.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "loaderScript",
     "description": "The snippet of JavaScript used to copy/paste into your JavaScript app if you aren't using an auto-instrumenting agent on the backend. Note that the resulting snippet will be a JSON string that will need to be parsed before using in your browser application.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "loaderType",
     "description": "Determines which browser loader will be configured. The default is \"SPA\".",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AgentApplicationBrowserLoader",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "EntityGoldenOriginalQueryWithSelector",
   "description": "Object that represents a nrql metric with its metric selector",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "query",
     "description": "The golden metric NRQL query.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "selectorValue",
     "description": "The value of the selector. Currently, this is the value of the instrumentation provider.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "StackTraceMobileCrash",
   "description": "A structured representation of a crash occurring in a mobile application.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "stackTrace",
     "description": "A structured representation of a stack trace for a crash that occurs on a mobile application.",
     "type": {
      "name": "StackTraceMobileCrashStackTrace",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "Nr1CatalogInstallAlertPolicyTemplateResult",
   "description": "Information about the mutation result when installing an alert policy template",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "alertPolicyTemplate",
     "description": "The template that was used for the installation",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Nr1CatalogAlertPolicyTemplate",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "createdAlertPolicy",
     "description": "An outline of the created alert policy",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Nr1CatalogAlertPolicyOutline",
       "kind": "OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "CloudAzureVirtualnetworksIntegration",
   "description": "Virtual Network Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "resourceGroups",
     "description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "SyntheticsUpdateSimpleMonitorInput",
   "description": "The monitor values that can be updated on a simple (ping) monitor",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "advancedOptions",
     "description": "The monitor advanced options",
     "type": {
      "name": "SyntheticsSimpleMonitorAdvancedOptionsInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "apdexTarget",
     "description": "The monitor's Apdex target used to populate SLA reports",
     "type": {
      "name": "Float",
      "kind": "SCALAR"
     }
    },
    {
     "name": "locations",
     "description": "The locations the monitor will run from",
     "type": {
      "name": "SyntheticsLocationsInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "name",
     "description": "The human readable identifier for the monitor",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "period",
     "description": "The interval at which the monitor runs in minutes",
     "type": {
      "name": "SyntheticsMonitorPeriod",
      "kind": "ENUM"
     }
    },
    {
     "name": "status",
     "description": "The run state of the monitor",
     "type": {
      "name": "SyntheticsMonitorStatus",
      "kind": "ENUM"
     }
    },
    {
     "name": "tags",
     "description": "The tags that will be associated with the monitor",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "SyntheticsTag",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "uri",
     "description": "The uri the monitor runs against",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "InfrastructureAwsLambdaFunctionEntity",
   "description": "An AWS Lambda Function entity.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "account",
     "type": {
      "name": "AccountOutline",
      "kind": "OBJECT"
     }
    },
    {
     "name": "accountId",
     "description": "The New Relic account ID associated with this entity.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "alertSeverity",
     "description": "The current alerting severity of the entity.",
     "type": {
      "name": "EntityAlertSeverity",
      "kind": "ENUM"
     }
    },
    {
     "name": "alertViolations",
     "description": "Violations on the entity that were open during the specified time window. This will return up to 500 violations - if there are more in the time window selected, you must narrow the time window or look at fewer entities.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityAlertViolation",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "endTime",
       "description": "End of time window for violations.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EpochMilliseconds",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "startTime",
       "description": "Start of time window for violations.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EpochMilliseconds",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "deploymentSearch",
     "description": "Retrieve the deployment event(s). Ordered by timestamp DESC.",
     "type": {
      "name": "ChangeTrackingDeploymentSearchResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "filter",
       "description": "Contains the set of filters to apply to the query.",
       "type": {
        "name": "ChangeTrackingSearchFilter",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "domain",
     "description": "The entity's domain",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "entityType",
     "description": "A value representing the combination of the entity's domain and type.",
     "type": {
      "name": "EntityType",
      "kind": "ENUM"
     }
    },
    {
     "name": "firstIndexedAt",
     "description": "The date of last time the entity has updated any of its fields.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "goldenMetrics",
     "description": "The list of golden metrics for a specific entity",
     "type": {
      "name": "EntityGoldenContextScopedGoldenMetrics",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden metrics",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "timeWindow",
       "description": "Time range to apply to the golden metric NRQL query result field",
       "type": {
        "name": "EntityGoldenNrqlTimeWindowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "goldenTags",
     "description": "The list of golden tags for a specific entityType.",
     "type": {
      "name": "EntityGoldenContextScopedGoldenTags",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden tags",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "guid",
     "description": "A unique entity identifier.",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    },
    {
     "name": "indexedAt",
     "description": "The time the entity was indexed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "integrationTypeCode",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "lastReportingChangeAt",
     "description": "The last time the entity's reporting status changed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The name of this entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nerdStorage",
     "type": {
      "name": "NerdStorageEntityScope",
      "kind": "OBJECT"
     }
    },
    {
     "name": "nrdbQuery",
     "description": "Make an `Entity` scoped query to NRDB with a NRQL string.\n\nA relevant `WHERE` clause will be added to your query to scope data to the entity in question.\n\nSee the [NRQL Docs](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/nrql-resources/nrql-syntax-components-functions) for more information about generating a query string.",
     "type": {
      "name": "NrdbResultContainer",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "async",
       "description": "When true, the query will begin asynchronous resolution after the allotted `timeout`. Include `queryProgress` fields in your GraphQL query to receive the information you will need to poll the `nrdbQueryProgress` field for the results of your async NRQL query.\n\nSee [this page](https://docs.newrelic.com/docs/apis/nerdgraph/examples/async-queries-nrql-tutorial) for additional asynchronous query documentation.",
       "type": {
        "name": "Boolean",
        "kind": "SCALAR"
       },
       "defaultValue": "false"
      },
      {
       "name": "nrql",
       "description": "The [NRQL](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/nrql-resources/nrql-syntax-components-functions) query string.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Nrql",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "options",
       "description": "Additional options for NRQL queries.",
       "type": {
        "name": "NrqlQueryOptions",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "timeout",
       "description": "The timeout we will apply to the NRQL Query. The value will be clamped to between 5 and 120 seconds and defaults to 5 seconds.\n\nFor `async` queries, if the query is still incomplete after this amount of time, resolution will become asynchronous and return `queryProgress` data if requested.",
       "type": {
        "name": "Seconds",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "nrdbQueryProgress",
     "description": "Poll for the results of a previously-executed asychronous NRDB query.\n\nThe `queryId` is available in the `queryProgress` data returned by the original asynchronous query.\n\nSee [this page](https://docs.newrelic.com/docs/apis/nerdgraph/examples/async-queries-nrql-tutorial) for additional asynchronous query documentation.",
     "type": {
      "name": "NrdbResultContainer",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "queryId",
       "description": "A token for retrieving the results of a previously executed asynchronous query.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "permalink",
     "description": "The url to the entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "recentAlertViolations",
     "description": "Recent violations on the entity.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityAlertViolation",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "count",
       "description": "The desired number of alert violations to be returned.",
       "type": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "relatedEntities",
     "description": "Related entities result with optional filtering.",
     "type": {
      "name": "EntityRelationshipRelatedEntitiesResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "cursor",
       "description": "The cursor to fetch paginated results.",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "filter",
       "description": "Apply an optional filter to the related entities.",
       "type": {
        "name": "EntityRelationshipEdgeFilter",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "limit",
       "description": "A limit to apply to the number of relationships returned. Note: this option can only lower the default limits (2000 relationships).",
       "type": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "relationships",
     "description": "A list of the entities' relationships.\n\nFor more information, visit [our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/graphql-relationships-api-tutorial).",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityRelationship",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "endTime",
       "description": "Return relationships as they existed in the past. The duration of the time window queried is fixed at 75 minutes.",
       "type": {
        "name": "EpochMilliseconds",
        "kind": "SCALAR"
       }
      },
      {
       "name": "filter",
       "description": "Apply an optional filter to the relationships.",
       "type": {
        "name": "EntityRelationshipFilter",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "reporting",
     "description": "The reporting status of the entity. If New Relic is successfully collecting data from your application, this will be true.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "runtime",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "serviceLevel",
     "description": "The service level defined for the entity.",
     "type": {
      "name": "ServiceLevelDefinition",
      "kind": "OBJECT"
     }
    },
    {
     "name": "tags",
     "description": "The tags applied to the entity.\n\nFor details on tags, as well as query and mutation examples, visit [our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/graphql-tagging-api-tutorial).",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityTag",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "tagsWithMetadata",
     "description": "The tags applied to the entity with their metadata.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityTagWithMetadata",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "tracingSummary",
     "description": "Look up Distributed Tracing summary data for the selected `EntityGuid`",
     "type": {
      "name": "DistributedTracingEntityTracingSummary",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "timeWindow",
       "description": "The start and end of the tracing data. Defaults to the last 30 minutes",
       "type": {
        "name": "TimeWindowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "type",
     "description": "The entity's type",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ],
   "interfaces": [
    {
     "name": "AlertableEntity",
     "kind": "INTERFACE"
    },
    {
     "name": "Entity",
     "kind": "INTERFACE"
    },
    {
     "name": "InfrastructureIntegrationEntity",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "LogConfigurationsUpdateDataPartitionRuleResponse",
   "description": "An object that represents the result after updating a data partition rule.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "errors",
     "description": "List of errors, if any.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "LogConfigurationsDataPartitionRuleMutationError",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "rule",
     "description": "The updated data partition rule.",
     "type": {
      "name": "LogConfigurationsDataPartitionRule",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "SyntheticsExtendedTypeMonitorRuntimeInput",
   "description": "Input to determine which runtime the step monitor will run",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "runtimeType",
     "description": "The runtime type that the monitor will run.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "runtimeTypeVersion",
     "description": "The specific version of the runtime type selected.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SemVer",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "CloudAzureMysqlflexibleIntegrationInput",
   "description": "MySQL Flexible Server",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "resourceGroups",
     "description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AiNotificationsSelectComponentOptions",
   "description": "Additional options for SELECT type components",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "creatable",
     "description": "Is custom value creation allowed",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "dependentOn",
     "description": "List of field keys their values are required in order to fetch suggestions for this field",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      }
     }
    },
    {
     "name": "filteredBy",
     "description": "List of field keys their values can be used to filter suggestions by",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      }
     }
    },
    {
     "name": "label",
     "description": "Do we allow additional values as input other than suggested?",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "multiple",
     "description": "Are we expecting a single or multiple values",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "searchable",
     "description": "Is this component searchable",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "suggestions",
     "description": "Preloaded suggestions for",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiNotificationsSuggestion",
         "kind": "OBJECT"
        }
       }
      }
     }
    }
   ]
  },
  {
   "name": "AlertsNotificationChannelDeleteErrorType",
   "description": "The error type for deleting a notification channel.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "BAD_USER_INPUT",
     "description": "Bad user input error.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "FORBIDDEN_ERROR",
     "description": "Forbidden error.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NOT_FOUND_ERROR",
     "description": "Not found error.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SERVER_ERROR",
     "description": "Server error.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "TOO_MANY_REQUESTS_ERROR",
     "description": "Too many requests error.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "CloudAzureFrontdoorIntegration",
   "description": "Front Door Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "resourceGroups",
     "description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "SyntheticsSecureCredentialOverrideInput",
   "description": "Override a monitor scripts secure credential key with a different key",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "key",
     "description": "The target secure credential key to override",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "overrideKey",
     "description": "The secure credential key override",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "SyntheticsDailyMonitorDowntimeMutationResult",
   "description": "Monitor downtime object returned to the customer for a downtime run daily",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "accountId",
     "description": "The account ID associated with the monitor downtime",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "endRepeat",
     "description": "Configuration options if the customer wants the monitor to end at a specific date",
     "type": {
      "name": "SyntheticsDateWindowEndOutput",
      "kind": "OBJECT"
     }
    },
    {
     "name": "endTime",
     "description": "The date and time in which the monitor downtime will end",
     "type": {
      "name": "NaiveDateTime",
      "kind": "SCALAR"
     }
    },
    {
     "name": "guid",
     "description": "The entity GUID associated with the monitor downtime",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    },
    {
     "name": "monitorGuids",
     "description": "The monitor GUIDs associated with the monitor downtime",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityGuid",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "The name of the monitor downtime",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "startTime",
     "description": "The date and time in which the monitor downtime will begin",
     "type": {
      "name": "NaiveDateTime",
      "kind": "SCALAR"
     }
    },
    {
     "name": "timezone",
     "description": "The timezone the time values will be in",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AiIssuesAccountStitchedFields",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "configByEnvironment",
     "description": "Fetch config for env",
     "type": {
      "name": "AiIssuesConfigurationByEnvironment",
      "kind": "OBJECT"
     }
    },
    {
     "name": "incidents",
     "description": "Fetch incidents latest data by supplied filter",
     "type": {
      "name": "AiIssuesIncidentData",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "cursor",
       "description": "cursor",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "filter",
       "description": "filter incidents",
       "type": {
        "name": "AiIssuesFilterIncidents",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "timeWindow",
       "description": "time window, if not provided the default is the last 24 hours",
       "type": {
        "name": "TimeWindowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "incidentsEvents",
     "description": "Fetch incidents events data by supplied filter",
     "type": {
      "name": "AiIssuesIncidentData",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "cursor",
       "description": "cursor",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "filter",
       "description": "filter incidents events",
       "type": {
        "name": "AiIssuesFilterIncidentsEvents",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "timeWindow",
       "description": "time window, if not provided the default is the last 24 hours",
       "type": {
        "name": "TimeWindowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "issues",
     "description": "Fetch issues latest data by supplied filter",
     "type": {
      "name": "AiIssuesIssueData",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "cursor",
       "description": "cursor",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "filter",
       "description": "filter issues",
       "type": {
        "name": "AiIssuesFilterIssues",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "timeWindow",
       "description": "time window, if not provided the default is the last 24 hours",
       "type": {
        "name": "TimeWindowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "issuesEvents",
     "description": "Fetch issues events data by supplied filter",
     "type": {
      "name": "AiIssuesIssueData",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "cursor",
       "description": "cursor",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "filter",
       "description": "filter issues events",
       "type": {
        "name": "AiIssuesFilterIssuesEvents",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "timeWindow",
       "description": "time window, if not provided the default is the last 24 hours",
       "type": {
        "name": "TimeWindowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    }
   ]
  },
  {
   "name": "CloudElbIntegration",
   "description": "ELB (Classic) Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "fetchExtendedInventory",
     "description": "Determine if extra inventory data be collected or not. May affect total data collection time and contribute to the Cloud provider API rate limit.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "fetchTags",
     "description": "Specify if tags should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "LogConfigurationsPipelineConfigurationInput",
   "description": "The pipeline configuration for an account.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "enrichmentDisabled",
     "description": "Whether or not enrichment is disabled.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "jsonParsingDisabled",
     "description": "Whether or not JSON parsing is disabled.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "obfuscationDisabled",
     "description": "Whether or not obfuscation is disabled.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "parsingDisabled",
     "description": "Whether or not parsing is disabled.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "patternsEnabled",
     "description": "Whether or not patterns are enabled.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "pluginAttributesCleanupEnabled",
     "description": "Whether or not plugin.* attributes should be dropped.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "recursiveJsonParsingDisabled",
     "description": "Whether or not recursive JSON parsing is disabled.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "transformationDisabled",
     "description": "Whether or not transformation is disabled.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "DistributedTracingSpanAttributes",
   "description": "Map of key value pairs for a span",
   "kind": "SCALAR"
  },
  {
   "name": "AlertsVictorOpsNotificationChannel",
   "description": "VictorOps notification channel.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "associatedPolicies",
     "description": "Policies associated with the channel.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsNotificationChannelPoliciesResultSet",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "config",
     "description": "VictorOps channel specific configuration.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsVictorOpsNotificationChannelConfig",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "id",
     "description": "Channel ID.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "Channel name.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "type",
     "description": "Channel type.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsNotificationChannelType",
       "kind": "ENUM"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "AlertsNotificationChannel",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "Nr1CatalogDataSource",
   "description": "Information about a data source",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "id",
     "description": "The unique identifier for the data source",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metadata",
     "description": "Metadata associated with the data source",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Nr1CatalogDataSourceMetadata",
       "kind": "OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "OrganizationSharedAccount",
   "description": "The attributes of an account share.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "accountId",
     "description": "The ID of the account being shared.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The ID of the account share.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "limitingRoleId",
     "description": "The ID of the limiting role for the account share.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "The name of the account share.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "sourceOrganizationId",
     "description": "The ID of the organization sending the account share.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "sourceOrganizationName",
     "description": "The name of the organization sending the account share.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "targetOrganizationId",
     "description": "The ID of the organization receiving the account share.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "targetOrganizationName",
     "description": "The name of the organization receiving the account share.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AiDecisionsRuleBlueprint",
   "description": "Blueprint for rule creation.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "correlationWindowLength",
     "description": "Length of the window in which incidents are compared.",
     "type": {
      "name": "Milliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "creator",
     "description": "Creator of rule.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "description",
     "description": "Description of rule.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "minCorrelationThreshold",
     "description": "Number of correlations within a window required to merge issues.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "Name of rule.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "overrideConfiguration",
     "description": "Configuration to allow rule to override issue properties.",
     "type": {
      "name": "AiDecisionsOverrideConfigurationInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "ruleExpression",
     "description": "Expression to use to compare incidents.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsRuleExpressionInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "ruleType",
     "description": "Type of rule.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsRuleType",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "source",
     "description": "Creation source of rule.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsRuleSource",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "SyntheticsMonitorScriptQueryResponse",
   "description": "The script that a monitor runs",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "text",
     "description": "The script associated with the specified monitor",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "CloudActorFields",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "linkedAccounts",
     "description": "Get all linked cloud provider accounts scoped to the Actor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "CloudLinkedAccount",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "provider",
       "description": "The cloud provider short name.",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     ]
    }
   ]
  },
  {
   "name": "DataDictionaryAttribute",
   "description": "Attribute object that contains data about the attribute",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "definition",
     "description": "Description of what this attribute represents, how it's measured, etc",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     },
     "args": [
      {
       "name": "format",
       "description": "Specify the text format for the definition",
       "type": {
        "name": "DataDictionaryTextFormat",
        "kind": "ENUM"
       },
       "defaultValue": "PLAIN"
      }
     ]
    },
    {
     "name": "docsUrl",
     "description": "URL of this attribute on the New Relic docs site",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "events",
     "description": "List of events using this attribute",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      }
     }
    },
    {
     "name": "name",
     "description": "The official name of this attribute",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "units",
     "description": "Unit this attribute is measuring (if applicable)",
     "type": {
      "name": "DataDictionaryUnit",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "EntitySearchOptions",
   "description": "Additional entity search options.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "caseSensitiveTagMatching",
     "description": "Whether or not matching on tag keys and values should be case-sensitive.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "limit",
     "description": "A limit to apply to the number of entities returned. Note: this option can only _lower_ the default limits.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "tagFilter",
     "description": "Specify which tags to include with search results. Does not affect which entities are returned.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    }
   ]
  },
  {
   "name": "MetricNormalizationCustomerRuleAction",
   "description": "The different rule actions for customers.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "DENY_NEW_METRICS",
     "description": "Deny new metrics (only for NR Administrators)",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "IGNORE",
     "description": "Ignore matching metrics.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "REPLACE",
     "description": "Replace metrics.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AlertsNotificationChannelUpdateErrorType",
   "description": "The error type for updating a notification channel.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "BAD_USER_INPUT",
     "description": "Bad user input error.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "FORBIDDEN_ERROR",
     "description": "Forbidden error.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NOT_FOUND_ERROR",
     "description": "Not found error.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SERVER_ERROR",
     "description": "Server error.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "TOO_MANY_REQUESTS_ERROR",
     "description": "Too many requests error.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "SyntheticsCreateSimpleBrowserMonitorInput",
   "description": "The monitor input values needed to create a Simple Browser monitor",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "advancedOptions",
     "description": "The monitor advanced options",
     "type": {
      "name": "SyntheticsSimpleBrowserMonitorAdvancedOptionsInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "apdexTarget",
     "description": "The monitor's Apdex target used to populate SLA reports",
     "type": {
      "name": "Float",
      "kind": "SCALAR"
     }
    },
    {
     "name": "browsers",
     "description": "The browser(s) that the monitor will use to run jobs",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "SyntheticsBrowser",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "devices",
     "description": "The devices that the monitor will use to run jobs",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "SyntheticsDevice",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "locations",
     "description": "The locations the monitor will run from",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SyntheticsLocationsInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "name",
     "description": "The human readable identifier for the monitor",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "period",
     "description": "The interval at which the monitor runs in minutes",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SyntheticsMonitorPeriod",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "runtime",
     "description": "The runtime that the monitor will use to run jobs",
     "type": {
      "name": "SyntheticsRuntimeInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "status",
     "description": "The run state of the monitor",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SyntheticsMonitorStatus",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "tags",
     "description": "The tags that will be associated with the monitor",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "SyntheticsTag",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "uri",
     "description": "The uri the monitor runs against",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "CloudElbIntegrationInput",
   "description": "Elastic Load Balancing - Classic Load Balancer (ELB)",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "fetchExtendedInventory",
     "description": "Determine if extra inventory data be collected or not. May affect total data collection time and contribute to the Cloud provider API rate limit.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "fetchTags",
     "description": "Specify if tags should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AgentApplicationSettingsJfr",
   "description": "Access to the enabled state of the Java Flight Recorder. This feature only available on the Java language agent version 8.0.0 or later.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "enabled",
     "description": "If true, the java agent collects Java Flight Recorder data. (Java Agent version 8.0.0 required.)",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AiDecisionsAnnotationEntry",
   "description": "A key-value entry.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "key",
     "description": "Key of entry.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "value",
     "description": "Value of entry.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "EdgeSpanAttributeRule",
   "description": "A `SpanAttributeRule` applies a filtering rule (keep or discard) to traces within a particular `TraceObserver`",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "action",
     "description": "The action that this filter takes if it matches the provided attribute name and value",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EdgeTraceFilterAction",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "id",
     "description": "Globally unique identifier of this trace filter.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "key",
     "description": "Name of the attribute that this filter matches on",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "keyOperator",
     "description": "Type of match to apply to the attribute name (EQUALS, LIKE).",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EdgeSpanAttributeKeyOperator",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "value",
     "description": "Value of the attribute that this filter matches on.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "valueOperator",
     "description": "Type of match to apply to the attribute value (EQUALS, LIKE, IS_NOT_NULL).",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EdgeSpanAttributeValueOperator",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "LogConfigurationsGrokTestExtractedAttribute",
   "description": "An attribute that was extracted from a Grok test.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "name",
     "description": "The attribute name.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "value",
     "description": "A string representation of the extracted value (which might not be a String).",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "Nr1CatalogSearchResultTypeFacet",
   "description": "Information about a facet count on a search result type",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "count",
     "description": "The count of results for this search result type",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "type",
     "description": "The type of search result",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Nr1CatalogSearchResultType",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "CloudAzureCosmosdbIntegrationInput",
   "description": "Azure Cosmos DB",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "resourceGroups",
     "description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "SuggestedNrqlQueryAnomaly",
   "description": "Information about the anomaly upon which this analysis was based.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "timeWindow",
     "description": "The approximate time window of the anomalous region",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "TimeWindow",
       "kind": "OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "UsersUserSearchQuery",
   "description": "Query object for UserSearch.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "scope",
     "description": "The scope to filter the search response by.",
     "type": {
      "name": "UsersUserSearchScope",
      "kind": "INPUT_OBJECT"
     }
    }
   ]
  },
  {
   "name": "OrganizationSortKeyEnum",
   "description": "Provides the available values of possible fields that can be sorted",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "ID",
     "description": "Authentication domain id",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NAME",
     "description": "Authentication domain name",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "NerdpackNerdpacks",
   "description": "Provides fields to query nerdpacks by different conditions",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "effectiveSubscribedVersions",
     "description": "Get the list of stable core nerdpack versions together with nerdpack versions which the requesting user's account is subscribed.\nThis query allows for version or channel overrides by providing OverrideVersionRules objects.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "NerdpackVersion",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "overrides",
       "description": "List of version override rules per Nerdpack.\nThe query will return the version that matches the specified rules (if it exists) for a given nerdpack instead of\ndeciding which version has priority",
       "type": {
        "kind": "LIST",
        "ofType": {
         "name": "NerdpackOverrideVersionRules",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "nerdpack",
     "description": "If a Nerdpack with the given uuid exists, retrieve the Nerdpack object.",
     "type": {
      "name": "NerdpackData",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "id",
       "description": "Nerdpack id.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "subscribable",
     "description": "Returns the list of subscribable Nerdpacks of the current user.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "NerdpackData",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "nerdpackFilter",
       "description": "Nerdpack filter data.",
       "type": {
        "name": "NerdpackDataFilter",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    }
   ]
  },
  {
   "name": "SyntheticsPrivateLocationMutationErrorType",
   "description": "Types of errors that can be returned from a Private Location mutation request",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "BAD_REQUEST",
     "description": "Received a request missing required fields or containing invalid data",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "INTERNAL_SERVER_ERROR",
     "description": "An unknown error occurred while processing request to purge specified private location job queue",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NOT_FOUND",
     "description": "Private location not found for key (private location does not exist on account or has already been deleted)",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "UNAUTHORIZED",
     "description": "User does not have authorization to purge job queue for specified private location",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "DataSourceGapsGapType",
   "description": "A descriptor of the data source needing instrumentation.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "dataSourceId",
     "description": "The unique identifier of the data source associated with this gap type. This can be used with the `actor.nr1Catalog.dataSource` field.",
     "type": {
      "name": "ID",
      "kind": "SCALAR"
     }
    },
    {
     "name": "displayName",
     "description": "The human-readable name of this data source gap type.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "id",
     "description": "The unique identifier of this data source gap type.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "DataSourceGapsGapTypeIdentifier",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "UserManagementUserGroups",
   "description": "container for groups enabling cursor based pagination",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "groups",
     "description": "container for groups enabling cursor based pagination",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "UserManagementUserGroup",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "nextCursor",
     "description": "an opaque cursor to supply with subsequent     requests to get the next page of results, null if there are no more pages",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "totalCount",
     "description": "the total number of results",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AiIssuesEnvironmentConfiguration",
   "description": "Environment configuration object",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "flappingInterval",
     "description": "Flapping interval in seconds",
     "type": {
      "name": "Seconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "gracePeriod",
     "description": "Grace periods per priority",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AiIssuesGracePeriodConfig",
        "kind": "OBJECT"
       }
      }
     }
    },
    {
     "name": "inactivePeriod",
     "description": "Inactive period in seconds",
     "type": {
      "name": "Seconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "incidentTimeout",
     "description": "Incident timeout in seconds",
     "type": {
      "name": "Seconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "issueTtl",
     "description": "Issue TTL in seconds",
     "type": {
      "name": "Seconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "maxIssueSize",
     "description": "Max incidents in the issue",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "SyntheticsStepMonitorAdvancedOptionsInput",
   "description": "The advanced options inputs available for a Step monitor",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "enableScreenshotOnFailureAndScript",
     "description": "Capture a screenshot during job execution",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AiDecisionsNotInput",
   "description": "Input type for Not expression",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "child",
     "description": "Child expression.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsRuleExpressionInput",
       "kind": "INPUT_OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "IncidentIntelligenceEnvironmentDeleteEnvironment",
   "description": "Deletes an existing environment",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "result",
     "description": "The deletion outcome",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "IncidentIntelligenceEnvironmentDeleteEnvironmentResult",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "AiWorkflowsEnrichmentsInput",
   "description": "Enrichment input object",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "nrql",
     "description": "nrql",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiWorkflowsNrqlEnrichmentInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     }
    }
   ]
  },
  {
   "name": "OrganizationAccountShareOrganizationWrapper",
   "description": "An account share's source or target organization",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "id",
     "description": "id",
     "type": {
      "name": "ID",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "name",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AiIssuesIIncident",
   "description": "Incident interface",
   "kind": "INTERFACE",
   "fields": [
    {
     "name": "account",
     "description": "account",
     "type": {
      "name": "AccountReference",
      "kind": "OBJECT"
     }
    },
    {
     "name": "accountIds",
     "description": "An account id this incident is stored in",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "closedAt",
     "description": "The time the incident was closed",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "createdAt",
     "description": "The time the incident was created",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochMilliseconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "description",
     "description": "The description is generated from the policy name and the condition name or provided through API",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      }
     }
    },
    {
     "name": "entityGuids",
     "description": "A list of unique entity identifiers",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    },
    {
     "name": "entityNames",
     "description": "A list of entity names",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "entityTypes",
     "description": "A list of entity types",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "environmentId",
     "description": "See our documentation to learn about environments",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "incidentId",
     "description": "Incident identifier",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "priority",
     "description": "Incident priority",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiIssuesPriority",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "state",
     "description": "Incident state",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiIssuesIncidentState",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "timestamp",
     "description": "Incident event timestamp",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochMilliseconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "title",
     "description": "The description the user gave the condition if provided. Otherwise the incident description",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "updatedAt",
     "description": "The time the incident was last updated",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochMilliseconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "possibleTypes": [
    {
     "name": "AiIssuesAnomalyIncident",
     "kind": "OBJECT"
    },
    {
     "name": "AiIssuesNewRelicIncident",
     "kind": "OBJECT"
    },
    {
     "name": "AiIssuesRestIncident",
     "kind": "OBJECT"
    }
   ]
  },
  {
   "name": "SyntheticsCreateSimpleMonitorInput",
   "description": "The monitor input values needed to create a Simple (ping) monitor",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "advancedOptions",
     "description": "The monitor advanced options",
     "type": {
      "name": "SyntheticsSimpleMonitorAdvancedOptionsInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "apdexTarget",
     "description": "The monitor's Apdex target used to populate SLA reports",
     "type": {
      "name": "Float",
      "kind": "SCALAR"
     }
    },
    {
     "name": "locations",
     "description": "The locations the monitor will run from",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SyntheticsLocationsInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "name",
     "description": "The human readable identifier for the monitor",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "period",
     "description": "The interval at which the monitor runs in minutes",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SyntheticsMonitorPeriod",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "status",
     "description": "The run state of the monitor",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SyntheticsMonitorStatus",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "tags",
     "description": "The tags that will be associated with the monitor",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "SyntheticsTag",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "uri",
     "description": "The uri the monitor runs against",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AgentApplicationSettingsSessionReplay",
   "description": "Session Replay configuration.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "autoStart",
     "description": "When true, Session Replay will activate normally (this is the default). If set to false, Session Replay will not record automatically, but the agent will allow recording to be turned on via it's API. Please see [here](https://docs.newrelic.com/docs/browser/new-relic-browser/browser-apis/start/) for more details.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "blockSelector",
     "description": "String to configure which selector should be blocked",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "collectFonts",
     "description": "Indicates whether the agent will serialize fonts for collection without public asset url.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "enabled",
     "description": "Session Replay enabled.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "errorSamplingRate",
     "description": "Percentage from 0-10 specifying how many of all user sessions that contain errors should be recorded.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Float",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "inlineImages",
     "description": "Indicates whether the agent will serialize images for collection without public asset url",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "inlineStylesheet",
     "description": "Indicates whether the agent will serialize css for collection without public asset url.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "maskAllInputs",
     "description": "Mask all input content as *",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "maskInputOptions",
     "description": "Mask specific kinds of input options as *.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AgentApplicationSettingsMaskInputOptions",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "maskTextSelector",
     "description": "String to configure which selector should be masked.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "samplingRate",
     "description": "Percentage from 0-10 specifying how many of all user sessions should be recorded.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Float",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "InstallationStatusError",
   "description": "An object that represents a status error whenever an recipe has failed to install.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "details",
     "description": "Error details, if any.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "message",
     "description": "The actual error message.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "DataManagementRuleInput",
   "description": "Input rule type for bulk rule creation",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "namespace",
     "description": "The namespace the event retention rule applies to",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "retentionInDays",
     "description": "Length of time for event data retention (in days)",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AlertsEmailNotificationChannelUpdateInput",
   "description": "The input for updating an existing Email notification channel.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "emails",
     "description": "List of email recipients.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "includeJson",
     "description": "Include details about the violation as a JSON attachment.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "Notification channel name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "SyntheticsScriptDomainOverride",
   "description": "Override a script url domain",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "domain",
     "description": "The target domain to override",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "override",
     "description": "The override value for the domain",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "DashboardCreateResult",
   "description": "Result of create operation.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "entityResult",
     "description": "Dashboard creation result.",
     "type": {
      "name": "DashboardEntityResult",
      "kind": "OBJECT"
     }
    },
    {
     "name": "errors",
     "description": "Expected errors while processing request.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "DashboardCreateError",
       "kind": "OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "MultiTenantAuthorizationPermissionCollection",
   "description": "A collection of permissions",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "items",
     "description": "collection of permissions",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "MultiTenantAuthorizationPermission",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "nextCursor",
     "description": "an opaque cursor to supply with subsequent   requests to get the next page of results, null if there are no more pages",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "CloudUnlinkAccountPayload",
   "description": "Autogenerated return type of UnlinkAccount",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "errors",
     "description": "The list of errors.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "CloudAccountMutationError",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "unlinkedAccounts",
     "description": "The unlinked accounts.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "CloudLinkedAccount",
         "kind": "OBJECT"
        }
       }
      }
     }
    }
   ]
  },
  {
   "name": "EventsToMetricsAccountStitchedFields",
   "description": "Account stitched fields to enable autostitching in NerdGraph",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "allRules",
     "description": "List all rules for your account.",
     "type": {
      "name": "EventsToMetricsListRuleResult",
      "kind": "OBJECT"
     }
    },
    {
     "name": "rulesById",
     "description": "List rules for your account by id.",
     "type": {
      "name": "EventsToMetricsListRuleResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "ruleIds",
       "description": "Rule ids you want to list (as strings).",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "kind": "LIST",
         "ofType": {
          "name": "ID",
          "kind": "SCALAR"
         }
        }
       }
      }
     ]
    }
   ]
  },
  {
   "name": "ApiAccessUpdateInput",
   "description": "The `id` and data to update one or more keys.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "ingest",
     "description": "A list of the configurations of each ingest key you want to update.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "ApiAccessUpdateIngestKeyInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "user",
     "description": "A list of the configurations of each user key you want to update.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "ApiAccessUpdateUserKeyInput",
       "kind": "INPUT_OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "AgentApplicationSettingsMobileProperties",
   "description": "General properties related to mobile applications.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "applicationToken",
     "description": "A token used to authenticate your mobile application for data ingest.",
     "type": {
      "name": "SecureValue",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "EdgeDeleteTraceFilterRulesInput",
   "description": "Input for deleting multiple trace filter rules by id",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "spanAttributeRuleIds",
     "description": "One or more SpanAttributeRule id(s) to be deleted.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     }
    }
   ]
  },
  {
   "name": "ServiceLevelEventsQueryUpdateInput",
   "description": "The query that represents the events to fetch.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "from",
     "description": "The NRDB event to fetch the data from.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Nrql",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "select",
     "description": "The NRQL SELECT clause to aggregate events. Default is COUNT(*).",
     "type": {
      "name": "ServiceLevelEventsQuerySelectUpdateInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "where",
     "description": "The NRQL condition to filter the events.",
     "type": {
      "name": "Nrql",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "CloudGcpFirebasedatabaseIntegrationInput",
   "description": "Firebase Database",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AiDecisionsRelativeLongestCommonSubsequenceDistanceInput",
   "description": "Input type for RelativeLongestCommonSubsequenceDistance expression",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "left",
     "description": "Left operand of comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsIncidentObjectInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "maxDistance",
     "description": "Maximum distance threshold.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Float",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "right",
     "description": "Right operand of comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsIncidentObjectInput",
       "kind": "INPUT_OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "AlertsNotificationChannelsResultSet",
   "description": "A result set containing multiple notification channels and pagination info.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "channels",
     "description": "A set of channels.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AlertsNotificationChannel",
         "kind": "INTERFACE"
        }
       }
      }
     }
    },
    {
     "name": "nextCursor",
     "description": "Cursor pointing to the end of the current page of channels. Null if final page.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "totalCount",
     "description": "Total number of channels available.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AiWorkflowsDestinationType",
   "description": "Type of Destination Configuration",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "EMAIL",
     "description": "Email Destination Configuration type",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "EVENT_BRIDGE",
     "description": "Event Bridge Destination Configuration type",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "JIRA",
     "description": "Jira Destination Configuration type",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "MOBILE_PUSH",
     "description": "New Relic Mobile Push Destination Configuration type",
     "isDeprecated": true,
     "deprecationReason": "This type is under development"
    },
    {
     "name": "PAGERDUTY",
     "description": "Pager Duty Destination Configuration type",
     "isDeprecated": true,
     "deprecationReason": "Unused destination type"
    },
    {
     "name": "PAGERDUTY_ACCOUNT_INTEGRATION",
     "description": "Pager Duty with account integration Destination Configuration type",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "PAGERDUTY_SERVICE_INTEGRATION",
     "description": "Pager Duty with service integration Destination Configuration type",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SERVICE_NOW",
     "description": "Service Now Destination Configuration type",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SERVICE_NOW_APP",
     "description": "ServiceNow official NewRelic app Configuration type",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SLACK",
     "description": "Slack Destination Configuration type",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SLACK_LEGACY",
     "description": "Slack legacy Destination Configuration type",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "WEBHOOK",
     "description": "Webhook Destination Configuration type",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "PixieActorStitchedFields",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "linkedPixieProjects",
     "description": "Details for the linked Pixie projects",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "name": "PixieLinkedPixieProject",
        "kind": "OBJECT"
       }
      }
     }
    }
   ]
  },
  {
   "name": "LogConfigurationsCreateDataPartitionRuleInput",
   "description": "A new data partition rule.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "description",
     "description": "The description of the data partition rule.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "enabled",
     "description": "Whether or not this data partition rule is enabled.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "matchingCriteria",
     "description": "The matching criteria of the data partition rule.",
     "type": {
      "name": "LogConfigurationsDataPartitionRuleMatchingCriteriaInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "nrql",
     "description": "The NRQL to match events for this data partition rule. Logs matching this criteria will be routed to the specified data partition.",
     "type": {
      "name": "Nrql",
      "kind": "SCALAR"
     }
    },
    {
     "name": "retentionPolicy",
     "description": "The retention policy of the data partition data.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "LogConfigurationsDataPartitionRuleRetentionPolicyType",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "targetDataPartition",
     "description": "The name of the data partition where logs will be allocated once the rule is enabled.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "LogConfigurationsLogDataPartitionName",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AuthorizationManagementAuthenticationDomainSearch",
   "description": "container for authentication domains enabling cursor based pagination",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "authenticationDomains",
     "description": "containers of users and groups",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AuthorizationManagementAuthenticationDomain",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "nextCursor",
     "description": "an opaque cursor to supply with subsequent   requests to get the next page of results, null if there are no more pages",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "totalCount",
     "description": "the total number of results",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "StackTraceMobileCrashStackTraceFrame",
   "description": "An object representing a stack trace segment",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "filepath",
     "description": "Frame filepath",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "formatted",
     "description": "Formatted frame",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "line",
     "description": "Frame line number",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "Frame name",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "SyntheticsLocations",
   "description": "The location(s) from which the monitor runs",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "private",
     "description": "Existing private location(s) in which the monitor will run",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "public",
     "description": "Publicly available location(s) in which the monitor will run. For formatting tips, see [this link](https://docs.newrelic.com/docs/apis/nerdgraph/examples/nerdgraph-synthetics-tutorial/#location-field)",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "LogConfigurationsLiveArchiveConfiguration",
   "description": "Live Archive configuration for an event type.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "accountId",
     "description": "Account Id",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "createdAt",
     "description": "Identifies the date and time when the configuration was created.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "DateTime",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "createdBy",
     "description": "Identifies the user who has created the configuration.",
     "type": {
      "name": "UserReference",
      "kind": "OBJECT"
     }
    },
    {
     "name": "enabled",
     "description": "Indicates if the Live Archive configuration is enabled",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "eventType",
     "description": "EventType name that will be configured.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "Configuration Id",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "retentionPolicy",
     "description": "Retention policy for the EventType.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "LogConfigurationsLiveArchiveRetentionPolicyType",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "updatedAt",
     "description": "Identifies the date and time when the configuration was last updated.",
     "type": {
      "name": "DateTime",
      "kind": "SCALAR"
     }
    },
    {
     "name": "updatedBy",
     "description": "Identifies the user who has last updated the configuration.",
     "type": {
      "name": "UserReference",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "DataManagementAppliedRules",
   "description": "Applied rules",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "accountId",
     "description": "The account id for namespace rule",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "retentionInDays",
     "description": "Length of time data will be retained (in days)",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AiDecisionsRelativeCommonPrefixInput",
   "description": "Input type for RelativeCommonPrefix expression",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "value",
     "description": "Value to be used in comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AgentEnvironmentFilter",
   "description": "A filter that can be applied to filter results.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "contains",
     "description": "A string to filter results that includes this string anywhere. Case insensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "doesNotContain",
     "description": "A string to filter out results that includes this string anywhere. Case insensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "equals",
     "description": "A string to filter results that are exactly as the string provided. Case sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "startsWith",
     "description": "A string to filter results that starts with this string. Case insensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "SyntheticsSecureCredentialOverride",
   "description": "Override a monitor scripts secure credential key with a different key",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "key",
     "description": "The target secure credential key to override",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "overrideKey",
     "description": "The secure credential key override",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "MetricNormalizationCreateRuleInput",
   "description": "Input object used to represent the rule to be created",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "action",
     "description": "Customer rule action.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "MetricNormalizationCustomerRuleAction",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "applicationGuid",
     "description": "Application GUID",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    },
    {
     "name": "enabled",
     "description": "Is rule enabled?",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "evalOrder",
     "description": "Rule evaluation order",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "matchExpression",
     "description": "Metric Match Expression.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "notes",
     "description": "Notes.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "replacement",
     "description": "Metric Replacement Expression.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "terminateChain",
     "description": "Whether it terminates the evaluation chain or not",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AgentApplicationSettingsBrowserBase",
   "description": "Settings that are applicable to browser applications.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "browserConfig",
     "description": "Access general settings for the application.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AgentApplicationSettingsBrowserConfig",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "browserMonitoring",
     "description": "browser monitoring provides real user monitoring (RUM) that measures the speed and performance of end users as they navigate the application using different web browsers, devices, operating systems, and networks.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AgentApplicationSettingsBrowserMonitoring",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "sessionReplay",
     "description": "Session Replay configuration.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AgentApplicationSettingsSessionReplay",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "sessionTrace",
     "description": "Session Trace configuration.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AgentApplicationSettingsSessionTrace",
       "kind": "OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "EntityRelationshipUserDefinedDeleteResultError",
   "description": "The entityRelationshipUserDefinedDelete result error.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "message",
     "description": "A message explaining what the error is about.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "type",
     "description": "The mutation error type.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EntityRelationshipUserDefinedDeleteErrorType",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "CloudAwsStatesIntegration",
   "description": "Step Functions Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "LogConfigurationsUpdateDataPartitionRuleInput",
   "description": "An object for updating an existing data partition rule.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "description",
     "description": "The description of the data partition rule.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "enabled",
     "description": "Whether or not this data partition rule is enabled.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "id",
     "description": "Unique data partition rule identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "matchingCriteria",
     "description": "The criteria of the data partition rule.",
     "type": {
      "name": "LogConfigurationsDataPartitionRuleMatchingCriteriaInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "nrql",
     "description": "The NRQL to match events for this data partition rule. Logs matching this criteria will be routed to the specified data partition.",
     "type": {
      "name": "Nrql",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "WhatsNewSearchResult",
   "description": "Represents the resulting details from a search of news.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "nextCursor",
     "description": "The next cursor, used for pagination. If a cursor is present, it means more content can be fetched.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "results",
     "description": "A list of news.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "WhatsNewContent",
        "kind": "INTERFACE"
       }
      }
     }
    },
    {
     "name": "totalCount",
     "description": "The total amount of news available that satisfies the search criteria.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "DashboardAddWidgetsToPageErrorType",
   "description": "Expected error types that can be returned by addWidgetsToPage operation.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "FORBIDDEN_OPERATION",
     "description": "User is not allowed to execute the operation.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "INVALID_INPUT",
     "description": "Invalid input error.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "PAGE_NOT_FOUND",
     "description": "Page not found in the system.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "WorkloadAccountStitchedFields",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "collection",
     "description": "[DEPRECATED] Retrieves a workload.",
     "type": {
      "name": "WorkloadCollection",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "guid",
       "description": "The GUID of the workload.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EntityGuid",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "collections",
     "description": "[DEPRECATED] Retrieves a list of workloads.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "WorkloadCollectionWithoutStatus",
        "kind": "OBJECT"
       }
      }
     }
    },
    {
     "name": "statusBreakdownPreview",
     "description": "[DEPRECATED] Status and breakdown preview.",
     "type": {
      "name": "WorkloadWorkloadStatus",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "entitySearchQuery",
       "description": "The entity search query that returns the full collection of entities.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "scopeAccounts",
       "description": "Accounts that will be used to get entities from.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "WorkloadScopeAccountsInput",
         "kind": "INPUT_OBJECT"
        }
       }
      },
      {
       "name": "statusConfig",
       "description": "The configuration that defines how the status of the workload is calculated.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "WorkloadStatusConfigInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    },
    {
     "name": "validAccounts",
     "description": "[DEPRECATED] Retrieves all the accounts from the same organization that user has access to.",
     "type": {
      "name": "WorkloadValidAccounts",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "MultiTenantIdentityGroupMemberIdInput",
   "description": "The input object representing parameters for the Members filter",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "contains",
     "description": "A list of user IDs. A group will be returned if all listed users are members.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "excludes",
     "description": "A list of user IDS. A group will be returned if no listed users are members.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ID",
        "kind": "SCALAR"
       }
      }
     }
    }
   ]
  },
  {
   "name": "String",
   "description": "The `String` scalar type represents textual data, represented as UTF-8\ncharacter sequences. The String type is most often used by GraphQL to\nrepresent free-form human-readable text.",
   "kind": "SCALAR"
  },
  {
   "name": "ApiAccessUserKey",
   "description": "A user key.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "account",
     "description": "The account this key is in.",
     "type": {
      "name": "AccountReference",
      "kind": "OBJECT"
     }
    },
    {
     "name": "accountId",
     "description": "The account ID of the key.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "createdAt",
     "description": "The UNIX epoch when the key was created, in seconds.",
     "type": {
      "name": "EpochSeconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "id",
     "description": "The ID of the user key. This can be used to identify a key without revealing the key itself (used to update and delete).",
     "type": {
      "name": "ID",
      "kind": "SCALAR"
     }
    },
    {
     "name": "key",
     "description": "The keystring of the key.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The name of the key. Limited to 120 characters.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "notes",
     "description": "Any notes can be attached to a key. Limited to 120 characters.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "obfuscatedKey",
     "description": "The obfuscated key.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "type",
     "description": "The type of key, indicating what New Relic APIs it can be used to access.",
     "type": {
      "name": "ApiAccessKeyType",
      "kind": "ENUM"
     }
    },
    {
     "name": "user",
     "description": "The user this key belongs to.",
     "type": {
      "name": "UserReference",
      "kind": "OBJECT"
     }
    },
    {
     "name": "userId",
     "description": "The user ID of the key.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ],
   "interfaces": [
    {
     "name": "ApiAccessKey",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "UserManagementRemoveUsersFromGroupsPayload",
   "description": "Autogenerated return type of RemoveUsersFromGroups.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "groups",
     "description": "The group(s) updated.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "UserManagementGroup",
        "kind": "OBJECT"
       }
      }
     }
    }
   ]
  },
  {
   "name": "AlertsNrqlConditionUpdateBaselineInput",
   "description": "Input for updating a baseline NRQL condition.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "baselineDirection",
     "description": "Direction in which the baseline is set on condition.",
     "type": {
      "name": "AlertsNrqlBaselineDirection",
      "kind": "ENUM"
     }
    },
    {
     "name": "description",
     "description": "The custom violation description.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "enabled",
     "description": "Whether the NRQL condition is enabled.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "expiration",
     "description": "Also known as **loss of signal**, these are settings for how violations are opened or closed when a signal expires.",
     "type": {
      "name": "AlertsNrqlConditionExpirationInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "name",
     "description": "Name of the NRQL condition.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrql",
     "description": "The NRQL query that defines the signal for the condition.",
     "type": {
      "name": "AlertsNrqlConditionUpdateQueryInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "runbookUrl",
     "description": "Runbook URL.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "signal",
     "description": "Configuration that defines the signal that the NRQL condition will use to evaluate.",
     "type": {
      "name": "AlertsNrqlConditionSignalInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "terms",
     "description": "List of critical and warning terms for the condition.\n\nTerms are required in most cases. For conditions with a loss of signal threshold only, terms can be blank.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AlertsNrqlDynamicConditionTermsInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    },
    {
     "name": "titleTemplate",
     "description": "This field allows you to create a custom title to be used when incidents are opened by the condition. Setting this field will override the default title. Must be [Handlebars format](https://handlebarsjs.com/guide/).",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "violationTimeLimit",
     "description": "Deprecated - use violationTimeLimitSeconds for full range of values.\n\nDuration after which a violation automatically closes. Default is THIRTY_DAYS.",
     "type": {
      "name": "AlertsViolationTimeLimit",
      "kind": "ENUM"
     }
    },
    {
     "name": "violationTimeLimitSeconds",
     "description": "Duration after which a violation automatically closes in seconds.\nAccepts values between 300 seconds (5 minutes) and 2592000 seconds (30 days).\n\nDefault is 3 days (259200 seconds).",
     "type": {
      "name": "Seconds",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "EntityRelationshipEdge",
   "description": "An entity relationship.",
   "kind": "INTERFACE",
   "fields": [
    {
     "name": "createdAt",
     "description": "The time the relationship was created.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochMilliseconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "source",
     "description": "The source entity of the relationship.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EntityRelationshipVertex",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "target",
     "description": "The target entity of the relationship.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EntityRelationshipVertex",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "type",
     "description": "The type of the relationship.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EntityRelationshipEdgeType",
       "kind": "ENUM"
      }
     }
    }
   ],
   "possibleTypes": [
    {
     "name": "EntityRelationshipDetectedEdge",
     "kind": "OBJECT"
    },
    {
     "name": "EntityRelationshipUserDefinedEdge",
     "kind": "OBJECT"
    }
   ]
  },
  {
   "name": "AiNotificationsPropertyFilter",
   "description": "Filter object by property",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "key",
     "description": "key",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "value",
     "description": "value",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "CloudAzureServicebusIntegrationInput",
   "description": "Azure Service Bus",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "resourceGroups",
     "description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "MultiTenantIdentitySortKeyEnum",
   "description": "Available keys for sorting groups",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "AUTHENTICATION_DOMAIN_ID",
     "description": "Authentication domain ID",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "ID",
     "description": "Group ID",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NAME",
     "description": "Group name",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "ServiceLevelEvents",
   "description": "The events that define the SLI.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "account",
     "description": "The New Relic account to fetch the events from.",
     "type": {
      "name": "AccountReference",
      "kind": "OBJECT"
     }
    },
    {
     "name": "badEvents",
     "description": "The definition of bad events.",
     "type": {
      "name": "ServiceLevelEventsQuery",
      "kind": "OBJECT"
     }
    },
    {
     "name": "goodEvents",
     "description": "The definition of good events.",
     "type": {
      "name": "ServiceLevelEventsQuery",
      "kind": "OBJECT"
     }
    },
    {
     "name": "validEvents",
     "description": "The definition of valid events.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ServiceLevelEventsQuery",
       "kind": "OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "SyntheticsSimpleBrowserMonitorCreateMutationResult",
   "description": "The result of a Simple Browser monitor create mutation",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "errors",
     "description": "Errors that occurred during Simple Browser monitor create mutation",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "name": "SyntheticsMonitorCreateError",
        "kind": "OBJECT"
       }
      }
     }
    },
    {
     "name": "monitor",
     "description": "The resulting Simple Browser monitor",
     "type": {
      "name": "SyntheticsSimpleBrowserMonitor",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "LogConfigurationsDataPartitionRuleMutationErrorType",
   "description": "Expected default error types as result of mutating an existing data partition rule.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "INVALID_ID",
     "description": "Number format error. ID should be convertible to int.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "INVALID_RULE",
     "description": "Partition rule must be specified with a valid nrql where clause",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NOT_FOUND",
     "description": "Couldn't find the provided data partition rule.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "SyntheticsMonitorDowntimeMonthlyFrequencyOutput",
   "description": "Configuration options for when a monthly monitor downtime should run",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "daysOfMonth",
     "description": "Which dates a monitor downtime is run\n (only 1 of these can be selected)",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "daysOfWeek",
     "description": "Which weekdays in the month the monitor downtime will run\n (only 1 of these can be selected)",
     "type": {
      "name": "SyntheticsDaysOfWeekOutput",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "CloudAzureExpressrouteIntegration",
   "description": "Express Route Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "resourceGroups",
     "description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "InstallationRecipeStatusType",
   "description": "An enum that represents the various recipe statuses.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "AVAILABLE",
     "description": "Defines an available recipe when attempting to install.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "CANCELED",
     "description": "Defines a canceled recipe when attempting to install.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "DETECTED",
     "description": "Defines when New Relic instrumentation compatibility is detected.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "FAILED",
     "description": "Defines a recipe that has failed during installation.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "INSTALLED",
     "description": "Defines a recipe that has been installed.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "INSTALLING",
     "description": "Defines a recipe currently being installed.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "RECOMMENDED",
     "description": "Defines a recipe that has been recommended during installation.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SKIPPED",
     "description": "Defines a recipe that has been skipped during installation.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "UNSUPPORTED",
     "description": "Defines a recipe that is unsupported.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AlertsNrqlConditionTermsOperator",
   "description": "Operator used to compare against the threshold for NrqlConditions.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "ABOVE",
     "description": "For comparing values above a threshold.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "ABOVE_OR_EQUALS",
     "description": "For comparing values above or equal to a threshold.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "BELOW",
     "description": "For comparing values below a threshold.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "BELOW_OR_EQUALS",
     "description": "For comparing values below or equal to a threshold.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "EQUALS",
     "description": "For comparing values equal to a threshold.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NOT_EQUALS",
     "description": "For comparing values that do not equal a threshold.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "SyntheticsScriptApiMonitor",
   "description": "A Script Api monitor resulting from a Script Api mutation",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The creation time of the monitor in millis",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "guid",
     "description": "The unique client identifier for the Synthetics Monitor in New Relic",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    },
    {
     "name": "id",
     "description": "The unique identifier of the monitor within the Synthetics domain",
     "type": {
      "name": "ID",
      "kind": "SCALAR"
     }
    },
    {
     "name": "locations",
     "description": "The locations the monitor runs from",
     "type": {
      "name": "SyntheticsLocations",
      "kind": "OBJECT"
     }
    },
    {
     "name": "modifiedAt",
     "description": "The last modification time of the monitor in millis",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The human readable identifier for the monitor",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "period",
     "description": "The interval at which the monitor runs in minutes",
     "type": {
      "name": "SyntheticsMonitorPeriod",
      "kind": "ENUM"
     }
    },
    {
     "name": "runtime",
     "description": "The runtime that the monitor will use to run jobs",
     "type": {
      "name": "SyntheticsRuntime",
      "kind": "OBJECT"
     }
    },
    {
     "name": "status",
     "description": "The run state of the monitor",
     "type": {
      "name": "SyntheticsMonitorStatus",
      "kind": "ENUM"
     }
    }
   ]
  },
  {
   "name": "AiDecisionsDecisionState",
   "description": "State of decision.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "DISABLED",
     "description": "Decision state is disabled",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "ENABLED",
     "description": "Decision state is enabled",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "DashboardUpdatePageInput",
   "description": "Page input used when updating an individual page.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "description",
     "description": "Page description.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "Page name.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "widgets",
     "description": "Page widgets.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "DashboardWidgetInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     }
    }
   ]
  },
  {
   "name": "ApiAccessCreateInput",
   "description": "The input object to create one or more keys.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "ingest",
     "description": "Ingest keys are used by agents to report data about your applications to New Relic. Each ingest key input entered here must have a type that communicates what kind of data it is for. You can optionally add a name or notes to your key, which can be updated later.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "ApiAccessCreateIngestKeyInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "user",
     "description": "Create user keys. You can optionally add a name or notes to your key, which can be updated later.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "ApiAccessCreateUserKeyInput",
       "kind": "INPUT_OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "OrganizationProvisioningUnit",
   "description": "Types of units for entitlements",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "ADDITIONAL_DAYS_OF_RETENTION",
     "description": "Additional days of data retention",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "APP_TRANSACTIONS_IN_MILLIONS",
     "description": "Proactive Detection unit of measure",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "APPS",
     "description": "Mobile unit of measure of the number of mobile applications",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "CHECKS",
     "description": "Synthetics unit of measure",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "COMPUTE_UNIT",
     "description": "APM unit of measure of the number of compute units",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "DATA_RETENTION_IN_DAYS",
     "description": "The time that we retain data in days",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "DPM",
     "description": "Metrics unit of measure",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "EVENTS_IN_MILLIONS",
     "description": "Insight events in multiples of millions",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "GB_INGESTED",
     "description": "NR1 Data unit of measure",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "GB_PER_DAY",
     "description": "Logs unit of measure",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "GRACE_PERIOD",
     "description": "Grace period in days before customer is billed for users",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "HOSTS",
     "description": "APM unit of measure for hosts",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "INCIDENT_EVENTS",
     "description": "AI unit of measure",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "INGESTED_EVENTS",
     "description": "Serverless unit of measure",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "MONTHLY_ACTIVE_USERS",
     "description": "Mobile unit of measure",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "PAGE_VIEWS",
     "description": "Browser unit of measure",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "PROVISIONED_USERS",
     "description": "NR1 Users unit of measure",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SPANS_IN_MILLIONS",
     "description": "Traces unit of measure",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "USERS",
     "description": "Mobile unit of measure of the number of users",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AlertsConditionDeleteResponse",
   "description": "Success response for deleting an Alerts condition.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "id",
     "description": "ID of the deleted Alerts condition.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "Nr1CatalogNoSupportedEntityTypes",
   "description": "Specifies the supported entity types to be no entity types",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "mode",
     "description": "The level of support entity types. Always set to NONE",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Nr1CatalogSupportedEntityTypesMode",
       "kind": "ENUM"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "Nr1CatalogSupportedEntityTypes",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "SyntheticsSimpleBrowserMonitor",
   "description": "A Simple Browser monitor resulting from a Simple Browser monitor mutation",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "advancedOptions",
     "description": "The monitor advanced options",
     "type": {
      "name": "SyntheticsSimpleBrowserMonitorAdvancedOptions",
      "kind": "OBJECT"
     }
    },
    {
     "name": "browsers",
     "description": "The browser(s) that the monitor will use to run jobs",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "SyntheticsBrowser",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "createdAt",
     "description": "The creation time of the monitor in millis",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "devices",
     "description": "The devices that the monitor will use to run jobs",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "SyntheticsDevice",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "guid",
     "description": "The unique client identifier for the Synthetics Monitor in New Relic",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    },
    {
     "name": "id",
     "description": "The unique identifier of the monitor within the Synthetics domain",
     "type": {
      "name": "ID",
      "kind": "SCALAR"
     }
    },
    {
     "name": "locations",
     "description": "The locations the monitor runs from",
     "type": {
      "name": "SyntheticsLocations",
      "kind": "OBJECT"
     }
    },
    {
     "name": "modifiedAt",
     "description": "The last modification time of the monitor in millis",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The human readable identifier for the monitor",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "period",
     "description": "The interval at which the monitor runs in minutes",
     "type": {
      "name": "SyntheticsMonitorPeriod",
      "kind": "ENUM"
     }
    },
    {
     "name": "runtime",
     "description": "The runtime that the monitor will use to run jobs",
     "type": {
      "name": "SyntheticsRuntime",
      "kind": "OBJECT"
     }
    },
    {
     "name": "status",
     "description": "The run state of the monitor",
     "type": {
      "name": "SyntheticsMonitorStatus",
      "kind": "ENUM"
     }
    },
    {
     "name": "uri",
     "description": "The uri the monitor runs against",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "SyntheticsMonitorDowntimeMutationResult",
   "description": "Monitor downtime object returned to the customer for an edit mutation",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "accountId",
     "description": "The account ID associated with the monitor downtime",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "endRepeat",
     "description": "Configuration options if the customer wants the monitor to end at a specific date",
     "type": {
      "name": "SyntheticsDateWindowEndOutput",
      "kind": "OBJECT"
     }
    },
    {
     "name": "endTime",
     "description": "The date and time in which the monitor downtime will end",
     "type": {
      "name": "NaiveDateTime",
      "kind": "SCALAR"
     }
    },
    {
     "name": "frequency",
     "description": "Configuration options for which days of the month a monitor downtime will occur",
     "type": {
      "name": "SyntheticsMonitorDowntimeMonthlyFrequencyOutput",
      "kind": "OBJECT"
     }
    },
    {
     "name": "guid",
     "description": "The entity GUID associated with the monitor downtime",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    },
    {
     "name": "maintenanceDays",
     "description": "Days of the week the monitor downtime will run",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "SyntheticsMonitorDowntimeWeekDays",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "monitorGuids",
     "description": "The monitor GUIDs associated with the monitor downtime",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityGuid",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "The name of the monitor downtime",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "startTime",
     "description": "The date and time in which the monitor downtime will begin",
     "type": {
      "name": "NaiveDateTime",
      "kind": "SCALAR"
     }
    },
    {
     "name": "timezone",
     "description": "The timezone the time values will be in",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "CloudAzureLoadbalancerIntegrationInput",
   "description": "Azure Load Balancer",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "resourceGroups",
     "description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "EntityRelationshipRelatedEntitiesResult",
   "description": "Response containing entity relationships.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "nextCursor",
     "description": "The next cursor for fetching additional paginated results.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "results",
     "description": "The list of  entity relationships.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EntityRelationshipEdge",
         "kind": "INTERFACE"
        }
       }
      }
     }
    }
   ]
  },
  {
   "name": "AlertsNotificationChannelsAddToPolicyError",
   "description": "The error for associating notification channels with a policy.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "description",
     "description": "Error description.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "errorType",
     "description": "Error type.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AlertsNotificationChannelsAddToPolicyErrorType",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "notificationChannelId",
     "description": "Notification channel ID.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "Nr1CatalogEmailContactChannelInput",
   "description": "Details about the contact channel where users can get support via email",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "address",
     "description": "The email address where users can get email support",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "CloudRdsIntegration",
   "description": "RDS Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "fetchTags",
     "description": "Specify if tags should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "tagKey",
     "description": "Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "tagValue",
     "description": "Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "EntityRelationshipDetectedEdge",
   "description": "An entity relationship automatically detected by NewRelic.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The time the relationship was created.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochMilliseconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "source",
     "description": "The source entity of the relationship.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EntityRelationshipVertex",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "target",
     "description": "The target entity of the relationship.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EntityRelationshipVertex",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "type",
     "description": "The type of the relationship.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EntityRelationshipEdgeType",
       "kind": "ENUM"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "EntityRelationshipEdge",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "Nr1CatalogNerdletMetadata",
   "description": "Metadata information for a Nerdlet",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "description",
     "description": "A short form description for the Nerdlet.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "displayName",
     "description": "The human-readable name for the Nerdlet.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "previews",
     "description": "A list of previews for the Nerdlet, such as screenshots.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Nr1CatalogPreview",
         "kind": "INTERFACE"
        }
       }
      }
     }
    },
    {
     "name": "supportedEntityTypes",
     "description": "The supported entity types by the Nerdlet.",
     "type": {
      "name": "Nr1CatalogSupportedEntityTypes",
      "kind": "INTERFACE"
     }
    }
   ],
   "interfaces": [
    {
     "name": "Nr1CatalogNerdpackItemMetadata",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "DashboardVariable",
   "description": "Definition of a variable that is local to this dashboard. Variables are placeholders for dynamic values in widget NRQLs.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "defaultValue",
     "description": "[DEPRECATED] Default value for this variable. The actual value to be used will depend on the type.",
     "type": {
      "name": "DashboardVariableDefaultValue",
      "kind": "OBJECT"
     }
    },
    {
     "name": "defaultValues",
     "description": "Default values for this variable. The actual value to be used will depend on the type.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "DashboardVariableDefaultItem",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "isMultiSelection",
     "description": "Indicates whether this variable supports multiple selection or not. Only applies to variables of type NRQL or ENUM.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "items",
     "description": "List of possible values for variables of type ENUM.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "DashboardVariableEnumItem",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "name",
     "description": "Variable identifier.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrqlQuery",
     "description": "Configuration for variables of type NRQL.",
     "type": {
      "name": "DashboardVariableNrqlQuery",
      "kind": "OBJECT"
     }
    },
    {
     "name": "options",
     "description": "Options applied to the variable.",
     "type": {
      "name": "DashboardVariableOptions",
      "kind": "OBJECT"
     }
    },
    {
     "name": "replacementStrategy",
     "description": "Indicates the strategy to apply when replacing a variable in a NRQL query.",
     "type": {
      "name": "DashboardVariableReplacementStrategy",
      "kind": "ENUM"
     }
    },
    {
     "name": "title",
     "description": "Human-friendly display string for this variable.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "type",
     "description": "Specifies the data type of the variable and where its possible values may come from.",
     "type": {
      "name": "DashboardVariableType",
      "kind": "ENUM"
     }
    }
   ]
  },
  {
   "name": "CloudAlbIntegrationInput",
   "description": "Elastic Load Balancing - Application Load Balancer (ALB)",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "fetchExtendedInventory",
     "description": "Determine if extra inventory data be collected or not. May affect total data collection time and contribute to the Cloud provider API rate limit.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "fetchTags",
     "description": "Specify if tags should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "loadBalancerPrefixes",
     "description": "Specify each name or prefix for the LBs that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "tagKey",
     "description": "Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "tagValue",
     "description": "Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "SyntheticsBrowser",
   "description": "Enum of browser types",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "CHROME",
     "description": "Chrome browser",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "EDGE",
     "description": "Edge browser",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "FIREFOX",
     "description": "Firefox browser",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NONE",
     "description": "No Browser/Legacy",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "DashboardOwnerInfo",
   "description": "Information on the owner of a dashboard or page.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "email",
     "description": "New Relic user email.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "userId",
     "description": "New Relic user ID.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AiWorkflowsDeleteErrorType",
   "description": "Type of delete error",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "INVALID_PARAMETER",
     "description": "One or more of the parameters you provided are incorrect",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "UNAUTHORIZED_ACCOUNT",
     "description": "This account in not authorized to perform this action",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "VALIDATION_ERROR",
     "description": "The parameter provided does not have a valid form",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "OrganizationOrganizationGroupOrganizationIdInputFilter",
   "description": "Provides all the available filters on the organization group organization id",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "eq",
     "description": "performs an equals operation",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "SyntheticsScriptBrowserMonitorAdvancedOptions",
   "description": "The advanced options available for a Script Browser monitor",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "deviceEmulation",
     "description": "Emulate a device",
     "type": {
      "name": "SyntheticsDeviceEmulation",
      "kind": "OBJECT"
     }
    },
    {
     "name": "enableScreenshotOnFailureAndScript",
     "description": "Capture a screenshot during job execution",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "MultiTenantIdentityGroupFilterInput",
   "description": "The input object representing the filter parameters for groups",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "allowsCapability",
     "description": "Filter groups by capabilities",
     "type": {
      "name": "MultiTenantIdentityAllowsCapabilityInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "authenticationDomainId",
     "description": "Filter groups by authentication domain",
     "type": {
      "name": "MultiTenantIdentityAuthenticationDomainIdInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "id",
     "description": "Filter groups by ID",
     "type": {
      "name": "MultiTenantIdentityGroupIdInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "members",
     "description": "Filter groups that contain specific members",
     "type": {
      "name": "MultiTenantIdentityGroupMemberIdInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "name",
     "description": "Filter groups by display name",
     "type": {
      "name": "MultiTenantIdentityGroupNameInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "organizationId",
     "description": "An organization ID to filter groups by",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "MultiTenantIdentityOrganizationIdInput",
       "kind": "INPUT_OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "WorkloadRollupRuleDetails",
   "description": "Represents the details of a rollup rule.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "entitySearchQueries",
     "description": "A list of entity search queries defined in the rule.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "hasIndividualEntities",
     "description": "Indicates if the rule has individual entities.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "notOperationalEntities",
     "description": "The amount of not operational entities after evaluating the rule.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "operationalEntities",
     "description": "The amount of operational entities after evaluating the rule.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "resultingGroupType",
     "description": "The resulting type of the rollup rule.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "WorkloadResultingGroupType",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "thresholdType",
     "description": "Type of threshold defined for the rule.",
     "type": {
      "name": "WorkloadRuleThresholdType",
      "kind": "ENUM"
     }
    },
    {
     "name": "unknownStatusEntities",
     "description": "The amount of entities the status of which is unknown.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "EntityGuid",
   "description": "An encoded Entity GUID",
   "kind": "SCALAR"
  },
  {
   "name": "AlertsMutingRuleDeleteResponse",
   "description": "The success response for deleting a MutingRule.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "id",
     "description": "The id of the deleted MutingRule.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "WorkloadRemainingEntitiesRule",
   "description": "The definition of a remaining entities rule.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "rollup",
     "description": "The rollup strategy.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "WorkloadRemainingEntitiesRuleRollup",
       "kind": "OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "DataDictionaryUnit",
   "description": "The unit of measurement",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "label",
     "description": "Name and abbreviation (if applicable) of the unit",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "Nr1CatalogSearchSortOption",
   "description": "Possible options to sort search results",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "ALPHABETICAL",
     "description": "Sort the search results alphabetically",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "POPULARITY",
     "description": "Sort the search results by most popular",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "RELEVANCE",
     "description": "Sort the search results by the most relevant to the search query",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "REVERSE_ALPHABETICAL",
     "description": "Sort the search results alphabetically in reverse order",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "InstallationRawMetadata",
   "description": "An arbitrary key:value object containing additional data related to the environment where the installation occurred.",
   "kind": "SCALAR"
  },
  {
   "name": "CloudRedshiftIntegrationInput",
   "description": "Amazon Redshift",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "tagKey",
     "description": "Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "tagValue",
     "description": "Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "DistributedTracingSpanAnomalyType",
   "description": "The type of Span Anomaly being reported (currently only Duration is supported).",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "DURATION",
     "description": "An anomaly type related to the duration of the span.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "LogConfigurationsCreateObfuscationExpressionInput",
   "description": "Input for creating an obfuscation expression.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "description",
     "description": "Description of expression.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "Name of expression.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "regex",
     "description": "Regex of expression.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "UserManagementDeleteGroup",
   "description": "The input object representing the group to remove",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "id",
     "description": "The ID of the group being removed.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AlertsNotificationChannelPoliciesResultSet",
   "description": "A result set containing associated policies information for a notification channel.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "policies",
     "description": "A set of policies associated with the channel.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AlertsNotificationChannelPolicy",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "totalCount",
     "description": "Total number of policies associated with the channel.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "SyntheticsSimpleMonitorAdvancedOptionsInput",
   "description": "The advanced options inputs available for a Simple (ping) monitor",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "customHeaders",
     "description": "Custom headers to use in monitor job",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "SyntheticsCustomHeaderInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "redirectIsFailure",
     "description": "Categorize redirects during a monitor job as a failure",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "responseValidationText",
     "description": "Validation text for monitor to search for at given URI",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "shouldBypassHeadRequest",
     "description": "Monitor should skip default HEAD request and instead use GET verb in check",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "useTlsValidation",
     "description": "Monitor should validate SSL certificate chain",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "CloudAwsWafv2Integration",
   "description": "WAFV2 Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "SyntheticsUpdateBrokenLinksMonitorInput",
   "description": "The monitor values that can be updated on a Broken Links monitor",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "apdexTarget",
     "description": "The monitor's Apdex target used to populate SLA reports",
     "type": {
      "name": "Float",
      "kind": "SCALAR"
     }
    },
    {
     "name": "locations",
     "description": "The locations the monitor will run from",
     "type": {
      "name": "SyntheticsLocationsInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "name",
     "description": "The human readable identifier for the monitor",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "period",
     "description": "The interval at which the monitor runs in minutes",
     "type": {
      "name": "SyntheticsMonitorPeriod",
      "kind": "ENUM"
     }
    },
    {
     "name": "runtime",
     "description": "The runtime that the monitor will use to run jobs. The only accepted values are runtimeType: NODE_API \u0026 runtimeTypeVersion: 16.10",
     "type": {
      "name": "SyntheticsExtendedTypeMonitorRuntimeInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "status",
     "description": "The run state of the monitor",
     "type": {
      "name": "SyntheticsMonitorStatus",
      "kind": "ENUM"
     }
    },
    {
     "name": "tags",
     "description": "The tags that will be associated with the monitor",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "SyntheticsTag",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "uri",
     "description": "The uri the monitor runs against",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "CloudAzureMachinelearningIntegration",
   "description": "Machine Learning Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "resourceGroups",
     "description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "AiWorkflowsDestinationConfiguration",
   "description": "Destination Configuration Object",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "channelId",
     "description": "Channel Id of the Destination Configuration",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "Name of the Destination Configuration",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "notificationTriggers",
     "description": "Notification triggers of the Destination Configuration",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AiWorkflowsNotificationTrigger",
        "kind": "ENUM"
       }
      }
     }
    },
    {
     "name": "type",
     "description": "Type of the Destination Configuration",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiWorkflowsDestinationType",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "updateOriginalMessage",
     "description": "Update original notification message (Slack channels only)",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "CloudGcpRouterIntegration",
   "description": "Router Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "AlertsNrqlConditionSignalInput",
   "description": "Configuration that defines the signal that the NRQL condition will use to evaluate.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "aggregationDelay",
     "description": "How long we wait for data that belongs in each aggregation window. Depending\non your data, a longer delay may increase accuracy but delay notifications.\n\nUse `aggregationDelay` with the `EVENT_FLOW` and `CADENCE` methods. The maximum\ndelay is **1200 seconds** (20 minutes) when using `EVENT_FLOW` and **3600 seconds**\n(60 minutes) when using `CADENCE`. In both cases, the minimum delay is **0 seconds**\nand the default is **120 seconds**.\n\nWhen using `aggregationDelay`, do **not** use `evaluationOffset`.",
     "type": {
      "name": "Seconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "aggregationMethod",
     "description": "The method that determines when we consider an aggregation window to be complete\nso that we can evaluate the signal for violations. Default is `EVENT_FLOW`.\n\nWhen using any `aggregationMethod`, do **not** use `evaluationOffset`.\n\nWhen using the `aggregationMethod` with `EVENT_TIMER`, use `aggregationTimer`.\nFor `EVENT_FLOW` and `CADENCE`, use `aggregationDelay`.",
     "type": {
      "name": "AlertsSignalAggregationMethod",
      "kind": "ENUM"
     }
    },
    {
     "name": "aggregationTimer",
     "description": "How long we wait after each data point arrives to make sure we've processed\nthe whole batch.\n\nUse `aggregationTimer` with the `EVENT_TIMER` method. The timer value can range\nfrom **5 seconds** to **1200 seconds** (20 minutes); the default is **60 seconds**.\n\nWhen using `aggregationTimer`, do **not** use `evaluationOffset`.",
     "type": {
      "name": "Seconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "aggregationWindow",
     "description": "Aggregation window controls the duration of the time window used to evaluate the NRQL query, in seconds.\nThe value must be at least 30 seconds, and no more than 6 hours (21600 seconds). Default is 60 seconds.",
     "type": {
      "name": "Seconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "evaluationDelay",
     "description": "How long we wait until the signal starts evaluating. The maximum delay is **7200 seconds** (120 minutes).",
     "type": {
      "name": "Seconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "evaluationOffset",
     "description": "Deprecated; superseded by `signal.aggregationMethod` with `signal.aggregationDelay` or `signal.aggregationTimer`.\n\nBy default, we evaluate the NRQL query in one-minute time windows. The start time depends on the value you select in the NRQL condition's `evaluationOffset`. Evaluation offset cannot be greater than 60 minutes.\n\nThis value is the number of time windows we look back at the aggregated data.\n\nExample: With an `evaluationOffset` of 3 and a 1 minute aggregation window, the NRQL time window applied to your query will be:\n\n`SINCE 3 minutes ago UNTIL 2 minutes ago`",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "fillOption",
     "description": "Option that determines the type of value that should be used to fill gaps (empty windows). Defaults to STATIC.\n\nOutlier NRQL conditions may only use NONE.",
     "type": {
      "name": "AlertsFillOption",
      "kind": "ENUM"
     }
    },
    {
     "name": "fillValue",
     "description": "If using the static fill option, this the value used for filling. Defaults to 0.",
     "type": {
      "name": "Float",
      "kind": "SCALAR"
     }
    },
    {
     "name": "slideBy",
     "description": "This setting gathers data in overlapping time windows to smooth the chart line, making it easier to spot trends.\n\nThe `slideBy` value is specified in seconds and must be **smaller than** and **a factor of** the `aggregationWindow`.\n\nCannot be used with:\n- Outlier NRQL conditions",
     "type": {
      "name": "Seconds",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AgentApplicationSettingsBrowserPrivacy",
   "description": "Browser privacy. See [documentation](https://docs.newrelic.com/docs/browser/browser-monitoring/page-load-timing-resources/cookie-collection-session-tracking/) for further information.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "cookiesEnabled",
     "description": "Whether or not cookies are enabled.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AgentApplicationSettingsUpdateErrorClass",
   "description": "Categories of errors that could occur while attempting updates.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "ACCESS_DENIED",
     "description": "You are not authorized to update this field.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "INVALID_INPUT",
     "description": "The given value for the field is not valid or out of range.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NOT_FOUND",
     "description": "No record could be found using the given input value.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "EdgeCreateSpanAttributeRuleInput",
   "description": "Data required to create a span attribute trace filter rule.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "action",
     "description": "The action that this trace filter rule takes if it matches the provided attribute name and value",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EdgeTraceFilterAction",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "key",
     "description": "Name of the attribute to match on",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "keyOperator",
     "description": "Type of match to apply to the attribute name (EQUALS, LIKE). Key match type is required.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EdgeSpanAttributeKeyOperator",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "value",
     "description": "Value of the attribute to match on. Value is required unless the `SpanAttributeValueOperator` is set to `IS_NOT_NULL`",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "valueOperator",
     "description": "Type of match to apply to the attribute value (EQUALS, LIKE, IS_NOT_NULL).",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EdgeSpanAttributeValueOperator",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "CloudAwsKinesisanalyticsIntegration",
   "description": "Kinesis Data Analytics Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "CloudGcpDataflowIntegration",
   "description": "Dataflow Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "AiNotificationsSecureUrlUpdate",
   "description": "Destination SecureUrlUpdate object",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "prefix",
     "description": "prefix",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "secureSuffix",
     "description": "secureSuffix",
     "type": {
      "name": "SecureValue",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "DataDictionaryTextFormat",
   "description": "Enumerated list of text output",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "HTML",
     "description": "Text as HTML output",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "MARKDOWN",
     "description": "Text as markdown output",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "PLAIN",
     "description": "Text as plain output, stripped of markup",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "NerdStorageVaultErrorType",
   "description": "The possible types why an error may have occurred.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "ACCESS_DENIED",
     "description": "Indicates the client performing the operation does not have sufficient\npermission.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "BAD_INPUT",
     "description": "Indicates the mutation has malformed input and needs to be corrected before\nthe mutation can be processed.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NOT_FOUND",
     "description": "Indicates that the resource does not exist.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "VALIDATION_FAILED",
     "description": "Indicates the mutation has failed validation.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AiTopologyGraph",
   "description": "Overview of a graph; all edges and vertices.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "edges",
     "description": "List of all edges in this graph.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiTopologyEdge",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "vertices",
     "description": "List of all vertices in this graph.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AiTopologyVertex",
         "kind": "OBJECT"
        }
       }
      }
     }
    }
   ]
  },
  {
   "name": "MultiTenantAuthorizationPermissionFilterRoleIdInput",
   "description": "Filter permissions by role id",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "eq",
     "description": "performs an equals operation",
     "type": {
      "name": "ID",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "DashboardLiveUrlResult",
   "description": "Live URL result.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "errors",
     "description": "The list of errors, if any.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "DashboardLiveUrlError",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "liveUrls",
     "description": "Live URL.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "DashboardLiveUrl",
       "kind": "OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "AgentApplicationSettingsIgnoredStatusCodeRule",
   "description": "A configuration setting used ignore status codes associated with different hosts.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "hosts",
     "description": "An array of hosts to apply the status code rule to.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    },
    {
     "name": "statusCodes",
     "description": "An array of status codes to be be ignored on these hosts.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "String",
        "kind": "SCALAR"
       }
      }
     }
    }
   ]
  },
  {
   "name": "MobileApplicationEntityOutline",
   "description": "A Mobile Application entity outline.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "account",
     "type": {
      "name": "AccountOutline",
      "kind": "OBJECT"
     }
    },
    {
     "name": "accountId",
     "description": "The New Relic account ID associated with this entity.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "alertSeverity",
     "description": "The current alerting severity of the entity.",
     "type": {
      "name": "EntityAlertSeverity",
      "kind": "ENUM"
     }
    },
    {
     "name": "applicationId",
     "description": "The ID of the Mobile App.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "domain",
     "description": "The entity's domain",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "entityType",
     "description": "A value representing the combination of the entity's domain and type.",
     "type": {
      "name": "EntityType",
      "kind": "ENUM"
     }
    },
    {
     "name": "firstIndexedAt",
     "description": "The date of last time the entity has updated any of its fields.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "goldenMetrics",
     "description": "The list of golden metrics for a specific entity",
     "type": {
      "name": "EntityGoldenContextScopedGoldenMetrics",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden metrics",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "timeWindow",
       "description": "Time range to apply to the golden metric NRQL query result field",
       "type": {
        "name": "EntityGoldenNrqlTimeWindowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "goldenTags",
     "description": "The list of golden tags for a specific entityType.",
     "type": {
      "name": "EntityGoldenContextScopedGoldenTags",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden tags",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "guid",
     "description": "A unique entity identifier.",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    },
    {
     "name": "indexedAt",
     "description": "The time the entity was indexed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "lastReportingChangeAt",
     "description": "The last time the entity's reporting status changed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "mobileSummary",
     "description": "Summary statistics about the Mobile App.",
     "type": {
      "name": "MobileAppSummaryData",
      "kind": "OBJECT"
     }
    },
    {
     "name": "name",
     "description": "The name of this entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "permalink",
     "description": "The url to the entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "reporting",
     "description": "The reporting status of the entity. If New Relic is successfully collecting data from your application, this will be true.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "serviceLevel",
     "description": "The service level defined for the entity.",
     "type": {
      "name": "ServiceLevelDefinition",
      "kind": "OBJECT"
     }
    },
    {
     "name": "tags",
     "description": "The tags applied to the entity.\n\nFor details on tags, as well as query and mutation examples, visit [our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/graphql-tagging-api-tutorial).",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityTag",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "type",
     "description": "The entity's type",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ],
   "interfaces": [
    {
     "name": "AlertableEntityOutline",
     "kind": "INTERFACE"
    },
    {
     "name": "EntityOutline",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "ApmApplicationEntitySettingsResult",
   "description": "The updated settings of an ApmApplicationEntity.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "entity",
     "description": "The updated entity. You can view the updated apdex target in the `settings` field of an ApmApplicationEntity.",
     "type": {
      "name": "ApmApplicationEntity",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "AuthorizationManagementGroupSearch",
   "description": "container for groups enabling cursor based pagination",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "groups",
     "description": "contains roles granted to users's groups",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AuthorizationManagementGroup",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "nextCursor",
     "description": "an opaque cursor to supply with subsequent   requests to get the next page of results, null if there are no more pages",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "totalCount",
     "description": "the total number of results",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "StreamingExportStatus",
   "description": "Set of streaming rules states",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "CREATION_FAILED",
     "description": "Status set for a streaming rule that could not be created due to an error",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "CREATION_IN_PROGRESS",
     "description": "Status set for a streaming rule being set up",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "DELETED",
     "description": "Status set for a streaming rule when it is deleted",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "DISABLED",
     "description": "Status set for a streaming rule when it is disabled",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "ENABLED",
     "description": "Status set for a streaming rule when it is enabled",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "ApiAccessIngestKey",
   "description": "An ingest key.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "account",
     "description": "The account this key is in.",
     "type": {
      "name": "AccountReference",
      "kind": "OBJECT"
     }
    },
    {
     "name": "accountId",
     "description": "The account attached to the ingest key. Agents using this key will report to the account the key belongs to.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "createdAt",
     "description": "The UNIX epoch when the key was created, in seconds.",
     "type": {
      "name": "EpochSeconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "id",
     "description": "The ID of the ingest key. This can be used to identify a key without revealing the key itself (used to update and delete).",
     "type": {
      "name": "ID",
      "kind": "SCALAR"
     }
    },
    {
     "name": "ingestType",
     "description": "The type of ingest key, which dictates what types of agents can use it to report.",
     "type": {
      "name": "ApiAccessIngestKeyType",
      "kind": "ENUM"
     }
    },
    {
     "name": "key",
     "description": "The keystring of the key.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The name of the key. Limited to 120 characters.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "notes",
     "description": "Any notes can be attached to an key. Limited to 120 characters.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "obfuscatedKey",
     "description": "The obfuscated key.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "type",
     "description": "The type of key, indicating what New Relic APIs it can be used to access.",
     "type": {
      "name": "ApiAccessKeyType",
      "kind": "ENUM"
     }
    }
   ],
   "interfaces": [
    {
     "name": "ApiAccessKey",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "IncidentIntelligenceEnvironmentEnvironmentKind",
   "description": "Incident Intelligence environment kinds",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "CROSS_ACCOUNT_ENVIRONMENT",
     "description": "The environment can contain more than one account so that cross-account correlation between accounts is supported",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SINGLE_ACCOUNT_ENVIRONMENT",
     "description": "The environment only contains a single account",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "SyntheticsMonitorDowntimeMonthlyConfig",
   "description": "Configuration options for a monitor downtime that runs monthly",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "endRepeat",
     "description": "Configuration options if the customer wants the monitor to end at a specific date",
     "type": {
      "name": "SyntheticsDateWindowEndConfig",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "endTime",
     "description": "The date and time in which the monitor downtime will end",
     "type": {
      "name": "NaiveDateTime",
      "kind": "SCALAR"
     }
    },
    {
     "name": "frequency",
     "description": "Configuration options for which days of the month a monitor downtime will occur",
     "type": {
      "name": "SyntheticsMonitorDowntimeMonthlyFrequency",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "startTime",
     "description": "The date and time in which the monitor downtime will begin",
     "type": {
      "name": "NaiveDateTime",
      "kind": "SCALAR"
     }
    },
    {
     "name": "timezone",
     "description": "The timezone the time values will be in",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AlertsNrqlConditionPriority",
   "description": "Value determining whether to open a critical or warning incident for a NrqlCondition.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "CRITICAL",
     "description": "Our highest priority. Use a critical priority when system behavior needs immediate attention.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "WARNING",
     "description": "Lower priority. Use a warning priority when system behavior is noteworthy but not degraded enough to cause problems yet.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "OrganizationOrganizationCreateAsyncResult",
   "description": "An async organization creation result",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "customer",
     "description": "Organization Creation Async Job Customer",
     "type": {
      "name": "OrganizationOrganizationCreateAsyncCustomerResult",
      "kind": "OBJECT"
     }
    },
    {
     "name": "job",
     "description": "Organization Creation Async Job Result",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "OrganizationOrganizationCreateAsyncJobResult",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "organization",
     "description": "Organization Creation Async Job Organization",
     "type": {
      "name": "OrganizationOrganizationCreateAsyncOrganizationResult",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "AgentApplicationSettingsBrowserLoaderInput",
   "description": "We have three types of browser agents: Lite, Pro, and Pro+SPA.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "FULL",
     "description": "Use PRO instead.",
     "isDeprecated": true,
     "deprecationReason": "Browsers which historically had the FULL loader will now return PRO as the loader type."
    },
    {
     "name": "LITE",
     "description": "Lite: Gives you information about some basic page load timing and browser user information. Lacks the Browser Pro features and SPA features.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NONE",
     "description": "Don't use an agent.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "PRO",
     "description": "Pro: Gives you access to the Browser Pro features. Lacks the functionality designed for single page app monitoring.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SPA",
     "description": "Pro+SPA: This is the default installed agent when you enable browser monitoring. Gives you access to all of the Browser Pro features and to Single Page App (SPA) monitoring. Provides detailed page timing data and the most up-to-date New Relic features, including distributed tracing, for all types of applications.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "SyntheticsUpdateSimpleBrowserMonitorInput",
   "description": "The monitor values that can be updated on a Simple Browser monitor",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "advancedOptions",
     "description": "The monitor advanced options",
     "type": {
      "name": "SyntheticsSimpleBrowserMonitorAdvancedOptionsInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "apdexTarget",
     "description": "The monitor's Apdex target used to populate SLA reports",
     "type": {
      "name": "Float",
      "kind": "SCALAR"
     }
    },
    {
     "name": "browsers",
     "description": "The browser(s) that the monitor will use to run jobs",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "SyntheticsBrowser",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "devices",
     "description": "The devices that the monitor will use to run jobs",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "SyntheticsDevice",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "locations",
     "description": "The locations the monitor will run from",
     "type": {
      "name": "SyntheticsLocationsInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "name",
     "description": "The human readable identifier for the monitor",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "period",
     "description": "The interval at which the monitor runs in minutes",
     "type": {
      "name": "SyntheticsMonitorPeriod",
      "kind": "ENUM"
     }
    },
    {
     "name": "runtime",
     "description": "The runtime that the monitor will use to run jobs",
     "type": {
      "name": "SyntheticsRuntimeInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "status",
     "description": "The run state of the monitor",
     "type": {
      "name": "SyntheticsMonitorStatus",
      "kind": "ENUM"
     }
    },
    {
     "name": "tags",
     "description": "The tags that will be associated with the monitor",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "SyntheticsTag",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "uri",
     "description": "The uri the monitor runs against",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "NrqlDropRulesCreateDropRuleFailure",
   "description": "Error details about the rule that failed to be created and why.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "error",
     "description": "Information about why the create failed.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "NrqlDropRulesError",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "submitted",
     "description": "Input information about a submitted rule that was unable to be created.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "NrqlDropRulesCreateDropRuleSubmission",
       "kind": "OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "PixieRecordPixieTosAcceptanceResult",
   "description": "The reponse returned when record the acceptance of the Pixie terms of service on a given account",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "errors",
     "description": "An array containings errors, if any.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "PixieRecordPixieTosAcceptanceError",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "success",
     "description": "Whether the Pixie terms of service acceptance was successfully recorded or not.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "CloudAzureRediscacheIntegration",
   "description": "Redis Cache Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "resourceGroups",
     "description": "Specify each Resource group associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "MobileAppSummaryData",
   "description": "Mobile application summary data",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "appLaunchCount",
     "description": "The number of times the app has been launched.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "crashCount",
     "description": "The number of crashes.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "crashRate",
     "description": "Crash rate is percentage of crashes per sessions.",
     "type": {
      "name": "Float",
      "kind": "SCALAR"
     }
    },
    {
     "name": "httpErrorRate",
     "description": "Error rate is the percentage of http errors per successful requests.",
     "type": {
      "name": "Float",
      "kind": "SCALAR"
     }
    },
    {
     "name": "httpRequestCount",
     "description": "The number of http requests.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "httpRequestRate",
     "description": "The rate of http requests per minute.",
     "type": {
      "name": "Float",
      "kind": "SCALAR"
     }
    },
    {
     "name": "httpResponseTimeAverage",
     "description": "The average response time for all http calls.",
     "type": {
      "name": "Seconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "mobileSessionCount",
     "description": "The number of mobile sessions.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "networkFailureRate",
     "description": "Network failure rate is the percentage of network failures per successful requests.",
     "type": {
      "name": "Float",
      "kind": "SCALAR"
     }
    },
    {
     "name": "usersAffectedCount",
     "description": "The number of users affected by crashes.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "Nr1CatalogSearchResult",
   "description": "A result returned when executing a search",
   "kind": "UNION",
   "possibleTypes": [
    {
     "name": "Nr1CatalogAlertPolicyTemplate",
     "kind": "OBJECT"
    },
    {
     "name": "Nr1CatalogDashboardTemplate",
     "kind": "OBJECT"
    },
    {
     "name": "Nr1CatalogDataSource",
     "kind": "OBJECT"
    },
    {
     "name": "Nr1CatalogNerdpack",
     "kind": "OBJECT"
    },
    {
     "name": "Nr1CatalogQuickstart",
     "kind": "OBJECT"
    }
   ]
  },
  {
   "name": "Minutes",
   "description": "The `Minutes` scalar represents a duration in minutes",
   "kind": "SCALAR"
  },
  {
   "name": "CloudTrustedadvisorIntegration",
   "description": "Trusted Advisor Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "AlertsWebhookBasicAuthMutationInput",
   "description": "Webhook basic auth",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "password",
     "description": "Password",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SecureValue",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "username",
     "description": "Username",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "OrganizationOrganizationAuthenticationDomainIdInputFilter",
   "description": "Provides all the available filters on the authentication domain id",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "eq",
     "description": "performs an equals operation",
     "type": {
      "name": "ID",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AlertsSlackNotificationChannelCreateInput",
   "description": "The input for creating a new Slack notification channel.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "name",
     "description": "Notification channel name.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "teamChannel",
     "description": "Slack channel name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "url",
     "description": "Slack channel URL.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SecureValue",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "Nr1CatalogReleaseNote",
   "description": "Information about the changes made to the metadata for a version of the Nerdpack",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "changes",
     "description": "The description of changes made for this version of the Nerdpack",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "version",
     "description": "The version of the Nerdpack the changes correspond with",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SemVer",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "ErrorsInboxJiraIssue",
   "description": "An single issue in JIRA",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "id",
     "description": "Unique resource identifier",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "issueId",
     "description": "Issue Id in JIRA",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "url",
     "description": "Url to access the issue in JIRA",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "ErrorsInboxResource",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "Nr1CatalogLinkInstallPlanDirective",
   "description": "Information about a link install plan directive",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "mode",
     "description": "The mode of the install plan directive",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Nr1CatalogInstallPlanDirectiveMode",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "url",
     "description": "The URL of the external link used to guide the user through installation",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "Nr1CatalogInstallPlanDirective",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "DateTimeWindowInput",
   "description": "Represents a date time window input.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "endTime",
     "description": "The end date and time expressed as an ISO8601 formatted string",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "DateTime",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "startTime",
     "description": "The start date and time expressed as an ISO8601 formatted string",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "DateTime",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "EntitySearchCounts",
   "description": "The groupings and counts of entities returned for the specified criteria.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "count",
     "description": "The number of entities that match the specified criteria.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "facet",
     "description": "The group of entities returned for the specified criteria.",
     "type": {
      "name": "AttributeMap",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "LogConfigurationsAccountStitchedFields",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "dataPartitionRules",
     "description": "Look up for all data partition rules for a given account.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "LogConfigurationsDataPartitionRule",
        "kind": "OBJECT"
       }
      }
     }
    },
    {
     "name": "liveArchiveConfigurations",
     "description": "Look up for all Live Archive configurations for a given account.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "LogConfigurationsLiveArchiveConfiguration",
        "kind": "OBJECT"
       }
      }
     }
    },
    {
     "name": "obfuscationExpressions",
     "description": "Look up for all obfuscation expressions for a given account",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "LogConfigurationsObfuscationExpression",
        "kind": "OBJECT"
       }
      }
     }
    },
    {
     "name": "obfuscationRules",
     "description": "Look up for all obfuscation rules for a given account.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "LogConfigurationsObfuscationRule",
        "kind": "OBJECT"
       }
      }
     }
    },
    {
     "name": "parsingRules",
     "description": "Look up for all parsing rules for a given account.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "LogConfigurationsParsingRule",
        "kind": "OBJECT"
       }
      }
     }
    },
    {
     "name": "pipelineConfiguration",
     "description": "Look up pipeline configuration for a given account.",
     "type": {
      "name": "LogConfigurationsPipelineConfiguration",
      "kind": "OBJECT"
     }
    },
    {
     "name": "testGrok",
     "description": "Test a Grok pattern against a list of log lines.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "LogConfigurationsGrokTestResult",
        "kind": "OBJECT"
       }
      }
     },
     "args": [
      {
       "name": "grok",
       "description": "The Grok pattern to test.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "logLines",
       "description": "The log lines to test the Grok pattern against.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "kind": "LIST",
         "ofType": {
          "kind": "NON_NULL",
          "ofType": {
           "name": "String",
           "kind": "SCALAR"
          }
         }
        }
       }
      }
     ]
    }
   ]
  },
  {
   "name": "CloudGcpRunIntegration",
   "description": "Run Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "WorkloadRegularRule",
   "description": "The definition of a rule, which consists of a group of entities and a rollup strategy.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "entities",
     "description": "A list of entity GUIDs. These entities will belong to the collection as long as their accounts are included in the scope accounts of the collection.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "WorkloadEntityRef",
        "kind": "OBJECT"
       }
      }
     }
    },
    {
     "name": "entitySearchQueries",
     "description": "A list of entity search queries. These queries are constrained to the workload contents.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "WorkloadEntitySearchQuery",
        "kind": "OBJECT"
       }
      }
     }
    },
    {
     "name": "id",
     "description": "The unique identifier of the rule.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "rollup",
     "description": "The rollup strategy.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "WorkloadRollup",
       "kind": "OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "AiNotificationsProperty",
   "description": "Channel property Object",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "displayValue",
     "description": "Channel property display key",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "key",
     "description": "Channel property key",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "label",
     "description": "Channel property display key",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "value",
     "description": "Channel property value",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "DataManagementRetention",
   "description": "Wrapper object for retention namespaces",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "customizable",
     "description": "Is this field customizable?",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "displayName",
     "description": "The name as displayed in the UI",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "maxRetentionInDays",
     "description": "The upper limit for the retention value",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "minRetentionInDays",
     "description": "The lower limit for the retention value",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "namespace",
     "description": "The name of a namespace",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "source",
     "description": "The source of the namespace",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "SyntheticsAutomatedTestConfig",
   "description": "Global automated test config",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "batchName",
     "description": "An identifier for the automated test run",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "branch",
     "description": "Branch metadata to indicate what triggered the automated test",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "commit",
     "description": "Commit metadata to indicate what commit triggered the automated test",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "deepLink",
     "description": "Metadata for the automated test",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "platform",
     "description": "Metadata about the platform target the automated test will run against",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "repository",
     "description": "The unique client identifier for the Synthetics Monitor in New Relic",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "EventsToMetricsDeleteRuleSubmission",
   "description": "The details that were submitted when deleteing an events to metrics conversion rule.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "accountId",
     "description": "A submitted account id.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "ruleId",
     "description": "A submitted rule id.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AiNotificationsCustomHeaderInput",
   "description": "Custom header input object",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "key",
     "description": "key",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "value",
     "description": "value",
     "type": {
      "name": "SecureValue",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "CustomerAdministrationJobs",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "organizationCreateAsyncResults",
     "description": "Organization Create job results",
     "type": {
      "name": "OrganizationOrganizationCreateAsyncResultCollection",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "cursor",
       "description": "the cursor from the previous request, to get the next page",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "filter",
       "description": "Filter organization create job results",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "OrganizationOrganizationCreateAsyncResultFilterInput",
         "kind": "INPUT_OBJECT"
        }
       }
      }
     ]
    }
   ]
  },
  {
   "name": "CloudAwsDirectconnectIntegrationInput",
   "description": "Direct Connect",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AgentEnvironmentApplicationEnvironmentAttributes",
   "description": "Environment data found for one application instance.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "applicationGuids",
     "description": "List of Guids of the APM Applications this instance belongs to.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EntityGuid",
         "kind": "SCALAR"
        }
       }
      }
     }
    },
    {
     "name": "attributes",
     "description": "A list of environment attributes of the application instance.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "AgentEnvironmentAttribute",
        "kind": "OBJECT"
       }
      }
     }
    },
    {
     "name": "details",
     "description": "Information of the application instance, such as host and language.",
     "type": {
      "name": "AgentEnvironmentApplicationInstanceDetails",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "CloudElasticacheIntegrationInput",
   "description": "Amazon ElastiCache",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "fetchTags",
     "description": "Specify if tags should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "tagKey",
     "description": "Specify a Tag key associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "tagValue",
     "description": "Specify a Tag value associated with the resources that you want to monitor. Filter values are case-sensitive.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "LogConfigurationsCreateObfuscationActionInput",
   "description": "Input for creating an obfuscation action on a rule being created.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "attributes",
     "description": "Attribute names for action. An empty list applies the action to all the attributes.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      }
     }
    },
    {
     "name": "expressionId",
     "description": "Expression Id for action.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "method",
     "description": "Obfuscation method to use.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "LogConfigurationsObfuscationMethod",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "SyntheticsPrivateLocationMutationResult",
   "description": "Result of a private location mutation",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "accountId",
     "description": "The account associated to the private location",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "description",
     "description": "A description of the private location",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "domainId",
     "description": "The private location globally unique identifier",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "errors",
     "description": "An array container errors resulting from the mutation, if any",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "SyntheticsPrivateLocationMutationError",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "guid",
     "description": "The unique client identifier for the Synthetics private location in New Relic",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    },
    {
     "name": "key",
     "description": "The private locations key",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "locationId",
     "description": "An alternate identifier based on name",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The name of the private location",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "verifiedScriptExecution",
     "description": "Specifies whether the private location requires a password for scripted monitors",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AuthorizationManagementOrganizationAccessGrant",
   "description": "The Organization Role a Group should have access to",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "roleId",
     "description": "The Role ID that will define the Organization access",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "Entity",
   "description": "The `Entity` interface allows fetching detailed entity information for a single entity.\n\nTo understand more about entities and entity types, look at [our docs](https://docs.newrelic.com/docs/what-are-new-relic-entities).",
   "kind": "INTERFACE",
   "fields": [
    {
     "name": "account",
     "type": {
      "name": "AccountOutline",
      "kind": "OBJECT"
     }
    },
    {
     "name": "accountId",
     "description": "The New Relic account ID associated with this entity.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "alertSeverity",
     "description": "The current alerting severity of the entity.",
     "type": {
      "name": "EntityAlertSeverity",
      "kind": "ENUM"
     }
    },
    {
     "name": "alertViolations",
     "description": "Violations on the entity that were open during the specified time window. This will return up to 500 violations - if there are more in the time window selected, you must narrow the time window or look at fewer entities.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityAlertViolation",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "endTime",
       "description": "End of time window for violations.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EpochMilliseconds",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "startTime",
       "description": "Start of time window for violations.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EpochMilliseconds",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "deploymentSearch",
     "description": "Retrieve the deployment event(s). Ordered by timestamp DESC.",
     "type": {
      "name": "ChangeTrackingDeploymentSearchResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "filter",
       "description": "Contains the set of filters to apply to the query.",
       "type": {
        "name": "ChangeTrackingSearchFilter",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "domain",
     "description": "The entity's domain",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "entityType",
     "description": "A value representing the combination of the entity's domain and type.",
     "type": {
      "name": "EntityType",
      "kind": "ENUM"
     }
    },
    {
     "name": "firstIndexedAt",
     "description": "The date of last time the entity has updated any of its fields.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "goldenMetrics",
     "description": "The list of golden metrics for a specific entity",
     "type": {
      "name": "EntityGoldenContextScopedGoldenMetrics",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden metrics",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "timeWindow",
       "description": "Time range to apply to the golden metric NRQL query result field",
       "type": {
        "name": "EntityGoldenNrqlTimeWindowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "goldenTags",
     "description": "The list of golden tags for a specific entityType.",
     "type": {
      "name": "EntityGoldenContextScopedGoldenTags",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden tags",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "guid",
     "description": "A unique entity identifier.",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    },
    {
     "name": "indexedAt",
     "description": "The time the entity was indexed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "lastReportingChangeAt",
     "description": "The last time the entity's reporting status changed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The name of this entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nerdStorage",
     "type": {
      "name": "NerdStorageEntityScope",
      "kind": "OBJECT"
     }
    },
    {
     "name": "nrdbQuery",
     "description": "Make an `Entity` scoped query to NRDB with a NRQL string.\n\nA relevant `WHERE` clause will be added to your query to scope data to the entity in question.\n\nSee the [NRQL Docs](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/nrql-resources/nrql-syntax-components-functions) for more information about generating a query string.",
     "type": {
      "name": "NrdbResultContainer",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "async",
       "description": "When true, the query will begin asynchronous resolution after the allotted `timeout`. Include `queryProgress` fields in your GraphQL query to receive the information you will need to poll the `nrdbQueryProgress` field for the results of your async NRQL query.\n\nSee [this page](https://docs.newrelic.com/docs/apis/nerdgraph/examples/async-queries-nrql-tutorial) for additional asynchronous query documentation.",
       "type": {
        "name": "Boolean",
        "kind": "SCALAR"
       },
       "defaultValue": "false"
      },
      {
       "name": "nrql",
       "description": "The [NRQL](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/nrql-resources/nrql-syntax-components-functions) query string.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Nrql",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "options",
       "description": "Additional options for NRQL queries.",
       "type": {
        "name": "NrqlQueryOptions",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "timeout",
       "description": "The timeout we will apply to the NRQL Query. The value will be clamped to between 5 and 120 seconds and defaults to 5 seconds.\n\nFor `async` queries, if the query is still incomplete after this amount of time, resolution will become asynchronous and return `queryProgress` data if requested.",
       "type": {
        "name": "Seconds",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "nrdbQueryProgress",
     "description": "Poll for the results of a previously-executed asychronous NRDB query.\n\nThe `queryId` is available in the `queryProgress` data returned by the original asynchronous query.\n\nSee [this page](https://docs.newrelic.com/docs/apis/nerdgraph/examples/async-queries-nrql-tutorial) for additional asynchronous query documentation.",
     "type": {
      "name": "NrdbResultContainer",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "queryId",
       "description": "A token for retrieving the results of a previously executed asynchronous query.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "permalink",
     "description": "The url to the entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "recentAlertViolations",
     "description": "Recent violations on the entity.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityAlertViolation",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "count",
       "description": "The desired number of alert violations to be returned.",
       "type": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "relatedEntities",
     "description": "Related entities result with optional filtering.",
     "type": {
      "name": "EntityRelationshipRelatedEntitiesResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "cursor",
       "description": "The cursor to fetch paginated results.",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "filter",
       "description": "Apply an optional filter to the related entities.",
       "type": {
        "name": "EntityRelationshipEdgeFilter",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "limit",
       "description": "A limit to apply to the number of relationships returned. Note: this option can only lower the default limits (2000 relationships).",
       "type": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "relationships",
     "description": "A list of the entities' relationships.\n\nFor more information, visit [our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/graphql-relationships-api-tutorial).",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityRelationship",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "endTime",
       "description": "Return relationships as they existed in the past. The duration of the time window queried is fixed at 75 minutes.",
       "type": {
        "name": "EpochMilliseconds",
        "kind": "SCALAR"
       }
      },
      {
       "name": "filter",
       "description": "Apply an optional filter to the relationships.",
       "type": {
        "name": "EntityRelationshipFilter",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "reporting",
     "description": "The reporting status of the entity. If New Relic is successfully collecting data from your application, this will be true.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "serviceLevel",
     "description": "The service level defined for the entity.",
     "type": {
      "name": "ServiceLevelDefinition",
      "kind": "OBJECT"
     }
    },
    {
     "name": "tags",
     "description": "The tags applied to the entity.\n\nFor details on tags, as well as query and mutation examples, visit [our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/graphql-tagging-api-tutorial).",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityTag",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "tagsWithMetadata",
     "description": "The tags applied to the entity with their metadata.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityTagWithMetadata",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "tracingSummary",
     "description": "Look up Distributed Tracing summary data for the selected `EntityGuid`",
     "type": {
      "name": "DistributedTracingEntityTracingSummary",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "timeWindow",
       "description": "The start and end of the tracing data. Defaults to the last 30 minutes",
       "type": {
        "name": "TimeWindowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "type",
     "description": "The entity's type",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ],
   "interfaces": [
    {
     "name": "AlertableEntity",
     "kind": "INTERFACE"
    }
   ],
   "possibleTypes": [
    {
     "name": "ApmApplicationEntity",
     "kind": "OBJECT"
    },
    {
     "name": "ApmDatabaseInstanceEntity",
     "kind": "OBJECT"
    },
    {
     "name": "ApmExternalServiceEntity",
     "kind": "OBJECT"
    },
    {
     "name": "BrowserApplicationEntity",
     "kind": "OBJECT"
    },
    {
     "name": "DashboardEntity",
     "kind": "OBJECT"
    },
    {
     "name": "ExternalEntity",
     "kind": "OBJECT"
    },
    {
     "name": "GenericEntity",
     "kind": "OBJECT"
    },
    {
     "name": "GenericInfrastructureEntity",
     "kind": "OBJECT"
    },
    {
     "name": "InfrastructureAwsLambdaFunctionEntity",
     "kind": "OBJECT"
    },
    {
     "name": "InfrastructureHostEntity",
     "kind": "OBJECT"
    },
    {
     "name": "KeyTransactionEntity",
     "kind": "OBJECT"
    },
    {
     "name": "MobileApplicationEntity",
     "kind": "OBJECT"
    },
    {
     "name": "SecureCredentialEntity",
     "kind": "OBJECT"
    },
    {
     "name": "SyntheticMonitorEntity",
     "kind": "OBJECT"
    },
    {
     "name": "TeamEntity",
     "kind": "OBJECT"
    },
    {
     "name": "ThirdPartyServiceEntity",
     "kind": "OBJECT"
    },
    {
     "name": "UnavailableEntity",
     "kind": "OBJECT"
    },
    {
     "name": "WorkloadEntity",
     "kind": "OBJECT"
    }
   ]
  },
  {
   "name": "Nr1CatalogNerdlet",
   "description": "Information about a Nerdlet in a Nerdpack",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "id",
     "description": "The unique identifier for the Nerdlet.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metadata",
     "description": "Metadata associated with the Nerdlet",
     "type": {
      "name": "Nr1CatalogNerdletMetadata",
      "kind": "OBJECT"
     }
    }
   ],
   "interfaces": [
    {
     "name": "Nr1CatalogNerdpackItem",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "WorkloadStatusConfigInput",
   "description": "The input object used to provide the configuration that defines how the status of the workload is calculated.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "automatic",
     "description": "An input object used to represent an automatic status configuration.",
     "type": {
      "name": "WorkloadAutomaticStatusInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "static",
     "description": "A list of static status configurations. You can only configure one static status for a workload.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "WorkloadStaticStatusInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    }
   ]
  },
  {
   "name": "EntityGoldenMetricUnit",
   "description": "The different units that can be used to express golden metrics.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "APDEX",
     "description": "Apdex (Application Performance Index).",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "BITS",
     "description": "Bits.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "BITS_PER_SECOND",
     "description": "Bits per second.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "BYTES",
     "description": "Bytes.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "BYTES_PER_SECOND",
     "description": "Bytes per second.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "CELSIUS",
     "description": "Degrees celsius.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "COUNT",
     "description": "Count.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "HERTZ",
     "description": "Hertz.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "MESSAGES_PER_SECOND",
     "description": "Messages per second.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "MS",
     "description": "Milliseconds.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "OPERATIONS_PER_SECOND",
     "description": "Operations per second.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "PAGES_PER_SECOND",
     "description": "Pages loaded per second.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "PERCENTAGE",
     "description": "Percentage.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "REQUESTS_PER_MINUTE",
     "description": "Requests received per minute.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "REQUESTS_PER_SECOND",
     "description": "Requests received per second.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SECONDS",
     "description": "Seconds.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "TIMESTAMP",
     "description": "Timestamp.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AiNotificationsAuthType",
   "description": "Authentication types",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "BASIC",
     "description": "Basic user and password authentication",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "CUSTOM_HEADERS",
     "description": "Custom header based authentication",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "OAUTH2",
     "description": "OAuth based authentication",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "TOKEN",
     "description": "Token based authentication",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "NrqlDropRulesListDropRulesResult",
   "description": "The result of the request to list drop rules for an account.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "error",
     "description": "Information about why we could not list rules.",
     "type": {
      "name": "NrqlDropRulesError",
      "kind": "OBJECT"
     }
    },
    {
     "name": "rules",
     "description": "The list of drop rules queried on the targeted account.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "NrqlDropRulesDropRule",
       "kind": "OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "Nr1CatalogMutationResult",
   "description": "Outcome of the mutation",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "ERROR",
     "description": "The mutation failed",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "OK",
     "description": "The mutation was processed successfully",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "CloudGcpFirebasehostingIntegrationInput",
   "description": "Firebase Hosting",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "SyntheticsCustomHeaderInput",
   "description": "Custom header input for monitor jobs",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "name",
     "description": "Header name",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "value",
     "description": "Header value",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "ErrorsInboxAssignErrorGroupResponse",
   "description": "Response for error group assignment mutation.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "assignedUser",
     "description": "User that was assigned to the error group.",
     "type": {
      "name": "UserReference",
      "kind": "OBJECT"
     }
    },
    {
     "name": "assignment",
     "description": "User that was assigned to the error group.",
     "type": {
      "name": "ErrorsInboxAssignment",
      "kind": "OBJECT"
     }
    },
    {
     "name": "errors",
     "description": "List of errors encountered.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "ErrorsInboxAssignErrorGroupError",
        "kind": "OBJECT"
       }
      }
     }
    }
   ]
  },
  {
   "name": "AiDecisionsRelativeFuzzyScoreInput",
   "description": "Input type for RelativeFuzzyScore expression",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "left",
     "description": "Left operand of comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsIncidentObjectInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "minDistance",
     "description": "Minimum distance threshold.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "right",
     "description": "Right operand of comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsIncidentObjectInput",
       "kind": "INPUT_OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "SyntheticsMonitorCreateErrorType",
   "description": "Types of errors that can be returned from a create monitor request",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "BAD_REQUEST",
     "description": "Received a request missing required fields or containing invalid data",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "INTERNAL_SERVER_ERROR",
     "description": "An unknown error occurred while processing request to mutate monitor",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NOT_FOUND",
     "description": "Monitor not found for given guid (monitor does not exist on account or has already been deleted)",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "PAYMENT_REQUIRED",
     "description": "Monitor creation exceeds account subscription limits",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "TAGGING_ERROR",
     "description": "Monitor tags were not updated.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "UNAUTHORIZED",
     "description": "User does not have authorization to perform monitor mutation.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "UNKNOWN_ERROR",
     "description": "An unknown error occurred while processing request to create monitor",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AiDecisionsRelativeFuzzyWuzzyRatioInput",
   "description": "Input type for RelativeFuzzyWuzzyRatio expression",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "left",
     "description": "Left operand of comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsIncidentObjectInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "minSimilarity",
     "description": "Minimum similarity threshold.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Float",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "right",
     "description": "Right operand of comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsIncidentObjectInput",
       "kind": "INPUT_OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "OrganizationProvisioningProductInput",
   "description": "A product.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "id",
     "description": "Unique id for Product",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "Product name",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "unitsOfMeasure",
     "description": "An array of unit and quantity for a product",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "OrganizationProvisioningUnitOfMeasureInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    }
   ]
  },
  {
   "name": "DashboardVariableOptionsInput",
   "description": "Options applied to the variable",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "ignoreTimeRange",
     "description": "Only applies to variables of type NRQL. With this turned on, the time range for the NRQL query will override the time picker on dashboards and other pages. Turn this off to use the time picker as normal.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "DataManagementEventNamespaces",
   "description": "Event namespace",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "maxRetentionInDays",
     "description": "The upper limit for the retention value",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "minRetentionInDays",
     "description": "The lower limit for the retention value",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "namespace",
     "description": "The name of a namespace",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "OrganizationSharedAccountInput",
   "description": "Attributes for creating an account share.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "accountId",
     "description": "The id of the account to share with new organization",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "limitingRoleId",
     "description": "The limiting role id the new organization will be granted on for the shared account",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "OrganizationAccountIdFilterInput",
   "description": "A filter for an AccountID",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "eq",
     "description": "An Account ID",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AiDecisionsRelativeSoundExInput",
   "description": "Input type for RelativeSoundEx expression",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "left",
     "description": "Left operand of comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsIncidentObjectInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "minDistance",
     "description": "Minimum distance threshold.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "right",
     "description": "Right operand of comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsIncidentObjectInput",
       "kind": "INPUT_OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "DashboardSnapshotUrlInput",
   "description": "Parameters that affect the data and the rendering of the dashboards returned by the snapshot url mutation.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "timeWindow",
     "description": "Period of time from which the data to be displayed on the dashboard will be obtained.",
     "type": {
      "name": "DashboardSnapshotUrlTimeWindowInput",
      "kind": "INPUT_OBJECT"
     }
    }
   ]
  },
  {
   "name": "CloudAutoscalingIntegration",
   "description": "AutoScaling Integration",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "createdAt",
     "description": "The object creation date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The cloud service integration identifier.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccount",
     "description": "The parent linked account identifier.",
     "type": {
      "name": "CloudLinkedAccount",
      "kind": "OBJECT"
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The cloud service integration name.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrAccountId",
     "description": "The parent NewRelic account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "service",
     "description": "The cloud service used in the integration.",
     "type": {
      "name": "CloudService",
      "kind": "OBJECT"
     }
    },
    {
     "name": "updatedAt",
     "description": "The object last update date, in epoch (Unix) time",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EpochSeconds",
       "kind": "SCALAR"
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "CloudIntegration",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "DashboardDeleteResultStatus",
   "description": "Result status of delete operation.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "FAILURE",
     "description": "FAILURE.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SUCCESS",
     "description": "SUCCESS.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AlertsNotificationChannelsRemoveFromPolicyResponse",
   "description": "The response for dissociating notification channels from a policy.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "errors",
     "description": "Errors.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AlertsNotificationChannelsRemoveFromPolicyError",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "notificationChannels",
     "description": "Notification channels.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "AlertsNotificationChannelId",
         "kind": "OBJECT"
        }
       }
      }
     }
    },
    {
     "name": "policyId",
     "description": "Policy ID.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "NrqlDropRulesDeleteDropRuleFailure",
   "description": "Error details about the rule that failed to be deleted and why.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "error",
     "description": "Information about why the delete failed.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "NrqlDropRulesError",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "submitted",
     "description": "Input information about on what was unable to be deleted.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "NrqlDropRulesDeleteDropRuleSubmission",
       "kind": "OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "AiDecisionsIncidentSelect",
   "description": "Select incident for comparison.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "FIRST_INCIDENT",
     "description": "Select first incident in comparison.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SECOND_INCIDENT",
     "description": "Select second incident in comparison.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "CloudSnsIntegrationInput",
   "description": "Amazon Simple Notification Service (SNS)",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "fetchExtendedInventory",
     "description": "Determine if extra inventory data be collected or not. May affect total data collection time and contribute to the Cloud provider API rate limit.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "IncidentIntelligenceEnvironmentConsentAccounts",
   "description": "Consent accounts to usage of the Incident Intelligence product for EU or FedRAMP",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "consentedAccounts",
     "description": "The list of accounts marked with consent",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "IncidentIntelligenceEnvironmentConsentedAccount",
        "kind": "OBJECT"
       }
      }
     }
    },
    {
     "name": "result",
     "description": "The outcome of the consent marking",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "IncidentIntelligenceEnvironmentConsentAccountsResult",
       "kind": "ENUM"
      }
     }
    }
   ]
  },
  {
   "name": "AiWorkflowsCreateErrorType",
   "description": "Type of create error",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "CHANNEL_NOT_FOUND",
     "description": "We couldn't find a channel with the given id",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "DUPLICATE",
     "description": "A workflow with this name already exists",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "INVALID_PARAMETER",
     "description": "One or more of the parameters you provided are incorrect",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "LIMIT_REACHED",
     "description": "Reached the maximum number of workflows per account",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "MISSING_ENTITLEMENT",
     "description": "This account is missing the required entitlement(s) to perform this action",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "UNAUTHORIZED_ACCOUNT",
     "description": "This account in not authorized to perform this action",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "UNSUPPORTED_CHANNEL_TYPE",
     "description": "The given channel id represents an unsupported channel type",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "VALIDATION_ERROR",
     "description": "The parameter provided does not have a valid form",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "LogConfigurationsObfuscationRule",
   "description": "Rule for identifying a set of log data to apply specific obfuscation actions to.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "actions",
     "description": "Obfuscation actions to take if a record passes the matching criteria.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "LogConfigurationsObfuscationAction",
        "kind": "OBJECT"
       }
      }
     }
    },
    {
     "name": "createdAt",
     "description": "Identifies the date and time when the rule was created.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "DateTime",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "createdBy",
     "description": "Identifies the user who has created the rule.",
     "type": {
      "name": "UserReference",
      "kind": "OBJECT"
     }
    },
    {
     "name": "description",
     "description": "Description of the obfuscation rule.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "enabled",
     "description": "Whether the rule should be applied to incoming logs",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "filter",
     "description": "NRQL filter to determine if a log record should have obfuscation actions applied.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Nrql",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "id",
     "description": "The id of the obfuscation rule.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "Name of the obfuscation rule.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "updatedAt",
     "description": "Identifies the date and time when the rule was last updated.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "DateTime",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "updatedBy",
     "description": "Identifies the user who has last updated the rule.",
     "type": {
      "name": "UserReference",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "NrqlDropRulesCreateDropRuleInput",
   "description": "Details needed to create a NRQL drop rule.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "action",
     "description": "The type of drop rule you want. This changes the way your NRQL string is interpreted.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "NrqlDropRulesAction",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "description",
     "description": "Additional information about the rule.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrql",
     "description": "The NRQL string used to match data you want to take the specified action on.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "PixieLinkPixieProjectResult",
   "description": "The response returned when linking a Pixie project to a New Relic account",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "errors",
     "description": "An array containing errors, if any.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "PixieLinkPixieProjectError",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "linkedPixieProject",
     "description": "The Pixie project details that were linked. This will be null for unlinkAccount.",
     "type": {
      "name": "PixiePixieProject",
      "kind": "OBJECT"
     }
    },
    {
     "name": "success",
     "description": "Whether the linking succeeded or not. Check the \"errors\" list for details",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "EntitySearchCountsFacet",
   "description": "Possible entity search count facets.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "ACCOUNT_ID",
     "description": "Facet by account id.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "ALERT_SEVERITY",
     "description": "Facet by alert severity.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "DOMAIN",
     "description": "Facet by entity domain.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "DOMAIN_TYPE",
     "description": "Facet by entity domain and entity type.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NAME",
     "description": "Facet by entity name",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "REPORTING",
     "description": "Facet by reporting state.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "TYPE",
     "description": "Facet by entity type.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "DataManagementCategory",
   "description": "Category of a limit",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "ALERTING",
     "description": "Limits on Alerting",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "INGEST",
     "description": "Limits on Ingest",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "QUERY",
     "description": "Limits on Query",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "AiNotificationsSchemaField",
   "description": "Schema field object",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "component",
     "description": "UI Component details",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiNotificationsUiComponent",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "key",
     "description": "Field key",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "label",
     "description": "Field label shown in the UI",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "mandatory",
     "description": "Is the field mandatory",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "AiWorkflowsNotificationTrigger",
   "description": "Notification Triggers for the Destination Configuration",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "ACKNOWLEDGED",
     "description": "Send a notification when the issue is acknowledged",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "ACTIVATED",
     "description": "Send a notification when the issue is activated",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "CLOSED",
     "description": "Send a notification when the issue is closed",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "OTHER_UPDATES",
     "description": "Sends notification when the issue has other updates",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "PRIORITY_CHANGED",
     "description": "Send a notification when the issue's priority has changed",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "NerdpackVersionsResult",
   "description": "Results of the nerdpack versions query.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "nextCursor",
     "description": "Cursor that can be used to retrieve the next results page.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "results",
     "description": "List of nerdpack version objects.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "NerdpackVersion",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "totalCount",
     "description": "Total amount of available version objects for the given nerdpack (including the ones not showed in the current page)",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "LogConfigurationsDataPartitionRuleMatchingOperator",
   "description": "The matching method for the rule to allocate the data partition data.\nSelect EQUALS to target logs that match your criteria exactly, or select LIKE to apply a fuzzy match.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "EQUALS",
     "description": "When applying the rule will allocate data for those attributes that are an exact match with the provided value.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "LIKE",
     "description": "When applying the rule will allocate data for those attributes that contain the provided value.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "IncidentIntelligenceEnvironmentConsentedAccount",
   "description": "Represent an account that is mark with consent for Incident Intelligence usage",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "account",
     "description": "The account marked with consent",
     "type": {
      "name": "AccountReference",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "CloudAwsRoute53resolverIntegrationInput",
   "description": "Route53 Resolver",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "CloudGcpStorageIntegrationInput",
   "description": "Google Cloud Storage",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "fetchTags",
     "description": "Specify if labels and the extended inventory should be collected. May affect total data collection time and contribute to the Cloud provider API rate limit.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "SyntheticMonitorEntity",
   "description": "A Synthetic Monitor entity.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "account",
     "type": {
      "name": "AccountOutline",
      "kind": "OBJECT"
     }
    },
    {
     "name": "accountId",
     "description": "The New Relic account ID associated with this entity.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "alertSeverity",
     "description": "The current alerting severity of the entity.",
     "type": {
      "name": "EntityAlertSeverity",
      "kind": "ENUM"
     }
    },
    {
     "name": "alertViolations",
     "description": "Violations on the entity that were open during the specified time window. This will return up to 500 violations - if there are more in the time window selected, you must narrow the time window or look at fewer entities.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityAlertViolation",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "endTime",
       "description": "End of time window for violations.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EpochMilliseconds",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "startTime",
       "description": "Start of time window for violations.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "EpochMilliseconds",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "assets",
     "description": "Assets produced during the execution of the check, such as screenshots",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "SyntheticsSyntheticMonitorAsset",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "checkId",
       "description": "The unique identifer of the monitor check",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "String",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "deploymentSearch",
     "description": "Retrieve the deployment event(s). Ordered by timestamp DESC.",
     "type": {
      "name": "ChangeTrackingDeploymentSearchResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "filter",
       "description": "Contains the set of filters to apply to the query.",
       "type": {
        "name": "ChangeTrackingSearchFilter",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "domain",
     "description": "The entity's domain",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "entityType",
     "description": "A value representing the combination of the entity's domain and type.",
     "type": {
      "name": "EntityType",
      "kind": "ENUM"
     }
    },
    {
     "name": "firstIndexedAt",
     "description": "The date of last time the entity has updated any of its fields.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "goldenMetrics",
     "description": "The list of golden metrics for a specific entity",
     "type": {
      "name": "EntityGoldenContextScopedGoldenMetrics",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden metrics",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "timeWindow",
       "description": "Time range to apply to the golden metric NRQL query result field",
       "type": {
        "name": "EntityGoldenNrqlTimeWindowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "goldenTags",
     "description": "The list of golden tags for a specific entityType.",
     "type": {
      "name": "EntityGoldenContextScopedGoldenTags",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden tags",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "guid",
     "description": "A unique entity identifier.",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    },
    {
     "name": "indexedAt",
     "description": "The time the entity was indexed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "lastReportingChangeAt",
     "description": "The last time the entity's reporting status changed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "monitorId",
     "description": "The Synthetic Monitor ID",
     "type": {
      "name": "ID",
      "kind": "SCALAR"
     }
    },
    {
     "name": "monitorSummary",
     "description": "Summary statistics for the Synthetic Monitor.",
     "type": {
      "name": "SyntheticMonitorSummaryData",
      "kind": "OBJECT"
     }
    },
    {
     "name": "monitorType",
     "description": "The Synthetic Monitor type",
     "type": {
      "name": "SyntheticMonitorType",
      "kind": "ENUM"
     }
    },
    {
     "name": "monitoredUrl",
     "description": "The URL being monitored by a `SIMPLE` or `BROWSER` monitor type.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The name of this entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nerdStorage",
     "type": {
      "name": "NerdStorageEntityScope",
      "kind": "OBJECT"
     }
    },
    {
     "name": "nrdbQuery",
     "description": "Make an `Entity` scoped query to NRDB with a NRQL string.\n\nA relevant `WHERE` clause will be added to your query to scope data to the entity in question.\n\nSee the [NRQL Docs](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/nrql-resources/nrql-syntax-components-functions) for more information about generating a query string.",
     "type": {
      "name": "NrdbResultContainer",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "async",
       "description": "When true, the query will begin asynchronous resolution after the allotted `timeout`. Include `queryProgress` fields in your GraphQL query to receive the information you will need to poll the `nrdbQueryProgress` field for the results of your async NRQL query.\n\nSee [this page](https://docs.newrelic.com/docs/apis/nerdgraph/examples/async-queries-nrql-tutorial) for additional asynchronous query documentation.",
       "type": {
        "name": "Boolean",
        "kind": "SCALAR"
       },
       "defaultValue": "false"
      },
      {
       "name": "nrql",
       "description": "The [NRQL](https://docs.newrelic.com/docs/insights/nrql-new-relic-query-language/nrql-resources/nrql-syntax-components-functions) query string.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Nrql",
         "kind": "SCALAR"
        }
       }
      },
      {
       "name": "options",
       "description": "Additional options for NRQL queries.",
       "type": {
        "name": "NrqlQueryOptions",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "timeout",
       "description": "The timeout we will apply to the NRQL Query. The value will be clamped to between 5 and 120 seconds and defaults to 5 seconds.\n\nFor `async` queries, if the query is still incomplete after this amount of time, resolution will become asynchronous and return `queryProgress` data if requested.",
       "type": {
        "name": "Seconds",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "nrdbQueryProgress",
     "description": "Poll for the results of a previously-executed asychronous NRDB query.\n\nThe `queryId` is available in the `queryProgress` data returned by the original asynchronous query.\n\nSee [this page](https://docs.newrelic.com/docs/apis/nerdgraph/examples/async-queries-nrql-tutorial) for additional asynchronous query documentation.",
     "type": {
      "name": "NrdbResultContainer",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "queryId",
       "description": "A token for retrieving the results of a previously executed asynchronous query.",
       "type": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "ID",
         "kind": "SCALAR"
        }
       }
      }
     ]
    },
    {
     "name": "period",
     "description": "The duration in minutes between Synthetic Monitor runs.",
     "type": {
      "name": "Minutes",
      "kind": "SCALAR"
     }
    },
    {
     "name": "permalink",
     "description": "The url to the entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "recentAlertViolations",
     "description": "Recent violations on the entity.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityAlertViolation",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "count",
       "description": "The desired number of alert violations to be returned.",
       "type": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "relatedEntities",
     "description": "Related entities result with optional filtering.",
     "type": {
      "name": "EntityRelationshipRelatedEntitiesResult",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "cursor",
       "description": "The cursor to fetch paginated results.",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "filter",
       "description": "Apply an optional filter to the related entities.",
       "type": {
        "name": "EntityRelationshipEdgeFilter",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "limit",
       "description": "A limit to apply to the number of relationships returned. Note: this option can only lower the default limits (2000 relationships).",
       "type": {
        "name": "Int",
        "kind": "SCALAR"
       }
      }
     ]
    },
    {
     "name": "relationships",
     "description": "A list of the entities' relationships.\n\nFor more information, visit [our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/graphql-relationships-api-tutorial).",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityRelationship",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "endTime",
       "description": "Return relationships as they existed in the past. The duration of the time window queried is fixed at 75 minutes.",
       "type": {
        "name": "EpochMilliseconds",
        "kind": "SCALAR"
       }
      },
      {
       "name": "filter",
       "description": "Apply an optional filter to the relationships.",
       "type": {
        "name": "EntityRelationshipFilter",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "reporting",
     "description": "The reporting status of the entity. If New Relic is successfully collecting data from your application, this will be true.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "serviceLevel",
     "description": "The service level defined for the entity.",
     "type": {
      "name": "ServiceLevelDefinition",
      "kind": "OBJECT"
     }
    },
    {
     "name": "tags",
     "description": "The tags applied to the entity.\n\nFor details on tags, as well as query and mutation examples, visit [our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/graphql-tagging-api-tutorial).",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityTag",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "tagsWithMetadata",
     "description": "The tags applied to the entity with their metadata.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityTagWithMetadata",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "tracingSummary",
     "description": "Look up Distributed Tracing summary data for the selected `EntityGuid`",
     "type": {
      "name": "DistributedTracingEntityTracingSummary",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "timeWindow",
       "description": "The start and end of the tracing data. Defaults to the last 30 minutes",
       "type": {
        "name": "TimeWindowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "type",
     "description": "The entity's type",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ],
   "interfaces": [
    {
     "name": "AlertableEntity",
     "kind": "INTERFACE"
    },
    {
     "name": "Entity",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "EntityGoldenTagsDomainTypeScopedResponse",
   "description": "An object that represents the golden tags scoped by domain and type mutation result",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "errors",
     "description": "The list of the errors",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "EntityGoldenGoldenMetricsError",
        "kind": "OBJECT"
       }
      }
     }
    },
    {
     "name": "tags",
     "description": "The tags results of the mutations",
     "type": {
      "name": "EntityGoldenTagsDomainTypeScoped",
      "kind": "OBJECT"
     }
    }
   ]
  },
  {
   "name": "EntityCollectionDefinition",
   "description": "The definition of a collection.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "entityGuids",
     "description": "A list of entity GUIDs. These entities will belong to the collection as long as their accounts are included in the scope accounts of the collection.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityGuid",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "entitySearchQuery",
     "description": "The Entity Search query that returns the full collection of entities.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "scopeAccounts",
     "description": "The Accounts that will be used to scope the collection.",
     "type": {
      "name": "EntityCollectionScopeAccounts",
      "kind": "OBJECT"
     }
    },
    {
     "name": "searchQueries",
     "description": "A list of entity search queries. The resulting entities will be limited to the scope accounts of the collection.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "ApiAccessDeleteKeyResponse",
   "description": "The response of the key delete mutation.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "deletedKeys",
     "description": "The `id`s of the successfully deleted ingest keys and any errors that occurred when deleting keys.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "ApiAccessDeletedKey",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "errors",
     "description": "Lists all errors for keys that could not be deleted. Each error maps to a single key input.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "ApiAccessKeyError",
       "kind": "INTERFACE"
      }
     }
    }
   ]
  },
  {
   "name": "DashboardLiveUrlErrorType",
   "description": "Live URL error type.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "OPERATION_FAILURE",
     "description": "General operation failure.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "UNAUTHORIZED",
     "description": "Unauthorized error.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "UNSUPPORTED",
     "description": "Not supported error.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "URL_NOT_FOUND",
     "description": "URL not found in the system.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "ApiAccessCreateUserKeyInput",
   "description": "The input for any ingest keys you want to create. Each ingest key must have a type that communicates what kind of data it is for. You can optionally add a name or notes to your key, which can be updated later.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "accountId",
     "description": "The account ID indicating which account you want to make the key for. This cannot be updated once created.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "name",
     "description": "The name of the key. This can be updated later.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "notes",
     "description": "Any notes about this ingest key. This can be updated later.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "userId",
     "description": "The user ID indicating which user you want to make the key for. This cannot be updated once created.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "SyntheticsSimpleMonitorAdvancedOptions",
   "description": "The advanced options available for a Simple (ping) monitor",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "customHeaders",
     "description": "Custom headers to use in monitor job",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "SyntheticsCustomHeader",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "redirectIsFailure",
     "description": "Categorize redirects during a monitor job as a failure",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "responseValidationText",
     "description": "Validation text for monitor to search for at given URI",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "shouldBypassHeadRequest",
     "description": "Monitor should skip default HEAD request and instead use GET verb in check",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "useTlsValidation",
     "description": "Monitor should validate SSL certificate chain",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "InfrastructureAwsLambdaFunctionEntityOutline",
   "description": "An AWS Lambda Function entity outline.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "account",
     "type": {
      "name": "AccountOutline",
      "kind": "OBJECT"
     }
    },
    {
     "name": "accountId",
     "description": "The New Relic account ID associated with this entity.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "alertSeverity",
     "description": "The current alerting severity of the entity.",
     "type": {
      "name": "EntityAlertSeverity",
      "kind": "ENUM"
     }
    },
    {
     "name": "domain",
     "description": "The entity's domain",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "entityType",
     "description": "A value representing the combination of the entity's domain and type.",
     "type": {
      "name": "EntityType",
      "kind": "ENUM"
     }
    },
    {
     "name": "firstIndexedAt",
     "description": "The date of last time the entity has updated any of its fields.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "goldenMetrics",
     "description": "The list of golden metrics for a specific entity",
     "type": {
      "name": "EntityGoldenContextScopedGoldenMetrics",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden metrics",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      },
      {
       "name": "timeWindow",
       "description": "Time range to apply to the golden metric NRQL query result field",
       "type": {
        "name": "EntityGoldenNrqlTimeWindowInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "goldenTags",
     "description": "The list of golden tags for a specific entityType.",
     "type": {
      "name": "EntityGoldenContextScopedGoldenTags",
      "kind": "OBJECT"
     },
     "args": [
      {
       "name": "context",
       "description": "Context used to fetch the golden tags",
       "type": {
        "name": "EntityGoldenContextInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "guid",
     "description": "A unique entity identifier.",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    },
    {
     "name": "indexedAt",
     "description": "The time the entity was indexed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "integrationTypeCode",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "lastReportingChangeAt",
     "description": "The last time the entity's reporting status changed.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "The name of this entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "permalink",
     "description": "The url to the entity.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "reporting",
     "description": "The reporting status of the entity. If New Relic is successfully collecting data from your application, this will be true.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "runtime",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "serviceLevel",
     "description": "The service level defined for the entity.",
     "type": {
      "name": "ServiceLevelDefinition",
      "kind": "OBJECT"
     }
    },
    {
     "name": "tags",
     "description": "The tags applied to the entity.\n\nFor details on tags, as well as query and mutation examples, visit [our docs](https://docs.newrelic.com/docs/apis/graphql-api/tutorials/graphql-tagging-api-tutorial).",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "EntityTag",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "type",
     "description": "The entity's type",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ],
   "interfaces": [
    {
     "name": "AlertableEntityOutline",
     "kind": "INTERFACE"
    },
    {
     "name": "EntityOutline",
     "kind": "INTERFACE"
    },
    {
     "name": "InfrastructureIntegrationEntityOutline",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "CloudAwsNeptuneIntegrationInput",
   "description": "Neptune",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "CloudIotIntegrationInput",
   "description": "AWS IoT",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "awsRegions",
     "description": "Specify each AWS region that includes the resources that you want to monitor.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "ErrorsInboxErrorGroupOutline",
   "description": "A grouping of similar error events with minimal fields.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "assignedUser",
     "description": "User assigned to the error group",
     "type": {
      "name": "UserReference",
      "kind": "OBJECT"
     }
    },
    {
     "name": "assignment",
     "description": "User assigned to the error group",
     "type": {
      "name": "ErrorsInboxAssignment",
      "kind": "OBJECT"
     }
    },
    {
     "name": "entityGuid",
     "description": "Source entity Guid",
     "type": {
      "name": "EntityGuid",
      "kind": "SCALAR"
     }
    },
    {
     "name": "eventsQuery",
     "description": "NRQL formatted query for retrieving error events",
     "type": {
      "name": "Nrql",
      "kind": "SCALAR"
     }
    },
    {
     "name": "firstSeenAt",
     "description": "Time of first occurrence",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "id",
     "description": "A unique identifier for the error group",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "isCustom",
     "description": "Indicates whether this error group was custom generated.\n- false = this is a system-generated error group\n- true = this is a custom error group, created and sent by the end user",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "lastSeenAt",
     "description": "Time of last occurrence",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "message",
     "description": "Error group message",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "name",
     "description": "Error group name",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "occurrences",
     "description": "The occurrences of this error group.",
     "type": {
      "name": "ErrorsInboxOccurrences",
      "kind": "OBJECT"
     }
    },
    {
     "name": "regressedAt",
     "description": "Time of regression occurrence for regressed error groups",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "resources",
     "description": "List of resources associated with this error group",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ErrorsInboxResourcesResponse",
       "kind": "OBJECT"
      }
     },
     "args": [
      {
       "name": "cursor",
       "description": "Current query cursor",
       "type": {
        "name": "String",
        "kind": "SCALAR"
       }
      },
      {
       "name": "filter",
       "description": "Set of filters to be applied to the search.",
       "type": {
        "name": "ErrorsInboxResourceFilterInput",
        "kind": "INPUT_OBJECT"
       }
      }
     ]
    },
    {
     "name": "source",
     "description": "The source event of the error group.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "state",
     "description": "Value to indicate the current state of the group.",
     "type": {
      "name": "ErrorsInboxErrorGroupState",
      "kind": "ENUM"
     }
    },
    {
     "name": "url",
     "description": "The public URL of the error group detail view.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    }
   ],
   "interfaces": [
    {
     "name": "ErrorsInboxErrorGroupBase",
     "kind": "INTERFACE"
    }
   ]
  },
  {
   "name": "InstallationInstallStatusInput",
   "description": "An object that contains the overall installation status to be created.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "cliVersion",
     "description": "The version of the newrelic-cli that was used for a given installation attempt.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SemVer",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "deployedBy",
     "description": "Refers to the source of the installation.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "enabledProxy",
     "description": "Whether or not the installation is using a proxy.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "error",
     "description": "The error for a given installation attempt.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "InstallationStatusErrorInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "hostName",
     "description": "The host name of the customer's machine.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "installId",
     "description": "The unique ID that corresponds to an install status.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "ID",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "installLibraryVersion",
     "description": "The version of the open-install-library that is being used.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SemVer",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "isUnsupported",
     "description": "Whether or not the installation is supported on the host machine.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "kernelArch",
     "description": "The kernel architecture of the customer's machine.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "kernelVersion",
     "description": "The kernel version of the customer's machine.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SemVer",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "logFilePath",
     "description": "The path to the log file on the customer's host.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "os",
     "description": "The OS of the customer's machine.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "platform",
     "description": "The platform name provided by the open-install-library.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "platformFamily",
     "description": "The platform family name provided by the open-install-library.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "platformVersion",
     "description": "The platform version provided by the open-install-library.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "SemVer",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "redirectUrl",
     "description": "A URL generated by the newrelic-cli that redirects to the appropriate entity once an installation is complete.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "state",
     "description": "The state of the installation.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "InstallationInstallStateType",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "targetedInstall",
     "description": "Whether or not the installation is a targeted install.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "timestamp",
     "description": "The timestamp for when the install event occurred.",
     "type": {
      "name": "EpochSeconds",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "WorkloadUpdateAutomaticStatusInput",
   "description": "An input object used to represent an automatic status configuration.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "enabled",
     "description": "Whether the automatic status configuration is enabled or not.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Boolean",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "remainingEntitiesRule",
     "description": "An additional meta-rule that can consider all entities that haven't been evaluated by any other rule.",
     "type": {
      "name": "WorkloadRemainingEntitiesRuleInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "rules",
     "description": "A list of rules.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "WorkloadUpdateRegularRuleInput",
        "kind": "INPUT_OBJECT"
       }
      }
     }
    }
   ]
  },
  {
   "name": "DashboardWidgetConfigurationInput",
   "description": "Typed configuration for known visualizations. At most one may be populated.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "area",
     "description": "Configuration for visualization type 'viz.area'",
     "type": {
      "name": "DashboardAreaWidgetConfigurationInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "bar",
     "description": "Configuration for visualization type 'viz.bar'",
     "type": {
      "name": "DashboardBarWidgetConfigurationInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "billboard",
     "description": "Configuration for visualization type 'viz.billboard'",
     "type": {
      "name": "DashboardBillboardWidgetConfigurationInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "line",
     "description": "Configuration for visualization type 'viz.line'",
     "type": {
      "name": "DashboardLineWidgetConfigurationInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "markdown",
     "description": "Configuration for visualization type 'viz.markdown'",
     "type": {
      "name": "DashboardMarkdownWidgetConfigurationInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "pie",
     "description": "Configuration for visualization type 'viz.pie'",
     "type": {
      "name": "DashboardPieWidgetConfigurationInput",
      "kind": "INPUT_OBJECT"
     }
    },
    {
     "name": "table",
     "description": "Configuration for visualization type 'viz.table'",
     "type": {
      "name": "DashboardTableWidgetConfigurationInput",
      "kind": "INPUT_OBJECT"
     }
    }
   ]
  },
  {
   "name": "AlertsNrqlConditionThresholdOccurrences",
   "description": "How many data points must be in violation for a NrqlCondition term's threshold duration.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "ALL",
     "description": "All points must be in violation during a term's threshold duration.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "AT_LEAST_ONCE",
     "description": "At least one data point must be in violation during a term's threshold duration.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "IncidentIntelligenceEnvironmentCreateEnvironment",
   "description": "Creates a new Incident Intelligence Environment,\nwill fail if an environment is already attached to the same parent account",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "environment",
     "description": "The created environment",
     "type": {
      "name": "IncidentIntelligenceEnvironmentIncidentIntelligenceEnvironment",
      "kind": "OBJECT"
     }
    },
    {
     "name": "result",
     "description": "The outcome of the creation",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "IncidentIntelligenceEnvironmentCreateEnvironmentResult",
       "kind": "ENUM"
      }
     }
    },
    {
     "name": "resultDetails",
     "description": "Additional result details",
     "type": {
      "name": "IncidentIntelligenceEnvironmentCreateEnvironmentResultDetails",
      "kind": "UNION"
     }
    }
   ]
  },
  {
   "name": "NrqlHistoricalQuery",
   "description": "An NRQL query executed in the past.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "accountId",
     "description": "The Account ID queried.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "nrql",
     "description": "The NRQL query executed.",
     "type": {
      "name": "Nrql",
      "kind": "SCALAR"
     }
    },
    {
     "name": "timestamp",
     "description": "The time the query was executed.",
     "type": {
      "name": "EpochSeconds",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "OrganizationAccountSortDirectionEnum",
   "description": "Provides the available values of possible directions to sort the result",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "ASCENDING",
     "description": "Sort in ascending order",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "DESCENDING",
     "description": "Sort in descending order",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "NrqlDropRulesCreateDropRuleResult",
   "description": "The result of which submitted drop rules were successfully and unsuccessfully created.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "failures",
     "description": "Rules that were not created and why.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "NrqlDropRulesCreateDropRuleFailure",
       "kind": "OBJECT"
      }
     }
    },
    {
     "name": "successes",
     "description": "Rules that were successfully created.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "NrqlDropRulesDropRule",
       "kind": "OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "ApiAccessUpdateKeyResponse",
   "description": "The response of the update keys mutation.",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "errors",
     "description": "Lists all errors for keys that could not be updated. Each error maps to a single key input.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "ApiAccessKeyError",
       "kind": "INTERFACE"
      }
     }
    },
    {
     "name": "updatedKeys",
     "description": "Lists all successfully updated keys.",
     "type": {
      "kind": "LIST",
      "ofType": {
       "name": "ApiAccessKey",
       "kind": "INTERFACE"
      }
     }
    }
   ]
  },
  {
   "name": "LogConfigurationsObfuscationMethod",
   "description": "Methods for replacing obfuscated values.",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "HASH_SHA256",
     "description": "Replace the matched data with a SHA256 hash.",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "MASK",
     "description": "Replace the matched data with a static value.",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "MultiTenantAuthorizationRoleSortEnum",
   "description": "The list of sortable fields",
   "kind": "ENUM",
   "enumValues": [
    {
     "name": "ID",
     "description": "Id of the role",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "NAME",
     "description": "Name of the role",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "SCOPE",
     "description": "Scope of the role",
     "isDeprecated": false,
     "deprecationReason": ""
    },
    {
     "name": "TYPE",
     "description": "Type of the role",
     "isDeprecated": false,
     "deprecationReason": ""
    }
   ]
  },
  {
   "name": "CloudGcpKubernetesIntegrationInput",
   "description": "Google Kubernetes Engine",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "inventoryPollingInterval",
     "description": "[DEPRECATED] Multiple polling interval is no longer supported, use only metrics_polling_interval",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "linkedAccountId",
     "description": "The linked account identifier.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "Int",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "metricsPollingInterval",
     "description": "The data polling interval in seconds.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "InstallationInstallStatusResult",
   "description": "A wrapper object that contains paginated install statuses along with counts and a pagination cursor",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "cursor",
     "description": "Cursor for fetching next page of results.  Results are ordered by descending timestamp (most recent first)",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "installStatuses",
     "description": "List of InstallStatus objects",
     "type": {
      "kind": "LIST",
      "ofType": {
       "kind": "NON_NULL",
       "ofType": {
        "name": "InstallationInstallStatus",
        "kind": "OBJECT"
       }
      }
     }
    },
    {
     "name": "totalCount",
     "description": "Total number of InstallStatus results across all pages for a given query",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AgentApplicationBrowserSettingsInput",
   "description": "Configure additional browser settings here.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "cookiesEnabled",
     "description": "Configure cookies. The default is enabled: true.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "distributedTracingEnabled",
     "description": "Configure distributed tracing in browser apps. The default is enabled: true.",
     "type": {
      "name": "Boolean",
      "kind": "SCALAR"
     }
    },
    {
     "name": "loaderType",
     "description": "Determines which browser loader is configured. The default is \"SPA\".",
     "type": {
      "name": "AgentApplicationBrowserLoader",
      "kind": "ENUM"
     }
    }
   ]
  },
  {
   "name": "ChangeTrackingDeploymentInput",
   "description": "A deployment.",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "changelog",
     "description": "A URL for the changelog or, if not linkable, a list of changes.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "commit",
     "description": "The commit identifier, for example, a Git commit SHA.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "deepLink",
     "description": "A URL to the system that generated the deployment.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "deploymentType",
     "description": "The type of deployment, for example, ‘Blue green’ or ‘Rolling’.",
     "type": {
      "name": "ChangeTrackingDeploymentType",
      "kind": "ENUM"
     }
    },
    {
     "name": "description",
     "description": "A description of the deployment.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "entityGuid",
     "description": "The NR entity that was deployed.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "EntityGuid",
       "kind": "SCALAR"
      }
     }
    },
    {
     "name": "groupId",
     "description": "An identifier used to correlate account-wide changes across entities. These changes are shown together in the `Changes in group` section of the change event details UI.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "timestamp",
     "description": "The start time of the deployment as the number of milliseconds since the Unix epoch. Should be within the boundary of the past or future 24 hours. Defaults to now.",
     "type": {
      "name": "EpochMilliseconds",
      "kind": "SCALAR"
     }
    },
    {
     "name": "user",
     "description": "The username of the deployer or bot.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "version",
     "description": "The version of the deployed software, for example, something like v1.1",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "String",
       "kind": "SCALAR"
      }
     }
    }
   ]
  },
  {
   "name": "BrowserApplicationRunningAgentVersions",
   "description": "Represents the currently running agent versions in a Browser App.\nAn app could be running multiple versions of an agent (across different browsers, for example).",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "maxSemanticVersion",
     "description": "The maximum (newest) agent version running in the Browser App, represented as a semantic version string.",
     "type": {
      "name": "SemVer",
      "kind": "SCALAR"
     }
    },
    {
     "name": "maxVersion",
     "description": "The maximum (newest) agent version running in the Browser App.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    },
    {
     "name": "minSemanticVersion",
     "description": "The minimum (oldest) agent version running in the Browser App, represented as a semantic version string.",
     "type": {
      "name": "SemVer",
      "kind": "SCALAR"
     }
    },
    {
     "name": "minVersion",
     "description": "The minimum (oldest) agent version running in the Browser App.",
     "type": {
      "name": "Int",
      "kind": "SCALAR"
     }
    }
   ]
  },
  {
   "name": "AiDecisionsRelativeGreaterThanInput",
   "description": "Input type for RelativeGreaterThan expression",
   "kind": "INPUT_OBJECT",
   "inputFields": [
    {
     "name": "left",
     "description": "Left operand of comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsIncidentObjectInput",
       "kind": "INPUT_OBJECT"
      }
     }
    },
    {
     "name": "right",
     "description": "Right operand of comparison.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "name": "AiDecisionsIncidentObjectInput",
       "kind": "INPUT_OBJECT"
      }
     }
    }
   ]
  },
  {
   "name": "Nr1CatalogQuickstartDashboardMetadata",
   "description": "Metadata associated with the dashboard in a quickstart",
   "kind": "OBJECT",
   "fields": [
    {
     "name": "description",
     "description": "A short form description for the dashboard.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "displayName",
     "description": "The human-readable name for the dashboard.",
     "type": {
      "name": "String",
      "kind": "SCALAR"
     }
    },
    {
     "name": "previews",
     "description": "A list of previews for the dashboard, such as screenshots.",
     "type": {
      "kind": "NON_NULL",
      "ofType": {
       "kind": "LIST",
       "ofType": {
        "kind": "NON_NULL",
        "ofType": {
         "name": "Nr1CatalogPreview",
         "kind": "INTERFACE"
        }
       }
      }
     }
    }
   ],
   "interfaces": [
    {
     "name": "Nr1CatalogQuickstartComponentMetadata",
     "kind": "INTERFACE"
    }
   ]
  }
 ]
}