name: Tutone Generate
on:
  # push:
  #   branches:
  #     - 'feat/automated-codegen'
  workflow_dispatch:
    inputs:
      packages:
        required: true
        type: string
        description: 'A comma-separated list of packages to generate for which to generate code'
      apiEndpoints:
        required: true
        type: string
        description: 'The API endpoints for which to generate code'
  workflow_call:
    inputs:
      apiEndpoints:
        required: true
        type: string
        description: 'The API endpoints for which to generate code'

jobs:
  generate:
    runs-on: ubuntu-latest
    steps:
      - name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.21.x

      - name: Add GOBIN to PATH
        run: echo "${{ inputs.apiEndpoints }}"
        shell: bash

      - name: Add GOBIN to PATH
        run: echo "$(go env GOPATH)/bin" >> $GITHUB_PATH
        shell: bash

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.RELEASE_TOKEN }}

      - name: Set up git user
        run: |
          git config --global user.name nr-developer-toolkit
          git config --global user.email nr-developer-toolkit@users.noreply.github.com

      - name: Install Tutone
        run: go install github.com/newrelic/tutone/cmd/tutone@latest

      # - name: Echo stuff for a testing purposes
      #   run: echo "${{ inputs.packages }}" && echo "Branch Name - ${{ github.ref_name }}"
      #   shell: bash

      # TODO: Append configuration to the config file OR write temporary Tutone config file?
      - name: Write config file
        uses: DamianReeves/write-file-action@master
        with:
          path: .tutone.tmp.yml
          contents: ${{inputs.apiEndpoints}}

      - name: Check config file contents
        run: cat .tutone.tmp.yml
        shell: bash

      - name: Generate new code
        run: tutone generate -c .tutone.tmp.yml --include-integration-test
        env:
          NEW_RELIC_API_KEY: ${{ secrets.NEW_RELIC_API_KEY }}

      # - name: Create new branch, commit, and push changes
      #   shell: bash
      #   run: |
      #     branch_name="tmp/generated-code"

      #     if git ls-remote --exit-code --heads origin $branch_name > /dev/null; then
      #       git push origin --delete $branch_name
      #     fi

      #     git checkout -b $branch_name

      #     git status
      #     git add pkg .tutone.tmp.yml
      #     git status

      #     git commit --no-verify -m 'feat(codegen): generate code based on latest API changes'
      #     git push origin $branch_name

      - name: Create pull request
        uses: peter-evans/create-pull-request@v3
        with:
          base: main
          add-paths: 'pkg'
          author: 'nr-developer-toolkit <nr-developer-toolkit@users.noreply.github.com>'
          token: ${{ secrets.DEV_TOOLKIT_TOKEN }}
          commit-message: 'feat(automation): update generated code'
          signoff: false
          branch: automation/generated-code
          title: 'feat(automation): generate code based on latest API changes'
          body: |
            Update generated code using Tutone
          labels: |
            enhancement
          draft: true
